{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 21"
                }
            },
            "Step 1": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 / 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 / 6 =  -> 21 / 6 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 = 1"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 - 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": ""
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left:  -> It seems like you did not provide an input for the calculator to work with. Can you please provide the numbers you would like to calculate with?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 4 8"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 + 4 = 12 (left: 12 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 + 4 = 12 (left: 12 8) -> 12 + 8 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "21"
                }
            },
            "Step 7": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 - 5 = 1 (left: 1 21) -> 21 / 1 = 21 (left: 21) -> 21 / 21 = 1",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 - 5 = 1 (left: 1 21) -> 21 / 1 = 21 (left: 21) -> 21 / 21 = 1 -> 21 * 21 = 441 (left: 441)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "14 16 6"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 + 5 = 8 (left: 6 8) -> 8 - 6 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 + 5 = 8 (left: 6 8) -> 8 - 6 = 2 (left: 2) -> 2 + 2 = 4 -> 4 - 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "-2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 4 8"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 4 8"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 - 4 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 = 1"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 - 1 = 2 (left: 2 = 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 / 9 = 1. -> 12 % 9 = 3 (left: 3 = 1) -> 3 - 1 = 2 (left: 2 = 1) -> 2 + 1 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 4 8"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 + 4 = 12 (left: 12 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 + 4 = 12 (left: 12 8) -> 12 * 8 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "8 4 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 4 8"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 32 - 2 = 30 (left: 4 8 30)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 32 - 2 = 30 (left: 4 8 30) -> 4 * 8 = 32 (left: 32 30)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11) -> 9 - 11 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 4 8"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "21"
                }
            },
            "Step 7": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 - 5 = 1 (left: 1 21) -> 21 / 1 = 21 (left: 21) -> 21 / 2 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "-2"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11) -> 9 - 11 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 12 - 9 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 12 - 9 = 3 (left: 3 11) -> 11 - 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 - 5 = 1 (left: 1 21) -> 21 / 1 = 21 (left: 21) -> 21 * 2 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "2.5"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 / 3 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps for the input 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 4 8"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 / 4 = 2 (left: 2 8) -> 10 + 4 = 14 (left: 14 16 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 4 8"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 / 4 = 2 (left: 2 8) -> Input: 8",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 12 = 21 (left: 5 6 21)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 / 3 = 2 (left: 5 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 / 3 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3) -> -2 + 3 = 1 (left: 1) -> 5 - 3 = 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3) -> -2 + 3 = 1 (left: 1) -> 5 - 3 = 2 -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 6 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 4 8"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "21"
                }
            },
            "Step 7": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 - 5 = 1 (left: 1 21) -> 21 / 1 = 21 (left: 21) -> 21 - 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "2 6"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 2 = 6 (left: 2 6) -> 2 * 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "4 + 6 = 10"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 + 5 = 8 (left: 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 + 5 = 8 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "21"
                }
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 - 5 = 1 (left: 1 21) -> 21 / 1 = 21 (left: 21) -> 21 + 8 = 29 (left: 8)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "4 + 6"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 * 5 = 15 (left: -> 4 + 6 -> 4 + 6 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 4 8"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 4 / 8 = 0.5 (left: 0.5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 4 / 8 = 0.5 (left: 0.5 8) -> 0.5 + 8 = 8.5 (left: 8.5)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "21"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 4 8"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "2 6"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 5 6 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 21"
                }
            },
            "Step 1": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 - 5 = 1 (left: 1 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 - 5 = 1 (left: 1 21) -> 21 / 1 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "-2"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11) -> 9 - 11 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 9 12) -> 12 - 1 = 11 (left: 9 11) -> 9 - 11 = -2 (left: -2) -> There are no possible next steps with the input of -2. -> There are no possible next steps with the input of -2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "81 3"
                }
            },
            "Step 5": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 / 6 =  -> 21 / 6 = 3 -> 21 + 6 = 27 (left: 27 = 3) -> 27 * 3 = 81 (left: 81 3) -> 81 * 3 = 243 (left: 243)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "4"
                }
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 2 = 6 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 4 8"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 + 4 = 12 (left: 12 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 + 4 = 12 (left: 12 8) -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 * 5 = 15 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 * 5 = 15 (left: -> 4 + 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 / 6 = 3"
                }
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 / 6 =  -> 21 / 6 = 3 -> 21 + 6 = 27 (left: 27 = 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 / 6 =  -> 21 / 6 = 3 -> 21 + 6 = 27 (left: 27 = 3) -> 27 * 3 = 81 (left: 81 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "8 4 8"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "-2"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 4 8"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 - 4 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3) -> -2 + 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3) -> -2 + 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3) -> -2 + 3 = 1 (left: 1) -> 1 + 1 = 2 -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "81 3"
                }
            },
            "Step 5": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 / 6 =  -> 21 / 6 = 3 -> 21 + 6 = 27 (left: 27 = 3) -> 27 * 3 = 81 (left: 81 3) -> 81 / 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "21"
                }
            },
            "Step 6": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 6 - 5 = 1 (left: 1 21) -> 21 / 1 = 21 (left: 21) -> There are no possible next steps with the input 21.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "8 4 8"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 6 - 5 = 1 (left: 1 3) -> 1 + 3 = 4 (left: 4) -> 4 + 4 = 8 -> 4 + 4 = 8 (left: 8 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "81 3"
                }
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 5.4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 5.4 11) -> 5.4 / 11 = 0.49090909090909090909090909090909 (left: 0.49090909090909090909090909090909)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 9 21"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "30"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> 30 / 2 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 9 21"
                }
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 6 = 3.5 (left: 3.5 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> There is only one possible next step: 30 + 2 = 32 -> 32 / 2 = 16 (left: 16 8) -> 8 - 16 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "9"
                }
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 6 15) -> 15 - 6 = 9 (left: 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for the number 30 as it is already a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> Input: 3 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> Input: 3 4 -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> 18 + 18 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Input: 5 10"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> Input: 3 4 -> Input: 5 10 -> Input: 3 9 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "30"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> 30 - 2 = 28",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> 30 - 2 = 28 -> 30 + 2 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "30"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3.5 9 21"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 6 = 3.5 (left: 3.5 9 21) -> 9 / 3.5 = 2.57142857143 (left: 2.57142857143 21)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 6 = 3.5 (left: 3.5 9 21) -> 9 / 3.5 = 2.57142857143 (left: 2.57142857143 21) -> 2.57142857143 * 21 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "6 3"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 11 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 6 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 6 = 15 (left: 6 15) -> 15 - 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> There is only one possible next step: 30 + 2 = 32 -> 32 / 2 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "59.4"
                }
            },
            "Step 8": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 5.4 11) -> 5.4 * 11 = 59.4 (left: 59.4) -> There are no possible next steps for the number 59.4.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19) -> 17 * 19 = 323 (left: 323)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps for the number 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps for the number 18. -> There are no possible next steps for the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "30"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> There are no possible next steps for the number 30 as it is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> There are no possible next steps for the number 30 as it is already a single number. -> There are no possible next steps for the number 30 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> There is only one possible next step: 30 + 2 = 32 -> 32 / 2 = 16 (left: 16 8) -> 8 + 16 = 24 (left: 16 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> There is only one possible next step: 30 + 2 = 32 -> 32 / 2 = 16 (left: 16 8) -> 8 + 16 = 24 (left: 16 24) -> 24 / 16 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for the number 30 as it is already a single number."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> 8 - 18 = -10 (left: -10)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 9 21"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 + 9 = 15 (left: 15 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "30"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> There is only one possible next step: 30 + 2 = 32",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> There is only one possible next step: 30 + 2 = 32 -> 32 / 2 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> There is only one possible next step: 30 + 2 = 32 -> 32 / 2 = 16 (left: 16 8) -> 24 * 8 =",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> There is only one possible next step: 30 + 2 = 32 -> 32 / 2 = 16 (left: 16 8) -> 24 * 8 = -> 24 * 8 = 192",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 - 10 = 1 (left: 1 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 - 10 = 1 (left: 1 54) -> 54 - 1 = 53 (left: 53)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 9 21"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 * 9 = 54 (left: 54 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "30"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> There is only one possible next step: 30 + 2 = 32 -> 32 / 2 = 16 (left: 16 8) -> 8 / 16 = 0.5",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> There is only one possible next step: 30 + 2 = 32 -> 32 / 2 = 16 (left: 16 8) -> 8 / 16 = 0.5 -> None, as the input is already a final result.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 5.4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 5.4 11) -> 5.4 * 11 = 59.4 (left: 59.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> 18 / 2 = 9 (left: 9 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> 18 / 2 = 9 (left: 9 18) -> 9 + 18 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "30"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 9 21"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 * 6 = 54 (left: 54 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 9 * 6 = 54 (left: 54 21) -> 54 / 21 = 2.57 (left: 2.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> There is only one possible next step: 30 + 2 = 32 -> 32 / 2 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "Input: 5 10"
                }
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> Input: 3 4 -> Input: 5 10 -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 10 * 11 = 110 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> 18 - 8 = 10 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> 18 - 8 = 10 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "323"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "30"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> 30 - 30 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "323"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19) -> 17 * 19 = 323 (left: 323) -> 3 * 2 = 6 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> There is only one possible next step: 30 + 2 = 32 -> 32 / 2 = 16 (left: 16 8) -> 16 * 8 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "Input: 5.0 + 6 = 11.0"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 =  -> 11 / 6 = 1.83333333333 -> Input: 5.0 + 6 = 11.0 -> 6 + 5.0 = 11.0 (left: 11.0)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "6 3"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 11 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 11 =  -> 54 - 11 = 43",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "11 / 6 = 1.83333333333"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 =  -> 11 / 6 = 1.83333333333 -> Input: 5.0 + 6 = 11.0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 13 19"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 6 * 13 = 78 (left: 19 78)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 6 * 13 = 78 (left: 19 78) -> 19 - 78 = -59 (left: -59)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "59.4"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "3.5 9 21"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 6 = 3.5 (left: 3.5 9 21) -> 21 / 3.5 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 6 = 3.5 (left: 3.5 9 21) -> 21 / 3.5 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "6 3"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 =  -> 11 / 6 = 1.83333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 / 9 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> 18 * 8 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "323"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 + 11 = 17 (left: 17 19) -> 17 * 19 = 323 (left: 323) -> 3 * 2 = 6 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "30"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> Possible next steps: -> There are no possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "16 8"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 21 - 9 = 12 (left: -> 21 + 9 = 30 (left: 30) -> There is only one possible next step: 30 + 2 = 32 -> 32 / 2 = 16 (left: 16 8) -> 16 - 8 = 8 (left: 8) ",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "Input: 5.0 + 6 = 11.0"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 / 6 =  -> 11 / 6 = 1.83333333333 -> Input: 5.0 + 6 = 11.0 -> 5.0 / 6 = 0.8333333333333334 (left: 0.8333333333333334 6 11.0)",
                "Pruning": null
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> 11 + 2 = 13 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no valid arithmetic operations that can be performed on the input 1.2."
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: -> 6 / 5 = 1.2 (left: 1.2) -> There are no valid arithmetic operations that can be performed on the input 1.2. -> 1.2 / 2 = 0.6 (left: 0.6)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "17 - 2 ="
                }
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> 14 - 4 = 10 (left: 10) -> 10 / 2 = 5 -> 17 - 2 = -> 17 - 2 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 9 * 27 = 243 (left: 243)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> No possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "128"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 16 * 8 = 128 (left: 128) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 4 16"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "Provide more numbers to continue the calculation."
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. If you provide more numbers, I can suggest possible calculations to reach a target number. -> Provide more numbers to continue the calculation. -> 8 * 2 = 16 (left: 16 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. If you provide more numbers, I can suggest possible calculations to reach a target number. -> Provide more numbers to continue the calculation. -> 8 * 2 = 16 (left: 16 14) -> 16 + 14 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "I'm sorry, but it seems there was an error in processing the input. Could you please provide the input again? Thank you."
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 10 + 15 = 25 (left",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 10 + 15 = 25 (left -> 15 - 10 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "I'm sorry, but it seems there was an error in processing the input. Could you please provide the input again? Thank you."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "128"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 16 * 8 = 128 (left: 128) -> 128 / 1 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "1.2"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: -> 6 / 5 = 1.2 (left: 1.2) -> There are no valid arithmetic operations that can be performed on the input 1.2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 13"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> 11 + 2 = 13 (left: 2 13) -> 2 + 13 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 5 7"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 10 * 20 = 200 (left: 5 200)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 10 * 20 = 200 (left: 5 200) -> 5 * 200 = 1000 (left: 1000)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "Provide more numbers to continue the calculation."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "3"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Input: 3 9 27"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 13"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> 11 + 2 = 13 (left: 2 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11. -> 11 - 2 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 27 - 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "3"
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> 3 + 14 = 17 (left: 2 8 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 16 * 8 = 128 (left: 128)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 7 "
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 2 7  -> 7 - 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 27 / 3 = 9 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 27 / 3 = 9 (left: -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no valid arithmetic operations that can be performed on the input 1.2."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> Possible next steps: -> There are no possible next steps with the current numbers.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "10"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> 14 - 4 = 10 (left: 10) -> 10 / 2 = 5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> 14 - 4 = 10 (left: 10) -> 10 / 2 = 5 -> 17 - 2 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no valid arithmetic operations that can be performed on the input 1.2."
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: -> 6 / 5 = 1.2 (left: 1.2) -> There are no valid arithmetic operations that can be performed on the input 1.2. -> There are no valid arithmetic operations that can be performed on the input 1.2.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: -> 6 / 5 = 1.2 (left: 1.2) -> There are no valid arithmetic operations that can be performed on the input 1.2. -> There are no valid arithmetic operations that can be performed on the input 1.2. -> There are no valid arithmetic operations that can be performed on the input 1.2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 27 - 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 / 2 = 5.5 (left: 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "16 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 * 2 = 16 (left: 16 16) -> 16 / 16 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Input: 3 9 27"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 - 3 = 6 (left: 6 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 14"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> 14 - 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> 14 - 4 = 10 (left: 10) -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Provide more numbers to continue the calculation."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 5 + 10 = 15 (left",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 5 + 10 = 15 (left -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "Provide more numbers to continue the calculation."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> I'm sorry, but it seems there was an error in processing the input. Could you please provide the input again? Thank you.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> I'm sorry, but it seems there was an error in processing the input. Could you please provide the input again? Thank you. -> I'm sorry, but it seems there was an error in processing the input. Could you please provide the input again? Thank you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "Input: 3 9 27"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 10",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "I'm sorry, but it seems there was an error in processing the input. Could you please provide the input again? Thank you."
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> I'm sorry, but it seems there was an error in processing the input. Could you please provide the input again? Thank you. -> I'm sorry, but it seems there was an error in processing the input. Could you please provide the input again? Thank you. -> I apologize for the inconvenience. Please provide the input numbers again so I can generate the possible next steps for you. Thank you.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 - 2 = 14 (left: 4 14) -> 14 - 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "128"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 16 * 8 = 128 (left: 128) -> 1 + 2 + 8 = 11 (left: 128)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 8 11"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no valid arithmetic operations that can be performed on the input 1.2."
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: -> 6 / 5 = 1.2 (left: 1.2) -> There are no valid arithmetic operations that can be performed on the input 1.2. -> There are no valid arithmetic operations that can be performed on the input 1.2.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: -> 6 / 5 = 1.2 (left: 1.2) -> There are no valid arithmetic operations that can be performed on the input 1.2. -> There are no valid arithmetic operations that can be performed on the input 1.2. -> There are no valid arithmetic operations that can be performed on the input 1.2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "There are no valid arithmetic operations that can be performed on the input 1.2."
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: -> 6 / 5 = 1.2 (left: 1.2) -> There are no valid arithmetic operations that can be performed on the input 1.2. -> There are no valid arithmetic operations that can be performed on the input 1.2. -> There are no valid arithmetic operations that can be performed on the input 1.2. -> There are no valid arithmetic operations that can be performed on the input 1.2.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. If you provide more numbers, I can suggest possible calculations to reach a target number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. If you provide more numbers, I can suggest possible calculations to reach a target number. -> Provide more numbers to continue the calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "Provide more numbers to continue the calculation."
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. If you provide more numbers, I can suggest possible calculations to reach a target number. -> Provide more numbers to continue the calculation. -> 8 * 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 5 7"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 2 * 5 = 10 (left: 10 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9 27"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> Input: 5 10 20",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 16 / 4 = 4 (left: 2 4 16) -> Input: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> Input: 5 10 20 -> 20 / 10 = 2 (left: 5 2 20)",
                "Pruning": null
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Input: 3 5 7",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Input: 3 5 7 -> 5 + 7 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 110"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 / 10 = 11 (left: 11 110)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 / 10 = 11 (left: 11 110) -> 11 + 110 = 121 (left: 121)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "There are no possible next steps with the input \"11\" as there are no other numbers provided to perform arithmetic operations with."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10"
                }
            },
            "Step 7": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "There are no possible next steps with the input \"11\" as there are no other numbers provided to perform arithmetic operations with."
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input \"11\" as there are no other numbers provided to perform arithmetic operations with. -> N/A",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 10"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 110"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 / 10 = 11 (left: 11 110)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 / 10 = 11 (left: 11 110) -> 11 + 110 = 121 (left: 121)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "72"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10"
                }
            },
            "Step 7": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> There are no possible next steps with the input of 0.1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 110"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 - 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 - 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10"
                }
            },
            "Step 7": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1) -> There are no possible next steps with only one number input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 2 15"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 110"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 / 10 = 11 (left: 11 110)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 / 10 = 11 (left: 11 110) -> 11 + 110 = 121 (left: 121)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Possible next steps:"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10"
                }
            },
            "Step 7": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Possible next steps: -> None, the current list is already sorted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 110"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 10 + 110 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10 100"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "3 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10"
                }
            },
            "Step 7": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1) ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1)  -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input \"11\" as there are no other numbers provided to perform arithmetic operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 100 = 1000 (left: 1000)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 2 15"
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 1 + 2 = 3 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 110"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 / 10 = 11 (left: 11 110)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 / 10 = 11 (left: 11 110) -> 11 - 110 = -99 (left: -99)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "There are no more possible next steps with the given numbers."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10"
                }
            },
            "Step 7": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 8 = 1.25 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 100 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 5 10"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 5 10) -> 10 - 5 = 5 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 110"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 + 10 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 5 10"
                }
            },
            "Step 6": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10"
                }
            },
            "Step 7": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> Possible next steps: -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 110"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 10 * 110 = 1100 (left: 1100)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "1"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 / 0.1 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10"
                }
            },
            "Step 7": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100) -> - 100 - 50 = 50",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 1 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 + 3 = 12 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Input: 5 25",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Input: 5 25 -> 25 - 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 110"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 - 10 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "There are no possible next steps with the input of 0.1."
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> There are no possible next steps with the input of 0.1. -> There are no possible next steps with the input of 0.1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10"
                }
            },
            "Step 7": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0) -> No possible next steps as there is no input given.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 / 0.1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "There are no possible next steps with the input \"11\" as there are no other numbers provided to perform arithmetic operations with."
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input \"11\" as there are no other numbers provided to perform arithmetic operations with. -> N/A",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 110"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 10 + 110 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1 7 "
                }
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 1 7  -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "10 10"
                }
            },
            "Step 7": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "1 * 2 = 2 (left: 2 5 10) -> 2 * 5 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0) -> There are no possible next steps as there is no input given.",
                "Pruning": null
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 3 5"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> 10 * 8 = 80 (left: 8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input of 3."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 2 5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input of 3. -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 3 - 1 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 2 5"
                }
            },
            "Step 1": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 1 + 2 = 3 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 / 2 = 1 (left: 1 2 5) -> 1 + 2 = 3 (left: 3 5) -> 3 * 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 8 + 3 = 11 (left: 3 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 8 + 3 = 11 (left: 3 11) -> 9 - 5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 2 5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "2 5"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 3 5) -> 3 * 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "-1 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input 3. -> No possible next steps with the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 + 5 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "No possible next steps with the input 3."
                }
            },
            "Step 8": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input 3. -> No possible next steps with the input 3. -> No possible next steps with the input 3.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> Input: 5 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> Input: 5 5 -> 5 + 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 2 5"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps for the number 2.5 as it is already a single number and cannot be combined with any of the other numbers given.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "1"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 6 / 5 = 1. -> 6 - 5 = 1 (left: 1) -> There are no possible next steps with just one number as input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 8"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no valid operations that can be done on the input 2.5 using the numbers 2, 8, and 14."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 6 / 5 = 1.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 6 / 5 = 1. -> 6 - 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 + 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with just one number as input."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There is only one possible next step:"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 / 2 = 4 (left: 2 4 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one possible next step: -> 8 / 2 = 4 (left: 2 4 14) -> 14 - 2 = 12 (left: 4 12)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 * 2 = 6 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 * 2 = 6 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 - 8 = -5 (left: -5)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 3 5"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> 2 + 3 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input of 3."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 2 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There is only one number given, so there are no possible next steps. -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There are no valid operations that can be done on the input 2.5 using the numbers 2, 8, and 14.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "2 5"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with just one number as input."
                }
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.16666666667 15.16666666667"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 / 2.16666666667 = 6.99999999999 (left: 6.99999999999 15.166666",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 / 2.16666666667 = 6.99999999999 (left: 6.99999999999 15.166666 -> 6.99999999999 / 15.166666 = 0.46153707987 (left: 0.46153707987 15.166666)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 6.5 * 2 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 6.5 * 2 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 8 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 / 6.5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "-6"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6) -> There are no possible next steps with the input of -6.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left:  -> It seems like there is no additional input provided. If you provide the numbers, I can generate possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2 13 13"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 6.5 + 13 = 19.5 (left: 19.5)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "0.16666666666666666"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 6.5 * 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0.46153707987 15.166666"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 / 2.16666666667 = 6.99999999999 (left: 6.99999999999 15.166666 -> 6.99999999999 / 15.166666 = 0.46153707987 (left: 0.46153707987 15.166666) -> 15.166666 - 0.46153707987 = 14.7051289201 (left: 14.7051289201)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "-91 + 2 = -89"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 - 13 = -7 (left: -7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 - 13 = -7 (left: -7 13) -> -7 * 13 = -91 (left: -91)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.16666666667 15.16666666667"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 2.16666666667 + 15.16666666667 = 17.33333333334 (left: 17.33333333334)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "247"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19) -> 13 * 19 = 247 (left: 247) -> There are no possible next steps for the input 247.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 + 6.5 = 19.5 (left: 19.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 + 6.5 = 19.5 (left: 19.5) -> There are no possible next steps for the input 19.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 / 6.5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 19 13) -> 19 - 13 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "-91 + 2 = -89"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 7 * 13 = 91 (left: 91)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.16666666667 15.16666666667"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 2.16666666667 * 15.16666666667 = 32.91666666664833 (left: 15.16666666667 32.91666666664833)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 2.16666666667 * 15.16666666667 = 32.91666666664833 (left: 15.16666666667 32.91666666664833) -> 15.16666666667 * 32.916666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 6.5 + 13 = 19.5 (left: 19.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 6.5 + 13 = 19.5 (left: 19.5) -> There are no possible next steps for the input 19.5 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left -> 13 / 6.5 = 2 (left: 2 6.5)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 19 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 19 13) -> 19 - 13 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2.16666666667 15.16666666667"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 2.16666666667 * 15.16666666667 = 32.91666666665 (left: 32.91666666665)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "7 12 "
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 6.5 + 13 = 19.5 (left: 19.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 6.5 + 13 = 19.5 (left: 19.5) -> There are no possible next steps with the input 19.5 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 / 6.5 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 / 6.5 = 2 (left: 2 13) -> 2 + 13 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "-91 + 2 = -89"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 7 - 13 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 7 9) -> 7 / 9 = 0.7777777777777778 (left: 0.7777777777777778)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "6 13 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 / 6.5 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 / 6.5 = 2 (left: 2 13) -> 2 + 13 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "-91 + 2 = -89"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> Possible next steps: -> 6 * 8 = 48 (left: 2 48)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 * 6 = 78 (left: 13 78)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 * 6 = 78 (left: 13 78) -> 13 / 78 = 0.16666666666666666 (left: 0.16666666666666666)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 8 - 1 = 7 (left: 7 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 8 - 1 = 7 (left: 7 7) -> 7 + 7 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "-6"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "7 12 "
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 7 12  -> 7 - 12 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 7 12  -> 7 - 12 = -5 (left: -5) -> There are no possible next steps with the input -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 2 = 11 (left: 6.5 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 2 = 11 (left: 6.5 11) -> 11 - 6.5 = 4.5 (left: 4.5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0.46153707987 15.166666"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 13 + 7 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.16666666667 15.16666666667"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 2.16666666667 * 15.16666666667 = 32.91666666677 (left: 32.91666666677)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 19 13) -> 19 - 13 = 6 (left: 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-91"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.46153707987 15.166666"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 / 2.16666666667 = 6.99999999999 (left: 6.99999999999 15.166666 -> 6.99999999999 / 15.166666 = 0.46153707987 (left: 0.46153707987 15.166666) -> 0.46153707987 * 15.166666 = 7.00000109454 (left: 7.00000109454)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "20"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13) -> 13 + 7 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 + 6.5 = 19.5 (left: 19.5)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 8 15"
                }
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 6.5 * 2 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 8 15) -> 2 + 8 = 10 (left: 10 15)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19) -> 13 * 19 = 247 (left: 247)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.16666666667 15.16666666667"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 2.16666666667 + 15.16666666667 = 17.33333333334 (left: 17.33333333334)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-91"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 - 13 = -7 (left: -7 13) -> -7 * 13 = -91 (left: -91) -> -91 + 2 = -89",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 3 + 9 = 12 (left: 9 ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 3 + 9 = 12 (left: 9  -> 4 / 3 = 1.333 (",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.16666666667 15.16666666667"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 + 2.16666666667 = 15.16666666667 (left: 2.16666666667 15.16666666667) -> 15.16666666667 - 2.16666666667 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 13 13"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5) -> 8 - 6.5 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2.16666666667 15.16666666667"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "6.5 13"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 13 13) -> 13 / 2 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 13 - 6.5 = 6.5 (left: 6.5 13) -> 6.5 * 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "1 8 7"
                }
            },
            "Step 8": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Input: 1 3 5 7 -> 3 + 5 = 8 (left: 1 8 7) -> 8 - 1 = 7 (left: 7 7)",
                "Pruning": null
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "66"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66) -> 66 + 2 = 68",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66) -> 66 + 2 = 68 -> 66 - 2 = 64 (left: 64 68)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.111 20"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 20 / 1.111 = 18.018 (left: 1.111 18.018)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 20 / 1.111 = 18.018 (left: 1.111 18.018) -> 18.018 - 1.111 = 16.907 (left: 1.111 16.907)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 - 2 = 118 (left: 118)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There are no possible next steps with the given numbers."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 + 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 + 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 + 9 = 16 (left: 16) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 + 9 = 16 (left: 16) -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.111 20"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 20 - 1.111 = 18.889 (left: 18.889)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 6 10"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 9 6 10) -> 9 * 6 = 54 (left: 10 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.111 16.907"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 20 / 1.111 = 18.018 (left: 1.111 18.018) -> 18.018 - 1.111 = 16.907 (left: 1.111 16.907) -> 1.111 * 16.907 = 18.785477 (left: 16.907 18.785477)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 20 / 1.111 = 18.018 (left: 1.111 18.018) -> 18.018 - 1.111 = 16.907 (left: 1.111 16.907) -> 1.111 * 16.907 = 18.785477 (left: 16.907 18.785477) -> 16.907 + 18.785477 = 35.692477 (left: 18.785477 35.692477)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "There is only one possible next step which is 10."
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 + 3 = 10 (left: 10) -> There is only one possible next step which is 10. -> 10 + 2 = 12",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 + 3 = 10 (left: 10) -> There is only one possible next step which is 10. -> 10 + 2 = 12 -> 2 * 10 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.111 20"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 1.111 * 20 = 22.22 (left: 20 22.22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 1.111 * 20 = 22.22 (left: 20 22.22) -> 20 + 22.22 = 42.22 (left: 42.22)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "10 26"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.111 16.907"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 20 / 1.111 = 18.018 (left: 1.111 18.018) -> 18.018 - 1.111 = 16.907 (left: 1.111 16.907) -> 16.907 / 1.111 = 15.207021 (left: 1.111 15.207021)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 20 / 1.111 = 18.018 (left: 1.111 18.018) -> 18.018 - 1.111 = 16.907 (left: 1.111 16.907) -> 16.907 / 1.111 = 15.207021 (left: 1.111 15.207021) -> 15.207021 / 1.111 = 13.684210526 (left: 13.684210526)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "1.111 16.907"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "There is only one possible next step which is 10."
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 + 3 = 10 (left: 10) -> There is only one possible next step which is 10. -> 10 / 2 = 5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 + 3 = 10 (left: 10) -> There is only one possible next step which is 10. -> 10 / 2 = 5 -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.111 20"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 1.111 + 20 = 21.111 (left: 20 21.111)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 1.111 + 20 = 21.111 (left: 20 21.111) -> 20 + 21.111 = 41.111 (left: 41.111)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "50"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 12 * 10 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 12 * 10 = 120 (left: 120) -> There are no possible next steps for the number 120.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 + 3 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 + 3 = 10 (left: 10) -> There is only one possible next step which is 10.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 - 6 = 0"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 =  -> 6 - 6 = 0 -> 12 + 1 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 6 "
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 + 6 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.111 20"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 20 / 1.111 = 18.018 (left: 18.018)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "6 6 10"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.111 16.907"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 20 / 1.111 = 18.018 (left: 1.111 18.018) -> 18.018 - 1.111 = 16.907 (left: 1.111 16.907) -> 1.111 * 16.907 = 18.803077 (left: 18.803077)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 + 3 = 10 (left: 10) -> There is only one possible next step which is 10. -> 10 / 2 = 5 -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 =  -> 6 - 6 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "10 26"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.111 20"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 1.111 * 20 = 22.22 (left: 20 22.22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 1.111 * 20 = 22.22 (left: 20 22.22) -> 20 / 22.22 = 0.9 (left: 0.9)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "16"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> There are no possible next steps for the number 120.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "50"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 + 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> There are no possible next steps for the number 50.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 + 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> There are no possible next steps for the number 50. -> There are no possible next steps for the number 50.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.111 20"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 20 - 1.111 = 18.889 (left: 18.889)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "66"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66) -> There are no possible next steps with just the number 66.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 * 12 = 120 (left: 120) -> 120 / 2 = 60",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 - 16 = -10 (left: -10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "50"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 + 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> No possible next steps, as there are no other numbers provided to perform operations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 + 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> No possible next steps, as there are no other numbers provided to perform operations with. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.111 20"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 1.111 + 20 = 21.111 (left: 21.111)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "No possible next steps."
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 + 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> No possible next steps, as there are no other numbers provided to perform operations with. -> No possible next steps. -> There are no possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1.111 16.907"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 20 / 1.111 = 18.018 (left: 1.111 18.018) -> 18.018 - 1.111 = 16.907 (left: 1.111 16.907) -> 1.111 * 16.907 = 18.783177 (left: 18.783177)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "50"
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 + 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> 50 / 2 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps for the number 50."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> There are no possible next steps with the number 9.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> There are no possible next steps with the number 9. -> There are no possible next steps with the number 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.111 20"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 20 / 1.111 = 18.018 (left: 1.111 18.018)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 20 / 1.111 = 18.018 (left: 1.111 18.018) -> 18.018 / 1.111 = 16.222622 (left: 16.222622)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps for the number 50."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps for the input 0.8333.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18) -> 7 * 18 = 126 (left: 126)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 8 + 1 = 9 (left: 1)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 6 "
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.111 20"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36) -> 36 - 10 = 26 (left: 10 26) -> 36 / 4 = 9 (left: 9 10 20) -> 10 / 9 = 1.111 (left: 1.111 20) -> 1.111 * 20 = 22.22 (left: 22.22)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "50"
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 + 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50) -> 50 + 2 = 52 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1.5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "10 12"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 - 12 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 8 11"
                }
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There is only one number given (2"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> Input: 2 -> There is only one number given (2), so there are no possible next steps to perform any operations. -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> Input: 2 -> There is only one number given (2), so there are no possible next steps to perform any operations. -> 2 + 2 = 4 -> 4 - 2 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40) -> 40 + 2 = 42",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> Input: 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> Input: 2 -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "11 / 4 = 2.75 (left"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There are no possible next steps for the input 2.75."
                }
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 / 4 = 2.75 (left: 2.75) -> There are no possible next steps for the input 2.75. -> There are no possible next steps for the input 2.75.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 / 4 = 2.75 (left: 2.75) -> There are no possible next steps for the input 2.75. -> There are no possible next steps for the input 2.75. -> There are no possible next steps for the input 2.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6) -> 1.6 + 8 = 9.6 (left: 8 9.6)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "6 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Input: 2 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 11"
                }
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11) -> 12 / 11 = 1.09 (left: 1.09)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11) -> 12 / 11 = 1.09 (left: 1.09) -> 1 + 0.09 = 1.09 (left: 0.09)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2.75"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 13)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "11 / 4 = 2.75 (left"
                }
            },
            "Step 4": {
                "Step": "11 / 4 = 2.75 (left -> 11 / 4 = 2.75 (left: 2.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 11"
                }
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11) -> 12 / 11 = 1.09090909091 (left: 1.09090909091)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11) -> 12 / 11 = 1.09090909091 (left: 1.09090909091) -> 1.09090909091 - 1 = 0.09090909091",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40) -> There are no possible next steps for the number 40 as it is a single number and cannot be combined with any of the other numbers given.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 / 4 = 2.75 (left: 2.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> Input: 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> Input: 2 -> There is only one number given (2), so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "11 / 4 = 2.75 (left"
                }
            },
            "Step 5": {
                "Step": "11 / 4 = 2.75 (left -> 4 * 11 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 4 = 2.75 (left -> 4 * 11 = 44 (left: 44) -> There are no possible next steps for the input 44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3) -> 3 + 7 = 10 (left: 8 10 8)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 7 8 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 =  -> 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "12"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 7 8"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3) -> There is no possible next step with only one input number provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "2 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2) -> There are no possible next steps with just the number 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6) -> There are no possible next steps with the input 1.6.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2.75"
                }
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: -> 11 / 4 = 2.75 (left: 2.75) -> There are no possible next steps for the input 2.75.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "6 8"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "12 11"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 8 / 5 = 1.6 (left: 1.6) -> There is not enough information provided to determine possible next steps for the input 1.6. Please provide additional numbers or operations to continue.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 / 4 = 2.75 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "6 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "6 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "Input: 2 8"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8 -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 + 7 = 18 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> 13 + 2 = 15 (left: 13 15)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "2 8"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "6 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 11"
                }
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11) -> 12 * 11 = 132 (left: 132)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11) -> 12 * 11 = 132 (left: 132) -> 13 + 2 = 15 (left: 15) ",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "5 8"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40) -> No possible next steps, the input is already a single number.",
                "Pruning": null
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13) -> 14 - 13 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 5 5\nSteps:\n3 + 5 = 8 (left: 3 8 5)\n3 * 5 = 15 (left: 15 8)\n15 - 8 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 5 = 26 (left: 26)\n26 - 3 = 23 (left: 23)\n23 - ",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "5.2"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> 13 / 2.5 = 5.2 (left: 5.2) -> Sorry, I am unable to perform calculations with decimals.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\nAnswer: (3 * 3) * ((8 - 9) * 9) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "0.1875"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: ((3 * 7) + 5) - 3 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Without input provided, it is not possible to generate possible next steps. Please provide a set of numbers to continue."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input: -> There is no input provided. Please provide a set of numbers for the next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 5 7 8\nSteps:\n7 + 8 = 15 (left: 3 5 15)\n15 - 5 = 10 (left: 3 10)\n10 + 3 = 13 (left: 13)\n13 * 2 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: ((3 + (7 + 8)) + 5) *",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There is no input provided. Please provide a set of numbers for the next steps."
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input: -> There is no input provided. Please provide a set of numbers for the next steps. -> Without input provided, it is not possible to generate possible next steps. Please provide a set of numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 8 9\nSteps:\n3 + 3 = 6 (left: 6 8 9)\n6 * 8 = 48 (left: 9 48)\n48 / 9 = 5.33333333333\nAnswer: (3 + 3) * (8 / 9) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Sorry, I am unable to perform calculations with decimals."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 4 5 7\nSteps:\n4 * 7 = 28 (left: 3 5 28)\n28 - 5 = 23 (left: 3 23)\n23 - 3 = 20 (left: 20)\nAnswer: ((4 * 7) - 5) - 3 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Sorry, I am unable to perform calculations with decimals."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8 9)\n2 * 8 = 16 (left: 16 9)\n16 - 9 = 7 (left: 7)\n7 + 7 = 14 (left: 14)\n14 + 8 = 22 (left: 22",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 - (13 - 4)) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 - (13 - 4)) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 5 = 15 (left: 3 7 15)\n7 - 3 = 4 (left: 4 15)\n4 * 15 = 60 (left: 60)\nAnswer: (3 * 5) * (7 - 3) = 60",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "40 13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n1 * 3 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 5) - 7) * 3 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Provide more numbers to perform operations on."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 - ",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Provide more numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 5 7 8\nSteps:\n7 + 8 = 15 (left: 3 5 15)\n5 - 3 = 2 (left: 2 15)\n2 * 15 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((7 + 8) - (5 - 3)) * 6 = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "40 13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Without input provided, it is not possible to generate possible next steps. Please provide a set of numbers to continue."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 10 / 4 = 2.5 (left: 2.5 13) -> 13 / 2.5 = 5.2 (left: 5.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> All the inputs have been successfully calculated to obtain 24 using the given numbers and arithmetic operations.",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "6 13 16"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 13 16) -> 13 / 6 = 2.1667 (left: 2.1667 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (13 - 4)) = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (13 - 4)) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 + 3 = 10 (left: 10 12)\n10 * 12 = 120 (left: 120)\nAnswer: (3 * 4) * (7 + 3) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There is no input provided. Please provide a set of numbers for the next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 24 = 24 (left: 24)\nAnswer: (((",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Sorry, I am unable to perform calculations with decimals."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 7) + 5 - 3) + 1 = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 6 13"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 6 * 13 = 78 (left: 1 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Overall, there are multiple ways to obtain 24 using the given numbers and basic arithmetic operations.",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "0.1875"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 4 8\nSteps:\n3 * 4 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (3 * 4) + (8 - 4) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Sorry, I am unable to perform calculations with decimals."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> All the provided solutions are correct!",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 10 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 * 10 = 40 (left: 40 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: (3 * 7) - (5 - 3) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2.1667 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 5) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Sorry, I am unable to perform calculations with decimals."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 4 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> The answer is 4 * (13 - 4) = 24.",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 10 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 * 10 = 40 (left: 40 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 18 8)\n18 + 8 = 26 (left: 26)\nAnswer: (3 + 3) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Sorry, I am unable to perform calculations with decimals."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 * 9 = 27",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 * 9 = 27 -> 9 - 3 = 6 (left: 6 = 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n12 + 3 = 15 (left: 5 15)\n15 + 5 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 * 4) + 3) + 5 + 4 = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (5 - 3) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) - (6 + 3) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Without input provided, it is not possible to generate possible next steps. Please provide a set of numbers to continue."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 13 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> All possible solutions to obtain 24 from the given numbers have been provided.",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 10 13"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 / 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> All possible solutions have been provided.",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 + 10 + 4 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) - 8 + 10 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "Sorry, I am unable to perform calculations with decimals."
                }
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * 7 + 10 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2 -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: ((6 - 4) * 7) + 10 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * 7 + 10 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (2 + 7) = 24"
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 1"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1) -> 11 / 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "132"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 3 + 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "12 + 12 = 24"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "None, as there is only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 6"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 1 + 3 + 2 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24.83333"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333) -> There is only one number provided, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "23"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23) -> None",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 11 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (11 / 6 + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "6 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 6"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 1 + 3 + 2 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "13"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 11 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> 13 + 2 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24.83333 * 2 = 49.66666"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "23"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23) -> There are no possible next steps with only one number provided. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 1 + 3 + 2 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 11 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 6"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 1 + 3 + 2 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "24.83333 * 2 = 49.66666"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333) -> 24.83333 * 2 = 49.66666 -> 24.83333 - 2 = 22.83333",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 6 = 17 (left: 11 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 9.1667 - 12 = -2.8333 (left: -2.8333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "23"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23) -> 23 + 8 = 31 (left: 8)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "132"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 1 + 3 + 2 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 1 + 3 + 2 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "23"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23) -> There are no possible next steps with the input \"23\" as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> There are no possible next steps as there is no input given.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 6 * 11 = 66 (left: 12 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 11 12) -> 6 * 11 = 66 (left: 12 66) -> 66 - 12 = 54 (left: 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "23"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23) -> There are no possible next steps with just the number 23.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23) -> There are no possible next steps with just the number 23. -> There are no possible next steps with just the number 23.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (11 / 6 + 11) * 12 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "12 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 1"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1) -> 11 / 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24.83333"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 + 12.83333 = 24.83333 (left: 24.83333) -> 24.83333 * 2 = 49.66666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (11 / 6 + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 24"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 1"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1) -> 11 * 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "23"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 1 + 3 + 2 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "12 + 12 = 24"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 / 12 = 2 (left: 2 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 6"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 1 + 3 + 2 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "12 + 12 = 24"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 - 12 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "23"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23) -> There are no possible next steps with the input 23.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23) -> There are no possible next steps with the input 23. -> There are no possible next steps with the input 23.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 1 + 3 + 2 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6 12"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 6 - 12 = -6 (left: -6)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Please provide at least two numbers to find possible next steps."
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "None, as there is only one number provided."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 1"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1) -> 11 - 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1.83333 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 * 11 = 20.16663 (left: 12 20.16663)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 1 + 3 + 2 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "-2.8333"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 9.1667 - 12 = -2.8333 (left: -2.8333) -> -2.8333 + 2 = -0.8333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "6 6"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 1 + 3 + 2 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with just the number 23."
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23) -> There are no possible next steps with just the number 23. -> There are no possible next steps with just the number 23. -> None.",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "6 6"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 / 6 = 1.83 (rounded to 2) (left: 2 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 1"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1) -> 11 * 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132) -> 1 + 3 + 2 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "11 1"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1) -> 11 + 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24.83333 * 2 = 49.66666"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "12 12"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 + 1 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) -> No valid operations can be performed with the input 0.",
                "Pruning": null
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 - 2 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 - 2 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10 -> 5 / 5 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 9 11"
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the input 11."
                }
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 4 = 6 (left: 4 6) -> 9 - 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> There are no possible next steps with just one number. -> Input: 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "45"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45) -> 45 / 2 = 22.5 (left: 2)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 9 11"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 * 9 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 5"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "45"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "0.6111"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 * 9 = 18 (left: 11 18) -> 11 / 18 = 0.6111 (left: 0.6111) -> 0.6111 * 2 = 1.2222",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 * 9 = 18 (left: 11 18) -> 11 / 18 = 0.6111 (left: 0.6111) -> 0.6111 * 2 = 1.2222 -> 0.6111 - 2 = -1.3889",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 4 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 4 5  -> 5 - 4 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.875 8"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8) -> 0.875 * 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "3.33 20"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 * 3.33 = 66.6 (left: 3.33 66.6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10 -> 5 / 5 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "5"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 11"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11 11) -> 11 - 11 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11 11) -> 11 - 11 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10 -> 5 / 5 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10 -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "5"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "11 11"
                }
            },
            "Step 7": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11 11) -> 11 + 11 = 22 (left: 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "Provide at least two numbers to perform operations."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 + 2 = 4"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "5"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10 -> 5 / 5 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "11 18"
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 * 9 = 18 (left: 11 18) -> 11 / 18 = 0.6111 (left: 0.6111)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> 5 + 5 = 10",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just one number provided. -> Provide at least two numbers to perform operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 4 = 6 (left: 4 6) -> 4 / 6 = 0.67 (left: 0.67)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "4 6"
                }
            },
            "Step 6": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "No possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "45"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45) -> 45 + 2 = 47",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45) -> 45 + 2 = 47 -> 45 / 2 = 22.5 (left: 22.5 47)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "There are no possible next steps with the input 11."
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11. -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10 -> 5 / 5 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "5"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> 5 + 5 = 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "Input: 5"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> There are no possible next steps with just one number. -> Input: 5 -> 5 + 5 = 10 (left: 5 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> There are no possible next steps with just one number. -> Input: 5 -> 5 + 5 = 10 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "3.33 66.6"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> There are no possible next steps with just one number. -> It seems like there are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> There are no possible next steps with just one number. -> It seems like there are no possible next steps with just one number. -> None",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There are no possible next steps with just one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3.33 66.6"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 9 + 11 = 20 (left: 6 20) -> 20 / 6 = 3.33 (left: 3.33 20) -> 20 * 3.33 = 66.6 (left: 3.33 66.6) -> 3.33 * 66.6 = 221.838 (left: 221.838)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "5"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "45"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45) -> There are no possible next steps with the input 45.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45) -> There are no possible next steps with the input 45. -> There are no possible next steps with the input 45.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 9 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10 -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There is only one possible next step: 5 + 5 = 10 -> 5 / 5 = 1 (left: 1 5) -> 1 + 5 = 6 -> 1 / 5 = 0.2 (left: 0.2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 5"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "There are no possible next steps with just the number 5."
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5. -> 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There is only one possible next step: 5 + 5 = 10"
                }
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 + 7 = 24 (left: 24) -> Answer: (13 - 5) + (9 + 7) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 * 13 = 26 (left: 5 26)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 * 13 = 26 (left: 5 26) -> 5 + 26 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 + 7 = 24 (left: 24) -> Answer: ((13 - 5) + 9) + 7 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 + 7 = 24 (left: 24) -> Answer: ((13 - 5) + 9) + 7 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 + 7 = 24 (left: 24) -> Answer: ((13 - 5) + 9) + 7 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 + 7 = 24 (left: 24) -> Answer: ((13 - 5) + 9) + 7 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 5 16 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 + 7 = 24 (left: 24) -> Answer: ((13 - 5) + 9) + 7 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 + 7 = 24 (left: 24) -> Answer: ((13 - 5) + 9) + 7 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 + 7 = 24 (left: 24) -> Answer: ((13 - 5) + 9) + 7 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 + 7 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 + 7 = 24 (left: 24) -> Answer: ((13 - 5) + 9) + 7 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.4285714285714284 (left: 2.4285714285714284)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step?"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step? -> - Multiply two numbers"
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 - 18 = 18 (left: 18 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "12"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 * 2 = 36",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 4 = 3 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 4 = 3 ( -> 12 / 4 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 12 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "2 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 12 - 2 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 18 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> Input: 20 * 4 = 80",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 =  -> 6 - 4 = 2 (left: )",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 * 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There is only one number given, so there are no possible next steps to perform any operations. The result remains 36.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There is only one number given, so there are no possible next steps to perform any operations. The result remains 36. -> N/A",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12 / 4 = 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input 36. -> There are no possible next steps with the input 36.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 18 = 2 (left: 2 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 2 * 18 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "2 + 2 = 4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 * 2 = 72",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 * 2 = 72 -> 72 / 2 = 36 (left: 36 72)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 (left: 2)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> 36 / 18 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "18 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 + 2 = 38 -> 2 + 36 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 24 32)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 24 32) -> 24 + 32 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2 18"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 / 12 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 12"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 6 * 6 = 36",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 6 * 6 = 36 -> 6 / 6 = 1 (left: 1 = 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 10 12"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 4 10 12) -> 12 - 4 = 8 (left: 10 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 3 + ",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 3 +  -> 3 + 2 = 5",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 * 6 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 * 6 = 72 (left: 72) -> 7 + 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps for the input 36 as there are no other numbers provided to perform operations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps for the input 36 as there are no other numbers provided to perform operations with. -> There are no possible next steps for the input 36 as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps for the number 36.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps for the number 36. -> 36 / 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 24 / 3 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is already a single number. -> N/A",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "12 / 4 = 3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input 36. -> None",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "8 24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24) -> 8 - 24 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "36"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> None.",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "1 = 36"
                }
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 + 11 = 13.25 (left: 12 13.25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 + 11 = 13.25 (left: 12 13.25) -> 12 - 13.25 = -1.25 (left: -1.25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24.75 36.75"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 12 + 24.75 = 36.75 (left: 24.75 36.75) -> 24.75 / 36.75 = 0.673469 (left: 0.673469)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "297"
                }
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 12 * 24.75 = 297 (left: 297) -> 297 * 7 = 2079",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "297 * 7 = 2079"
                }
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 12 * 24.75 = 297 (left: 297) -> 297 * 7 = 2079 -> 297 + 7 = 304 (left: 304 * 7 = 2128)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 12 * 24.75 = 297 (left: 297) -> 297 * 7 = 2079 -> 297 + 7 = 304 (left: 304 * 7 = 2128) -> 304 / 7 = 43.42857142857143 (left: 43.42857142857143 * 7 = ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "13"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 + 2 = 15",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 + 2 = 15 -> 13 / 2 = 6.5 (left: 6.5 ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 13) -> 2 + 13 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11.9091"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps for the input 11.9091 as it is a single value.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There are no possible next steps, as there are no more numbers provided for calculations."
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> There are no possible next steps, as there are no more numbers provided for calculations. -> There are no possible next steps, as there are no more numbers provided for calculations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> There are no possible next steps, as there are no more numbers provided for calculations. -> There are no possible next steps, as there are no more numbers provided for calculations. -> None",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps, as there are no more numbers provided for calculations."
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> There are no possible next steps, as there are no more numbers provided for calculations. -> 10 / 6 = 1.66667 (left: 4 1.66667)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> There are no possible next steps, as there are no more numbers provided for calculations. -> 10 / 6 = 1.66667 (left: 4 1.66667) -> 4 + 1.66667 = 5.66667 (left: 5.66667)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps for the input 72."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0.4074074074074074"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 * 2 = 0.8148148148148148",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 * 2 = 0.8148148148148148 -> 0.4074074074074074 + 2 = 2.4074074074074074",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "There are no possible next steps for the input 72."
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps for the input 72. -> There are no possible next steps for the input 72. -> There are no possible next steps for the input 72.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps for the input 72. -> There are no possible next steps for the input 72. -> There are no possible next steps for the input 72. -> There are no possible next steps for the input 72.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "13"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> There are no possible next steps with the input 13.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> There are no possible next steps with the input 13. -> 13 * 2 = 26 (left: 26 2)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.4074074074074074 + 2 = 2.4074074074074074"
                }
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 * 2 = 0.8148148148148148 -> 0.4074074074074074 + 2 = 2.4074074074074074 -> 2 / 0.4074074074074074 = 4.898979485566356 (left: 4.898979485566356 2.4074074074074074)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 * 2 = 0.8148148148148148 -> 0.4074074074074074 + 2 = 2.4074074074074074 -> 2 / 0.4074074074074074 = 4.898979485566356 (left: 4.898979485566356 2.4074074074074074) -> 4.898979485566356 - 2.4074074074074074 = 2.491572078158948 (left: 2.491572078158948)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps for the input 72."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "0.09848 - 2 = -1.90152"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 / 132 = 0.09848 (left: 0.09848) -> 0.09848 - 2 = -1.90152 -> 0.09848 * 2 = 0.19696 (left: -1.90152 0.19696)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 / 132 = 0.09848 (left: 0.09848) -> 0.09848 - 2 = -1.90152 -> 0.09848 * 2 = 0.19696 (left: -1.90152 0.19696) -> -1.90152 - 0.19696 = -2.09848 (left: -2",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps, as there are no more numbers provided for calculations."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "72"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps for the input 72.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps for the input 72. -> There are no possible next steps for the input 72.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "13 132"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 / 132 = 0.09848 (left: 0.09848)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 / 132 = 0.09848 (left: 0.09848) -> 0.09848 - 2 = -1.90152",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps, as there are no more numbers provided for calculations."
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> There are no possible next steps, as there are no more numbers provided for calculations. -> There are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> There are no possible next steps, as there are no more numbers provided for calculations. -> There are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 + 12 = 16.88888888888889 (left: 16.88888888888889)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24.75 36.75"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 12 + 24.75 = 36.75 (left: 24.75 36.75) -> 24.75 / 36.75 \u2248 0.674 (left: 0.674)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "11 12 36"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 25 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "Add another number to the input to perform mathematical operations."
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps with just one number provided. Additional numbers are needed to perform mathematical operations. -> Add another number to the input to perform mathematical operations. -> 14 / 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps with just one number provided. Additional numbers are needed to perform mathematical operations. -> Add another number to the input to perform mathematical operations. -> 14 / 6 -> 14 / 6 = 2.33333... (left: 2.33333...)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps, as there are no more numbers provided for calculations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps for the input 11.9091 as it is a single value."
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> Unable to provide possible next steps for a single value input.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 12 * 24.75 = 297 (left: 297)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "16.88888888888889"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 + 12 = 16.88888888888889 (left: 16.88888888888889) -> 16.88888888888889 - 2 = 14.88888888888889",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 + 12 = 16.88888888888889 (left: 16.88888888888889) -> 16.88888888888889 - 2 = 14.88888888888889 -> 16.88888888888889 / 2 = 8.444444444444445",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps for the input 11.9091 as it is a single value."
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps for the input 72."
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps for the input 72. -> There are no possible next steps for the input 72. -> There are no possible next steps for the input 72.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps for the input 72. -> There are no possible next steps for the input 72. -> There are no possible next steps for the input 72. -> None",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps, as there are no more numbers provided for calculations."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 12 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> 13 - 8 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "13"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 * 13 = 13 (left: 13) -> There are no possible next steps, as there are no more numbers provided for calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "16.88888888888889 / 2 = 8.444444444444445"
                }
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 + 12 = 16.88888888888889 (left: 16.88888888888889) -> 16.88888888888889 - 2 = 14.88888888888889 -> 16.88888888888889 / 2 = 8.444444444444445 -> 16.88888888888889 - 2 = 14.88888888888889",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 + 12 = 16.88888888888889 (left: 16.88888888888889) -> 16.88888888888889 - 2 = 14.88888888888889 -> 16.88888888888889 / 2 = 8.444444444444445 -> 16.88888888888889 - 2 = 14.88888888888889 -> 16.88888888888889 - 2 = 14.88888888888889",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "There are no possible next steps for the input 11.9091 as it is a single value."
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 * 11 = 24.75 (left: 12 24.75) -> 12 + 24.75 = 36.75 (left: 24.75 36.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11.9091"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps with just one number provided. Additional numbers are needed to perform mathematical operations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps with just one number provided. Additional numbers are needed to perform mathematical operations. -> Add another number to the input to perform mathematical operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.4074074074074074 + 2 = 2.4074074074074074"
                }
            },
            "Step 5": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 * 2 = 0.8148148148148148 -> 0.4074074074074074 + 2 = 2.4074074074074074 -> 2.4074074074074074 * 8 = 19.25925925925926",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 / 12 = 0.4074074074074074 (left: 0.4074074074074074) -> 0.4074074074074074 * 2 = 0.8148148148148148 -> 0.4074074074074074 + 2 = 2.4074074074074074 -> 2.4074074074074074 * 8 = 19.25925925925926 -> 19.25925925925926 / 8 = 2.4074074074074074",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "There are no possible next steps for the input 72."
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps for the input 72. -> There are no possible next steps for the input 72. -> There are no possible next steps for the input 72.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps for the input 72. -> There are no possible next steps for the input 72. -> There are no possible next steps for the input 72. -> There are no possible next steps for the input 72.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 + 1 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "72"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps for the number 72. It is a multiple of 2, 3, 4, 6, 8, 9, 12, 18, 24, 36, and 72 itself, which means it cannot be combined with any of the input numbers to reach 72.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72) -> There are no possible next steps for the number 72. It is a multiple of 2, 3, 4, 6, 8, 9, 12, 18, 24, 36, and 72 itself, which means it cannot be combined with any of the input numbers to reach 72. -> None",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "297"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no possible next steps for the input 11.9091 as it is a single value."
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13) -> 13 / 1.0909 = 11.9091 (left: 11.9091) -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value. -> There are no possible next steps for the input 11.9091 as it is a single value.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "16.88888888888889 - 2 = 14.88888888888889"
                }
            },
            "Step 7": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 + 12 = 16.88888888888889 (left: 16.88888888888889) -> 16.88888888888889 - 2 = 14.88888888888889 -> 16.88888888888889 / 2 = 8.444444444444445 -> 16.88888888888889 - 2 = 14.88888888888889 -> 16.88888888888889 - 2 = 14.88888888888889 -> 16.88888888888889 + 2 = 18.88888888888889",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.888888888888889 (left: 4.888888888888889 12) -> 4.888888888888889 + 12 = 16.88888888888889 (left: 16.88888888888889) -> 16.88888888888889 - 2 = 14.88888888888889 -> 16.88888888888889 / 2 = 8.444444444444445 -> 16.88888888888889 - 2 = 14.88888888888889 -> 16.88888888888889 - 2 = 14.88888888888889 -> 16.88888888888889 + 2 = 18.88888888888889 -> 16.88888888888889 / 2 = 8.444444444444445",
                "Pruning": null
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 7 = 6 (left: 7 6) -> 7 - 6 = 1 (left: 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-102"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117) -> 15 - 117 = -102 (left: -102) -> -102 + 2 = -100 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 8 9"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 7) * (9 - 8) * 8 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "Invalid input. Please enter a valid list of numbers separated by spaces."
                }
            },
            "Step 8": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 1 + 7 = 8 (left: 8 13) -> 8 - 13 = -5 (left: -5) -> There are no possible next steps as the input is invalid. -> Invalid input. Please enter a valid list of numbers separated by spaces. -> Please enter a valid list of numbers separated by spaces.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 1 13"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 7 = 6 (left: 7 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 7 = 6 (left: 7 6) -> 7 - 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "-5"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 1 + 7 = 8 (left: 8 13) -> 8 - 13 = -5 (left: -5) -> There are no possible next steps as the input is invalid.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 1 + 7 = 8 (left: 8 13) -> 8 - 13 = -5 (left: -5) -> There are no possible next steps as the input is invalid. -> Invalid input. Please enter a valid list of numbers separated by spaces.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 8 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 8 =  -> 9 - 8 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 7) * (9 - 8) * 8 = 24",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "5 13"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 6 + 7 = 13 (left: 5 13) -> 5 - 13 = -8 (left: -8)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "There are no possible next steps with the input 9."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117) -> 15 - 117 = -102 (left: -102)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.71"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 1 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "0"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 / 8 = 1.125 (left: 1.125 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 / 8 = 1.125 (left: 1.125 8) -> 8 / 1.125 = 7.1111 (left: 7.1111 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 7) * (9 - 6) * 8 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1"
                }
            },
            "Step 8": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 7 = 6 (left: 7 6) -> 7 - 6 = 1 (left: 1) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 9 = 6 (left: 6 15) -> 6 - 15 = -9 (left: -9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> Input: 3 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> Input: 3 7 -> 7 - 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 7) * (9 - 8) * 8 = 24",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "11"
                }
            },
            "Step 8": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 7 1 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 = 2 (left: 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 15 - 13 = 2 (left: 2 -> There are no possible next steps with just the number 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 7 = 6 (left: 7 6) -> 7 - 6 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 7 = 6 (left: 7 6) -> 7 - 6 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 - 9 = -7.67 (left: -7.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 7) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "Please provide at least two numbers to find possible next steps."
                }
            },
            "Step 8": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 7 = 6 (left: 7 6) -> 7 - 6 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to find possible next steps. -> Please provide at least two numbers to find possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 8 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.71"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 1 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71) -> 1 + 7 = 8.71 (left: 8.71)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "0"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 7) * (9 - 8) * 8 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-102"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117) -> 15 - 117 = -102 (left: -102) -> -102 + 2 = -100 (left: 2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 + 15 = 28 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 + 15 = 28 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.71"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 1 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71) -> There is only one number given, so there are no possible arithmetic operations to perform on it.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 1 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71) -> There is only one number given, so there are no possible arithmetic operations to perform on it. -> There are no possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 / 14 = 0.6428571428571429 (left: 0.6428571428571429)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 7) * (9 - 3) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps as there is no input provided."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "There are no possible next steps with just one number."
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> Addition: 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15) -> There are no possible next steps with just one number. -> Addition: 8 + 8 = 16 (left: 2 16) -> 2 * 16 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "There are no possible next steps with just one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 6 + 7 = 13 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 7) * (9 - 6) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "No possible next steps."
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 - 4 = 0 (left: 0) -> No possible next steps. -> There are no possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 1 13"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 1 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 1 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "There are no possible next steps with the input 9."
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 + 15 = 28 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 + 15 = 28 (left: 9) -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9. -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 7) * (9 - 8) * 8 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-102"
                }
            },
            "Step 8": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 * 13 = 117 (left: 15 117) -> 15 - 117 = -102 (left: -102) -> -102 + 2 = -100 (left: 2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 1 13"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 1 + 7 = 8 (left: 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 1 + 7 = 8 (left: 8 13) -> 8 - 13 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 7 = 6 (left: 7 6) -> 7 - 6 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 7 = 6 (left: 7 6) -> 7 - 6 = 1 (left: 1) -> 1 + 1 = 2 -> 2 * ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18) ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 7) * (9 - 6) * 8 = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps as there is only one number given."
                }
            },
            "Step 8": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 1 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71) -> There is only one number given, so there are no possible arithmetic operations to perform on it. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 5 = 2 (left: 2 7)\n2 * 3 = 6 (left: 6 7)\n6 * 7 = 42 (left: 42)\n42 / 2 = 21 (left: 21)\n21 - 4 = 17 (left: 17)\n17"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * 3) * (9 - 8)) -"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 -> 24 / 12 = 2 (left: 2 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) - (6 - 3) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 3 6 9\nSteps:\n3 * 3 = 9 (left: 6 9)\n6 + 9 = 15 (left: 15)\n15 - 9 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 3) + (6 + 9)) - 9 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 - 10 = 2 (left: 2 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 - 10 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 / 12 = 2 (left: 12 2)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((12 / 2) * 6) - 12 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (12 / 2) * (6 * 6) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((12 / 2) * 6) - 12 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 * 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((12 / 2) * 6) - 12 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 - 12 = 12 (left: 12 24)"
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "There are no possible next steps with just the number 50."
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> There are no possible next steps with just the number 50. -> There are no possible next steps with just the number 50.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18/2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 2"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2.67 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "There are no possible next steps for the input 1."
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps for the input 1. -> There are no possible next steps for the input 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> None - this is the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "There are no possible next steps for the input 1.33."
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 / 3 = 1.33333333333 (left: 1.33) -> There are no possible next steps for the input 1.33. -> There are no possible next steps for the input 1.33.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11) -> 12 * 11 = 132 (left: 132)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 3 6"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 6 9"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 3 * 6 = 18 (left: 9 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 3 * 6 = 18 (left: 9 18) -> 18 - 9 = 9 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "There are no possible next steps with just the number 50."
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> There are no possible next steps with just the number 50. -> 50 * 2 = 100 (left: 2 100)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 6 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 * 3 = 18 (left: 18 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "There are no possible next steps for the input 1.33."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 12 * 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 2"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2.67 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 2"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 2"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "1 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 * 8 = 21.36 (left: 21.36)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps for the input 1.33."
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 / 3 = 1.33333333333 (left: 1.33) -> There are no possible next steps for the input 1.33. -> 1.33 + 1 = 2.33 (left: 2.33)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 1."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 1 3 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 / 3 = 1.33333333333 (left: 1.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 / 3 = 1.33333333333 (left: 1.33) -> There are no possible next steps for the input 1.33.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 12 13) -> 12 - 13 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 6 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 4 "
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8) -> 2.67 + 8 = 10.67 (left: 10.67)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "56"
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 56) -> 56 / 2 = 28",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "There are no possible next steps for the input 1.33."
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 / 3 = 1.33333333333 (left: 1.33) -> There are no possible next steps for the input 1.33. -> There are no possible next steps for the input 1.33 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33 8)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 - 2.67 = 5.33 (left: 5.33 8) -> 5.33 / 8 = 0.66625 (left: 0.66625)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2.67 8"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps for the input 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "There are no possible next steps for the input 1."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with just the number 50."
                }
            },
            "Step 8": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> There are no possible next steps with just the number 50. -> There are no possible next steps with just the number 50. -> There are no possible next steps with just the number 50.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 10 = 50 (left: 50)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 5 * 10 = 50 (left: 50) -> There are no possible next steps with just the number 50.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11 12) -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "There are no possible next steps for the input 1.33."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 6 9"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 / 3 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 / 3 = 2 (left: 2 9) -> 9 + 2 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 6 3 9",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67 8) -> Input: 6 3 9 -> Possible",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with just the number 50."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 3 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 12 13) -> 12 / 13 \u2248 0.9231 (left: 0.9231)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 2"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "1 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 6 / 3 = 2 (left: 1 2 6) -> 2 * 6 = 12 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "7"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with just the number 50."
                }
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "-1.66666666667"
                }
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667) -> There are no possible next steps with the input -1.66666666667.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667) -> There are no possible next steps with the input -1.66666666667. -> There are no possible next steps with the input -1.66666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 1.165"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 + 1.165 = 3.165",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 + 1.165 = 3.165 -> 2 / 1.165 = 1.71824",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 10 12) -> 10 - 2 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 10 12) -> 10 - 2 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There is only one number, so there are no possible next steps. The final result is 96.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "40"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> There are no possible next steps with the single input of 40.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> There are no possible next steps with the single input of 40. -> There are no possible next steps with the single input of 40.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 1.165"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 - 1.165 = 0.835 (left: 0.835)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input -1.66666666667."
                }
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667) -> There are no possible next steps with the input -1.66666666667. -> There are no possible next steps with the input -1.66666666667. -> There are no possible next steps with the input -1.66666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 10 12) -> 10 - 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 10 12) -> 10 - 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.33"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> There are no possible next steps with the input 2.33 as it is a single number and not an equation or expression.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> There are no possible next steps with the input 2.33 as it is a single number and not an equation or expression. -> There are no possible next steps with the input 2.33 as it is a single number and not an equation or expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 1.165"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 - 1.165 = 0.835",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 - 1.165 = 0.835 -> 2 + 1 = 3.165 (left: 1.165 3.165)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 + 1.165 = 3.165"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 + 1.165 = 3.165 -> 2 + 1.165 = 3.165 -> 2 - 1.165 = 0.835 (left: 0.835)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the single input of 40."
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> There are no possible next steps with the single input of 40. -> There are no possible next steps with the single input of 40. -> There are no possible next steps with the single input of 40.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "40"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "There are no possible next steps as there is only one number given."
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.165 3.165"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 - 1.165 = 0.835 -> 2 + 1 = 3.165 (left: 1.165 3.165) -> 1.165 * 3.165 = 3.679475 (left: 3.679475)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "336"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336) -> 3 * 3 = 9 (left: 9 3 6)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "40"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> 40 / 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "12 - 6 ="
                }
            },
            "Step 4": {
                "Step": "12 - 6 = -> 12 - 6 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 1.165"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 + 1.165 = 3.165",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 + 1.165 = 3.165 -> 2 + 1.165 = 3.165",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 10 12) -> 10 - 2 = 8 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 10 12) -> 10 - 2 = 8 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5) -> 1.5 + 8 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps as there is only one number given."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12) -> 12 / 10.3333333333 = 1.1616161616 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "-1.66666666667"
                }
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667) -> There are no possible next steps with the input -1.66666666667.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667) -> There are no possible next steps with the input -1.66666666667. -> There are no possible next steps with the input -1.66666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 1.165"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 - 1.165 = 0.835 (left: 0.835)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "-1.66666666667"
                }
            },
            "Step 6": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667) -> There are no possible next steps for the input -1.66666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 10 12) -> 10 - 2 = 8 (left: 8 12) -> 8 / 12 = 0.66667 (left: 0.66667)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 10 12) -> 10 - 2 = 8 (left: 8 12) -> 8 / 12 = 0.66667 (left: 0.66667) -> There are no possible next steps with the number 0.66667.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 + 20 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "-1.66666666667"
                }
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667) -> There seems to be an error in the input provided. Please provide a valid input for further calculation.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667) -> There seems to be an error in the input provided. Please provide a valid input for further calculation. -> Please provide a valid input for further calculation.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 1.165"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 + 1.165 = 3.165",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 + 1.165 = 3.165 -> 2 - 1.165 = 0.835",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 10 12) -> 10 - 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 10 12) -> 10 - 2 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20) -> 20 - 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps as there is only one number given."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 + 12 = 13.66666666667 (left: 12 13.66666666667) -> 12 - 13.66666666667 = -1.66666666667 (left: -1.66666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2.33"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 1.165"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 * 1.165 = 2.33 (left: 1.165 2.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 * 1.165 = 2.33 (left: 1.165 2.33) -> 1.165 * 2.33 = 2.71745 (left: 2.71745)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2.33"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.165 3.165"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 - 1.165 = 0.835 -> 2 + 1 = 3.165 (left: 1.165 3.165) -> 3.165 / 1.165 = 2.72 (left: 2.72 1.165)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 - 1.165 = 0.835 -> 2 + 1 = 3.165 (left: 1.165 3.165) -> 3.165 / 1.165 = 2.72 (left: 2.72 1.165) -> 2.72 * 1.165 = 3.1678 (left: 3.1678)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 - 1.165 = 0.835"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 / 1.66666666667 = 7.2 (left: 7.2 12) -> 12 / 7.2 = 1.66666666667 (left: 1.66666666667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.33"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> There is only one number given in the input, so there are no possible arithmetic operations to perform. The number 2.33 remains as is.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> There is only one number given in the input, so there are no possible arithmetic operations to perform. The number 2.33 remains as is. -> No possible next steps as there is only one number given in the input: 2.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 1.165"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 / 1.165 = 1.719 (left: 1.719)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the single input of 40."
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40) -> There are no possible next steps with the single input of 40. -> There are no possible next steps with the single input of 40. -> There are no possible next steps with the single input of 40.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "8 12"
                }
            },
            "Step 7": {
                "Step": "12 / 6 = 2 (left: 2 10 12) -> 10 - 2 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "12 / 6 = 2 (left: 2 10 12) -> 10 - 2 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> There are no possible next steps for the input 96 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 6 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.333333333",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.333333333 -> 12 - 1.66666666667 = 10.333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 - 1.66666666667 = 10.333333333"
                }
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.333333333 -> 12 - 1.66666666667 = 10.333333333 -> 12 + 1.66666666667 = 13.66666666667 (left: 13",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2.33"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> There is only one number given, so there are no possible arithmetic operations that can be performed on it.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 1.165"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 - 1.165 = 0.835 (left: 0.835)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 10 12"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 10 12) -> 10 - 2 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1.165 3.165"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165 (left: 2 1.165) -> 2 - 1.165 = 0.835 -> 2 + 1 = 3.165 (left: 1.165 3.165) -> 12",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "12 / 10.3333333333 = 1.1616161616 (left:"
                }
            },
            "Step 8": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12) -> 12 / 10.3333333333 = 1.1616161616 (left: -> 12 * 10.3333333333 = 124 (left: 124)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps as there is only one number given."
                }
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 19 / 5 = 3.8 (left: 3.8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.6666666666666667"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps with the input of 1.6666666666666667.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps with the input of 1.6666666666666667. -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "No possible next steps with only one number provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "5 4 "
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 1 = 2.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> 20 / 2 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> 20 / 2 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 20 100)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7 -> 7 - 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.6666666666666667"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps as the input is a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps as the input is a single number. -> There are no possible next steps as the input is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "5 4 "
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "1"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9) -> 9 - 8 = 1 (left: 1) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9) -> 9 - 8 = 1 (left: 1) -> There are no possible next steps with just one number. -> ",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps for the input 1.6666666666666667."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 / 5 =",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 / 5 = -> 4 / 5 = 0.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.6666666666666667"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 * 2 = 3.3333333333333335 (left: 3.3333333333333335)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3"
                }
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "5 4 "
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 + 5 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps for the input 1.6666666666666667."
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps for the input 1.6666666666666667. -> There are no possible next steps for the input 1.6666666666666667. -> There are no possible next steps for the input 1.6666666666666667. -> 1.6666666666666667 - 2 = -0.33333333333333348 (left: -0.333333333333333",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "Please provide at least two numbers to generate possible next steps."
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.6666666666666667"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps as the input is already a single number. -> Input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "5 4 "
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1.25 + 8 = 9.25"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25 -> 1.25 / 8 = 0.15625 (left: 0.15625 8 9.25)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25 -> 1.25 / 8 = 0.15625 (left: 0.15625 8 9.25) -> 8 / 0.15625 = 51.2 (left: 51.2 9.25)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.6666666666666667"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps for the input 1.6666666666666667.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps for the input 1.6666666666666667. -> There are no possible next steps for the input 1.6666666666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "5 4 "
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 28"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 * 5 = 20 (left: 20) -> 20 + 8 = 28 (left: 8 28) -> 8 + 28 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3.3333333333333335 3.666666666666667"
                }
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 * 2 = 3.3333333333333335 -> 1.6666666666666667 + 2 = 3.666666666666667 (left: 3.3333333333333335 3.666666666666667) -> 3.666666666666667 - 3.3333333333333335 = 0.3333333333333335 (left: 0.3333333333333335)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with just the number 3."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.6666666666666667"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 / 8 = 0.20833333333333334 (left: 0.208333333",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1.6666666666666667"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 * 8 = 13.333333333333334 (left: 13.333333333333334)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 4 "
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3.3333333333333335 3.666666666666667"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 * 2 = 3.3333333333333335 -> 1.6666666666666667 + 2 = 3.666666666666667 (left: 3.3333333333333335 3.666666666666667) -> 3.3333333333333335 - 3.666666666666667 = -0.33333333333333354 (left: -0.33333333333333354)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps for the input 1.6666666666666667."
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps for the input 1.6666666666666667. -> There are no possible next steps for the input 1.6666666666666667. -> There are no possible next steps for the input 1.6666666666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> 20 / 2 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> 20 / 2 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps as the input is a single number."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> 20 + 8 = 28 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.6666666666666667"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 - 2 = -0.33333333333333326",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 - 2 = -0.33333333333333326 -> 1.6666666666666667 / 2 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3.3333333333333335 3.666666666666667"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 * 2 = 3.3333333333333335 -> 1.6666666666666667 + 2 = 3.666666666666667 (left: 3.3333333333333335 3.666666666666667) -> 3.666666666666667 - 3.3333333333333335 = 0.33333333333333304 (left: 0.33333333333333304)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with only one number provided."
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided. -> Please provide more than one number for possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with only one number provided. -> Please provide more than one number for possible next steps. -> 6 + 2 = 8 (left:",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 10 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 5 4"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 4 = 1 (left: 1) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.6666666666666667"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 * 2 = 3.3333333333333335",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 * 2 = 3.3333333333333335 -> 1.6666666666666667 + 2 = 3.666666666666667 (left: 3.3333333333333335 3.666666666666667)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "5 4 "
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 * 5 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 * 5 = 20 (left: 20) -> 20 + 8 = 28 (left: 8 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "1.25 + 8 = 9.25"
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25 -> 8",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "No possible next steps with only one number provided."
                }
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 4 = 1 (left: 1) -> No possible next steps with only one number provided. -> No possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.6666666666666667"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 * 8 = 13.333333333333334",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 * 8 = 13.333333333333334 -> 1.6666666666666667 / 8 = 0.208333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "5 4 "
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "Please provide at least two numbers to generate possible next steps."
                }
            },
            "Step 7": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps. -> Please provide at least two numbers to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 - 2 = -0.75 (left: -0.75)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 / 5 = 0.8"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 / 5 = -> 4 / 5 = 0.8 -> 4 - 5 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 5 9"
                }
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 5 - 1 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "5 4 "
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 8 = 9.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "There are no possible next steps for the input 1.6666666666666667."
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps for the input 1.6666666666666667. -> There are no possible next steps for the input 1.6666666666666667. -> There are no possible next steps for the input 1.6666666666666667. -> There are no possible next steps for the input 1.6666666666666667.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 + 10 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> There are no possible next steps for the input 1.6666666666666667. -> There are no possible next steps for the input 1.6666666666666667. -> There are no possible next steps for the input 1.6666666666666667. -> There are no possible next steps for the input 1.6666666666666667. -> There are no possible next steps for the input 1.6666666666666667.",
                "Pruning": null
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 5 / 11 = 0.4545 (left: 0.4545)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression."
                }
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 / 5 = 2.2 (left: 2.2) -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression. -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 / 5 = 2.2 (left: 2.2) -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression. -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression. -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> Possible",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> Possible -> It seems like the input you provided is not clear. Could you please provide a clearer input for me to generate the possible next steps for you?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 36"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 + 25 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36) -> 1 + 36 = 37 (left: 37)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "0.75"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75) -> There are no possible next steps with the input of 0.75.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 5 + 10 = 15 (left: 15 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 5 + 10 = 15 (left: 15 15) -> 15 * 15 = 225 (left: 225)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "There are no possible next steps with the input of 30."
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30. -> 30 / 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 11 25"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 11 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 11 13) -> 11 + 13 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 36"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 + 25 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression."
                }
            },
            "Step 8": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 / 5 = 2.2 (left: 2.2) -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression. -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression. -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression. -> None",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 + 5 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 + 5 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9 / 3 = 3"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3 -> 9 / 3 = 3 -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "There are no possible next steps with the input of 30."
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30. -> There are no possible next steps with the input of 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 11 - 6 = 5 (left: 5 11 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 11 - 6 = 5 (left: 5 11 19) -> 19 - 5 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 36"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 + 25 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36) -> 36 - 1 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "It seems like the input you provided is not clear. Could you please provide a clearer input for me to generate the possible next steps for you?"
                }
            },
            "Step 8": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> Possible -> It seems like the input you provided is not clear. Could you please provide a clearer input for me to generate the possible next steps for you? -> I'm sorry for the confusion. Please provide a clearer input for me to generate the possible next steps for you.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 15"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Possible next steps: -> 7 + 8 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "11 60"
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 * 10 = 60 (left: 11 60) -> 11 / 60 = 0.1833 (left: 0.1833)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 36"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 + 25 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "There are no possible next steps with the input of 30."
                }
            },
            "Step 8": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30. -> 30 / 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3 -> 9 / 3 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "There are no possible next steps with the input of 30."
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30. -> 30 / 10 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 6 11"
                }
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> 1 * 6 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 6 * 11 = 66 (left: 66 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 6 * 11 = 66 (left: 66 19) -> 66 * 19 = 1254 (left: 1254)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "8 15"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 36"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 + 25 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36) -> 36 - 1 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "11 14"
                }
            },
            "Step 8": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 11 - 6 = 5 (left: 5 11 19) -> 19 - 5 = 14 (left: 11 14) -> 14 - 11 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "6 24"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression."
                }
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 / 5 = 2.2 (left: 2.2) -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression. -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 / 5 = 2.2 (left: 2.2) -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression. -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression. -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 - 25 = 41 (left: 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 36"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 + 25 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "8 15"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Possible next steps: -> 7 + 8 = 15 (left: 8 15) -> 8 + 15 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 1.83 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 1.83 11) -> 1.83 + 11 = 12.83 (left: 12.83)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "225"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 5 + 10 = 15 (left: 15 15) -> 15 * 15 = 225 (left: 225) -> 2 + 2 + 5 = 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 5 + 10 = 15 (left: 15 15) -> 15 * 15 = 225 (left: 225) -> 2 + 2 + 5 = 9 -> 2 + 2 * 5 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 11 25"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 11 = 14 (left: 6 14) -> 6 + 14 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 36"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 + 25 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36) -> 1 + 36 = 37 (left: 37)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There are no possible next steps for the input 12.83."
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 1.83 11) -> 1.83 + 11 = 12.83 (left: 12.83) -> There are no possible next steps for the input 12.83. -> There are no possible next steps for the input 12.83.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.4545"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 5 / 11 = 0.4545 (left: 0.4545) -> 0.4545 - 2 = -1.5455 (left: -1.5455)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "9 / 3 = 3"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3 -> 9 / 3 = 3 -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "8 15"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 + 25 = 36 (left: 6 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 + 25 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 36"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 + 25 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "It seems like the input you provided is not clear. Could you please provide a clearer input for me to generate the possible next steps for you?"
                }
            },
            "Step 8": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> Possible -> It seems like the input you provided is not clear. Could you please provide a clearer input for me to generate the possible next steps for you? -> I'm sorry for the confusion. Please provide a clearer input such as a set of numbers or an equation for me to generate the possible next steps for you.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 / 5 = 2.2 (left: 2.2) -> There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.4545"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 5 / 11 = 0.4545 (left: 0.4545) -> 0.4545 + 0.4545 = 0.909 (left: 0.909)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 10 11"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 6 * 10 = 60 (left: 11 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 6 * 11 = 66 (left: 66 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 6 * 11 = 66 (left: 66 19) -> 66 / 19 \u2248 3.474 (left: 3.474)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps for the input 2.2 as it is a single number and not an equation or expression."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 36"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 + 25 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36) -> 36 - 1 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "8 15"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Possible next steps: -> 7 + 8 = 15 (left: 8 15) -> 8 / 15 \u2248 0.5333 (left: 0.5333)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Possible next steps: -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "225"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 5 + 10 = 15 (left: 15 15) -> 15 * 15 = 225 (left: 225) -> 22 * 5 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "12.83"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 / 6 = 1.83 (left: 1.83 11) -> 1.83 + 11 = 12.83 (left: 12.83) -> There are no possible next steps for the input 12.83.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 6 * 11 = 66 (left: 66 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 6 11 19) -> 6 * 11 = 66 (left: 66 19) -> 66 - 19 = 47 (left: 47)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.4545"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1 36"
                }
            },
            "Step 7": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 11 + 25 = 36 (left: 6 36) -> 6 / 6 = 1 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5) -> There are no possible next steps with the input of 5. -> There are no possible next steps with the input of 5.",
                "Pruning": null
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Input: 5 2 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> Input: 5 2 7 -> 5 + 2 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 48 - 9 = 39 (left: 9 39) -> 39 - 9 = 30 (left: 30) -> 30 + 2 = 32",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 48 - 9 = 39 (left: 9 39) -> 39 - 9 = 30 (left: 30) -> 30 + 2 = 32 -> 30 - 2 = 28 (left: 28 + 2 = 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1.74 2.87"
                }
            },
            "Step 5": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 / 10.33 = 0.87 (left: 0.87) -> 0.87 + 2 = 2.87 -> 2 * 0.87 = 1.74 (left: 1.74 2.87) -> 1.74 / 2.87 = 0.6059 (left: 0.6059)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1.33 9 9"
                }
            },
            "Step 6": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 6.766"
                }
            },
            "Step 7": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 * 6.766 = 60.894 (left: 6.766 60.894)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 * 6.766 = 60.894 (left: 6.766 60.894) -> 6.766 * 60.894 = 412.021964 (left: 412.021964)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps for the number 19.33 as it is already a single number and cannot be further manipulated using basic arithmetic operations."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.33 9 9"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 / 10.33 = 0.87 (left: 0.87)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.87"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 / 10.33 = 0.87 (left: 0.87) -> There are no possible next steps with the input 0.87.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 / 10.33 = 0.87 (left: 0.87) -> There are no possible next steps with the input 0.87. -> There are no possible next steps with the input 0.87.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1.33 9 9"
                }
            },
            "Step 5": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 * 10.33 = 92.97 (left: 92.97)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 6.766"
                }
            },
            "Step 7": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 * 6.766 = 60.894 (left: 6.766 60.894)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 * 6.766 = 60.894 (left: 6.766 60.894) -> 6.766 * 60.894 = 412.47684 (left: 412.47684)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps for the number 19.33 as it is already a single number and cannot be further manipulated using basic arithmetic operations."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 6 / 1 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 6 / 1 = 6 (left: 6 9) -> 9 / 6 = 1.5 (left: 1.5) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.87"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 / 10.33 = 0.87 (left: 0.87) -> There are no possible next steps for the input 0.87 as it only consists of one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 / 10.33 = 0.87 (left: 0.87) -> There are no possible next steps for the input 0.87 as it only consists of one number. -> N/A",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "7 7"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1.33 9 9"
                }
            },
            "Step 5": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 - 10.33 = -1.33 (left: -1.33)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 6.766"
                }
            },
            "Step 7": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 * 6.766 = 60.894 (left: 6.766 60.894)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 * 6.766 = 60.894 (left: 6.766 60.894) -> 6.766 * 60.894 = 412.635564 (left: 60.894 412.635564)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 6 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "19.33"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 + 10.33 = 19.33 (left: 19.33) -> There are no possible next steps for the number 19.33 as it is already a single number and cannot be further manipulated using basic arithmetic operations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 + 10.33 = 19.33 (left: 19.33) -> There are no possible next steps for the number 19.33 as it is already a single number and cannot be further manipulated using basic arithmetic operations. -> There are no possible next steps for the number 19.33 as it is already a single number and cannot be further manipulated using basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1.74 2.87"
                }
            },
            "Step 5": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 / 10.33 = 0.87 (left: 0.87) -> 0.87 + 2 = 2.87 -> 2 * 0.87 = 1.74 (left: 1.74 2.87) -> 1.74 * 2.87 = 4.9978 (left: 4.9978)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1."
                }
            },
            "Step 6": {
                "Step": "8 / 6 = 1.33 (left: 1. -> There are no possible next steps with only one number given. Please provide at least two numbers for calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 6.766"
                }
            },
            "Step 7": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 - 6.766 = 2.234 (left: 2.234 6.766)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 - 6.766 = 2.234 (left: 2.234 6.766) -> 2.234 + 6.766 = 9.0 (left: 9.0)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps for the number 19.33 as it is already a single number and cannot be further manipulated using basic arithmetic operations."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "9 9 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 48 - 9 = 39 (left: 9 39)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 48 - 9 = 39 (left: 9 39) -> 39 - 9 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10) -> Possible next steps: -> There are no possible next steps with the given input. -> None",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "18"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1.74 2.87"
                }
            },
            "Step 5": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 / 10.33 = 0.87 (left: 0.87) -> 0.87 + 2 = 2.87 -> 2 * 0.87 = 1.74 (left: 1.74 2.87) -> 2.87 / 1.74 = 1.651 (left: 1.651)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1."
                }
            },
            "Step 6": {
                "Step": "8 / 6 = 1.33 (left: 1. -> 1 + 8 = 9 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 6.766"
                }
            },
            "Step 7": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 - 6.766 = 2.234 (left: 2.234)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 - 6.766 = 2.234 (left: 2.234) -> 2.234 / 2 = 1.117 (left: 1.117 2.234)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.33 9 9"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 * 1.33 = 11.97 (left: 11.97 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 * 1.33 = 11.97 (left: 11.97 9) -> 11.97 - 9 = 2.97 (left: 2.97)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.97"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 * 1.33 = 11.97 (left: 11.97 9) -> 11.97 - 9 = 2.97 (left: 2.97) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 * 1.33 = 11.97 (left: 11.97 9) -> 11.97 - 9 = 2.97 (left: 2.97) -> There is only one number given, so there are no possible next steps to perform any operations. -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1.33 9 9"
                }
            },
            "Step 5": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 * 9 = 11.97 (left: 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 * 9 = 11.97 (left: 9 -> 8 + 1 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 6.766"
                }
            },
            "Step 7": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 / 6.766 = 1.329 (left: 1.329 6.766)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 / 6.766 = 1.329 (left: 1.329 6.766) -> 6.766 - 1.329 = 5.437 (left: 5.437 6.766)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "19.33"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 + 10.33 = 19.33 (left: 19.33) -> There are no possible next steps as the input is a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 + 10.33 = 19.33 (left: 19.33) -> There are no possible next steps as the input is a single number. -> N/A",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1.33 9 9"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1.33 9 9"
                }
            },
            "Step 5": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 - 1.33 = 7.67 (left: 7.67 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 - 1.33 = 7.67 (left: 7.67 9) -> Input: 16 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 6.766"
                }
            },
            "Step 7": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 * 6.766 = 60.894 (left: 6.766 60.894)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 * 6.766 = 60.894 (left: 6.766 60.894) -> 6.766 + 60.894 = 67.66 (left: 60.894 67.66)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.33 9 9"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 + 10.33 = 19.33 (left: 19.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "19.33"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 + 10.33 = 19.33 (left: 19.33) -> There are no possible next steps for the input 19.33 as there are no other numbers provided to perform operations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 + 10.33 = 19.33 (left: 19.33) -> There are no possible next steps for the input 19.33 as there are no other numbers provided to perform operations with. -> There are no possible next steps for the input 19.33 as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1.74 2.87"
                }
            },
            "Step 5": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 / 10.33 = 0.87 (left: 0.87) -> 0.87 + 2 = 2.87 -> 2 * 0.87 = 1.74 (left: 1.74 2.87) -> 1.74 / 2.87 = 0.6052 (left: 0.6052)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 9 14"
                }
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> Possible",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 6.766"
                }
            },
            "Step 7": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 * 6.766 = 60.894 (left: 6.766 60.894)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 * 6.766 = 60.894 (left: 6.766 60.894) -> 60.894 - 6.766 = 54.128 (left: 6.766 54.128)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "9 9 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> Possible next steps: -> None, the input does not have any more possible arithmetic operations to perform.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps for the number 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 9 - 6 = 3 (left: 6 3) -> 6 * 3 = 18 (left: 18) -> There are no possible next steps for the number 18. -> None",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "18"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1.74 2.87"
                }
            },
            "Step 5": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 / 10.33 = 0.87 (left: 0.87) -> 0.87 + 2 = 2.87 -> 2 * 0.87 = 1.74 (left: 1.74 2.87) -> 2.87 - 1.74 = 1.13 (left: 1.13)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps for the number 19.33 as it is already a single number and cannot be further manipulated using basic arithmetic operations."
                }
            },
            "Step 6": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 + 10.33 = 19.33 (left: 19.33) -> There are no possible next steps for the number 19.33 as it is already a single number and cannot be further manipulated using basic arithmetic operations. -> There are no possible next steps for the number 19.33 as it is already a single number and cannot be further manipulated using basic arithmetic operations. -> There are no possible next steps for the number 19.33 as it is already a single number and cannot be further manipulated using basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 6.766"
                }
            },
            "Step 7": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 - 6.766 = 2.234 (left: 2.234 6.766)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 - 6.766 = 2.234 (left: 2.234 6.766) -> 2.234 * 6.766 = 15.103244 (left: 15.103244)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1.74 2.87"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.33 9 9"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 - 1.33 = 7.67 (left: 7.67 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 - 1.33 = 7.67 (left: 7.67 9) -> 7.67 / 9 = 0.8522 (left: 0.8522)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.87"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 / 10.33 = 0.87 (left: 0.87) -> 0.87 + 2 = 2.87",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 / 10.33 = 0.87 (left: 0.87) -> 0.87 + 2 = 2.87 -> 2 * 0.87 = 1.74 (left: 1.74 2.87)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1.74 2.87"
                }
            },
            "Step 5": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 / 10.33 = 0.87 (left: 0.87) -> 0.87 + 2 = 2.87 -> 2 * 0.87 = 1.74 (left: 1.74 2.87) -> 2.87 - 1.74 = 1.13 (left: 1.13)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "2.97"
                }
            },
            "Step 6": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 * 1.33 = 11.97 (left: 11.97 9) -> 11.97 - 9 = 2.97 (left: 2.97) -> There are no possible next steps for the input 2.97 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "9 6.766"
                }
            },
            "Step 7": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 * 6.766 = 60.894 (left: 6.766 60.894)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 9 / 1.33 = 6.766 (left: 9 6.766) -> 9 * 6.766 = 60.894 (left: 6.766 60.894) -> 6.766 + 60.894 = 67.66 (left: 60.894 67.66)",
                "Pruning": null
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (4 - 3)) *",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "Please provide a set of numbers to continue with the calculations."
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations. -> 3 + 5 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "156"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> 1.5 + 13 = 14.5 (left: 14.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 + 2 = 3.1538461538461537 (left: 3.153846153846153",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "195"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195) -> 195 + 1 = 196 (left: 196)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps as the input is a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (2 * 6) * (4 * 3) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 6 13"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13) -> 3 + 13 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 + 1 = 2.1538461538461537",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 + 1 = 2.1538461538461537 -> 1.1538461538461537 - 1 = 0.1538461538461537",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78) -> 78 / 9 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 4 = 10 (left: 10 6)\n10 * 6 = 60 (left: 60)\nAnswer: (2 * 3) * (4 + 6) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "195"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195) -> 9 + 5 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 6 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13) -> 13 - 2.16666666667 = 10.833333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 - 2 = -0.8461538461538463",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 - 2 = -0.8461538461538463 -> 1.1538461538461537 / 2 = 0.576",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 7 7 3\nSteps:\n7 + 7 = 14 (left: 14 7 3)\n14 - 7 = 7 (left: 7 7)\n7 * 7 = 49 (left: 49)\n49 / 3 = 16.33 (left: 16.33)\nAnswer: ((7 + 7) - 7) * (7 * 3) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78) -> 78 / 9 = 8 (left: 8) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 + 1 = 2.1538461538461537",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 + 1 = 2.1538461538461537 -> 1.1538461538461537 / 1 = 1.1538461538461537",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 + 6 = 12 (left: 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 + 6 = 12 (left: 12 13) -> 12 - 13 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\nAnswer: ((3 * 7) - 5) * 2 = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) ->  -> It seems like you forgot to provide an input. Please enter 3 numbers separated by spaces.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923074",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923074 -> 1.1538461538461537 * 2 = 2.3076923076923074",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n5 * 2 = 10 (left: 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "19.5"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> 1.5 * 13 = 19.5 (left: 19.5) -> There are no possible next steps as the input is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 - 2 = -0.8461538461538463",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 - 2 = -0.8461538461538463 -> 1.1538461538461537 / 2 = 0.5769230769230769",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 3 13 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n4 + 6 = 10 (left: 2 3 10)\n2 * 3 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((2 * 3) + (4 + 6)) = 24",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "9 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left: 6 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13) -> 3 * 13 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923074",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923074 -> 1.1538461538461537 / 2 = 0.5769230769230769",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33 (left: 4.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n5 + 3 = 8 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n6 + 16 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((5 + 3) * 2) + (6 + 2) = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 13 18"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 3 13 18) -> 3 + 13 = 16 (left: 16 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> 13 - 1.5 = 11.5 (left: 11.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 1 = 1.1538461538461537",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 / 1 = 1.1538461538461537 -> 1.1538461538461537 + 1 = 2.1538461538461537",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 + 6 = 12 (left: 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 + 6 = 12 (left: 12 13) -> 12 * 13 = 156 (left: 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 5\nSteps:\n3 + 5 = 8 (left: 2 4 8)\n4 * 2 = 8 (left: 8 8)\n8 * 8 = 64 (left: 64)\nAnswer: (4 * 2) * (3 + 5) = 64",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "156"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 + 6 = 12 (left: 12 13) -> 12 * 13 = 156 (left: 156) -> 1 * 5 * 6 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "195"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> 13 - 1.5 = 11.5 (left: 11.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923074",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923074 -> 1.1538461538461537 - 2 = -0.8461538461538463 (left: -0.846153846153846",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 / 6 = 1.5 (left: 1.5 13) -> 1.5 * 13 = 19.5 (left: 19.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 9\nSteps:\n5 * 3 = 15 (left: 2 9 15)\n15 - 9 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((5 * 3) - 9) * 2 = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 - 13 = -7 (left: -7 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 - 13 = -7 (left: -7 13) -> -7 / 13 = -0.5384615384615384 (left: -0.5384615384615384)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.1538461538461537"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923075",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.1538461538461537 (left: 1.1538461538461537) -> 1.1538461538461537 * 2 = 2.3076923076923075 -> 2.3076923076923075 - 2 = 0.3076923076923075 (left: 0.307692307692307",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps as the input is a single number."
                }
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 17"
                }
            },
            "Step 1": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 * 11 = 66 (left: 66 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 * 11 = 66 (left: 66 17) -> 66 / 17 = 3.8823529411764707 (left: 3.8823529411764707)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 24) -> Answer: ((6 / (11 - 9)) * 8) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 17"
                }
            },
            "Step 1": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 - 11 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 24) -> Answer: (6 / (11 - 9)) * 8 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 + 8 = 23 (left: 11 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 + 8 = 23 (left: 11 23) -> 23 - 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 24) -> Answer: (6 / (11 - 9)) * 8 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 11 = 4 (left: 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 11 15) -> 15 - 11 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 24) -> Answer: (6 / (11 - 9)) * 8 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 2 "
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 24) -> Answer: ((6 / (11 - 9)) * 8) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 / 11 = 1.363636363",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 15 / 11 = 1.363636363 -> 15 * 11 = 165 (left: 11 165 1.363636363)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 24) -> Answer: ((11 - 9) / 6) * 8 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 17"
                }
            },
            "Step 1": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 11 - 6 = 5 (left: 5 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 11 - 6 = 5 (left: 5 17) -> 17 / 5 = 3.4 (left: 3.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 24) -> Answer: (6 / (11 - 9)) * 8 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 17"
                }
            },
            "Step 1": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 11 + 6 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 11 + 6 = 17 (left: 17) -> There are no possible next steps with the input 17.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 24) -> Answer: (6 / (11 - 9)) * 8 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 * 11 = 99 (left: 99 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 * 11 = 99 (left: 99 48) -> 99 + 48 = 147 (left: 147)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 24) -> Answer: (6 / (11 - 9)) * 8 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 11 - 8 = 3 (left: 3 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 11 - 8 = 3 (left: 3 15) -> 3 * 15 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 6 2  -> 6 / 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 24) -> Answer: (6 / (11 - 9)) * 8 = 24"
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25) -> 25 + 2 = 27 (left: 2)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 - 1 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 - 1 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25) -> 25 + 2 = 27 (left: 2)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 3) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (3 * (11 - 3)) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25) -> 25 + 2 = 27 (left: 2)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 8) + (11 - 3) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 * 3 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 * 3 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 3) * 1 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 1) * (11 - 3) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25) -> 25 * 2 = 50 (left: 2)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (11 - 3)) * 1 = 24"
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> None, as there is only one number left.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325) -> 3 - 2 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "2."
                }
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2. -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "44 3"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 - 3 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 - 3 = 41 (left: 41) -> 41 - 2 = 39 (left: 2)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "Input more numbers to create new equations."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2.5 11 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 11 / 2.5 = 4.4 (left: 4",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 11 / 2.5 = 4.4 (left: 4 -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> No possible next steps, the equation is complete with the result of 16.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> No possible next steps, the equation is complete with the result of 16. -> None",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2.5 11 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325) -> 3 - 2 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 13 15"
                }
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 10 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "44 3"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 + 3 = 47 (left: 47)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 + 3 = 47 (left: 47) -> 47 + 2 = 49",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 10 = 5 (left: 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 - 10 = 5 (left: 5 13) -> 5 - 13 = -8 (left: -8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "11 1.272727272 1.272727272"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 1.272727272 - ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 1.272727272 -  -> 1.272727272 - 8 = -6.727272728 (left: -6.727272728)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "10 13 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325) -> 3 - 2 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "11 1.272727272 1.272727272"
                }
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 1.272727272 - 11 = -9.727272728 (left: -9.727272728 1.272727272)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "44 3"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 * 3 = 132 (left: 132)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 * 3 = 132 (left: 132) -> Input: 555",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 14 = 154 (left: 13 154)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 14 = 154 (left: 13 154) -> 13 / 154 = 0.0844 (left: 0.0844 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "3 4.67"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 - 4.67 = -1.67 (left: -1.67)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "3 4.67"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 4.67"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 + 4.67 = 7.67 (left: 7.67)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "0.0844 13"
                }
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 14 = 154 (left: 13 154) -> 13 / 154 = 0.0844 (left: 0.0844 13) -> 0.0844 * 13 = 1.0982 (left: 1.0982)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "18 -32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "44 3"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 - 3 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 - 3 = 41 (left: 41) -> 41 / 8 = 5.125 (left: 8)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "- Try rearranging the numbers to create different combinations"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with just one number. -> - Try rearranging the numbers to create different combinations",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2.5 11 13"
                }
            },
            "Step 5": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 11 / 2.5 = 4.4 (left: 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 11 / 2.5 = 4.4 (left: 4 -> There are no possible next steps with the input of 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "44 3"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 - 3 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 - 3 = 41 (left: 41) -> None - There is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "11 1.272727272 1.272727272"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 11 - 1.272727272 = 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 11 - 1.272727272 = 9 -> Input: 5 * 3 + 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325) -> 3 - 2 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There are no possible next steps with only one number."
                }
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 11 / 2.5 = 4.4 (left: 4 -> There are no possible next steps with only one number. -> ",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "0.0844 13"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "44 3"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 - 3 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 - 3 = 41 (left: 41) -> 41 * 2 = 82 (left: 2)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "Input: 5 * 3 + 10"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> - 16 + 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> - 16 + 2 = 18 -> -16 * 2 = -32 (left: 18 -32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 4.67"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 11 = 3 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 - 4.67 = -1.67 (left: -1.67)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 11 3"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "44 3"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 + 3 = 47 (left: 47)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 + 3 = 47 (left: 47) -> There are no possible next steps with the input of 47.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 11 13 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 + 13 = 24 (left: 14 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325) -> 3 - 2 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "44 3"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 * 3 = 132 (left: 132)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 * 3 = 132 (left: 132) -> 13 - 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "0.2 = 6"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 4 11 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2."
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2. -> 5 + 9 = 14 (left: 14 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2. -> 5 + 9 = 14 (left: 14 3) -> 14 / 3 = 4.67 (left: 4.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with only one number provided. -> Please provide more than one number to evaluate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325) -> 3 - 2 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "There are no possible next steps with only one number."
                }
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 11 / 2.5 = 4.4 (left: 4 -> There are no possible next steps with only one number. -> Input more numbers to create new equations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "44 3"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 / 3 = 14.67 (left: 14.67)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 / 3 = 14.67 (left: 14.67) -> There are no possible next steps for the input 14.67 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 0.8461538461538461"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461) -> 12 * 0.8461538461538461 = 10.153846153846153 (left: 10.153846153846153)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "325"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325) -> 3 - 2 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325) -> 3 - 2 = 1 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325) -> 3 - 2 = 1 (left: 1 5) -> 1 + 5 = 6 -> 1 / 5 = 0.2 (left: 0.2 = 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "44 3"
                }
            },
            "Step 7": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 - 3 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 * 11 = 44 (left: 44 3) -> 44 - 3 = 41 (left: 41) -> 41 / 2 = 20.5",
                "Pruning": null
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 / 6 = 1.166666",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 / 6 = 1.166666 -> 6 - 7 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "168"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 /",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / -> 6 / 2 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "66"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 7 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 66 + 2 = 68 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "63"
                }
            },
            "Step 8": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 * 6 = 42 (left: 6 42)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 * 6 = 42 (left: 6 42) -> 6 * 7 = 42 (left: 42)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 7 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "66"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 7 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 6 + 6 = 12",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 7 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 6 + 6 = 12 -> 6 * 6 = 36 (left: 6 6 36)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 - 10 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "66"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 7 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66) -> 6 * 6 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "5.5"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5) -> 5.5 * 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "4.83333333333 6"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 1.16666666667 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 1.16666666667 6) -> 6 - 1.16666666667 = 4.83333333333 (left: 4.83333333333)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "6 5 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "5"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5) -> There are no possible next steps with just one number. -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> Input: 1 7 13 0",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> Input: 1 7 13 0 -> 13 - 7 = 6 (left: 1 6 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 6 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 6 30) -> 6 * 6 = 36 (left: 36 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13) -> 6 * 13 = 78 (left: 78)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 7"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 1.5 * 7 = 10.5 (left: 10.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> -3 + 2 = -1 (left: 2)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "5"
                }
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7) -> 7 - 2 = 5 (left: 5) -> There is only one possible next step: 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Possible next steps:"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "6 6 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 6 =  -> 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "6 / 2 = 3"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / -> 6 / 2 = 3 -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / -> 6 / 2 = 3 -> Possible next steps: -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24) -> 7 * 24 = 168 (left: 168)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 7 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 7 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "70"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 * 2 = 140 (left: 2)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "1 6 0"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> Input: 1 7 13 0 -> 13 - 7 = 6 (left: 1 6 0) -> 1 + 6 = 7 (left: 0 7)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 - 4 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "168"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) ->  -> It appears that the input is missing. Could you please provide the numbers for the next step calculation?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "-3"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> There are no possible next steps for the input -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10) -> 7 - 10 = -3 (left: -3) -> There are no possible next steps for the input -3. -> There are no possible next steps for the input -3.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 1.16666666667 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 / 6 = 1.16666666667 (left: 1.16666666667 6) -> 6 - 1.16666666667 = 4.83333333333 (left: 4.83333333333 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7) -> 7 - 1.5 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "It appears that the input is missing. Could you please provide the numbers for the next step calculation?"
                }
            },
            "Step 7": {
                "Step": "6 - 2 = 4 (left: 4 6 7) ->  -> It appears that the input is missing. Could you please provide the numbers for the next step calculation? -> Without the input numbers, I am unable to provide the next step calculation. Please provide the numbers for me to continue.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 - 2 = 4 (left: 4 6 7) ->  -> It appears that the input is missing. Could you please provide the numbers for the next step calculation? -> Without the input numbers, I am unable to provide the next step calculation. Please provide the numbers for me to continue. -> Please provide the numbers for me to continue.",
                "Pruning": null
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 12"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 - 12 = -2 (left: -2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 - 12 = -2 (left: -2 12) -> -2 * 12 = -24 (left: -24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "-3"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> Since the input is -3, there are no possible next steps as there are no valid mathematical operations that can be performed with that input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.2 8.33333333333"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333) -> 1.2 + 8.33333333333 = 9.53333333333 (left: 9.53333333333)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9.53333333333 7.13333333333"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333) -> 8.33333333333 - 1.2 = 7.13333333333 ( -> 8.33333333333 + 1.2 = 9.53333333333 (left: 9.53333333333 7.13333333333) -> 9.53333333333 - 7.13333333333 = 2.4 (left: 2.4 7.13333333333)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333) -> 8.33333333333 - 1.2 = 7.13333333333 ( -> 8.33333333333 + 1.2 = 9.53333333333 (left: 9.53333333333 7.13333333333) -> 9.53333333333 - 7.13333333333 = 2.4 (left: 2.4 7.13333333333) -> 7.13333333333 - 2.4 = 4.733",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "19"
                }
            },
            "Step 3": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> 19 + 2 = 21 (left: 19 21)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> 19 + 2 = 21 (left: 19 21) -> 19 + 21 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "1.42857142857 10 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 1.42857142857 * 10 = 14.2857142857 (left: 12 14.2857142857)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 1.42857142857 * 10 = 14.2857142857 (left: 12 14.2857142857) -> 14.2857142857 / 12 = 1.1904761905 (left: 1.1904761905 14.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9.53333333333 7.13333333333"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333) -> 8.33333333333 - 1.2 = 7.13333333333 ( -> 8.33333333333 + 1.2 = 9.53333333333 (left: 9.53333333333 7.13333333333) -> 9.53333333333 / 7.13333333333 = 1.33793103448 (left: 1.33793103448 7.13333333333)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333) -> 8.33333333333 - 1.2 = 7.13333333333 ( -> 8.33333333333 + 1.2 = 9.53333333333 (left: 9.53333333333 7.13333333333) -> 9.53333333333 / 7.13333333333 = 1.33793103448 (left: 1.33793103448 7.13333333333) -> 1.33793103448 + 7.13333333333 = 8.47126436781 (left: 7.13333333333 8.47126436781)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 12"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 12 / 10 = 1.2 (left: 10 1.2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 12 / 10 = 1.2 (left: 10 1.2) -> 10 / 1.2 = 8.33333 (left: 8.33333)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0.8333"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps with the input of 0.8333. This value cannot be used to perform any arithmetic operations with the given numbers.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps with the input of 0.8333. This value cannot be used to perform any arithmetic operations with the given numbers. -> There are no possible next steps with the input of 0.8333. This value cannot be used to perform any arithmetic operations with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.2 8.33333333333"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333) -> 1.2 * 8.33333333333 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1.2 8.33333333333"
                }
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333) -> 8.33333333333 - 1.2 = 7.13333333333 (left: 7.133",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "8.67"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9.53333333333 7.13333333333"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333) -> 8.33333333333 - 1.2 = 7.13333333333 ( -> 8.33333333333 + 1.2 = 9.53333333333 (left: 9.53333333333 7.13333333333) -> 9.53333333333 - 7.13333333333 = 2.4 (left: 2.4 7.13333333333)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333) -> 8.33333333333 - 1.2 = 7.13333333333 ( -> 8.33333333333 + 1.2 = 9.53333333333 (left: 9.53333333333 7.13333333333) -> 9.53333333333 - 7.13333333333 = 2.4 (left: 2.4 7.13333333333) -> 2.4 + 7.13333333333 = 9.53333333333 (left: 9.53333333333)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "1.19166666667 - 2 = -0.80833333333"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 8.57142857143 * 12 = 102.85714285716 (left: 102.85714285716)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "-24"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 - 12 = -2 (left: -2 12) -> -2 * 12 = -24 (left: -24) -> There are no possible next steps with the input of -24.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 - 12 = -2 (left: -2 12) -> -2 * 12 = -24 (left: -24) -> There are no possible next steps with the input of -24. -> There are no possible next steps with the input of -24.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 - 8.57142857143 = 3.42857142857 (left: 3.42857142857)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 / 10 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 / 10 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3.33 12) -> 12 - 3.33 = 8.67 (left: 8.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0.8333"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps with the input 0.8333.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps with the input 0.8333. -> There are no possible next steps with the input 0.8333.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 1.42857142857 + 10 = 11.42857142857 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 1.42857142857 + 10 = 11.42857142857 (left: -> 1.42857142857 * 10 = 14.2857142857 (left: 14.2857142857)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 / 10 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 / 10 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There are no possible next steps."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> Input: 4 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> Input: 4 7 -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12 / 10 = 1.2"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.2 8.33333333333"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333) -> 1.2 * 8.33333333333 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "10 10 12"
                }
            },
            "Step 6": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 / 10 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9.53333333333 7.13333333333"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333) -> 8.33333333333 - 1.2 = 7.13333333333 ( -> 8.33333333333 + 1.2 = 9.53333333333 (left: 9.53333333333 7.13333333333) -> 9.53333333333 + 7.13333333333 = 16.66666666666 (left: 7.13333333333 16.66666666666)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333) -> 8.33333333333 - 1.2 = 7.13333333333 ( -> 8.33333333333 + 1.2 = 9.53333333333 (left: 9.53333333333 7.13333333333) -> 9.53333333333 + 7.13333333333 = 16.66666666666 (left: 7.13333333333 16.66666666666) -> 16.66666666666 - 7.13333333333 = 9.53333333333 (left: 9.533",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There are no possible next steps."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 7 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 1 12"
                }
            },
            "Step 1": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0.8333"
                }
            },
            "Step 3": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps with the input of 0.8333.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333) -> There are no possible next steps with the input of 0.8333. -> There are no possible next steps with the input of 0.8333.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 10 - 1.42857142857 = 8.57142857143 (left: 8.57142857143 12) -> 12 - 8.57142857143 = 3.42857142857 (left: 3.42857142857)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 / 10 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 / 10 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input of -3."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 10 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "-3"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.2 8.33333333333"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333) -> 8.33333333333 - 1.2 = 7.13333333333 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333) -> 8.33333333333 - 1.2 = 7.13333333333 ( -> 8.33333333333 + 1.2 = 9.53333333333 (left: 9.53333333333 7.13333333333)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 / 10 = 1 (left: 1 12) -> 1 / 12 = 0.0833 (left: 0.0833)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 / 10 = 1 (left: 1 12) -> 1 / 12 = 0.0833 (left: 0.0833) -> 0.0833 / 2 = 0.04165 (left: 0.04165)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with the input of 0.8333."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.43 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 1.43 * 10 = 14.3 (left: 14.3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 1.43 * 10 = 14.3 (left: 14.3 12) -> 14.3 / 12 = 1.19166666667 (left: 1.19166666667)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "19"
                }
            },
            "Step 3": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> 19 / 8 = 2.375 (left: 2.375 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19) -> 19 / 8 = 2.375 (left: 2.375 19) -> 2.375 * 19 = 45.125 (left: 45.125)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "8.67"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 + 1.42857142857 = 13.42857142857 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 + 1.42857142857 = 13.42857142857 (left: -> 12 - 1.42857142857 = 10.57142857143 (left: 10.57142857143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1 12"
                }
            },
            "Step 7": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 / 10 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 + 10 = 17 (left: 10 10 12) -> 10 / 10 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 10 / 12 = 0.8333 (left: 0.8333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8.67"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3.33 12) -> 12 - 3.33 = 8.67 (left: 8.67) -> There is only one number, so no possible next steps.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3.33 12) -> 12 - 3.33 = 8.67 (left: 8.67) -> There is only one number, so no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.2 8.33333333333"
                }
            },
            "Step 5": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333) -> 1.2 / 8.33333333333 = 0.144 (left: 0.144)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1.19166666667"
                }
            },
            "Step 6": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 1.43 * 10 = 14.3 (left: 14.3 12) -> 14.3 / 12 = 1.19166666667 (left: 1.19166666667) -> 1.19166666667 - 2 = -0.80833333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "9.53333333333 7.13333333333"
                }
            },
            "Step 7": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333) -> 8.33333333333 - 1.2 = 7.13333333333 ( -> 8.33333333333 + 1.2 = 9.53333333333 (left: 9.53333333333 7.13333333333) -> 9.53333333333 * 7.13333333333 = 68.071111",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> 12 / 10 = 1.2 ( -> 12 / 10 = 1.2 -> 12 / 1.2 = 10 (left: 10 1.2) -> 10 / 1.2 = 8.33333333333 (left: 1.2 8.33333333333) -> 8.33333333333 - 1.2 = 7.13333333333 ( -> 8.33333333333 + 1.2 = 9.53333333333 (left: 9.53333333333 7.13333333333) -> 9.53333333333 * 7.13333333333 = 68.071111 -> 9.53333333333 - 7.13333333333 = 2.4 (left: 2.4 * 7.13333333333 = 68.071111)",
                "Pruning": null
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 4 + 9 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 4 + 9 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 / 7 = 1.1428571428571428 (left: 1.142857142857142",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "6.5"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 4 + 9 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5) -> There are no possible next steps with the input 6.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 * 7 = 77 (left: 77)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 * 7 = 77 (left: 77) -> 7 - 7 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> Input: 3 3 9 -> 3 * 9 = 27 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input 6.5."
                }
            },
            "Step 8": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 4 + 9 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5) -> There are no possible next steps with the input 6.5. -> There are no possible next steps with the input 6.5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 * 7 = 49 (left: 49 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 * 7 = 49 (left: 49 11) -> 49 / 11 = 4.45 (left: 4.45)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> Input: 3 3 9 -> 3 * 9 = 27 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4.45"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 * 7 = 49 (left: 49 11) -> 49 / 11 = 4.45 (left: 4.45) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 + 35 = 37 (left: 37)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 + 35 = 37 (left: 37) -> 37 + 2 = 39",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 9 - 8 = 1 (left: 7 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 9 - 8 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "2 35 "
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "5 5 11"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 5 / 5 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 5 / 5 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> Input: 3 3 9 -> 3 * 9 = 27 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps."
                }
            },
            "Step 8": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps. -> - 8 / 2 = 4 (left: 4 8 14)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 5 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 / 7 = 1 (left: 7 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 / 7 = 1 (left: 7 1) -> 7 + 1 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56) -> 56 / 9 = 6.2222 (left: 6.2222)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "7 7 11"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "5 5 11"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> Input: 3 3 9 -> 3 * 9 = 27 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "60"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 * 7 = 49 (left: 11 49) -> 11 + 49 = 60 (left: 60) -> There are no possible next steps for the input 60.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "It seems like there was an error in the input. Can you please provide the numbers or operations you would like to work with?"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "5 5 11"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> Input: 3 3 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> Input: 3 3 9 -> 3 * 9 = 27 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> Input: 3 3 9 -> 3 * 9 = 27 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2.2"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 11 / 5 = 2 (left: -> 11 / 5 = 2.2 (left: 2.2) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 5 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: -> 7 * 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "110"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 * 7 = 49 (left: 11 49)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 * 7 = 49 (left: 11 49) -> 11 + 49 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> Input: 3 3 9 -> 3 * 9 = 27 (left: 3 27) -> Input: 5 10 20",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> Input: 3 3 9 -> 3 * 9 = 27 (left: 3 27) -> Input: 5 10 20 -> 10 * 5 = 50 (left: 50 20)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 5 11"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 5 + 5 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 5 + 5 = 10 (left: 10 11) -> 10 / 11 = 0.9091 (left: 0.9091)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 - 8 = -1 (left: -1 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 - 8 = -1 (left: -1 9) -> -1 * 9 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "37 + 2 = 39"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "5 5 11"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 5 * 11 = 55 (left: 55)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 5 * 11 = 55 (left: 55) -> 55 + 2 = 57 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> Input: 3 3 9 -> 3 * 9 = 27 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4.45"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 * 7 = 49 (left: 49 11) -> 49 / 11 = 4.45 (left: 4.45) -> There are no possible next steps for the input 4.45 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> It seems like there was an error in the input. Can you please provide the numbers or operations you would like to work with?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "7 7 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 - 7 = 0 (left: 0 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 - 7 = 0 (left: 0 11) -> 5 + 3 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> Input: 3 3 9 -> 3 * 9 = 27 (left: 3 27) -> 3 * 3 = 9 (left: 9 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> Input: 3 3 9 -> 3 * 9 = 27 (left: 3 27) -> 3 * 3 = 9 (left: 9 27) -> 9 + 27 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "-1 56"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 2 35 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 * 9 = 72 (left: 7 72)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 * 9 = 72 (left: 7 72) -> 7 + 72 = 79 (left: 79)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "5 5 11"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 * 11 = 77 (left: 77)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 * 11 = 77 (left: 77) -> 77 + 2 = 79",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> Input: 3 3 9 -> 3 * 9 = 27 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4.45"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 * 7 = 49 (left: 49 11) -> 49 / 11 = 4.45 (left: 4.45) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> There are multiple possible next steps depending on the specific constraints or rules of the problem. Without additional context, it is not possible to determine the exact next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 - 8 = -1 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 - 8 = -1 (left: -> 7 * 8 = 56 (left: -1 56)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "5 5 11"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 5 + 5 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 5 + 5 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 27"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> Input: 3 3 9 -> 3 * 9 = 27 (left: 3 27) -> 4 + 12 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "4.45"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 * 7 = 49 (left: 49 11) -> 49 / 11 = 4.45 (left: 4.45) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (9 - 6) * (4 + 4) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (9 - 6) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> Input: 5 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> Input: 5 2 -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (9 - 6) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 14 / 9 = 1.5555555555555556 (left: 1.5555555555555556)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (9 - 6) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (9 - 6) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 9 = 15 (left: 6 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 9 = 15 (left: 6 15) -> 6 + 15 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (9 - 6) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (9 - 6) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9) -> 1.33 + 9 = 10.33 (left: 10.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (9 - 6) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 4 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 + 48 = 57 (left: 57)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (9 - 6) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 + 54 = 78 (left: 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (9 - 6) = 24"
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 + 12 = 18 (left: 18 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 + 12 = 18 (left: 18 19) -> 18 * 19 = 342 (left: 342)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> 25 - 2 = 23 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2.45454545455"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 1.227272727275"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 + 1.227272727275 = 3.227272727275 (left: 1.227272727275 3.227272727275)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 + 1.227272727275 = 3.227272727275 (left: 1.227272727275 3.227272727275) -> 3.227272",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "25"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1.227272727275 1"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 / 1.227272727275 = 1.63265306122 (left: 1.227272727275 1. -> 1.227272727275 / 1 = 1.227272727275 (left: 1.227272727275 1) -> 1.227272727275 + 1 = 2.227272727275 (left: 1 2.227272727275)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 / 1.227272727275 = 1.63265306122 (left: 1.227272727275 1. -> 1.227272727275 / 1 = 1.227272727275 (left: 1.227272727275 1) -> 1.227272727275 + 1 = 2.227272727275 (left: 1 2.227272727275) -> 1 / 2.227272727275 = 0.44897959183673 (left: 0.44897959183673 ",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> 25 - 2 = 23 (left: 2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 9 22"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67 22)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 1.227272727275"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 / 1.227272727275 = 1.63157894737 (left: 1.63157894737)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 12 19"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "72 19"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 - 19 = 53 (left: 53)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 - 19 = 53 (left: 53) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 12 54"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 12 54) -> 10 * 12 = 120 (left: 120 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 12 54) -> 10 * 12 = 120 (left: 120 54) -> 120 + 54 = 174 (left: 174)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> 25 + 2 = 27 (left: 2)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 12 19"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 + 12 = 18 (left: 18 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 1.227272727275"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 / 1.227272727275 = 1.63265306123 (left: 1.227272727275 1.63265306123)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 / 1.227272727275 = 1.63265306123 (left: 1.227272727275 1.63265306123) -> 1.227272727275 - 1.63265306123 = -0.405380333955 (left: -0.405380333955)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1.67"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1.227272727275 1"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 / 1.227272727275 = 1.63265306122 (left: 1.227272727275 1. -> 1.227272727275 / 1 = 1.227272727275 (left: 1.227272727275 1) -> 1.227272727275 - 1 = 0.227272727275 (left: 1)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1.67"
                }
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67) -> 3.67 - 2 = 1.67 (left: 1.67) -> There is only one number given (1.67), so there are no possible next steps to perform any operations with other numbers.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "9 12 16"
                }
            },
            "Step 1": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> 25 - 2 = 23 (left: 2)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "10 12 15"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> 10 * 12 = 120 (left: 15 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "9 12 16"
                }
            },
            "Step 5": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 12 / 9 = 1.33 (left: 1.33 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 12 / 9 = 1.33 (left: 1.33 16) -> 1.33 + 16 = 17.33 (left: 17.33)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "174"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "72 19"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 / 19 = 3.789 (left: 3.789)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 / 19 = 3.789 (left: 3.789) -> 3.789 + 2 = 5.789 (left: 2 3.789 5.789)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 / 6 = 3.67 (left: 3.67) -> 3.67 - 2 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> 25 + 2 = 27",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> 25 + 2 = 27 -> 25 / 2 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "10 12 15"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 1.227272727275"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 + 1.227272727275 = 3.227272727275 (left: 3.227272727275)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9 12 16"
                }
            },
            "Step 6": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 9 + 12 = 21 (left: 16 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1.227272727275 1"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 / 1.227272727275 = 1.63265306122 (left: 1.227272727275 1. -> 1.227272727275 / 1 = 1.227272727275 (left: 1.227272727275 1) -> Input: 5 10 15",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 / 1.227272727275 = 1.63265306122 (left: 1.227272727275 1. -> 1.227272727275 / 1 = 1.227272727275 (left: 1.227272727275 1) -> Input: 5 10 15 -> 15 - 10 = 5 (left:",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 9 = 13 (left: 6 13 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 9 = 13 (left: 6 13  -> 13 - 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> There are no possible next steps with just the number 25.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> There are no possible next steps with just the number 25. -> 25 / 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.67"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "12.5 8"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> 25 + 2 = 27 -> 25 / 2 = 12.5 (left: 12.5 8) -> 12.5 - 8 = 4.5 (left: 4.5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> 25 + 2 = 27 -> 25 / 2 = 12.5 (left: 12.5 8) -> 12.5 - 8 = 4.5 (left: 4.5 8) -> 8 / 4.5 = 1.77777777778 (left: 1.77777777778)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "174"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "72 19"
                }
            },
            "Step 7": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 + 19 = 91 (left: 91)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19) -> 72 + 19 = 91 (left: 91) -> 91 + 2 = 93",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 12 54)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 + 22 = 31 (left: 6 31)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 + 22 = 31 (left: 6 31) -> 6 * 31 = 186 (left: 186)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> 25 + 2 = 27",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> 25 + 2 = 27 -> 25 / 2 = 12.5 (left: 12.5 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 1.227272727275"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 + 1.227272727275 = 3.227272727275 (left: 3.227272727275)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "6 12 19"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1.227272727275 1"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 / 1.227272727275 = 1.63265306122 (left: 1.227272727275 1. -> 1.227272727275 / 1 = 1.227272727275 (left: 1.227272727275 1) -> 1 + 1.227272727",
                "Pruning": null
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 / 1.227272727275 = 1.63265306122 (left: 1.227272727275 1. -> 1.227272727275 / 1 = 1.227272727275 (left: 1.227272727275 1) -> 1 + 1.227272727 -> 1 - 1.227272727 = -0.227272727",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 + 6 = 16 (left: 9 12 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> 25 / 8 = 3.125 (left: 8)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2.4545454545454546"
                }
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.4545454545454546 (left: 2.4545454545454546) -> 2.4545454545454546 / 2 = 1.2272727272727273",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "12.5 8"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> 25 + 2 = 27 -> 25 / 2 = 12.5 (left: 12.5 8) -> 12.5 / 8 = 1.5625 (left: 1.5625 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> 25 + 2 = 27 -> 25 / 2 = 12.5 (left: 12.5 8) -> 12.5 / 8 = 1.5625 (left: 1.5625 8) -> Input: 5.12 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1.227272727275 1"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 / 1.227272727275 = 1.63265306122 (left: 1.227272727275 1. -> 1.227272727275 / 1 = 1.227272727275 (left: 1.227272727275 1) -> 1.227272727275 - 1 = 0.227272727275 (left: 1)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "2 * 1.227272727275 = 2.45454545455"
                }
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 * 1.227272727275 = 2.45454545455 -> 2 * 1.227272727275 = 2.45454545455 -> 2.45454545455 + 1.227272727275 = 3.681818181825 (left: 1.227272727275 3.681818181825)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19) -> 18 / 19 = 0.9473684210526315 (left: 0.9473684210526315)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> There are no possible next steps with just the number 25.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> There are no possible next steps with just the number 25. -> 25 - 25 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9 12 16"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 1.227272727275"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 / 1.227272727275 = 1.63265306122 (left: 1.227272727275 1.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 / 1.227272727275 = 1.63265306122 (left: 1.227272727275 1. -> 1.227272727275 / 1 = 1.227272727275 (left: 1.227272727275 1)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1.227272727275 1"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 / 1.227272727275 = 1.63265306122 (left: 1.227272727275 1. -> 1.227272727275 / 1 = 1.227272727275 (left: 1.227272727275 1) -> 1.227272727275 / 1 = 1.227272727275 (left: 1.227272727275)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9 12 16"
                }
            },
            "Step 8": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 16 / 9 = ",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.4545454545454546 (left: 2.4545454545454546)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 2)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "9 12 16"
                }
            },
            "Step 4": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 1.227272727275"
                }
            },
            "Step 5": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 * 1.227272727275 = 2.45454545455",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 * 1.227272727275 = 2.45454545455 -> 2 * 1.227272727275 = 2.45454545455",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1.227272727275 1"
                }
            },
            "Step 7": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 9 * 6 = 54 (left: 54 22) -> 54 / 22 = 2.45454545455 (left: 2.45454545455) -> 2.45454545455 / 2 = 1.227272727275 (left: 2 1.227272727275) -> 2 / 1.227272727275 = 1.63265306122 (left: 1.227272727275 1. -> 1.227272727275 / 1 = 1.227272727275 (left: 1.227272727275 1) -> 1.227272727275 / 1 = 1.227272727275 (left: 1)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "Input: 5.12 8"
                }
            },
            "Step 8": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 22 - 6 = 16 (left: 16 9) -> 16 + 9 = 25 (left: 25) -> 25 + 2 = 27 -> 25 / 2 = 12.5 (left: 12.5 8) -> 12.5 / 8 = 1.5625 (left: 1.5625 8) -> Input: 5.12 8 -> 5.12 * 8 = 40.96 (left: 40.96)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "3 16"
                }
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 9 12 18) -> 9 + 12 = 21 (left: 18 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 + 35.91 = 62.91 (left: 62.91)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 18 12"
                }
            },
            "Step 4": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 12 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 12 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 12 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 3 * 9 = 27 (left: 27 27) -> 27 + 27 = 54 (left: 54)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as there is no input provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 * 9 = 108 (left: 108 27) -> 27 + 108 = 135 (left: 108 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 * 35.91 = 971.57 (left: 971.57)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 - 9 = 3 (left: 6 3) -> 6 / 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 12 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 12 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 * 8 = 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 + 96 = 104 (left: 8 104)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 + 96 = 104 (left: 8 104) -> 8 * 13 = 104 (left: 13)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input 48."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 / 35.91 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "48"
                }
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 + 27 = 48 (left: 48) -> There are no possible next steps with the input 48.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> None.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> None. -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 + 96 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps as there is no input given."
                }
            },
            "Step 8": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 12 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input given. -> There are no possible next steps as there is no input given.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 - 9 = 3 (left: 6 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 - 9 = 3 (left: 6 3) -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 - 35.91 = -8.91 (left: -8.91)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "0"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> Input: 1.5 -> 1.5 - 1.5 = 0 (left: 0) -> There are no possible next steps as the input is 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.5 9"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 9  -> 9 / 6 = 1.5 (left: 1.5 9) -> 9 / 1.5 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 9  -> 9 / 6 = 1.5 (left: 1.5 9) -> 9 / 1.5 = 6 (left: 6 9) -> Input: 3 7 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 8 88)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 8 88) -> 8 / 88 = 0.0909 (left: 0.0909)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "There are no possible next steps as there is no input provided."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 * 12 = 180 (left: 180)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 - 35.91 = -8.91 (left: -8.91)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "15.96"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 9 = 1.33 (left: 1.33 12) -> 1.33 * 12 = 15.96 (left: 15.96) -> 15 + 9.6 = 24.6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 12 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 12 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 - 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "15.96"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 / 96 = 0.08333333 (left: 8 0.08333333)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 / 96 = 0.08333333 (left: 8 0.08333333) -> 8 / 0.08333333 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "12 * 8 = 96"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 + 27 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 * 35.91 = 971.57 (left: 971.57)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 9 "
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 9  -> 9 / 6 = 1.5 (left: 1.5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 + 0 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 + 0 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "180"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 + 96 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "12 * 8 = 96"
                }
            },
            "Step 8": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 12 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 * 8 = 96 -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input 48."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> Input: 1.5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> Input: 1.5 -> 1.5 - 1.5 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 * 35.91 = 971.57 (left: 971.57)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "0"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> Input: 1.5 -> 1.5 - 1.5 = 0 (left: 0) -> No possible next steps as the input is 0 and there are no numbers to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "27"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 8 88)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 8 88) -> 88 + 8 = 96 (left: 8 96)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 + 12 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 / 35.91 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "9 9 12"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 8 88)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 - 8 = 88 (left: 8 88) -> 88 - 8 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "No possible next steps as the input is 0 and there are no numbers to work with."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 - 12 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 + 35.91 = 62.91 (left: 62.91)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 12 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 12 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 96 / 8 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps as there is no input given."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 9 = 1.33 (left: 1.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 9 = 1.33 (left: 1.33 12) -> 1.33 * 12 = 15.96 (left: 15.96)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "27 35.91"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 1.33 * 27 = 35.91 (left: 27 35.91) -> 27 - 35.91 = -8.91 (left: -8.91)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "6 9 "
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 9  -> Input: 7 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 6"
                }
            },
            "Step 5": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 12 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 18 - 12 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "8 96"
                }
            },
            "Step 7": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 - 9 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 * 8 = 96 (left: 8 96) -> 8 + 96 = 104 (left: 104)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "27"
                }
            },
            "Step 8": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 + 12 = 27 (left: 27) -> 27 + 9 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "No possible next steps as the input is 0 and there are no numbers to work with."
                }
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 - 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> There are no possible next steps for the number 144 as it is already a single number.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> There are no possible next steps for the number 144 as it is already a single number. -> There are no possible next steps for the number 144 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 6 * 2 = 12 (left: 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 6 * 2 = 12 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 * 144 = 3456 (left: 3456)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 6 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Input: 1 1 1 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Input: 1 1 1 6 -> 6 / 1 = 6 (left: 1 1 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> 144 / 2 = 72",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> 144 / 2 = 72 -> 144 / 72 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 - 12 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 - 12 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 6 12"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 - 5 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 - 5 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> There is only one possible step:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> There is only one possible step: -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 - 12 = 12 (left: 12 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 - 12 = 12 (left: 12 24) -> 24 / 12 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 12 = 72 (left: 5 72) -> 5 * 72 = 360 (left: 360)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1 1 6"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Input: 1 1 1 6 -> 6 / 1 = 6 (left: 1 1 6) -> 6 / 1 = 6 (left: 1 6)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Input: 1 1 1 6 -> 6 / 1 = 6 (left: 1 1 6) -> 6 / 1 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 15 / 12 = 1.25 (left: 1.25 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24) -> 0 + 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "4"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 - 8 = -6.5 (left: -6.5)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "11 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> There is only one number given (144), so there are no possible next steps to take with additional numbers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> There is only one number given (144), so there are no possible next steps to take with additional numbers. -> No possible next steps with only one number given.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 + 144 = 168 (left: 168)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.25 15"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Input: 1 12 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Input: 1 12 6 -> 12 / 6 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> There is only one possible next step with one number provided.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> There is only one possible next step with one number provided. -> 8 + 8 = 16 (left: 2 16)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 24 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 24 1) -> 24 * 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "12 + 12 = 24"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 5 = 30 (left: 30 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 5 = 30 (left: 30 12) -> 30 / 12 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> The number 144 is already the only number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> The number 144 is already the only number, so there are no possible next steps. -> N/A",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 1 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "16"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> No possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> No possible next steps as there is only one number given. -> Provide more numbers to perform arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 24 - 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "5 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 144)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "5 6 12"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> 4 / 4 = 1 (left: 1 144)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> 4 / 4 = 1 (left: 1 144) -> 144 - 1 = 143 (left: 143)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 24 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "16"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "1.25 15"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "144"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> There are no possible next steps for the number 144 as it is already a single number and cannot be combined with other numbers.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 12 = 72 (left: 72) -> 72 * 2 = 144 (left: 144) -> There are no possible next steps for the number 144 as it is already a single number and cannot be combined with other numbers. -> There are no possible next steps for the number 144 as it is already a single number and cannot be combined with other numbers.",
                "Pruning": null
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 - 4 = 1 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "3 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6) -> 6 / 2 = 3 (left: 3 6) -> 6 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 4 1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 + 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 + 2 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "14 + 14 = 28"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> 14 + 14 = 28 -> 14 / 14 = 1 (left: 28 1)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 10 * 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 - 4 = 1 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 3 2)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "14"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "0.5 2"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2) -> 3 / 2 = 1.5 (left: 2 1.5 2) -> 2 - 1.5 = 0.5 (left: 0.5 2) -> 0.5 + 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "48 + 8 ="
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "9"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 3 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1.33 2"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2) -> 3 / 2 = 1.5 (left: 2 1.5 2) -> 2 / 1.5 = 1.33 (left: 1.33 2) -> 1.33 + 2 = 3.33 (left: 3.33)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "14 + 14 = 28"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2) -> 3 / 2 = 1.5 (left: 2 1.5 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 - 4 = 1 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "3 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6) -> 6 / 2 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 5 6"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.33 2"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2) -> 3 / 2 = 1.5 (left: 2 1.5 2) -> 2 / 1.5 = 1.33 (left: 1.33 2) -> 1.33 * 2 = 2.66 (left: 2.66)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 4 1"
                }
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "3 6"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6) -> 6 / 2 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "14 + 14 = 28"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 3 * 5 = 15 (left: 15 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 3 * 5 = 15 (left: 15 7) -> 15 / 7 = 2.142857142857143 (left: 2.142857142857143)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "4 4 5"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 + 6 = 7 (left: 7)  -> 7 * 8 = 56 (left: 7 56)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "0.5 2"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2) -> 3 / 2 = 1.5 (left: 2 1.5 2) -> 2 - 1.5 = 0.5 (left: 0.5 2) -> 2 - 0.5 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "48 + 8 ="
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 3 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 + 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2 1.5 2"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2) -> 3 / 2 = 1.5 (left: 2 1.5 2) -> 2 / 1.5 = 1.33 (left: 1.33 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "15 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 4 = 6 ",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "14"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 * 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 + 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "48 + 8 ="
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 - 4 = 1 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "2 4 1"
                }
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "3 6"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 * 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "It seems like there was an error in the input. Can you please provide the correct input for me to generate the possible next steps?"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> Possible -> It seems like there was an error in the input. Can you please provide the correct input for me to generate the possible next steps? -> I'm sorry for the confusion. Please provide the correct input for me to generate the possible next steps.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 5"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 - 4 = 1 (left: 2 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 - 4 = 1 (left: 2 1) -> 2 + 1 = 3 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 - 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "1"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> Possible",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> Possible -> It seems like there was an error in the input. Can you please provide the correct input for me to generate the possible next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "48 + 8 ="
                }
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 48 + 8 = -> 48 + 8 = 56",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 3"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 5) -> 5 - 4 = 1 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 3 / 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "2 1.5 2"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2) -> 3 / 2 = 1.5 (left: 2 1.5 2) -> 2 - 1.5 = 0.5 (left: 0.5 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 48 + 8 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8"
                }
            },
            "Step 7": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 2 + 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8"
                }
            },
            "Step 8": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 2 + 4 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 2"
                }
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Possible next steps: -> There are no possible next steps with the current input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 40"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 4 10) -> 4 * 10 = 40 (left: 8 40) -> 40 / 8 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 4 10) -> 4 * 10 = 40 (left: 8 40) -> 40 / 8 = 5 (left: 5) -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1.6666666666666667 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 10 - 1.6666666666666667 = 8.333333333333334 (left: 8.333333333333334 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 10 - 1.6666666666666667 = 8.333333333333334 (left: 8.333333333333334 10) -> 8.333333333333334 * 10 = 83.33333333333334 (left: 83.33333333333334)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "5 12.5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 + 2.5 = 12.5 (left: 2.5 12.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 * 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "2 4 10"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "5 12.5"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 + 2.5 = 12.5 (left: 2.5 12.5) -> 12.5 / 2.5 = 5 (left: 5 12.5) -> 5 + 12.5 = 17.5 (left: 17.5)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "2 4 10"
                }
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1.6666666666666667 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 10 / 1.6666666666666667 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 10 / 1.6666666666666667 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input of 60."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 + 10 = 12.4 (left: 12.4)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "8 4 10"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 8 4 10) -> 4 * 10 = 40 (left: 8 40)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> No possible next steps as there are no more numbers to operate on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1.6666666666666667 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 1.6666666666666667 * 10 = 16.666666666666668 (left: 10 16.666666666666668)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 1.6666666666666667 * 10 = 16.666666666666668 (left: 10 16.666666666666668) -> 10 * 1.6666666666666667 = 16.666666666666668 (left: 10 16.666666666666668)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 * 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2.4 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 - 2.4 = 7.6 (left: 7.6)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60) -> There are no possible next steps with the input of 60.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1.6666666666666667 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 10 - 1.6666666666666667 = 8.333333333333334 (left: 8.333333333333334 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 10 - 1.6666666666666667 = 8.333333333333334 (left: 8.333333333333334 10) -> 8.333333333333334 - 10 = -1.666666666666666 (left: -1.666666666666666 10)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 + 16 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1.6666666666666667 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 10 / 1.6666666666666667 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 10 / 1.6666666666666667 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps with the input of 60."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 4 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 + 10 = 12.4 (left: 10)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 + 4 = 14 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 40"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 4 10) -> 4 * 10 = 40 (left: 8 40) -> 8 * 5 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 4 10) -> 4 * 10 = 40 (left: 8 40) -> 8 * 5 = 40 (left: 40) -> There are no possible next steps with the input 40.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1.6666666666666667 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 10 - 1.6666666666666667 =",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 10 - 1.6666666666666667 = -> 10 - 1.6666666666666667 = 8.333333333333333",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 - 2.4 = 7.6 (left: 7.6)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 4 6"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 2 4 6) -> Input: 3 9 5 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 40"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 4 10) -> 4 * 10 = 40 (left: 8 40) -> 8 * 5 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 4 10) -> 4 * 10 = 40 (left: 8 40) -> 8 * 5 = 40 (left: 40) -> There are no possible next steps with the input of just one number (40).",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1.6666666666666667 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 1.6666666666666667 * 10 = 16.666666666666668 (left: 16.666666666666668)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps with the input of just one number (40"
                }
            },
            "Step 8": {
                "Step": "4 * 2 = 8 (left: 8 4 10) -> 4 * 10 = 40 (left: 8 40) -> 8 * 5 = 40 (left: 40) -> There are no possible next steps with the input of just one number (40). -> None",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the current input."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 + 10 = 12.4 (left: 12.4)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2.5 12.5"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 + 2.5 = 12.5 (left: 2.5 12.5) -> 12.5 / 2.5 = 5 (left: 5 12.5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10) -> 4 +",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10) -> 4 + -> 4 + 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1.6666666666666667 10"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1.6666666666666667 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 1.6666666666666667 * 10 = 16.666666666666668 (left: 16.666666666666668)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "16 + 16 = 32"
                }
            },
            "Step 8": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16) -> 16 + 16 = 32 -> 16 / 16 = 1 (left: 1 32)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 * 10 = 240 (left: 10 240)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.16666666667 (left: 4.16666666667)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "8 4 10"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 8 4 10) -> 10 / 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "5 12.5"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 + 2.5 = 12.5 (left: 2.5 12.5) -> 12.5 / 2.5 = 5 (left: 5 12.5) -> 5 + 7.5 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "20"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20) -> None - there are no more numbers to operate on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1.6666666666666667 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 10 - 1.6666666666666667 = 8.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 10 - 1.6666666666666667 = 8. -> 10 / 1.6666666666666667 = 6",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 + 10 = 12.4 (left: 12.4)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "4"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 10"
                }
            },
            "Step 5": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10) -> 4 + 4 = 8 (left: 4 8 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 + 2 = 6 (left: 6 10) -> 4 + 4 = 8 (left: 4 8 4) -> 4 - 4 = 0 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "1.6666666666666667 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 1.6666666666666667 + 10 = 11.666666666666668 (left: 10 11.666666666666668)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10) -> 1.6666666666666667 + 10 = 11.666666666666668 (left: 10 11.666666666666668) -> 10 * 11.666666666666668 = 116.66666666666666 (left: 116.66666666666666)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps with just the number 5."
                }
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 * 9 = 27 (left: 4 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 * 9 = 27 (left: 4 27) -> 27 - 4 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 * 3 - 3) * 4 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.33 3 3"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3) -> 3 - 1.33 = 1.67 (left: 1.67 3) -> 1.67 * 3 = 5.01 (left: 3 5.01)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 * 3) * (4 - 3) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 * 3) * (4 - 3) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 3 3 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 * 3 - 3) * 4 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 3 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 3 7"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 3 + 3 = 6 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 3 3 7) -> 3 + 3 = 6 (left: 6 7) -> 6 - 7 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 * 3 - 3) * 4 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 - 3 = 0 (left: 0 3 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 * 3 - 3) * 4 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 * (3 - 3)) * 4 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left: -> 9 - 3 = 6 (left",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 * 3 - 3) * 4 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 3 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 3 4"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 * 3 - 3) * 4 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 3 9 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 + 1 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 * 3 - 3) * 4 = 24"
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 26 + 8 = 34 (left: )",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "18"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 - 2 = 16 (left: 8)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 2 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> There are no possible next steps with the input 10.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 7 21"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 7 * 3 = 21 -> 7 * 3 = 21 (left: 3 7 21) -> 21 - 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 15"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "8 15"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 7 21"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 7 * 3 = 21 -> 7 * 3 = 21 (left: 3 7 21) -> 7 - 3 = 4 (left: 4 21)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 7 * 3 = 21 -> 7 * 3 = 21 (left: 3 7 21) -> 7 - 3 = 4 (left: 4 21) -> 21 / 4 = 5.25 (left: 5.25)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 * 8 = 144 (left: 8)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 4 7"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There are no possible next steps with the input of 2.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 7 21"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 7 * 3 = 21 -> 7 * 3 = 21 (left: 3 7 21) -> 21 / 7 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "None - final result reached."
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> None - final result reached. -> None - final result reached. -> None - final result reached.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 4 7"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Input: 6 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 7 21"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 7 * 3 = 21 -> 7 * 3 = 21 (left: 3 7 21) -> Input: 4 5 6 7",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 7 * 3 = 21 -> 7 * 3 = 21 (left: 3 7 21) -> Input: 4 5 6 7 -> 5 * 6 = 30 (left: 4 7 30)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Possible -> It seems like there was an error in the input. Please provide a valid set of numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 / 2 = 9 -> 18 - 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "1.25"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> Possible next steps: -> There are no possible next steps given the input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 7 21"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 7 * 3 = 21 -> 7 * 3 = 21 (left: 3 7 21) -> 21 / 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> Input: 3 5 -> 5 - 3 = 2 (left: 2) -> 2 * 2 = 4 (left: 4 4)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = 2.5 (left: 2.5 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = 2.5 (left: 2.5 2) -> 2.5 / 2 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> None - final result reached.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> None - final result reached. -> None - final result reached.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 7 21"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 7 * 3 = 21 -> 7 * 3 = 21 (left: 3 7 21) -> 21 - 3 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "It seems like there was an error in the input. Please provide a valid set of numbers to continue finding possible next steps."
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Possible -> It seems like there was an error in the input. Please provide a valid set of numbers to continue finding possible next steps. -> Please provide a valid set of numbers to continue finding possible next steps.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 2 2 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 2) * (2 + 7) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "2 2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> Input: 3 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> Input: 3 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> Input: 3 5 -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 7 21"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 7 * 3 = 21 -> 7 * 3 = 21 (left: 3 7 21) -> 3 + 7 = 10 (left: 10 21)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 7 * 3 = 21 -> 7 * 3 = 21 (left: 3 7 21) -> 3 + 7 = 10 (left: 10 21) -> 10 * 21 = 210 (left: 210)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "There are no possible next steps given the input provided."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 - 2 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> There are no possible next steps with the number 18. The input is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> There are no possible next steps with the number 18. The input is already a single number. -> No possible next steps with the number 18. The input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 7 21"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 7 * 3 = 21 -> 7 * 3 = 21 (left: 3 7 21) -> 7 + 3 = 10 (left: 10 21",
                "Pruning": null
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 7 * 3 = 21 -> 7 * 3 = 21 (left: 3 7 21) -> 7 + 3 = 10 (left: 10 21 -> 10 + 21 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "None, as there is only one number left."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 4 = 3 (left: 2 3) -> Input: 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (7 - 2) * (2 + 2) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 4 7"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Input: 8 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 7 * 3 = 21",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 7 * 3 = 21 -> 7 * 3 = 21 (left: 3 7 21)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 7 21"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 7 * 3 = 21 -> 7 * 3 = 21 (left: 3 7 21) -> 7 * 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> Input: 3 5 -> 5 - 3 = 2 (left: 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 4 - 2 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 4 - 2 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 / 8 = 2.25 (not a whole number)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 3 + 6 = 9 ( -> 6 * 3 = 18 (left: 18) -> 18 / 8 = 2.25 (not a whole number) -> - 18 + 8 = 26 (left: 8 26)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 4 * 2 = 8 (left: 8 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 4 * 2 = 8 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "3 7 21"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 7 * 3 = 21 -> 7 * 3 = 21 (left: 3 7 21) -> 7 * 3 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "None, as there is only one number left."
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 7 - 2 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one possible next step: 6 * 6 = 36",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one possible next step: 6 * 6 = 36 -> There is only one possible next step: 6 * 6 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "10 11 13"
                }
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "-8 21"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 - 21 = -8 (left: -8 21) -> -8 + 21 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "36"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None - the input is a single number and there are no other numbers to perform operations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None - the input is a single number and there are no other numbers to perform operations with. -> There are no possible next steps since there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 3 * 11 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "-8 21"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 - 21 = -8 (left: -8 21) -> 21 - (-8) = 29 (left: 29)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Input: 5"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one number given in the input, so there are no possible next steps to calculate. -> Input: 5 -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "5 - 3 = "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with only one number given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with only one number given. -> Please provide more than one number for calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "-8 21"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 - 21 = -8 (left: -8 21) -> -8 * 21 = -168 (left: -168)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps as there is only one number provided."
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the input 36.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the input 36. -> There are no possible next steps for the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with only the number 36.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with only the number 36. -> None",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps for the input 36."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "-8 21"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 - 21 = -8 (left: -8 21) -> -8 - 21 = -29 (left: -29)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "Cannot perform any operations with only one number."
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number given. -> Cannot perform any operations with only one number. -> 3 * 5 = 15 (left: 7 15)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 + 21 = 34 (left: 34)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "-8 21"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 - 21 = -8 (left: -8 21) -> -8 * 21 = -168 (left: -168)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Input: 5"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one number given in the input, so there are no possible next steps to calculate. -> Input: 5 -> 20 - 10 = 10",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 7 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps as there are no other numbers given to perform operations with. -> N/A",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "10 11 13"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 - 21 = -8 (left: -8 21)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "-8 21"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 - 21 = -8 (left: -8 21) -> -8 - 21 = -29 (left: -29)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "38 / 2 = 19"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 36 + 2 = 38 (left: 38 / 2 = 19) -> 38 / 2 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps since there are no other numbers to perform operations with."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 - 6 = 30 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 - 6 = 30 (left -> 36 * 6 = 216 (left: 216)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 18 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "Cannot perform any operations with only one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "-8 21"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 - 21 = -8 (left: -8 21) -> -8 + 21 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "36"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 * 2 = 72",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 - 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number given. -> Cannot perform any operations with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one number, so there are no possible next steps. -> There are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "-8 21"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 - 21 = -8 (left: -8 21) -> -8 + 21 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "5 - 3 = "
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 - 3 =  -> 5 - 3 = 2",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 6 + 12 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 6 + 12 = 18 (left: 12 18) -> 12 * 18 = 216 (left: 216)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 36 + 2 = 38 (left: 38 / 2 = 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps. -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "-8 21"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 - 21 = -8 (left: -8 21) -> 21 - (-8) = 29 (left: 29)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "33"
                }
            },
            "Step 8": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11) -> 3 * 11 = 33 (left: 33) -> 33 + 2 = 35",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 4 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 3 + 5 = 8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 3 + 5 = 8 ( -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one number given in the input, so there are no possible next steps to calculate.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one number given in the input, so there are no possible next steps to calculate. -> Input: 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the input 36 as there are no other numbers provided for calculations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the input 36 as there are no other numbers provided for calculations. -> There are no possible next steps for the input 36 as there are no other numbers provided for calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "-8 21"
                }
            },
            "Step 7": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 10 + 11 = 21 (left: 13 21) -> 13 - 21 = -8 (left: -8 21) -> -8 + 21 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "36 / 2 = 18"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps. -> 36 / 2 = 18 -> Possible next steps:",
                "Pruning": null
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1 1.28571428571)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 / 7 = 1.28571428571 (left: 1 1.28571428571) -> 1 + 1.28571428571 = 2.28571428571 (left: 2.28571428571)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "10 11 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 * 10 = 110 (left: 110 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 5 7"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 7 / 3 = 2 (left: 5 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 7 / 3 = 2 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 3"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "3"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "Please provide at least two numbers to calculate possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1.74603"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 5 7"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> Possible",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Please provide at least two numbers to calculate possible next steps."
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with only one number. -> Please provide at least two numbers to calculate possible next steps. -> Please provide at least two numbers to calculate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 3 / 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "0.8555555556"
                }
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 7 * 11 = 77 (left: 77 90) -> 77 / 90 = 0.8555555556 (left: 0.8555555556) -> 0.8555555556 + 2 = 2.8555555556",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 + 9 = 16 (left: 1 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 + 9 = 16 (left: 1 16) -> 1 - 16 = -15 (left: -15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with only one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with only one number. -> Please provide at least two numbers to calculate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 5 7"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 7 / 3 = 2 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 7 / 3 = 2 (left: -> 7 + 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "11 23.857142857142857"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "-3"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 - 9 = -2 (left: -2 1) -> -2 - 1 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 7 9 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 5 7"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 7 - 5 = 2 (left: 3 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 7 - 5 = 2 (left: 3 2) -> 3 * 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "110 63"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with just one number provided. More numbers are needed to perform arithmetic operations."
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number provided. More numbers are needed to perform arithmetic operations. -> Provide more numbers to continue with arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 9 1"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 - 9 = -2 (left: -2 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 - 9 = -2 (left: -2 1) -> -2 - 1 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number provided. More numbers are needed to perform arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 5 7"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 7 / 3 = 2 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 7 / 3 = 2 (left: -> 7 + 3 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "1463"
                }
            },
            "Step 8": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 11 * 7 = 77 (left: 77 19) -> 77 * 19 = 1463 (left: 1463) -> 7 * ",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 7 * 11 = 77 (left: 77 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 7 * 11 = 77 (left: 77 90) -> 77 / 90 = 0.8555555556 (left: 0.8555555556)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with the input of 3. -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 5 7"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 5 - 7 = -2 (left: 3 -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 5 - 7 = -2 (left: 3 -2) -> 3 - 2 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There are no possible next steps as the input is invalid."
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 - 9 = -2 (left: -2 1) -> -2 - 1 = -3 (left: -3) -> There are no possible next steps as the input is invalid. -> Input not provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 - 7 = 4 (left: 4 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 - 7 = 4 (left: 4 11 90) -> 4 * 11 = 44 (left: 44 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1.74603"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 10 = 6.3 (left: 6.3 11) -> 11 / 6.3 = 1.74603 (left: 1.74603) -> 1.74603 - 2 = -0.25397",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 5 7"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 5 + 7 = 12 (left: 3 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 5 + 7 = 12 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There are no possible next steps as the input is invalid."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 + 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "-3"
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 - 9 = -2 (left: -2 1) -> -2 - 1 = -3 (left: -3) -> -3 - 2 = -5 (left: 2)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "Provide at least two numbers to perform mathematical operations."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 11 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 11 * 7 = 77 (left: 77 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 11 * 7 = 77 (left: 77 19) -> 77 * 19 = 1463 (left: 1463)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There is only one possible next step: -> 8 / 2 = 4 (left: 4 8 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 5 7"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 3 / 5 = 0.6 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 3 / 5 = 0.6 ( -> 3 * 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Please provide at least two numbers to calculate possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 - 3 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "Please provide at least two numbers to calculate possible next steps."
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with only one number. -> Please provide at least two numbers to calculate possible next steps. -> Please provide at least two numbers to calculate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 10 = 6.3 (left: 6.3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 / 10 = 6.3 (left: 6.3 11) -> 11 / 6.3 = 1.74603 (left: 1.74603)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number provided. You need at least two numbers to perform mathematical operations.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number provided. You need at least two numbers to perform mathematical operations. -> Provide at least two numbers to perform mathematical operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 5 7"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 7 - 5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 7 - 5 = 2 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "Provide at least two numbers to perform mathematical operations."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "11 23.857142857142857"
                }
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857) -> 11 - 23.857142857142857 = -12.857142857142857 (left:",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 7 9 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> 3 - 3 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "-3"
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 - 9 = -2 (left: -2 1) -> -2 - 1 = -3 (left: -3) -> There are no possible next steps as the input is invalid.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 5 7"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 3 + 5 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 + 1 = 10 (left: 7 10) -> 10 - 7 = 3 (left: 3) -> There are no possible next steps with just one number. -> 10 - 5 = 5 (left: 3 5 7) -> 3 + 5 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "11 23.857142857142857"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "1 3"
                }
            },
            "Step 7": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 9 - 7 = 2 (left: 2 1) -> 2 + 1 = 3 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "There are no possible next steps as the input is invalid."
                }
            },
            "Step 8": {
                "Step": "11 - 10 = 1 (left: 7 9 1) -> 7 - 9 = -2 (left: -2 1) -> -2 - 1 = -3 (left: -3) -> There are no possible next steps as the input is invalid. -> Input is invalid. Please provide a valid input with at least two numbers separated by spaces.",
                "Pruning": null
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 * 5 = 35 (left: 5 35) -> 35 - 5 = 30 (left: 30) -> There are no possible next steps as there are no other numbers given to perform operations on.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 * 5 = 35 (left: 5 35) -> 35 - 5 = 30 (left: 30) -> There are no possible next steps as there are no other numbers given to perform operations on. -> N/A",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 5 7"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 + 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 + 4 = 5 (left: 5 6) -> 5 / 6 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (4 + (7 - 1)) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "70"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 / 2 = 35",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 / 2 = 35 -> 70 + 2 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 7"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (4 * (7 - 1)) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 / 1 = 4 (left: 4 6) -> Possible next steps: -> There are no possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "70"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 / 2 = 35",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 / 2 = 35 -> 2 - 70 = -68 (left: -68)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "0.8"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + (7 - 5)) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "17"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 7 = 12 (left: 5 12) -> 5 + 12 = 17 (left: 17) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7.5"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 7.5 + 8 = 15.5 (left: 8 15.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5) -> 7.5 + 8 = 15.5 (left: 8 15.5) -> 8 - 15.5 = -7.5 (left: -7.5)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "1 4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 / 1 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 / 1 = 4 (left: 4 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - 1) * 5 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "0.6666666666666666 / 0.6666666666666666 = 1"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5) -> 1 / 1.5 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 / 0.6666666666666666 = 1 -> None, as the result is already calculated as 1.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 7 = 12 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 7 = 12 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "70"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 / 2 = 35",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> 70 / 2 = 35 -> 70 + 2 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "175"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + (7 - 5)) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "10"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 * 4 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5) -> 1 / 1.5 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "0.6666666666666666"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5) -> 1 / 1.5 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 / 0.6666666666666666 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> Input: 3 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> Input: 3 9 -> 5 + 7 = 12 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 1) * (7 - 5) = 24",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "1 12"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> Input: 3 9 -> 5 + 7 = 12 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with just the number 70 given as input."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 1 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 * 5 = 35 (left: 5 35)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 * 5 = 35 (left: 5 35) -> 35 - 5 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "70"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> There are no possible next steps with just the number 70 given as input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> There are no possible next steps with just the number 70 given as input. -> There are no possible next steps with just the number 70 given as input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 1) * (7 - 5) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "There are no possible next steps with just the number 70 given as input."
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70) -> There are no possible next steps with just the number 70 given as input. -> There are no possible next steps with just the number 70 given as input. -> There are no possible next steps with just the number 70 given as input.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 * 5 = 35 (left: 5 35) -> 35 - 5 = 30 (left: 30) -> 30 * 2 = 60 (left: 2)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1.42857142857"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> There is only one number given, so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 + 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 + 4 = 5 (left: 5 6) -> 5 - 6 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (4 * (7 - 1)) = 24",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "-1"
                }
            },
            "Step 8": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 + 4 = 5 (left: 5 6) -> 5 - 6 = -1 (left: -1) -> Invalid input. Please enter a valid mathematical operation.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.42857142857"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857) -> 1.42857142857 * 2 = 2.85714285714 (left: 2.85714285714)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "5 5 7"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 7 = 12 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (1 + (7 - 5)) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "175"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 7 * 25 = 175 (left: 175) -> 175 / 5 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There is only one number given, so there are no possible next steps to calculate."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 7 * 25 = 175 (left: 175)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "175"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25) -> 7 * 25 = 175 (left: 175) -> 175 - 1 = 174 (left: none)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 5 7"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 * 5 = 25 (left: 7 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 + 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 + 4 = 5 (left: 5 6) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 * 1 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (4 * 1) * (7 - 5) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "30"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 * 5 = 35 (left: 5 35) -> 35 - 5 = 30 (left: 30) -> 30 - 8 = 22 (left: 8)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There is only one number given, so there are no possible next steps to calculate."
                }
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: ((9 - 4) * 3) + 9 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * (9 - 4)) + 9 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 / 12 = 1.0833333333333333 (left: 1.0833333333333333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 4.67"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 - 4.67 = -1.67 (left: -1.67)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (9 + (3 * 4)) + 9 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 * 9 = 54 (left: 4 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 * 9 = 54 (left: 4 54) -> 4 * 54 = 216 (left: 216)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (9 + (3 * 5)) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (9 + (3 * (9 - 4))) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 4.67"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 + 9 = 14 (left: 3 14) -> 14 / 3 = 4.67 (left: 3 4.67) -> 3 + 4.67 = 7.67 (left: 7.67)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 / 3 = 1.6666666666666667 (left: 1.666666666666666",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 5 / 3 = 1.6666666666666667 (left: 1.666666666666666 -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (9 + (3 * 5)) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 9 9"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 16) -> 9 + 16 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (9 + (3 * (9 - 4))) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 * 5 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (9 + (3 * 5)) = 24"
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 - 8) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "No further calculations can be done with the number 15 alone."
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 18 - 3 = 15 (left: 15) -> No further calculations can be done with the number 15 alone. -> No further calculations can be done with the number 15 alone.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 6 8"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 * 6 = 36 (left: 8 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 * 6 = 36 (left: 8 36) -> 36 - 8 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.33333 4.5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 = 4.5 -> 6 / 4.5 = 1.33333 (left: 1.33333 4.5) -> 1.33333 * 4.5 = 5.999985 (left: 5.999985)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "28"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 * 6 = 36 (left: 8 36) -> 36 - 8 = 28 (left: 28) -> None, as there is only one number in the input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 8"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 * 6 = 36 (left: 8 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 1.33333"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 - 1.33333 = 4.66667 (left: 4.66667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 - 1.33333 = 4.66667 (left: 4.66667) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.33333 4.5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 = 4.5 -> 6 / 4.5 = 1.33333 (left: 1.33333 4.5) -> 4.5 - 1.33333 = 3.16667 (left: 3.16667)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "28"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 * 6 = 36 (left: 8 36) -> 36 - 8 = 28 (left: 28) -> None, as there is only one number in the input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 6 8"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 + 6 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 + 6 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.33333 4.5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 = 4.5 -> 6 / 4.5 = 1.33333 (left: 1.33333 4.5) -> 1.33333 + 4.5 = 5.83333 (left: 5.83333)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps with the input of 4.5."
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 \u2248 4.5 (left: 4.5) -> There are no possible next steps with the input of 4.5. -> There are no possible next steps with the input of 4.5.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (3 * 6)) - 8 = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 6 2"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 3 6 2) -> 6 / 2 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 6 8"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 + 6 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 + 6 = 12 (left: 8 12) -> 12 / 8 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.33333 4.5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 = 4.5 -> 6 / 4.5 = 1.33333 (left: 1.33333 4.5) -> 1.33333 + 4.5 = 5.83333 (left: 5.83333)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "6"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 - 8 = -2 (left: -2 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 2 + 6 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 2 + 6 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "64"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 2 + 6 = 8 (left: 8) -> 8 * 8 = 64 (left: 64) -> 64 - 2 = 62 (left: 62)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 8"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 1.33333"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 + 1.33333 = 7.33333 (left: 7.33333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 + 1.33333 = 7.33333 (left: 7.33333) -> There are no possible next steps for the input 7.33333 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.33333 4.5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 = 4.5 -> 6 / 4.5 = 1.33333 (left: 1.33333 4.5) -> 1.33333 + 4.5 = 5.83333 (left: 5.83333)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "62"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54) -> 8 + 54 = 62 (left: 62) -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one number provided, so there are no possible next steps."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 - 3 = 0 (left: 0 6 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 18 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 + 18 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 + 18 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 3 "
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 3  -> 3 / 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 1.33333"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 = 4.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 = 4.5 -> 6 * 1.33333 = 7.99998 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.33333 4.5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 = 4.5 -> 6 / 4.5 = 1.33333 (left: 1.33333 4.5) -> 1.33333 + 4.5 = 5.83333 (left: 5.83333)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "21 + 2 = 23"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 + 18 = 21 (left: 21) -> 21 + 2 = 23 -> 21 / 2 = 10.5 (left: 10.5)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "There are no possible next steps with the input of 4.5."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 18 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 18 - 3 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 18 - 3 = 15 (left: 15) -> No further calculations can be done with the number 15 alone.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 8"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 1.33333"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 = 4.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 = 4.5 -> 6 / 4.5 = 1.33333 (left: 1.33333 4.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.33333 4.5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 = 4.5 -> 6 / 4.5 = 1.33333 (left: 1.33333 4.5) -> 1.33333 + 4.5 = 5.83333 (left: 5.83333)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 + 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "There is only one number provided, so there are no possible next steps."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 3 18 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 18 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 * 6 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 * 6 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "5 14"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 8 - 3 = 5 (left: 5 14) -> 5 + 14 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 6 8"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 * 6 = 36 (left: 8 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 * 6 = 36 (left: 8 36) -> 8 + 36 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.33333 4.5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 = 4.5 -> 6 / 4.5 = 1.33333 (left: 1.33333 4.5) -> 4.5 - 1.33333 = 3.16667 (left: 3.16667)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "44"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 * 6 = 36 (left: 8 36) -> 8 + 36 = 44 (left: 44) -> 44 / 2 = 22 (left: 2 22)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 3 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "No further calculations can be done with the number 15 alone."
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 18 - 3 = 15 (left: 15) -> No further calculations can be done with the number 15 alone. -> No further calculations can be done with the number 15 alone.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 6 8"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 / 6 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.33333 4.5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 = 4.5 -> 6 / 4.5 = 1.33333 (left: 1.33333 4.5) -> 1.33333 - 4.5 = -3",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 = 4.5 -> 6 / 4.5 = 1.33333 (left: 1.33333 4.5) -> 1.33333 - 4.5 = -3 -> 1.33333 * -4.5 = -6",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54) -> 8 + 54 = 62 (left: 62)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 8"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 2 + 3 = 5 (left: 4",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 1.33333"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 \u2248 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 \u2248 4.5 (left: 4.5) -> There are no possible next steps with the input of 4.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "1.33333 4.5"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 = 4.5 -> 6 / 4.5 = 1.33333 (left: 1.33333 4.5) -> Possible next steps",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 8 / 6 = 1.33333 (left: 6 1.33333) -> 6 / 1.33333 = 4.5 -> 6 / 4.5 = 1.33333 (left: 1.33333 4.5) -> Possible next steps -> None, the input is already in its simplest form.",
                "Pruning": null
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "There are no possible next steps as there is no input provided."
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No input provided. Please provide a list of numbers to continue.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> No input provided. Please provide a list of numbers to continue. -> No input provided. Please provide a list of numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 14 + 2 = 16 (left: 16 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 14 + 2 = 16 (left: 16 14) -> 16 - 14 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "2 16 14"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> Input: 14 18 14",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> Input: 14 18 14 -> 14 - 18 = -4 (left: -4 14)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 16"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16) -> 56 + 16 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "18.24"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 8 / 7 = 1.14 (left: 1.14 16) -> 1.14 * 16 = 18.24 (left: 18.24) -> There are no possible next steps for the input 18.24 as it is a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 8 / 7 = 1.14 (left: 1.14 16) -> 1.14 * 16 = 18.24 (left: 18.24) -> There are no possible next steps for the input 18.24 as it is a single number. -> There are no possible next steps for the input 18.24 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 8 16"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 8 - 7 = 1 (left: 1 8 16) -> 8 / 1 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 8 - 7 = 1 (left: 1 8 16) -> 8 / 1 = 8 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "0.875"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 14 + 2 = 16 (left: 16 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 14 + 2 = 16 (left: 16 14) -> 16 * 14 = 224 (left: 224)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 16 14"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Input: 15"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7) -> Input: 15 -> There is only one possible next step for the input 15: 15 - 2 = 13 (left: 13).",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "Input: 15"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7) -> Input: 15 -> There is only one number given (15), so there are no possible next steps to calculate.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 2 + 16 = 18 (left: 14 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 2 + 16 = 18 (left: 14 18) -> 14 * 18 = 252 (left: 252)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "1 1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 16 - 2 = 14 (left: 14 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 16 - 2 = 14 (left: 14 14) -> 14 * 14 = 196 (left: 196)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "4 16"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 4 "
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "56"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> 56 / 2 = 28",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 / 1 = 8 (left: 7 8) -> 7 * 8 = 56 (left: 56) -> 56 / 2 = 28 -> 56 / 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0.875"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 16 - 14 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 16 - 14 = 2 (left: 2 14) -> 2 * 14 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "0.875"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 16 - 14 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 16 - 14 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 16 14"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7) -> Input: 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "There are no possible next steps as there is no input provided."
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0) -> There are no possible next steps as there is no input provided. -> There are no possible next steps as there is no input provided. -> No possible next steps as there is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 14 + 2 = 16 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 14 + 2 = 16 (left: -> 8 / 2 = 4 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 2 + 16 = 18 (left: 14 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 2 + 16 = 18 (left: 14 18) -> 18 / 14 = 1.28571428571 (left: 1.28571428571)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "2 16 14"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "18.24"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 8 / 7 = 1.14 (left: 1.14 16) -> 1.14 * 16 = 18.24 (left: 18.24) -> There are no possible next steps with the input 18.24.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 8 / 7 = 1.14 (left: 1.14 16) -> 1.14 * 16 = 18.24 (left: 18.24) -> There are no possible next steps with the input 18.24. -> There are no possible next steps with the input 18.24.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 14 + 2 = 16 (left: 16 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 14 + 2 = 16 (left: 16 14) -> 16 * 14 = 224 (left: 224)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 18.24 as it is a single number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 2 + 16 = 18 (left: 14 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 2 + 16 = 18 (left: 14 18) -> 14 + 18 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "There are no possible next steps for the input 18.24 as it is a single number."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.75"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 16 / 2 = 8 (left: 8 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 16 / 2 = 8 (left: 8 14) -> 8 / 14 = 0.5714285714285714 (left: 0.5714285714285714)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "0.875"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 16 - 14 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 16 - 14 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 4 "
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 / 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 / 4 = 1 (left: 1) -> 1 / 1 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "Input: 15"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7) -> Input: 15 -> 15 + 15 = 30 (left: )",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "7 8 16"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 8 - 7 = 1 (left: 1 8 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 16 - 2 = 14 (left: 14 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 16 - 2 = 14 (left: 14 14) -> 14 * 14 = 196 (left: 196)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "There are no possible next steps as there is no input provided."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 16 / 2 = 8 (left: 8 14)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 16 / 2 = 8 (left: 8 14) -> 8 + 14 = 22 (left: 22)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "2 16 14"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 8 16"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 8 / 7 = 1.14 (left: 1.14 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 8 / 7 = 1.14 (left: 1.14 16) -> 1.14 * 16 = 18.24 (left: 18.24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.875"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for the input 0.875 as it is already a single number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There are no possible next steps for the input 0.875 as it is already a single number. -> There are no possible next steps for the input 0.875 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 5": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 16 - 14 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 16 - 14 = 2 (left: 2 14) -> 2 * 14 = 28 (left: 28)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "1 1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 2 * 16 = 32 (left: 14 32)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 2 * 16 = 32 (left: 14 32) -> 14 * 32 = 448 (left: 448)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps for the input 18.24 as it is a single number."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "0.875"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There is only one number which is 0.875. No further operations can be done.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 1 * 7 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875) -> There is only one number which is 0.875. No further operations can be done. -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 8 16"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 8 - 7 = 1 (left: 1 8 16) -> 1 + 8 = 9 (left: 9 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 8 - 7 = 1 (left: 1 8 16) -> 1 + 8 = 9 (left: 9 16) -> Input: 3 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "2 16 14"
                }
            },
            "Step 7": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 14 + 2 = 16 (left: 16 16)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8) -> 6 / 8 = 0.75 (left: 0.75) -> There is only one possible next step: -> 8 + 8 = 16 (left: 2 16 14) -> 14 + 2 = 16 (left: 16 16) -> 16 / 16 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "Input: 3 5 7"
                }
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "10 2"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11) -> 4 + 6 = 10 (left: 10 2) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "3"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "52 12"
                }
            },
            "Step 5": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 - 12 = 40 (left: 40) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 - 12 = 40 (left: 40)  -> 40 / 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "52 12"
                }
            },
            "Step 7": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 + 12 = 64 (left: 64)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 + 12 = 64 (left: 64) -> No possible next steps since there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 33 "
                }
            },
            "Step 1": {
                "Step": "11 * 3 = 33 (left: 5 33  -> 4 * ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 * 3 = 33 (left: 5 33  -> 4 *  -> 4 * 8 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "10 2"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11) -> 4 + 6 = 10 (left: 10 2) -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 12 = 1.33 (left: 1.33 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 12 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 12 = 1.33 (left: 1.33) -> 1.33 / 2 = 0.665",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12 48"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 48 / 12 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 48 / 12 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 12 + 48 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "10 2"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11) -> 4 + 6 = 10 (left: 10 2) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "52 12"
                }
            },
            "Step 5": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 + 12 = 64 (left: 64)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 + 12 = 64 (left: 64) -> 64 / 2 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.33 / 2 = 0.665"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 12 = 1.33 (left: 1.33) -> 1.33 / 2 = 0.665 -> 1.33 * 2 = 2.66 (left: 0.665 2.66)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 12 = 1.33 (left: 1.33) -> 1.33 / 2 = 0.665 -> 1.33 * 2 = 2.66 (left: 0.665 2.66) -> 2.66 / 0.665 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 11 14"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "10 2"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11) -> 4 + 6 = 10 (left: 10 2) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 55 12"
                }
            },
            "Step 4": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 3 + 55 = 58 (left: 12 58)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11 14) -> 8 * 11 = 88 (left: 14 88)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11 14) -> 8 * 11 = 88 (left: 14 88) -> 88 - 14 = 74 (left: 74)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "12 48"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "1.33 / 2 = 0.665"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 12 = 1.33 (left: 1.33) -> 1.33 / 2 = 0.665 -> 1.33 + 2 = 3.33 (left: 3.33)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "60"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 12 + 48 = 60 (left: 60) -> 60 + 2 = 62 (left: 2)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input of -7."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 3 16 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 12 / 11",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 12 / 11 -> 12 / 11 = 1.0909090909090908",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "10 2"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11) -> 4 + 6 = 10 (left: 10 2) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 7 11"
                }
            },
            "Step 4": {
                "Step": "12 - 5 = 7 (left: 3 7 11) -> 3 * 7 = 21 (left: 11 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "52 12"
                }
            },
            "Step 5": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 / 12 = 4.33 (left: 4.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 / 12 = 4.33 (left: 4.33) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "60"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 12 + 48 = 60 (left: 60) -> There are no possible next steps for the input 60.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 12 + 48 = 60 (left: 60) -> There are no possible next steps for the input 60. -> There are no possible next steps for the input 60.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19) -> 12 / 19 = 0.631578947368421 (left: 0.631578947368421)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "10 2"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11) -> 4 + 6 = 10 (left: 10 2) -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "3 6 12"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 3 + 6 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "52 12"
                }
            },
            "Step 5": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 * 12 = 624 (left: 624)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 * 12 = 624 (left: 624) -> 624 / 2 = 312 (left: 312)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "60"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "60"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 12 + 48 = 60 (left: 60) -> There are no possible next steps with the input 60.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 12 + 48 = 60 (left: 60) -> There are no possible next steps with the input 60. -> There are no possible next steps with the input 60.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "10 2"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11) -> 4 + 6 = 10 (left: 10 2) -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "3 55 12"
                }
            },
            "Step 4": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 / 3 = 18.33 (left: 12 18.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "52 12"
                }
            },
            "Step 5": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 + 12 = 64 (left: 64)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 + 12 = 64 (left: 64) -> 64 + 2 = 66 (left: 2 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "52 12"
                }
            },
            "Step 7": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 / 12 = 4.33 (left: 4.33)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 / 12 = 4.33 (left: 4.33) -> There is only one number provided (4.33), so there are no possible next steps for calculations.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 * 3 = 33 (left: 5 33 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11) -> 4 + 6 = 10 (left: 10 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "10 2"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11) -> 4 + 6 = 10 (left: 10 2) -> 10 * 2 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "-7"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19) -> 12 - 19 = -7 (left: -7) -> There are no possible next steps with the input of -7.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11 14) -> 14 / 11 = 1.27 (",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11 14) -> 14 / 11 = 1.27 ( -> 14 / 11 = 1.27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "60"
                }
            },
            "Step 7": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 12 + 48 = 60 (left: 60) -> 60 - 2 = 58 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "6.67"
                }
            },
            "Step 8": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67) -> There is only one number given (6.67), so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "10 2"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11) -> 4 + 6 = 10 (left: 10 2) -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "60"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48) -> 12 + 48 = 60 (left: 60) -> 60 / 2 = 30 (left: 2)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "3 16 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11 14) -> 11 / 8 = 1.375 (left: 1.375 14) -> 14 - 1.375 = 12.625 (left: 12.625)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "52 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "32"
                }
            },
            "Step 7": {
                "Step": "11 * 3 = 33 (left: 5 33  -> 4 *  -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "11 * 3 = 33 (left: 5 33  -> 4 *  -> 4 * 8 = 32 (left: 32) -> There are no possible next steps for the number 32. -> 32 - 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "2 64"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19) -> 12 - 19 = -7 (left: -7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "10 2"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 12 = 3 (left: 3 11) -> 4 + 6 = 10 (left: 10 2) -> 10 + 2 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 55 12"
                }
            },
            "Step 4": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 5": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11 14) -> 8 * 11 = 88 (left: 14 88)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11 14) -> 8 * 11 = 88 (left: 14 88) -> 14 / 88 = 0.159 (left: 0.159)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "64 / 2 = 32"
                }
            },
            "Step 7": {
                "Step": "5 * 11 = 55 (left: 3 55 12) -> 55 - 3 = 52 (left: 52 12) -> 52 + 12 = 64 (left: 64) -> 64 / 2 = 32 -> 64 / 32 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12 / 11 = 1.0909090909090908"
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 12 / 11 -> 12 / 11 = 1.0909090909090908 -> 12 * 11 = 132",
                "Pruning": null
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 6 8\nSteps:\n6 * 3 = 18 (left: 3 8 18)\n18 - 8 = 10 (left: 3 10)\n3 * 10 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((6 * 3) - 8) * 10 = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 2.5"
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 4 6 2.5) -> 6 / 4 = 1.5 (left: 1.5 2.5)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 6 7\nSteps:\n3 + 7 = 10 (left: 3 6 10)\n6 * 3 = 18 (left: 10 18)\n10 - 18 = -8 (left: -8)\n-8 * -3 = 24 (left: 24)\nAnswer: (-8) * (10 - 18) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((6 + 4) + 10) + 14 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 5 7 8\nSteps:\n7 - 3 = 4 (left: 4 5 8)\n8 - 4 = 4 (left: 4 5)\n5 * 4 = 20 (left: 4 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((7 - 3) + (8 - 4)) * 5 = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 6 2.5"
                }
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 4 6 2.5) -> 6 - 4 = 2 (left: 2 2.5)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 3 + 5 = 8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 3 + 5 = 8 ( -> 3 * 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 4 6\nSteps:\n3 + 4 = 7 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 + 4) * 6 = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "4 10 10"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 4 6 2.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 / 6 = 1.67 (left: 1.67 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 / 6 = 1.67 (left: 1.67 8) -> 1.67 + 8 = 9.67 (left: 9.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((6 + 4) + 10) + 14 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((4 + 6) + 4) + 10 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 + 4 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: (((3 * 7) - 5) + 3) + 5 = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 + 4 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: (((3 + 5) * (3 + 4)) /",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 16 10"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 10) -> 10 - 6 = 4 (left: 4 10)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 10 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 /",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 / -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((6 + 4) + 10) + 14 = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 8 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 / 6 = 1.3333333333333333 (left: 1.3333333333333333 10)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * (4 * 4) = 24",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "6 16 10"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 10) -> 16 - 6 = 10 (left: 10 10)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 4 10 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 5 * 7 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 5 * 7 = 35 (left: 35) -> 35 + 2 = 37",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * (10 - 4) = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 8 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)"
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 2)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 2"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 2) -> 0 + 2 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 6 13"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 6 + 3 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4) ",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 8": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24) -> 13 / 4 = 3.25 (left: 3.25 24) -> Possible next steps: -> There are no possible next steps as the input is already in its simplest form.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "16"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 13 / 3 = 4 (left: -> 13 + 3 = 16 (left: 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 10 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 = 2"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2 = 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps for the input 2.66666666667."
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps for the input 2.66666666667. -> There are no possible next steps for the input 2.66666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0 2"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 2) -> 2 / 0 = undefined",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2 + 2 = 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 2"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "7"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7) -> 7 / 7 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2 2"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "30"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with just the number 30.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input: -> There is no input provided. Please provide an input sequence to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2 = 2)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 2"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 2) -> 0 * 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "3.25 24"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.6",
                    "Pruned state": "2 / 0 = undefined"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 4 15 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 10 13"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 9 + 10 = 19 (left: 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 = 2"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2 = 2) -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2 = 2) -> There are no possible next steps as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2 = 2"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2 = 2) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "There is no input provided. Please provide an input sequence to generate possible next steps."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "3.25 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24) -> 13 / 4 = 3.25 (left: 3.25 24) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 / 2 = 1 (left: 1 2)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "3.25 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24) -> 13 / 4 = 3.25 (left: 3.25 24) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 = 2"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 / 2 = 2 (left: 2 = 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "4 6 9"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "4 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 * 2 = 4 (left: 4 4) -> 4 * 4 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "16"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 13 / 3 = 4 (left: -> 13 + 3 = 16 (left: 16) -> 16 / 2 = 8",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 13"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 13 / 3 = 4 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 13 / 3 = 4 (left: -> 13 + 3 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2.66666666667"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 4 / 1.5 = 2.66666666667 (left: 2.66666666667) -> There are no possible next steps for the input 2.66666666667.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 2"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 2) -> 2 / 0 = undefined (left: 0 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 2) -> 2 / 0 = undefined (left: 0 2) -> 2 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 + 4 = 6 (left: 4)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2 = 2"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24) -> 13 / 4 = 3.25 (left: 3.25 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "4 15 13"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 4 15 13) -> 4 * 15 = 60 (left: 13 60)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 2"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 2) -> 0 + 2 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 2) -> 0 + 2 = 2 -> 2 * 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There is no input provided. Please provide an input sequence to generate possible next steps."
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 4 - 2 = 2 (left: 2 4)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 2"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "9 13 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 2"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 2) -> 0 + 2 = 2",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 2) -> 0 + 2 = 2 -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 4"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 2"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 4 - 2 = 2 (left: 2 2) -> 2 + 2 = 4 -> 2 - 2 = 0 (left: 0 = 4)",
                "Pruning": null
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 * 2 = 22 -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "363"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input of -3 as it does not match any of the numbers in the previous input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of 19."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps with the input of 19. -> There are no possible next steps with the input of 19.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps with the input of 19. -> There are no possible next steps with the input of 19. -> 19 / 2 = 9.5 (left: 2 9.5)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 11 / 3.67 = 2.99 (left: 2.99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "363"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 * 11 = 33 (left: 11 33) -> 11 * 33 = 363 (left: 363) -> 3 - 6 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "-1"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 / 3 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1) -> There are no possible next steps with the input of -1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps as the input value is invalid."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps as the input value is invalid. -> Invalid input. Please enter numbers separated by spaces.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps as the input value is invalid. -> Invalid input. Please enter numbers separated by spaces. -> Start over and enter numbers separated by spaces.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 / 3 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 30 / 3 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "363"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 * 11 = 33 (left: 11 33) -> 11 * 33 = 363 (left: 363) -> 3 * 6 * 3 = 54",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 * 11 = 33 (left: 11 33) -> 11 * 33 = 363 (left: 363) -> 3 * 6 * 3 = 54 -> 6 * 3 = 18 (left: 3 * 18 = 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps with the input of 19.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of -3 as it does not match any of the numbers in the previous input."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input of -3 as it does not match any of the numbers in the previous input. -> There are no possible next steps with the input of -3 as it does not match any of the numbers in the previous input.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input of -3 as it does not match any of the numbers in the previous input. -> There are no possible next steps with the input of -3 as it does not match any of the numbers in the previous input. -> No possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17) -> 15 * 17 = 255 (left: 255)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.22"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 / 9 = 1.22 (left: 1.22) -> 1.22 / 2 = 0.61",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 / 9 = 1.22 (left: 1.22) -> 1.22 / 2 = 0.61 -> 2 - 1.22 = 0.78 (left: 0.78)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1.22"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 * 11 = 88 (left: 88) -> 8 + 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "363"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "There are no possible next steps with the input of -3 as it does not match any of the numbers in the previous input."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input of -3 as it does not match any of the numbers in the previous input. -> None",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "19 / 2 = 9.5"
                }
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> 19 / 2 = 9.5 -> 19 + 2 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 * 18 = 54"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 5"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 / 3 = 2 (left: 2 11) -> 9 - 3 = 6 (left: 6 5) -> 6 - 5 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "27 27"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 9 * 3 = 27 (left: 27 27) -> 27 * 27 = 729 (left: 729)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2.99"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of 19."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps with the input of 19. -> There are no possible next steps with the input of 19.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps with the input of 19. -> There are no possible next steps with the input of 19. -> 19 - 11 = 8 (left: 11 8)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 / 3 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 / 3 = 2 (left: 2 11) -> 9 - 3 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "363"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 * 11 = 33 (left: 11 33) -> 11 * 33 = 363 (left: 363) -> 3 / 6 = 0.5 (left: 0.5)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "3 11 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> 19 / 2 = 9.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of 19."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps with the input of 19. -> There are no possible next steps with the input of 19.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps with the input of 19. -> There are no possible next steps with the input of 19. -> 19 / 2 = 9.5 (left: 9.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "3 * 18 = 54"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 * 11 = 33 (left: 11 33)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 * 11 = 33 (left: 11 33) -> 11 * 33 = 363 (left: 363)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "27 27"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 9 * 3 = 27 (left: 27 27) -> 27 - 27 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "3 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 11 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 9 * 3 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "27 27"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> 9 * 3 = 27 (left: 27 27) -> 27 / 27 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1.22"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 / 9 = 1.22 (left: 1.22) -> There are no possible next steps for the input 1.22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "9 11"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 * 11 = 99 (left: 99)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 * 11 = 99 (left: 99) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "There are no possible next steps with the input of -3."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps with the input of -3. -> There are no possible next steps with the input of -3. -> Since the input is -3, there are no possible next steps as it's not a valid input for the given calculations.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 / 9 = 1.22 (left: 1.22)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.99"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 11 / 3.67 = 2.99 (left: 2.99) -> There are no possible next steps with the input 2.99 as it is a single number and not an operation.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 11 / 3.67 = 2.99 (left: 2.99) -> There are no possible next steps with the input 2.99 as it is a single number and not an operation. -> There are no possible next steps with the input 2.99 as it is a single number and not an operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "9 11"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 * 11 = 99 (left: 99)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 * 11 = 99 (left: 99) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "There are no possible next steps with the input of 19."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps with the input of 19. -> There are no possible next steps with the input of 19.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19) -> There are no possible next steps with the input of 19. -> There are no possible next steps with the input of 19. -> There are no possible next steps with the input of 19.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "154"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 * 14 = 154 (left: 154) -> 15 * 4 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "-3"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 3 + 11 = 14 (left: 11 14) -> 11 - 14 = -3 (left: -3) -> There are no possible next steps with the input -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps as the input value is invalid.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "There are no possible next steps as the input value is invalid."
                }
            },
            "Step 7": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps as the input value is invalid. -> Invalid input. Please enter 4 numbers separated by spaces.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps as the input value is invalid. -> Invalid input. Please enter 4 numbers separated by spaces. -> Invalid input. Please enter 4 numbers separated by spaces.",
                "Pruning": null
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 2)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 + 5 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "50 2"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 * 2 = 50 (left: 50 2) -> 50 - 2 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "1 13 40"
                }
            },
            "Step 6": {
                "Step": "8 * 5 = 40 (left: 1 13 40) -> 1 * 13 = 13 (left: 13 40)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 50"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 / 0 = undefined (left: 0 50) -> 50 * 0 = 0 (left: 0 50) -> 0 + 50 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "520"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> 40 * 13 = 520 (left: 520) -> 5 + 2 + 0 = 7 (left: 7 0)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 50 / 25 = 2 (left: 2 50)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "0 50"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 - 0 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "5 8 "
                }
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 5 8  -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 50"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 / 25 = 1 (left: 1 50) -> 50 - 1 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1"
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> There are no possible next steps for the input 25 as there are no other numbers provided to perform operations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> There are no possible next steps for the input 25 as there are no other numbers provided to perform operations with. -> N/A",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 3 13"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "0 50"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 / 0 = undefined (left: 0 50)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 / 0 = undefined (left: 0 50) -> 50 * 0 = 0 (left: 0 50)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "1 50"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 / 25 = 1 (left: 1 50) -> 1 * 50 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "10"
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 + 5 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "25 + 25 = 50"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 1 40 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> 40 * 13 = 520 (left: 520)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 - 8 = 17 (left: 8)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "25"
                }
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 50"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 50 / 25 = 2 (left: 2 50) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 50 / 25 = 2 (left: 2 50) -> Possible next steps: -> There are no possible next steps as the input does not provide any numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 50"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 / 0 = undefined (left: 0 50) -> 50 * 0 = 0 (left: 0 50) -> 50 - 0 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "520"
                }
            },
            "Step 8": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> 40 * 13 = 520 (left: 520) -> Input: 364",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 * 5 = 40 (left: 1 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 / 2 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "5 8 "
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "25"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 - 8 = 17 (left: 8 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 - 8 = 17 (left: 8 17) -> 8 / 17 = 0.4706 (left: 0.4706)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 50"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 / 0 = undefined (left: 0 50) -> 50 * 0 = 0 (left: 0 50) -> 0 + 50 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "There are no possible next steps as the input does not provide any numbers."
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 50 / 25 = 2 (left: 2 50) -> Possible next steps: -> There are no possible next steps as the input does not provide any numbers. -> There are no numbers provided in the input.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> 40 * 13 = 520 (left: 520)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 * 2 = 50 (left: 50 2)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "50 2"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 * 2 = 50 (left: 50 2) -> 50 - 2 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "5 8 "
                }
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 5 8  -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 50"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 / 0 = undefined (left: 0 50) -> 50 * 0 = 0 (left: 0 50) -> 0 + 50 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "1"
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 8 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 - 8 = 17 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "520"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> 40 * 13 = 520 (left: 520) -> 5 * 2 = 10 (left: 10 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "25"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 - 2 = 23 (left: 2)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "1 5 5"
                }
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 50"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 / 0 = undefined (left: 0 50) -> 50 * 0 = 0 (left: 0 50) -> 0 / 50 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "1"
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1) -> 5 - 5 =",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 / 2 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "6 8 13"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "25"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 5 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "1 8 8"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 8 8) -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 50"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 / 0 = undefined (left: 0 50) -> 50 * 0 = 0 (left: 0 50) -> 0 - 50 = -50 (left: -50)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1 50"
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 / 25 = 1 (left: 1 50) -> 50 - 1 = 49 (left: 49)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "10 0"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 1 5 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 * 25 = 625 (left: 625)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "25"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "25"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 * 2 = 50 (left: 2)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "25 + 25 = 50"
                }
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 / 25 = 1 (left: 1 50)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 50"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 / 0 = undefined (left: 0 50) -> 50 * 0 = 0 (left: 0 50) -> 0 + 50 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "25"
                }
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 / 2 = 12.5 (left: 12.5)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "0 50"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "50 2"
                }
            },
            "Step 5": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 2 = 27 -> 25 * 2 = 50 (left: 50 2) -> 50 + 2 = 52 (left: 52)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "25"
                }
            },
            "Step 6": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 * 8 = 200 (left: 8)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "0 50"
                }
            },
            "Step 7": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 / 0 = undefined (left: 0 50) -> 50 * 0 = 0 (left: 0 50) -> 0 * 50 = 0 (left: 0 50)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 25 = 50 -> 25 - 25 = 0 (left: 0 50) -> 50 / 0 = undefined (left: 0 50) -> 50 * 0 = 0 (left: 0 50) -> 0 * 50 = 0 (left: 0 50) -> 0 * 50 = 0 (left: 50)",
                "Pruning": {
                    "Idx": "8.6",
                    "Pruned state": "1 50"
                }
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is a single number and cannot be combined with any of the other numbers given.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is a single number and cannot be combined with any of the other numbers given. -> There are no possible next steps for the number 36 as it is a single number and cannot be combined with any of the other numbers given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 30"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 6 = 30 (left -> 36 / 6 = 6 (left: 6 30) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 6 = 30 (left -> 36 / 6 = 6 (left: 6 30) -> 3 + 9 = 12 (left: 12 27) -> 12 - 27 = -15 (left: -15)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "28"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "0 13"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: 0 13) -> 13 - 0 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: 0 13) -> 13 - 0 = 13 (left: 13) -> 13 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "4 7"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 36 + 4 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "63"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "0.2222 8"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 8 = 28 -> 8 / 36 = 0.2222 (left: 0.2222 8) -> 0.2222 * 8 = 1.7776 (left: 1.7776)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 9 13"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: 0 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.6",
                    "Resampled state": "63"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> There are no possible next steps with the input of 63.",
                "Pruning": null
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63) -> There are no possible next steps with the input of 63. -> There are no possible next steps with the input of 63.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 / 3 = 1.3333333333333333 (left: 1.3333333333333333 9) -> 1.3333333333333333 * 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "9 9 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 / 9 = 1.44 (left: 1.44 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 30"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 6 = 30 (left -> 36 / 6 = 6 (left: 6 30) -> 6 + 30 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 9 "
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 64"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> Possible next steps: -> - 8 * 8 = 64 (left: 2 64) -> 64 - 2 = 62 (left: 62)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps as there is only one number."
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> No possible next steps as there is only one number. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22) -> 6 + 22 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 8 = 28",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 8 = 28 -> 8 / 36 = 0.2222 (left: 0.2222 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 30"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 6 = 30 (left -> 36 / 6 = 6 (left: 6 30) -> 30 / 6 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 2 = 18 (left: 18 18)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 2 = 18 (left: 18 18) -> 18 + 18 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 9 / 3 = 3 (left: 3 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> No possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 30"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 6 = 30 (left -> 36 / 6 = 6 (left: 6 30) -> 30 - 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2 6 7"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> Input: 5 6 7 -> 7 - 5 = 2 (left: 2 6 7) -> 6 - 2 = 4 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.6",
                    "Resampled state": "9 22"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 + 9 = 22 (left: 9 22) -> 22 - 9 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 + 9 = 22 (left: 9 22) -> 22 - 9 = 13 (left: 13) -> 13 + 2 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "9.6",
                    "Pruned state": "2 64"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 2 * 18 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "3 9 "
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> Input: 5 6 7 -> 7 - 5 = 2 (left: 2 6 7) -> 7 / 2 = 3.5 (left: 3.5 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> Input: 5 6 7 -> 7 - 5 = 2 (left: 2 6 7) -> 7 / 2 = 3.5 (left: 3.5 7) -> 3.5 - 7 = -3.5 (left: -3.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1.44 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.6",
                    "Resampled state": "1.44 9"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 / 9 = 1.44 (left: 1.44 9) -> 9 - 1.44 = 7.56 (left: 7.56)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 / 9 = 1.44 (left: 1.44 9) -> 9 - 1.44 = 7.56 (left: 7.56) -> 7 * 5.56 = 39.92 (left: 39.92)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 6 = 30 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 6 = 30 (left -> 36 / 6 = 6 (left: 6 30)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 30"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 6 = 30 (left -> 36 / 6 = 6 (left: 6 30) -> 6 * 5 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2.25"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> 2.25 + 8 = 10.25 (left: 10.25)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "28"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.6",
                    "Resampled state": "2 64"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> Possible next steps: -> - 8 * 8 = 64 (left: 2 64) -> 2 + 64 = 66",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> Possible next steps: -> - 8 * 8 = 64 (left: 2 64) -> 2 + 64 = 66 -> 2 - 64 = -62 (left: -62 64 66)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 =  -> 3 * 4 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number and no operation to perform.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number and no operation to perform. -> None",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "2 6 7"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 30"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 6 = 30 (left -> 36 / 6 = 6 (left: 6 30) -> 30 / 6 = 5 (left: 5 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 6 = 30 (left -> 36 / 6 = 6 (left: 6 30) -> 30 / 6 = 5 (left: 5 30) -> 12 + 4 = 16 (left: 10)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "63"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "28"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22) -> 6 + 22 = 28 (left: 28) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.6",
                    "Pruned state": "28"
                }
            },
            "Step 8": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22) -> 6 + 22 = 28 (left: 28) -> 8 * 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "4 7"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 36 * 2 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "9 9 13"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 30"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 6 = 30 (left -> 36 / 6 = 6 (left: 6 30) -> 6 + 30 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "9 9 13"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 + 9 = 22 (left: 9 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> Possible next steps:",
                "Pruning": null
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> Possible next steps: -> - 14",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> Input: 5 6 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> Input: 5 6 7 -> 7 - 5 = 2 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 12 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "3 9 "
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 30"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 6 = 30 (left -> 36 / 6 = 6 (left: 6 30) -> 6 * 30 = 180 (left: 180)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "Possible next steps:"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 6 / 9 = 0.67 ( -> Possible next steps: -> - 8 * 8 = 64 (left: 2 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.6",
                    "Resampled state": "28"
                }
            },
            "Step 7": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22) -> 6 + 22 = 28 (left: 28) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "1.2857142857142858"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858) -> 1.2857142857142858 * 2 = 2.5714285714285716",
                "Pruning": null
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.857 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 2.857 * 10 = 28.57 (left: 10 28.57)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 2.857 * 10 = 28.57 (left: 10 28.57) -> 28.57 - 10 = 18.57 (left: 18.57)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "35"
                }
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 7 5) -> 7 * 5 = 35 (left: 35) -> 35 - 8 = 27 (left: 8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> Input: 14 5 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> Input: 14 5 5 -> 5 / 14 = 0.357 (left: 0.357 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.857 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 2.857 * 10 = 28.57 (left: 10 28.57)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 2.857 * 10 = 28.57 (left: 10 28.57) -> 10 + 28.57 = 38.57 (left: 38.57)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) ",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 7 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 7 5) -> 7 * 5 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.857 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 2.857 + 10 = 12.857 (left: 10)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "15"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 27 / 3 =",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 27 / 3 = -> 27 / 3 = 9",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.857 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 10 / 2.857 = 3.5 (left: 3.5 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 10 / 2.857 = 3.5 (left: 3.5 10) -> 3.5 + 10 = 13.5 (left: 13.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "7 2 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: 7 12) -> 7 * 12 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 + 5 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 + 2 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "4 8"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.857 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 10 / 2.857 = 3.5 (left: 3.5 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 10 / 2.857 = 3.5 (left: 3.5 10) -> 3.5 + 10 = 13.5 (left: 13.5)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "4 + 4 = 8"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "4 8"
                }
            },
            "Step 8": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 + 2 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.857 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 10 / 2.857 = 3.5 (left: 3.5 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 10 / 2.857 = 3.5 (left: 3.5 10) -> 3.5 - 10 = -6.5 (left: -6.5)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 7 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 7 5) -> 7 * 5 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "1"
                }
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.857 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 2.857 * 10 = 28.57 (left: 10 28.57)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 2.857 * 10 = 28.57 (left: 10 28.57) -> 10 + 28.57 = 38.57 (left: 38",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "84"
                }
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: 7 12) -> 7 * 12 = 84 (left: 84) -> 8 * 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps as there is only one number left."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 - 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 7 - 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.857 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 2.857 - 10 = -7.143 (left: -7",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "3 7 "
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10)",
                "Pruning": null
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2 10) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 - 10 = -1 (left: -1 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.857 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 10 - 2.857 = 7.143 (left: 7.143 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 10 - 2.857 = 7.143 (left: 7.143 10) -> 7.143 + 10 = 17.143 (left: 10)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.6",
                    "Pruned state": "35"
                }
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 / 2 = 5 (left: 7 5) -> 7 * 5 = 35 (left: 35) -> There are no possible next steps with just the number 35 provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2.857 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10) -> 3 * 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "12"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10) -> 10 + 2 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 =  -> 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5 10"
                }
            },
            "Step 7": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "2"
                }
            },
            "Step 8": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2) -> Not enough numbers provided. Please provide at least 3 numbers for possible next steps.",
                "Pruning": null
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 897037,
        "output_tokens": 362888.12857142655,
        "total_cost": 0.9928506928571399
    }
}