{
    "900": {
        "input": "4 5 6 10",
        "step_1": {
            "steps": [
                "10 - 4 = 6 (left: 6 5 10)",
                "6 * 4 = 24 (left: 5 10 24)",
                "6 / 4 = 1.5 (left: 1.5 5 10)"
            ],
            "values": [
                41.0,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.2",
                "2 <- INIT"
            ],
            "resampled_steps": [
                "10 - 4 = 6 (left: 6 5 10)",
                "6 / 4 = 1.5 (left: 1.5 5 10)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "10 - 4 = 6 (left: 6 5 10)\n3 * 9 = 27 (left: 27 27)",
                "6 / 4 = 1.5 (left: 1.5 5 10)\n10 + 1.5 = 11.5 (left: 5 11.5)",
                "6 + 4 = 10 (left: 5 10 10)"
            ],
            "values": [
                20.002,
                0.002,
                21.0
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.0",
                "2 <- INIT"
            ],
            "resampled_steps": [
                "10 - 4 = 6 (left: 6 5 10)",
                "10 - 4 = 6 (left: 6 5 10)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)",
                "10 - 4 = 6 (left: 6 5 10)\nPossible next steps:",
                "4 + 5 = 9 (left: 6 9 10)"
            ],
            "values": [
                1.002,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 2.2",
                "2 <- 2.0"
            ],
            "resampled_steps": [
                "6 / 4 = 1.5 (left: 1.5 5 10)",
                "6 + 4 = 10 (left: 5 10 10)",
                "10 - 4 = 6 (left: 6 5 10)\n3 * 9 = 27 (left: 27 27)"
            ]
        },
        "step_4": {
            "steps": [
                "6 / 4 = 1.5 (left: 1.5 5 10)\n10 + 1.5 = 11.5 (left: 5 11.5)",
                "6 + 4 = 10 (left: 5 10 10)\n10 * 5 = 50 (left: 10 10 50)",
                "10 - 4 = 6 (left: 6 5 10)\n3 * 9 = 27 (left: 27 27)\n27 + 27 = 54"
            ],
            "values": [
                2.0,
                41.0,
                0.003
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 1.0",
                "2 <- 3.2"
            ],
            "resampled_steps": [
                "6 + 4 = 10 (left: 5 10 10)\n10 * 5 = 50 (left: 10 10 50)",
                "10 - 4 = 6 (left: 6 5 10)",
                "4 + 5 = 9 (left: 6 9 10)"
            ]
        },
        "step_5": {
            "steps": [
                "6 + 4 = 10 (left: 5 10 10)\n10 * 5 = 50 (left: 10 10 50)\nInput: 3 6 18",
                "10 - 4 = 6 (left: 6 5 10)\n9 / 5 = 1.8 (left: 1.8 5)",
                "4 + 5 = 9 (left: 6 9 10)\n6 / 9 = 0.6666666666666666 (left: 0.67 10)"
            ],
            "values": [
                0.003,
                0.0,
                1.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.0",
                "2 <- 4.1"
            ],
            "resampled_steps": [
                "",
                "10 - 4 = 6 (left: 6 5 10)",
                "6 + 4 = 10 (left: 5 10 10)\n10 * 5 = 50 (left: 10 10 50)"
            ]
        },
        "step_6": {
            "steps": [
                "4 + 5 = 9 (left: 6 9 10)",
                "10 - 4 = 6 (left: 6 5 10)\n10 / 5 = 2 (left: 6 2)",
                "6 + 4 = 10 (left: 5 10 10)\n10 * 5 = 50 (left: 10 10 50)\n10 / 10 = 1 (left: 1 10 50)"
            ],
            "values": [
                3.0,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 2.2",
                "2 <- 1.0"
            ],
            "resampled_steps": [
                "6 + 4 = 10 (left: 5 10 10)\n10 * 5 = 50 (left: 10 10 50)",
                "6 + 4 = 10 (left: 5 10 10)",
                "10 - 4 = 6 (left: 6 5 10)"
            ]
        },
        "step_7": {
            "steps": [
                "6 + 4 = 10 (left: 5 10 10)\n10 * 5 = 50 (left: 10 10 50)\n50 - 10 = 40 (left: 10 40)",
                "6 + 4 = 10 (left: 5 10 10)\n10 + 5 = 15 (left: 10 15)",
                "10 - 4 = 6 (left: 6 5 10)\n10 * 6 = 60 (left: 5 60)"
            ],
            "values": [
                1.0,
                0.003,
                41.0
            ],
            "resampled": [
                "0 <- 7.2",
                "1 <- 4.1",
                "2 <- 7.2"
            ],
            "resampled_steps": [
                "10 - 4 = 6 (left: 6 5 10)\n10 * 6 = 60 (left: 5 60)",
                "6 + 4 = 10 (left: 5 10 10)\n10 * 5 = 50 (left: 10 10 50)",
                "10 - 4 = 6 (left: 6 5 10)\n10 * 6 = 60 (left: 5 60)"
            ]
        },
        "step_8": {
            "steps": [
                "10 - 4 = 6 (left: 6 5 10)\n10 * 6 = 60 (left: 5 60)\n5 - 60 = -55 (left: -55)",
                "6 + 4 = 10 (left: 5 10 10)\n10 * 5 = 50 (left: 10 10 50)\n10 * 10 = 100 (left: 100 50)",
                "10 - 4 = 6 (left: 6 5 10)\n10 * 6 = 60 (left: 5 60)\n27 - 9 = 18 (left: 3 18 27)"
            ],
            "values": [
                0.002,
                20.0,
                22.0
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 1.0",
                "2 <- 8.1"
            ],
            "resampled_steps": [
                "6 + 4 = 10 (left: 5 10 10)\n10 * 5 = 50 (left: 10 10 50)",
                "10 - 4 = 6 (left: 6 5 10)",
                "6 + 4 = 10 (left: 5 10 10)\n10 * 5 = 50 (left: 10 10 50)\n10 * 10 = 100 (left: 100 50)"
            ]
        },
        "step_9": {
            "steps": [
                "6 + 4 = 10 (left: 5 10 10)\n10 * 5 = 50 (left: 10 10 50)\nPossible next steps:",
                "10 - 4 = 6 (left: 6 5 10)\nInput: 3 9 27",
                "6 + 4 = 10 (left: 5 10 10)\n10 * 5 = 50 (left: 10 10 50)\n10 * 10 = 100 (left: 100 50)\n100 / 50 = 2 (left: 2)"
            ],
            "values": [
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 8.2",
                "1 <- 2.2",
                "2 <- 4.0"
            ],
            "resampled_steps": [
                "10 - 4 = 6 (left: 6 5 10)\n10 * 6 = 60 (left: 5 60)\n27 - 9 = 18 (left: 3 18 27)",
                "6 + 4 = 10 (left: 5 10 10)",
                "6 / 4 = 1.5 (left: 1.5 5 10)\n10 + 1.5 = 11.5 (left: 5 11.5)"
            ]
        },
        "step_10": {
            "steps": [
                "10 - 4 = 6 (left: 6 5 10)\n10 * 6 = 60 (left: 5 60)\n27 - 9 = 18 (left: 3 18 27)\n18 - 3 = 15 (left: 15 27)",
                "6 + 4 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)",
                "6 / 4 = 1.5 (left: 1.5 5 10)\n10 + 1.5 = 11.5 (left: 5 11.5)\n5 * 11.5 = 57.5 (left: 11.5 57.5)"
            ],
            "values": [
                0.003,
                0.002,
                3.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.017142
    },
    "901": {
        "input": "1 2 4 7",
        "step_1": {
            "steps": [
                "7 - 1 = 6 (left: 2 4 6)",
                "4 + 2 = 6 (left: 1 6 7)",
                "4 + 7 = 11 (left: 1 2 11)"
            ],
            "values": [
                0.003,
                0.002,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "2 * 4 = 8 (left: 1 8 7)",
                "4 + 2 = 6 (left: 1 6 7)",
                "4 + 2 = 6 (left: 1 6 7)"
            ],
            "values": [
                2.0,
                1.002,
                21.001
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 2.2",
                "2 <- 2.2"
            ],
            "resampled_steps": [
                "4 + 7 = 11 (left: 1 2 11)",
                "4 + 2 = 6 (left: 1 6 7)",
                "4 + 2 = 6 (left: 1 6 7)"
            ]
        },
        "step_3": {
            "steps": [
                "4 + 7 = 11 (left: 1 2 11)\n2 + 11 = 13 (left: 1 13)",
                "4 + 2 = 6 (left: 1 6 7)\n7 / 1 = 7 (left: 7 7)",
                "4 + 2 = 6 (left: 1 6 7)\n6 + 1 = 7 (left: 7 7)"
            ],
            "values": [
                0.001,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 2.0",
                "2 <- INIT"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 1 6 7)",
                "2 * 4 = 8 (left: 1 8 7)",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "4 + 2 = 6 (left: 1 6 7)\n7 / 1 = 7 (left: 7 7)",
                "2 * 4 = 8 (left: 1 8 7)\n7 + 1 = 8 (left: 8)",
                "1 + 2 = 3 (left: 3 4 7)"
            ],
            "values": [
                0.002,
                0.0,
                3.0
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 2.2",
                "2 <- INIT"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 4 7)",
                "4 + 2 = 6 (left: 1 6 7)",
                ""
            ]
        },
        "step_5": {
            "steps": [
                "1 + 2 = 3 (left: 3 4 7)\nInput: 6 9 12",
                "4 + 2 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 7)",
                "7 - 1 = 6 (left: 2 4 6)"
            ],
            "values": [
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.2",
                "2 <- 4.2"
            ],
            "resampled_steps": [
                "",
                "4 + 2 = 6 (left: 1 6 7)",
                "1 + 2 = 3 (left: 3 4 7)"
            ]
        },
        "step_6": {
            "steps": [
                "7 - 4 = 3 (left: 1 2 3)",
                "4 + 2 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 7)",
                "1 + 2 = 3 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)"
            ],
            "values": [
                1.002,
                0.003,
                41.0
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 6.2",
                "2 <- 6.2"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 1 6 7)",
                "1 + 2 = 3 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "1 + 2 = 3 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)"
            ]
        },
        "step_7": {
            "steps": [
                "4 + 2 = 6 (left: 1 6 7)\n1 + 6 = 7 (left: 7 7)",
                "1 + 2 = 3 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 - 1 = 6 (left: 6)",
                "1 + 2 = 3 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 - 1 = 6 (left: 6)"
            ],
            "values": [
                0.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 6.2",
                "1 <- 6.2",
                "2 <- 2.2"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "1 + 2 = 3 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "4 + 2 = 6 (left: 1 6 7)"
            ]
        },
        "step_8": {
            "steps": [
                "1 + 2 = 3 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n1 * 7 = 7 (left: 7)",
                "1 + 2 = 3 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 - 1 = 6 (left: 6)",
                "4 + 2 = 6 (left: 1 6 7)\n6 / 1 = 6 (left: 6 7)"
            ],
            "values": [
                0.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 6.2",
                "2 <- 2.2"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 1 6 7)",
                "1 + 2 = 3 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "4 + 2 = 6 (left: 1 6 7)"
            ]
        },
        "step_9": {
            "steps": [
                "4 + 2 = 6 (left: 1 6 7)\n7 - 5 = 2 (left: 2 7)",
                "1 + 2 = 3 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n1 + 7 = 8 (left: 8)",
                "4 + 2 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 7)"
            ],
            "values": [
                0.001,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 6.0",
                "2 <- 6.2"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 1 6 7)",
                "7 - 4 = 3 (left: 1 2 3)",
                "1 + 2 = 3 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)"
            ]
        },
        "step_10": {
            "steps": [
                "4 + 2 = 6 (left: 1 6 7)\n7 / 1 = 7 (left: 7 6)",
                "7 - 4 = 3 (left: 1 2 3)\n3 / 1 = 3 (left: 2 3)",
                "1 + 2 = 3 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 * 1 = 7 (left: 7)"
            ],
            "values": [
                0.003,
                1.001,
                0.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.034014
    },
    "902": {
        "input": "2 5 8 11",
        "step_1": {
            "steps": [
                "11 - 2 = 9 (left: 2 5 9)",
                "12 - 6 = 6 (left: 3 9 6)",
                "11 - 2 = 9 (left: 2 5 9)"
            ],
            "values": [
                0.003,
                21.001,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.1"
            ],
            "resampled_steps": [
                "",
                "",
                "12 - 6 = 6 (left: 3 9 6)"
            ]
        },
        "step_2": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11)",
                "8 * 11 = 88 (left: 2 5 88)",
                "12 - 6 = 6 (left: 3 9 6)\n3 + 9 = 12 (left: 6 12)"
            ],
            "values": [
                2.001,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.1",
                "2 <- 1.1"
            ],
            "resampled_steps": [
                "",
                "12 - 6 = 6 (left: 3 9 6)",
                "12 - 6 = 6 (left: 3 9 6)"
            ]
        },
        "step_3": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11)",
                "12 - 6 = 6 (left: 3 9 6)\n9 * 6 = 54 (left: 3 54)",
                "12 - 6 = 6 (left: 3 9 6)\n6 + 3 = 9 (left: 9)"
            ],
            "values": [
                3.0,
                1.002,
                0.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.1",
                "2 <- INIT"
            ],
            "resampled_steps": [
                "",
                "12 - 6 = 6 (left: 3 9 6)",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "5 * 8 = 40 (left: 2 40 11)",
                "12 - 6 = 6 (left: 3 9 6)\n10 - 4 = 6 (left: 6 10 20)",
                "5 + 8 = 13 (left: 2 13 11)"
            ],
            "values": [
                1.002,
                2.001,
                2.001
            ],
            "resampled": [
                "0 <- 4.0",
                "1 <- 1.1",
                "2 <- 4.1"
            ],
            "resampled_steps": [
                "5 * 8 = 40 (left: 2 40 11)",
                "12 - 6 = 6 (left: 3 9 6)",
                "12 - 6 = 6 (left: 3 9 6)\n10 - 4 = 6 (left: 6 10 20)"
            ]
        },
        "step_5": {
            "steps": [
                "5 * 8 = 40 (left: 2 40 11)\n40 - 11 = 29 (left: 2 29)",
                "12 - 6 = 6 (left: 3 9 6)\n3 * 9 = 27 (left: 6 27)",
                "12 - 6 = 6 (left: 3 9 6)\n10 - 4 = 6 (left: 6 10 20)\n10 + 6 = 16 (left: 16 20)"
            ],
            "values": [
                0.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 1.1",
                "2 <- 1.1"
            ],
            "resampled_steps": [
                "8 * 11 = 88 (left: 2 5 88)",
                "12 - 6 = 6 (left: 3 9 6)",
                "12 - 6 = 6 (left: 3 9 6)"
            ]
        },
        "step_6": {
            "steps": [
                "8 * 11 = 88 (left: 2 5 88)\n2 + 5 = 7 (left: 7 88)",
                "12 - 6 = 6 (left: 3 9 6)\nInput: 5 10 15",
                "12 - 6 = 6 (left: 3 9 6)\n3 + 9 = 12 (left: 6 12)"
            ],
            "values": [
                0.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 3.1",
                "2 <- 1.1"
            ],
            "resampled_steps": [
                "",
                "12 - 6 = 6 (left: 3 9 6)\n9 * 6 = 54 (left: 3 54)",
                "12 - 6 = 6 (left: 3 9 6)"
            ]
        },
        "step_7": {
            "steps": [
                "5 + 8 = 13 (left: 2 13 11)",
                "12 - 6 = 6 (left: 3 9 6)\n9 * 6 = 54 (left: 3 54)\n3 * 54 = 162 (left: 162)",
                "12 - 6 = 6 (left: 3 9 6)\n9 / 3 = 3 (left: 3 6)"
            ],
            "values": [
                0.003,
                0.003,
                1.0
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 1.1",
                "2 <- 3.0"
            ],
            "resampled_steps": [
                "8 * 11 = 88 (left: 2 5 88)",
                "12 - 6 = 6 (left: 3 9 6)",
                "2 + 5 = 7 (left: 7 8 11)"
            ]
        },
        "step_8": {
            "steps": [
                "8 * 11 = 88 (left: 2 5 88)\n88 - 2 = 86 (left: 5 86)",
                "12 - 6 = 6 (left: 3 9 6)\n9 - 3 = 6 (left: 6 6)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 8)"
            ],
            "values": [
                0.0,
                1.002,
                60.0
            ],
            "resampled": [
                "0 <- 8.2",
                "1 <- 8.2",
                "2 <- 8.2"
            ],
            "resampled_steps": [
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 8)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 8)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 8)"
            ]
        },
        "step_9": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 8)\n8 / 1 = 8 (left: 8)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)"
            ],
            "values": [
                0.002,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 7.2",
                "1 <- 8.2",
                "2 <- 8.2"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 3 9 6)\n9 / 3 = 3 (left: 3 6)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 8)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 8)"
            ]
        },
        "step_10": {
            "steps": [
                "12 - 6 = 6 (left: 3 9 6)\n9 / 3 = 3 (left: 3 6)\n6 / 3 = 2 (left: 2)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 7 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)"
            ],
            "values": [
                0.001,
                0.002,
                0.001
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.052339
    },
    "903": {
        "input": "3 4 4 13",
        "step_1": {
            "steps": [
                "13 - 4 = 9 (left: 3 4 9)",
                "4 - 3 = 1 (left: 1 4 13)",
                "13 - 4 = 9 (left: 3 4 9)"
            ],
            "values": [
                41.0,
                2.001,
                40.001
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.0",
                "2 <- 1.2"
            ],
            "resampled_steps": [
                "13 - 4 = 9 (left: 3 4 9)",
                "13 - 4 = 9 (left: 3 4 9)",
                "13 - 4 = 9 (left: 3 4 9)"
            ]
        },
        "step_2": {
            "steps": [
                "13 - 4 = 9 (left: 3 4 9)\n3 + 4 = 7 (left: 7 9)",
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)",
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)"
            ],
            "values": [
                0.003,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- 2.1"
            ],
            "resampled_steps": [
                "",
                "13 - 4 = 9 (left: 3 4 9)",
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)"
            ]
        },
        "step_3": {
            "steps": [
                "4 - 3 = 1 (left: 1 4 13)",
                "13 - 4 = 9 (left: 3 4 9)\n3 + 9 = 12 (left: 4 12)",
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n10 * 5 = 50 (left: 50)"
            ],
            "values": [
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 1.2",
                "2 <- 2.1"
            ],
            "resampled_steps": [
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)",
                "13 - 4 = 9 (left: 3 4 9)",
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)"
            ]
        },
        "step_4": {
            "steps": [
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "13 - 4 = 9 (left: 3 4 9)\n2 * 10 = 20 (left: 5 20 3)",
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)"
            ],
            "values": [
                0.001,
                2.0,
                0.002
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 1.0",
                "2 <- INIT"
            ],
            "resampled_steps": [
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)",
                "13 - 4 = 9 (left: 3 4 9)",
                ""
            ]
        },
        "step_5": {
            "steps": [
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n10 / 5 = 2 (left: 2)",
                "13 - 4 = 9 (left: 3 4 9)\n3 * 4 = 12 (left: 12 9)",
                "13 - 3 = 10 (left: 4 4 10)"
            ],
            "values": [
                0.003,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.0",
                "2 <- 2.2"
            ],
            "resampled_steps": [
                "",
                "13 - 4 = 9 (left: 3 4 9)",
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)"
            ]
        },
        "step_6": {
            "steps": [
                "3 + 4 = 7 (left: 4 7 13)",
                "13 - 4 = 9 (left: 3 4 9)\n4 * 3 = 12 (left: 12 9)",
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)"
            ],
            "values": [
                1.002,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 1.1",
                "2 <- 5.2"
            ],
            "resampled_steps": [
                "13 - 3 = 10 (left: 4 4 10)",
                "4 - 3 = 1 (left: 1 4 13)",
                "13 - 3 = 10 (left: 4 4 10)"
            ]
        },
        "step_7": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)",
                "4 - 3 = 1 (left: 1 4 13)\n10 / 7 = 1.43 (left: 3 1.43)",
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)"
            ],
            "values": [
                1.0,
                2.0,
                60.0
            ],
            "resampled": [
                "0 <- 7.2",
                "1 <- 2.2",
                "2 <- 1.2"
            ],
            "resampled_steps": [
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)",
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)",
                "13 - 4 = 9 (left: 3 4 9)"
            ]
        },
        "step_8": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "13 - 4 = 9 (left: 3 4 9)\n9 / 4 = 2.25 (left: 3 2.25)"
            ],
            "values": [
                0.002,
                0.002,
                1.002
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 5.2",
                "2 <- 7.1"
            ],
            "resampled_steps": [
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)",
                "4 - 3 = 1 (left: 1 4 13)\n10 / 7 = 1.43 (left: 3 1.43)"
            ]
        },
        "step_9": {
            "steps": [
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 3 = 10 (left: 4 4 10)\n9 * 3 = 27 (left: 5 27 7)",
                "4 - 3 = 1 (left: 1 4 13)\n10 / 7 = 1.43 (left: 3 1.43)\n3 + 1.43 = 4.43 (left: 1.43 4.43)"
            ],
            "values": [
                60.0,
                3.0,
                1.0
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 9.0",
                "2 <- 9.0"
            ],
            "resampled_steps": [
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)",
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ]
        },
        "step_10": {
            "steps": [
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (13 - (4 + 3)) = 24",
                "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (13 - (4 - 3)) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "cost": 0.06928300000000001
    },
    "904": {
        "input": "6 7 8 9",
        "step_1": {
            "steps": [
                "8 / 9 = 0.888889 (left: 6 7 0.888889)",
                "12 - 10 = 2 (left: 3 5 2)",
                "6 + 7 = 13 (left: 8 9 13)"
            ],
            "values": [
                3.0,
                2.001,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.2"
            ],
            "resampled_steps": [
                "",
                "",
                "6 + 7 = 13 (left: 8 9 13)"
            ]
        },
        "step_2": {
            "steps": [
                "8 + 9 = 17 (left: 6 7 17)",
                "5 + 7 = 12 (left: 3 9 12)",
                "6 + 7 = 13 (left: 8 9 13)\n9 / 8 = 1.125 (left: 1.125 13)"
            ],
            "values": [
                2.001,
                1.002,
                0.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "6 / 7 = 0.857 (left: 0.857 8 9)",
                "8 / 9 = 0.889 (left: 6 7 0.889)",
                "9 - 6 = 3 (left: 3 7 8)"
            ],
            "values": [
                3.0,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- INIT",
                "2 <- INIT"
            ],
            "resampled_steps": [
                "8 + 9 = 17 (left: 6 7 17)",
                "",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "8 + 9 = 17 (left: 6 7 17)\n17 - 6 = 11 (left: 7 11)",
                "8 / 2 = 4 (left: 4 7 9)",
                "7 - 6 = 1 (left: 1 8 9)"
            ],
            "values": [
                0.001,
                3.0,
                0.002
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 4.1",
                "2 <- INIT"
            ],
            "resampled_steps": [
                "8 / 9 = 0.889 (left: 6 7 0.889)",
                "8 / 2 = 4 (left: 4 7 9)",
                ""
            ]
        },
        "step_5": {
            "steps": [
                "8 / 9 = 0.889 (left: 6 7 0.889)\n7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 0.889)",
                "8 / 2 = 4 (left: 4 7 9)\n7 / 4 = 1.75 (left: 1.75 9)",
                "6 * 7 = 42 (left: 8 9 42)"
            ],
            "values": [
                2.001,
                0.002,
                1.002
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- INIT",
                "2 <- 1.0"
            ],
            "resampled_steps": [
                "8 / 2 = 4 (left: 4 7 9)",
                "",
                "8 / 9 = 0.888889 (left: 6 7 0.888889)"
            ]
        },
        "step_6": {
            "steps": [
                "8 / 2 = 4 (left: 4 7 9)\n7 / 4 = 1.75 (left: 1.75 9)",
                "9 - 6 = 3 (left: 3 7 8)",
                "8 / 9 = 0.888889 (left: 6 7 0.888889)\n7 + 6 = 13 (left: 13 0.888889)"
            ],
            "values": [
                0.002,
                3.0,
                2.0
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 6.2",
                "2 <- 5.2"
            ],
            "resampled_steps": [
                "6 / 7 = 0.857 (left: 0.857 8 9)",
                "8 / 9 = 0.888889 (left: 6 7 0.888889)\n7 + 6 = 13 (left: 13 0.888889)",
                "6 * 7 = 42 (left: 8 9 42)"
            ]
        },
        "step_7": {
            "steps": [
                "6 / 7 = 0.857 (left: 0.857 8 9)\n0.857 + 8 = 8.857 (left: 8.857 9)",
                "8 / 9 = 0.888889 (left: 6 7 0.888889)\n7 + 6 = 13 (left: 13 0.888889)\n13 / 0.888889 = 14.625 (left: 14.625)",
                "6 * 7 = 42 (left: 8 9 42)\nInput: 3 7 21"
            ],
            "values": [
                2.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 5.0",
                "2 <- 5.0"
            ],
            "resampled_steps": [
                "",
                "8 / 9 = 0.889 (left: 6 7 0.889)\n7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 0.889)",
                "8 / 9 = 0.889 (left: 6 7 0.889)\n7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 0.889)"
            ]
        },
        "step_8": {
            "steps": [
                "8 / 9 = 0.889 (left: 6 7 0.889)",
                "8 / 9 = 0.889 (left: 6 7 0.889)\n7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 0.889)\n0.889 + 1.1666666666666667 = 2.0556666666666667 (left: 1.1666666666666667 2.0556666666666667)",
                "8 / 9 = 0.889 (left: 6 7 0.889)\n7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 0.889)\n1.1666666666666667 / 0.889 = 1.3104205776173284 (left: 1.3104205776173284)"
            ],
            "values": [
                3.0,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 7.0",
                "1 <- 8.1",
                "2 <- 8.1"
            ],
            "resampled_steps": [
                "6 / 7 = 0.857 (left: 0.857 8 9)\n0.857 + 8 = 8.857 (left: 8.857 9)",
                "8 / 9 = 0.889 (left: 6 7 0.889)\n7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 0.889)\n0.889 + 1.1666666666666667 = 2.0556666666666667 (left: 1.1666666666666667 2.0556666666666667)",
                "8 / 9 = 0.889 (left: 6 7 0.889)\n7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 0.889)\n0.889 + 1.1666666666666667 = 2.0556666666666667 (left: 1.1666666666666667 2.0556666666666667)"
            ]
        },
        "step_9": {
            "steps": [
                "6 / 7 = 0.857 (left: 0.857 8 9)\n0.857 + 8 = 8.857 (left: 8.857 9)\n8.857 * 9 = 79.713 (left: 79.713)",
                "8 / 9 = 0.889 (left: 6 7 0.889)\n7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 0.889)\n0.889 + 1.1666666666666667 = 2.0556666666666667 (left: 1.1666666666666667 2.0556666666666667)\n1.1666666666666667 * 2.0556666666666667 = 2.3996913580246915 (left: 2.3996913580246915)",
                "8 / 9 = 0.889 (left: 6 7 0.889)\n7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 0.889)\n0.889 + 1.1666666666666667 = 2.0556666666666667 (left: 1.1666666666666667 2.0556666666666667)\n1.1666666666666667 + 2.0556666666666667 = 3.2223333333333334 (left: 3.2223333333333334)"
            ],
            "values": [
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 8.1",
                "1 <- 8.1",
                "2 <- 8.1"
            ],
            "resampled_steps": [
                "8 / 9 = 0.889 (left: 6 7 0.889)\n7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 0.889)\n0.889 + 1.1666666666666667 = 2.0556666666666667 (left: 1.1666666666666667 2.0556666666666667)",
                "8 / 9 = 0.889 (left: 6 7 0.889)\n7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 0.889)\n0.889 + 1.1666666666666667 = 2.0556666666666667 (left: 1.1666666666666667 2.0556666666666667)",
                "8 / 9 = 0.889 (left: 6 7 0.889)\n7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 0.889)\n0.889 + 1.1666666666666667 = 2.0556666666666667 (left: 1.1666666666666667 2.0556666666666667)"
            ]
        },
        "step_10": {
            "steps": [
                "8 / 9 = 0.889 (left: 6 7 0.889)\n7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 0.889)\n0.889 + 1.1666666666666667 = 2.0556666666666667 (left: 1.1666666666666667 2.0556666666666667)\n1.1666666666666667 / 2.0556666666666667 = 0.5670103092783506 (left: 0.5670103092783506)",
                "8 / 9 = 0.889 (left: 6 7 0.889)\n7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 0.889)\n0.889 + 1.1666666666666667 = 2.0556666666666667 (left: 1.1666666666666667 2.0556666666666667)\n1.1666666666666667 / 2.0556666666666667 = 0.5672436753638633 (left: 0.5672436753638633)",
                "8 / 9 = 0.889 (left: 6 7 0.889)\n7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 0.889)\n0.889 + 1.1666666666666667 = 2.0556666666666667 (left: 1.1666666666666667 2.0556666666666667)\n2.0556666666666667 / 1.1666666666666667 = 1.761904761904762 (left: 1.761904761904762)"
            ],
            "values": [
                0.003,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.0897995
    }
}