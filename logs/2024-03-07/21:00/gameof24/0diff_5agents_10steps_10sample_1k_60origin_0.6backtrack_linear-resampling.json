{
    "0": {
        "puzzle": "1 1 4 6",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6)",
                "6 - 1 = 5 (left: 1 4 5)",
                "4 + 1 = 5 (left: 1 5 6)",
                "6 - 4 = 2 (left: 1 2 6)",
                "6 - 1 = 5 (left: 1 4 5)"
            ],
            "Evaluation": [
                41.0,
                21.0,
                0.002,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.1",
                "2 <- 0.0",
                "3 <- 0.0",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "6 - 1 = 5 (left: 1 4 5) || 5 / 1 = 5 (left: 5 5)",
                "6 - 1 = 5 (left: 1 4 5) || 5 - 1 = 4 (left: 4 5)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 1 = 5 (left: 4 5)",
                "6 - 4 = 2 (left: 1 2 6)"
            ],
            "Evaluation": [
                0.002,
                3.0,
                60.0,
                2.001,
                1.002
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.0",
                "2 <- 1.4",
                "3 <- 1.2",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 4 6) || 1 * 4 = 4 (left: 4 6)",
                "6 - 4 = 2 (left: 1 2 6) || 2 + 6 = 8 (left: 1 8)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 5 + 10 = 15 (left: 15)",
                "1 / 1 = 1 (left: 1 4 6)"
            ],
            "Evaluation": [
                60.0,
                60.0,
                21.001,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 0.1",
                "2 <- 2.0",
                "3 <- 2.4",
                "4 <- 2.0"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24 24)",
                "6 - 1 = 5 (left: 1 4 5) || 1 * 4 = 4 (left: 4 4)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 + 24 = 25 (left: 25)",
                "1 / 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                20.001,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 3.4",
                "2 <- 2.0",
                "3 <- 3.4",
                "4 <- 3.3"
            ]
        },
        "Step 4": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24) || Answer: (1 * 1) * (4 * 6) = 24",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24) || Answer: (1 * 1) * (4 * 6) = 24",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24) || Answer: (1 * 1) * (4 * 6) = 24",
                "1 / 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 - 1 = 23 (left: 23)"
            ]
        },
        "Input": "1 1 4 6",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "1": {
        "puzzle": "1 1 11 11",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "11 - 1 = 10 (left: 1 10 11)",
                "11 / 1 = 11 (left: 1 11 ",
                "11 - 1 = 10 (left: 1 11 10)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                0.003,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11)",
                "11 - 1 = 10 (left: 1 10 11)",
                "11 - 1 = 10 (left: 1 11 10)",
                "1 + 1 = 2 (left: 2 11 11)",
                "1 * 1 = 1 (left: 1 11 11)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                1.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "11 - 1 = 10 (left: 1 10 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "1 - 1 = 0 (left: 0 11 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "1 + 1 = 2 (left: 2 11 11)"
            ],
            "Evaluation": [
                0.003,
                20.002,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 2.1",
                "2 <- 1.2",
                "3 <- 2.1",
                "4 <- 2.1"
            ]
        },
        "Step 3": {
            "steps": [
                "11 / 1 = 11 (left: 1 11 ",
                "1 * 1 = 1 (left: 1 11 11) || 11 / 1 = 11 (left: 11 11 11)",
                "11 - 1 = 10 (left: 1 11 10) || 11 - 1 = 10 (left: 10 10)",
                "1 * 1 = 1 (left: 1 11 11) || 11 / 1 = 11 (left: 11 11)",
                "1 * 1 = 1 (left: 1 11 11) || 1 + 11 = 12 (left: 11 11 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- 2.1",
                "3 <- 2.1",
                "4 <- 2.1"
            ]
        },
        "Step 4": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11) || 11 / 1 = 11 (left: 11 11)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 1 = 10 (left:",
                "1 * 1 = 1 (left: 1 11 11) || 1 * 11 = 11 (left: 11 11)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 11 = 0 (left: 1 11)",
                "1 * 1 = 1 (left: 1 11 11) || 3 + 6 = 9 (left: 6 9)"
            ],
            "Evaluation": [
                0.003,
                40.001,
                0.003,
                40.0,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 4.1",
                "2 <- 4.3",
                "3 <- 4.1",
                "4 <- 4.1"
            ]
        },
        "Step 5": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11) || 1 * 11 = 11 (left: 11 11)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 1 = 10 (left: || 11 / 1 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 11 = 0 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 1 = 10 (left: || 11 - 1 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 1 = 10 (left: || 11 + 1 = 12 (left: 1 12)"
            ],
            "Evaluation": [
                1.002,
                0.001,
                0.003,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 4.3",
                "2 <- 4.3",
                "3 <- 4.3",
                "4 <- 4.3"
            ]
        },
        "Step 6": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11) || 11 - 11 = 0 (left: 1 11) || 11 / 1 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 11 = 0 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 11 = 0 (left: 1 11) || 1 + 11 = 12",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 11 = 0 (left: 1 11) || 11 / 1 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 11 = 0 (left: 1 11) || 1 + 11 = 12 (left: 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 4.1",
                "1 <- 4.1",
                "2 <- 4.3",
                "3 <- 4.1",
                "4 <- 4.3"
            ]
        },
        "Step 7": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11) || 11 - 1 = 10 (left: || 11 + 1 = 12 (left: 10)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 1 = 10 (left: || 11 / 1 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 11 = 0 (left: 1 11) || 1 + 11 = 12 (left: 12)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 1 = 10 (left: || 1 * 1 = 1 (left: 11)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 11 = 0 (left: 1 11) || 1 * 11 = 11 (left: 11)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.002,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 4.1",
                "2 <- 4.3",
                "3 <- 4.1",
                "4 <- 4.1"
            ]
        },
        "Step 8": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11) || 11 - 11 = 0 (left: 1 11) || 6 + 3 = 9 (left: 9)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 1 = 10 (left: || 7 / ",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 11 = 0 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 1 = 10 (left: || 11 + 1 = 12 (left: 12)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 1 = 10 (left: || 11 - 10 = 1"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 4.3",
                "2 <- 4.3",
                "3 <- 4.1",
                "4 <- 4.1"
            ]
        },
        "Step 9": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11) || 11 - 11 = 0 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 11 = 0 (left: 1 11) || 11 * 1 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 11 = 0 (left: 1 11) || 1 + 11 = 12 (left: 12)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 1 = 10 (left: || 11 + 1 = 12 (left: 12)",
                "1 * 1 = 1 (left: 1 11 11) || 11 - 1 = 10 (left: || 11 / 1 = 11 (left: 1 11)"
            ]
        },
        "Input": "1 1 11 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "2": {
        "puzzle": "1 1 3 8",
        "Step 0": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 8)",
                "8 - 3 = 5 (left: 1 1 5)",
                "8 - 3 = 5 (left: 1 3 5)",
                "1 + 1 = 2 (left: 2 3 8)",
                "3 * 1 = 3 (left: 3 1 8)"
            ],
            "Evaluation": [
                2.0,
                2.001,
                1.002,
                2.001,
                60.0
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.1",
                "2 <- INIT",
                "3 <- 0.4",
                "4 <- 0.4"
            ]
        },
        "Step 1": {
            "steps": [
                "3 * 1 = 3 (left: 3 1 8) || 8 / 3 = 2 (left: 2 3)",
                "8 - 3 = 5 (left: 1 1 5) || 1 + 1 = 2 (left: 2 5)",
                "3 + 1 = 4 (left: 1 4 8)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8)",
                "3 * 1 = 3 (left: 3 1 8) || 1 + 8 = 9 (left: 3 9)"
            ],
            "Evaluation": [
                0.002,
                60.0,
                0.003,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 1.1",
                "2 <- 1.3",
                "3 <- 1.3",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "8 - 3 = 5 (left: 1 1 5) || 1 + 1 = 2 (left: 2 5) || 5 / 2 = 2.5 (left: 2.5)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 4 + 10 = 14 (left: 14)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                60.0,
                0.001,
                60.0
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 2.4",
                "2 <- 2.4",
                "3 <- 1.1",
                "4 <- 2.2"
            ]
        },
        "Step 3": {
            "steps": [
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (3 * 1) * (3 * 8) = 24",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (3 * 1) * (3 * 8) = 24",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (3 * 1) * (3 * 1) * 8 = 24",
                "8 - 3 = 5 (left: 1 1 5) || 1 + 1 = 2 (left: 2 5) || 2 + 5 = 7 (left: 7)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (3 * 1) * (3 * 1) * 8 = 24"
            ],
            "Evaluation": [
                0.001,
                60.0,
                60.0,
                40.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 3.3",
                "2 <- 1.3",
                "3 <- 3.1",
                "4 <- 2.4"
            ]
        },
        "Step 4": {
            "steps": [
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "8 - 3 = 5 (left: 1 1 5) || 1 + 1 = 2 (left: 2 5) || 2 + 5 = 7 (left: 7)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (3 * 1) * (3 * 8) = 24"
            ],
            "Evaluation": [
                60.0,
                0.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 4.0",
                "2 <- 4.3",
                "3 <- 4.4",
                "4 <- 3.2"
            ]
        },
        "Step 5": {
            "steps": [
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 5 * 10 = 50",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (3 * 1) * (3 * 1) * 8 = 24",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (3 * 1) * (3 * 1) * 8 = 24",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (3 * 1) * (3 * 1 * 8) = 24",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                60.0,
                22.0,
                60.0
            ],
            "Resampling": [
                "0 <- 5.4",
                "1 <- 5.2",
                "2 <- 5.2",
                "3 <- 3.1",
                "4 <- 0.4"
            ]
        },
        "Step 6": {
            "steps": [
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 10 - 5 = 5 (left: 5)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 8 / 3 = 2.66667 (left: 2.66667)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.002,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 6.4",
                "1 <- 4.3",
                "2 <- 3.1",
                "3 <- 4.4",
                "4 <- 5.4"
            ]
        },
        "Step 7": {
            "steps": [
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (1 * 3) * (1 * 8) = 24",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 10 / 5 = 2 (",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (3 * 1) * (3 * 8) = 24",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)"
            ]
        },
        "Input": "1 1 3 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "3": {
        "puzzle": "1 1 1 8",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 ",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 * 1 = 1 (left: 1 1 8)",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 + 8 = 9 (left: 1 1 9)"
            ],
            "Evaluation": [
                0.003,
                22.0,
                1.001,
                60.0,
                0.001
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.1",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 8 - 1 = 7 (left:",
                "1 * 8 = 8 (left: 1 1 ",
                "8 / 1 = 8 (left: 1 1 8)",
                "1 + 1 = 2 (left: 1 2 8) || 2 - 1 = 1 (left: 1 8)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8)"
            ],
            "Evaluation": [
                1.0,
                0.003,
                1.002,
                40.0,
                60.0
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 1.4",
                "2 <- 1.4",
                "3 <- 1.3",
                "4 <- 0.1"
            ]
        },
        "Step 2": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "1 + 1 = 2 (left: 1 2 8) || 2 - 1 = 1 (left: 1 8) || 8 / 1 = 8 (left: 8)",
                "1 + 1 = 2 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.001,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 2.4",
                "2 <- 0.3",
                "3 <- 2.4",
                "4 <- 2.4"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "1 + 1 = 2 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "1 + 1 = 2 (left: 1 2 8) || 3 + 5 = 8 (left:",
                "1 + 1 = 2 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "1 + 1 = 2 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.002,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 0.3",
                "2 <- 2.4",
                "3 <- 0.3",
                "4 <- INIT"
            ]
        },
        "Step 4": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "1 + 1 = 2 (left: 1 2 8) || 8 / 1 = 8 (left: 2 8)",
                "1 + 1 = 2 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 1 2 8)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                60.0,
                22.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 4.4",
                "2 <- 4.4",
                "3 <- 4.3",
                "4 <- 4.4"
            ]
        },
        "Step 5": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 1 2 8) || 8 - 1 = 7 (left:",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 9",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8)"
            ],
            "Evaluation": [
                0.002,
                60.0,
                3.0,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 4.4",
                "1 <- 4.3",
                "2 <- 5.1",
                "3 <- 4.4",
                "4 <- 5.1"
            ]
        },
        "Step 6": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 8 / 2 = 4 (left: 1 4)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)"
            ],
            "Evaluation": [
                60.0,
                0.001,
                60.0,
                60.0,
                0.001
            ],
            "Resampling": [
                "0 <- 5.2",
                "1 <- 6.3",
                "2 <- 5.1",
                "3 <- 6.2",
                "4 <- 1.4"
            ]
        },
        "Step 7": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 8 - 1 = 7 (left: || 8 / 1 = 8 (left: 8 8)",
                "1 + 1 = 2 (left: 1 2 8) || 2 + 8 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (1 + 1) * (1 + 8) = 24",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || Input: 4 6 12"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.002,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 7.4",
                "1 <- 6.2",
                "2 <- 6.2",
                "3 <- 7.4",
                "4 <- 4.3"
            ]
        },
        "Step 8": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (1 + 1) * (1 + 8) = 24",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (1 + 1) * (1 + 8) = 24",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (1 + 1) * (1 + 8) = 24",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: ((1 + 1) + 1) * 8 = 24",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)"
            ]
        },
        "Input": "1 1 1 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "4": {
        "puzzle": "6 6 6 6",
        "Step 0": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6)",
                "6 * 6 = 36 (left: 6 6 36 6)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 - 6 = 0 (left: 0 6 6)"
            ],
            "Evaluation": [
                41.0,
                1.001,
                41.0,
                22.0,
                20.002
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.2",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.3"
            ]
        },
        "Step 1": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6)",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6 6)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 + 6 = 12 (left: 6 12 6) || 12 - 6 = 6 (left: 6 6)"
            ],
            "Evaluation": [
                21.001,
                3.0,
                41.0,
                21.0,
                20.002
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 0.2",
                "2 <- 1.0",
                "3 <- 0.2",
                "4 <- 1.4"
            ]
        },
        "Step 2": {
            "steps": [
                "6 / 6 = 1 (left: 1 6 6) || 6 * 1 = 6 (left: 6 6)",
                "6 / 6 = 1 (left: 1 6 6) || 1 + 6 = 7 (left: 6 6 7)",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6) || 72 - 6 = 66 (left: 66)",
                "6 / 6 = 1 (left: 1 6 6) || 1 + 6 = 7 (left: 6 7)",
                "6 + 6 = 12 (left: 6 12 6) || 12 - 6 = 6 (left: 6 6) || 6 + 6 = 12 (left: 12)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 1.3",
                "2 <- 1.0",
                "3 <- 1.3",
                "4 <- 1.2"
            ]
        },
        "Step 3": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6) || 12 - 6 = 6 (left: 6 6) || 6 / 6 = 1 (left: 1)",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6)",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6) || 72 - 6 = 66 (left: 66)",
                "6 / 6 = 1 (left: 1 6 6) || 6 - 1 = 5 (left: 5 6)",
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6)"
            ],
            "Evaluation": [
                0.002,
                20.002,
                0.003,
                1.001,
                20.002
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 1.3",
                "2 <- 3.3",
                "3 <- 3.1",
                "4 <- 0.0"
            ]
        },
        "Step 4": {
            "steps": [
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6) || 6 + 6 = 12 (left: 12)",
                "6 / 6 = 1 (left: 1 6 6) || 6 - 1 = 5 (left: 5 6)",
                "6 / 6 = 1 (left: 1 6 6) || 6 - 1 = 5 (left: 5 6) || 5 * 6 = 30 (left: 30)",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) ",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                40.0,
                40.001
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 1.3",
                "2 <- 4.4",
                "3 <- 0.4",
                "4 <- 4.4"
            ]
        },
        "Step 5": {
            "steps": [
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6) || 6 - 6 = 0 (left: 0)",
                "6 / 6 = 1 (left: 1 6 6) || 6 - 6 = 0 (left: 1)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6) || 18 - 6 = 12 (left: 12)",
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6) || 18 / 6 = 3 (left: 3)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                21.001,
                0.0
            ],
            "Resampling": [
                "0 <- 5.3",
                "1 <- 4.4",
                "2 <- 3.1",
                "3 <- 4.4",
                "4 <- 4.3"
            ]
        },
        "Step 6": {
            "steps": [
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6) || 6 / 18 = 0.333",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6) || 6 + 6 = 12 (left: 12)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6) || 18 / 6 = 3 (left: 3)",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36)  || 36 / 2 = 18"
            ],
            "Evaluation": [
                60.0,
                0.003,
                0.002,
                0.0,
                0.003
            ],
            "Resampling": [
                "0 <- 4.4",
                "1 <- 6.0",
                "2 <- 6.0",
                "3 <- 4.3",
                "4 <- 6.0"
            ]
        },
        "Step 7": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6) || 6 * 18 = 108 (left: 108)",
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 + 2 = 38",
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || None - 36 is the final result.",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36)  || There are no possible next steps as there is only one number provided.",
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || There are no possible operations to perform on the number 36."
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 6.0",
                "1 <- 0.2",
                "2 <- 4.4",
                "3 <- 5.3",
                "4 <- 6.0"
            ]
        },
        "Step 8": {
            "steps": [
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18 (left: 18)",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6 6)",
                "6 + 6 = 12 (left: 6 12 6) || 6 + 12 = 18 (left: 18 6) || 18 * 6 = 108 (left: 108)",
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6) || 6 + 6 = 12 (left: 12)",
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18"
            ],
            "Evaluation": [
                1.001,
                0.003,
                0.003,
                0.003,
                20.0
            ],
            "Resampling": [
                "0 <- 8.4",
                "1 <- 6.0",
                "2 <- 6.0",
                "3 <- 8.4",
                "4 <- 6.0"
            ]
        },
        "Step 9": {
            "steps": [
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 + 2 = 38",
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || There are no possible next steps with the input of 36 as it is already a single number.",
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18"
            ]
        },
        "Input": "6 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "5": {
        "puzzle": "1 1 2 12",
        "Step 0": {
            "steps": [
                "12 / 2 = 6 (left: 1 2 6)",
                "1 + 1 = 2 (left: 2 2 12)",
                "1 + 1 = 2 (left: 2 2 12)",
                "12 - 2 = 10 (left: 1 2 10)",
                "1 + 1 = 2 (left: 2 2 12)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                0.003,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "12 - 1 = 11 (left: 1 2 ",
                "2 * 1 = 2 (left: 2 2 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "12 / 2 = 6 (left: 1 2 6)",
                "1 + 1 = 2 (left: 2 2 12)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                60.0,
                0.003,
                20.002
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- 1.4",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "1 * 1 = 1 (left: 1 2 12) || 2 + 12 = 14 (left:",
                "1 + 1 = 2 (left: 2 2 12) || 12 - 2 = 10 (left: 2 10)",
                "12 - 1 = 11 (left: 1 2 11)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                0.001,
                3.0,
                0.002
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 2.0",
                "2 <- 1.4",
                "3 <- INIT",
                "4 <- 1.4"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 2 12) || 2 * 2 = 4 (left: 4 12)",
                "12 - 2 = 10 (left: 1 2 10)",
                "1 + 1 = 2 (left: 2 2 12) || 2 * 2 = 4 (left: 4 12)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.003,
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 3.3",
                "2 <- 1.2",
                "3 <- 2.0",
                "4 <- 1.2"
            ]
        },
        "Step 4": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (1 * 1) * (2 * 12) = 24",
                "12 - 2 = 10 (left: 1 2 10) || 10 - 1 = 9 (left: 2 9)",
                "1 * 1 = 1 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "1 * 1 = 1 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "1 * 1 = 1 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)"
            ]
        },
        "Input": "1 1 2 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "6": {
        "puzzle": "1 2 2 6",
        "Step 0": {
            "steps": [
                "2 / 1 = 2 (left: 2 2 6)",
                "1 * 2 = 2 (left: 2 2 6)",
                "2 * 2 = 4 (left: 4 2 6)",
                "6 / 2 = 3 (left: 2 3 ",
                "2 * 2 = 4 (left: 4 2 6)"
            ],
            "Evaluation": [
                60.0,
                60.0,
                1.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.0",
                "2 <- 0.1",
                "3 <- INIT",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "2 * 2 = 4 (left: 1 4 6)",
                "2 / 1 = 2 (left: 2 2 6) || Possible next steps:",
                "1 * 2 = 2 (left: 2 2 6) || 2 * 2 = 4 (left: 4 4)",
                "2 + 2 = 4 (left: 4 6 6)",
                "1 * 2 = 2 (left: 2 2 6) || Input: 2 4 4 6"
            ],
            "Evaluation": [
                60.0,
                0.003,
                0.003,
                22.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.3",
                "2 <- 0.0",
                "3 <- 1.3",
                "4 <- 0.1"
            ]
        },
        "Step 2": {
            "steps": [
                "2 * 2 = 4 (left: 1 4 6) || 1 + 4 = 5 (left: 5 6)",
                "2 + 2 = 4 (left: 4 6 6) || 6 - 4 = 2 (left: 2 6)",
                "2 / 1 = 2 (left: 2 2 6) || 2 * 2 = 4 (left: 4 6)",
                "2 + 2 = 4 (left: 4 6 6) || 4 * 6 = 24 (left: 6 24)",
                "1 * 2 = 2 (left: 2 2 6) || 6 / 2 = 3 (left: 2 3)"
            ],
            "Evaluation": [
                0.003,
                1.001,
                41.0,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 0.1",
                "2 <- 2.2",
                "3 <- 2.3",
                "4 <- 0.1"
            ]
        },
        "Step 3": {
            "steps": [
                "2 + 2 = 4 (left: 4 6 6) || 4 + 6 = 10 (left: 6 6 10)",
                "1 * 2 = 2 (left: 2 2 6) || 4 * 4 = 16 (left: 4",
                "2 / 1 = 2 (left: 2 2 6) || 2 * 2 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "2 + 2 = 4 (left: 4 6 6) || 4 * 6 = 24 (left: 6 24) || 24 - 6 = 18 (left: 18)",
                "1 * 2 = 2 (left: 2 2 6) || 6 / 2 = 3 (left: 2 3)"
            ],
            "Evaluation": [
                40.001,
                0.002,
                0.001,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 3.3",
                "2 <- 3.0",
                "3 <- 3.0",
                "4 <- 2.2"
            ]
        },
        "Step 4": {
            "steps": [
                "2 + 2 = 4 (left: 4 6 6) || 4 * 6 = 24 (left: 6 24) || 24 - 6 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "2 + 2 = 4 (left: 4 6 6) || 4 * 6 = 24 (left: 6 24) || 24 - 6 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "2 + 2 = 4 (left: 4 6 6) || 4 + 6 = 10 (left: 6 6 10) || 10 / 6 = 1.67 (left: 1.67 6)",
                "2 + 2 = 4 (left: 4 6 6) || 4 + 6 = 10 (left: 6 6 10) || 6 + 6 = 12 (left: 10 12)",
                "2 / 1 = 2 (left: 2 2 6) || 2 * 2 = 4 (left: 4 6) || 4 + 6 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.0,
                0.002,
                0.001
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.1",
                "2 <- 1.0",
                "3 <- 0.1",
                "4 <- 0.1"
            ]
        },
        "Step 5": {
            "steps": [
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6)",
                "1 * 2 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6)",
                "2 * 2 = 4 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24)",
                "1 * 2 = 2 (left: 2 2 6) || Possible",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 4 = 6 (left: 6"
            ],
            "Evaluation": [
                40.0,
                40.0,
                60.0,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 3.0",
                "2 <- 5.1",
                "3 <- 3.0",
                "4 <- 1.0"
            ]
        },
        "Step 6": {
            "steps": [
                "2 + 2 = 4 (left: 4 6 6) || 4 + 6 = 10 (left: 6 6 10) || 6 - 6 = 0 (left: 0 10)",
                "2 + 2 = 4 (left: 4 6 6) || 4 + 6 = 10 (left: 6 6 10) || 10 + 6 = 16 (left: 6 16)",
                "1 * 2 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "2 + 2 = 4 (left: 4 6 6) || 4 + 6 = 10 (left: 6 6 10) || 10 + 6 = 16 (left: 6 16)",
                "2 * 2 = 4 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2)"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.002,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 5.0",
                "2 <- 5.1",
                "3 <- 5.2",
                "4 <- 5.2"
            ]
        },
        "Step 7": {
            "steps": [
                "2 + 2 = 4 (left: 4 6 6) || 4 * 6 = 24 (left: 6 24) || 24 - 6 = 18 (left: 18) || There are no possible next steps as there are no other numbers provided to perform operations with.",
                "2 / 1 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || Input: 10 20 30",
                "1 * 2 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "2 * 2 = 4 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24)",
                "2 * 2 = 4 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.001,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 5.2",
                "1 <- 7.3",
                "2 <- 7.4",
                "3 <- 1.0",
                "4 <- 5.2"
            ]
        },
        "Step 8": {
            "steps": [
                "2 * 2 = 4 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24)",
                "2 * 2 = 4 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24) || Answer: (2 * 2) * 6 = 24",
                "2 * 2 = 4 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24) || Answer: (1 * 2) * (2 * 6) = 24",
                "2 * 2 = 4 (left: 1 4 6) || 1 + 4 = 5 (left: 5 6)",
                "2 * 2 = 4 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 * 1 = 24 (left: 24)"
            ]
        },
        "Input": "1 2 2 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "7": {
        "puzzle": "1 1 10 12",
        "Step 0": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 10 12)",
                "1 + 1 = 2 (left: 2 10 12)",
                "1 * 10 = 10 (left: 10 1 12)",
                "1 + 1 = 2 (left: 2 10 12)"
            ],
            "Evaluation": [
                20.002,
                1.002,
                0.003,
                1.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.0",
                "2 <- INIT",
                "3 <- 0.0",
                "4 <- 0.0"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 10 = 10 (left: 10 1 12) || 10 * 1 = 10 (left: 10 10 12)",
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 11 12)",
                "12 - 10 = 2 (left: 1 2 12)",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12)",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12)"
            ],
            "Evaluation": [
                1.002,
                0.002,
                60.0,
                20.002,
                60.0
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10)",
                "12 - 10 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12)",
                "12 - 10 = 2 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                60.0,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 1.4",
                "2 <- 2.4",
                "3 <- 2.2",
                "4 <- 2.4"
            ]
        },
        "Step 3": {
            "steps": [
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24)",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 - 1 = 23 (left: 23)",
                "12 - 10 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24)"
            ],
            "Evaluation": [
                60.0,
                60.0,
                0.003,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 3.0",
                "2 <- 1.4",
                "3 <- 3.4",
                "4 <- 2.4"
            ]
        },
        "Step 4": {
            "steps": [
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24) || Answer: 1 * (1 * (10 + 12)) = 24",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24) || Answer: (1 * (1 + 10)) * 12 = 24",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24) || Answer: (1 + (1 * (10 - 12))) * 24 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.002,
                60.0,
                40.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 1.4",
                "2 <- 3.4",
                "3 <- 1.2",
                "4 <- 3.0"
            ]
        },
        "Step 5": {
            "steps": [
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24) || Answer: (1 + (1 * 10)) * 12 = 24",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24) || Answer: (1 + (1 * 10)) * 12 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 2 - 1 = 1 (left: 1 12)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24) || Answer: (1 * (1 + 10)) * 12 = 24"
            ],
            "Evaluation": [
                0.003,
                0.003,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 3.3",
                "2 <- 5.3",
                "3 <- 4.4",
                "4 <- 4.4"
            ]
        },
        "Step 6": {
            "steps": [
                "12 - 10 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (1 * (1 * (10 - 12))) * 12 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (1 * (1 + 10)) * 12 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24) || Answer: (1 + (1 * 10)) + 12 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12)",
                "12 - 10 = 2 (left: 1 2 12) || 1 * 2 = 2 (left:"
            ],
            "Evaluation": [
                60.0,
                0.003,
                40.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 6.2",
                "1 <- 6.2",
                "2 <- 6.0",
                "3 <- 6.0",
                "4 <- 5.3"
            ]
        },
        "Step 7": {
            "steps": [
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24) || Answer: (1 + (1 + 10)) * 12 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24) || Answer: (1 + (1 * 10)) * 12 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "12 - 10 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24) || Answer: (1 + (1 * 10)) + 12 = 24"
            ],
            "Evaluation": [
                0.003,
                0.002,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 5.4",
                "2 <- 5.4",
                "3 <- 4.3",
                "4 <- 7.2"
            ]
        },
        "Step 8": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: (10 + 1) + (1 + 11) = 24",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24) || Answer: (1 + (1 * (10 - 12))) * 24 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24) || Answer: (1 + (1 * 10)) * 12 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24) || Answer: (1 + (12 - 10)) * 24 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 - 1 = 23 (left: 23)"
            ],
            "Evaluation": [
                0.002,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 8.1",
                "1 <- 8.4",
                "2 <- 7.4",
                "3 <- 8.3",
                "4 <- 5.3"
            ]
        },
        "Step 9": {
            "steps": [
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24) || Answer: (1 + (1 * 10)) + 12 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24) || Answer: (1 + (1 * 10)) * 12 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24) || Answer: (1 + (1 * (10 - 12))) * 24 = 24",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 25)",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24) || Answer: (1 + (1 * 10)) * 12 = 24"
            ]
        },
        "Input": "1 1 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "8": {
        "puzzle": "2 2 10 10",
        "Step 0": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "10 / 2 = 5 (left: 2 5 10)",
                "10 / 2 = 5 (left: 2 5 10)",
                "10 - 2 = 8 (left: 2 8 10)"
            ],
            "Evaluation": [
                20.002,
                1.002,
                0.003,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.3",
                "2 <- INIT",
                "3 <- 0.0",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10)",
                "2 + 2 = 4 (left: 4 10 10)",
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14)",
                "10 / 2 = 5 (left: 2 5 10)"
            ],
            "Evaluation": [
                0.003,
                20.002,
                20.002,
                1.002,
                21.001
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 1.4",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- 1.1"
            ]
        },
        "Step 2": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "10 / 2 = 5 (left: 2 5 10) || 10 / 2 = 5 (left: 5 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10)",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 + 10 = 20 (left: 20)"
            ],
            "Evaluation": [
                2.001,
                0.001,
                2.001,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 1.3",
                "2 <- 1.1",
                "3 <- 2.0",
                "4 <- 0.0"
            ]
        },
        "Step 3": {
            "steps": [
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 + 10 = 20",
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 10 + 10 = 20 (left: 20 14)",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 - 10 = 0 (left: 0)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 2.5 * 10 = 25 (left: 10 25)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                20.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 1.1",
                "2 <- 1.1",
                "3 <- 0.0",
                "4 <- 3.2"
            ]
        },
        "Step 4": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14)",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 + 10 = 20",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 + 10 = 20 (left: 20) ",
                "2 + 2 = 4 (left: 4 10 10) || 4 * 10 = 40 (left: 10 10 40)",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 - 10 = 0 (left: 0) || There are no possible next steps as there are no numbers given in the input."
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 1.1",
                "2 <- 3.2",
                "3 <- 2.2",
                "4 <- 1.4"
            ]
        },
        "Step 5": {
            "steps": [
                "10 / 2 = 5 (left: 2 5 10) || 10 / 5 = 2 (left: 2 2)",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 * 10 = 100 (left: 100)",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 - 10 = 0 (left: 0) || No possible next steps as there is no input given.",
                "2 + 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10) || 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10 10)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 2 = 8 (left: 2 8 10)"
            ],
            "Evaluation": [
                21.0,
                0.003,
                0.003,
                2.001,
                1.002
            ],
            "Resampling": [
                "0 <- 5.0",
                "1 <- 5.3",
                "2 <- 1.1",
                "3 <- 5.0",
                "4 <- 3.2"
            ]
        },
        "Step 6": {
            "steps": [
                "10 / 2 = 5 (left: 2 5 10) || 10 / 5 = 2 (left: 2 2) || 2 + 2 = 4",
                "2 + 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10) || 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10 10) || 10 + 1.6666666666666667 = 11.666666666666666 (left: 10 11.666666666666666)",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 / 10 = 1 (left: 1)",
                "10 / 2 = 5 (left: 2 5 10) || 10 / 5 = 2 (left: 2 2) || 2 + 2 = 4",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 - 10 = 0 (left: 0) || There are no possible next steps with the input 0."
            ],
            "Evaluation": [
                0.003,
                3.0,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 5.0",
                "1 <- 3.2",
                "2 <- 5.0",
                "3 <- 5.0",
                "4 <- 3.2"
            ]
        },
        "Step 7": {
            "steps": [
                "10 / 2 = 5 (left: 2 5 10) || 10 / 5 = 2 (left: 2 2) || 2 + 2 = 4",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 - 10 = 0 (left: 0) || There are no possible next steps since there is no input provided.",
                "10 / 2 = 5 (left: 2 5 10) || 10 / 5 = 2 (left: 2 2) || 2 + 2 = 4",
                "10 / 2 = 5 (left: 2 5 10) || 10 / 5 = 2 (left: 2 2) || 2 + 2 = 4",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 - 10 = 0 (left: 0) || No possible next steps."
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 5.0",
                "1 <- 6.1",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- 3.2"
            ]
        },
        "Step 8": {
            "steps": [
                "10 / 2 = 5 (left: 2 5 10) || 10 / 5 = 2 (left: 2 2) || 2 - 2 = 0 (left: 0)",
                "2 + 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10) || 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10 10) || 10 + 1.6666666666666667 = 11.666666666666666 (left: 10 11.666666666666666) || 10 - 11.666666666666666 = -1.666666666666666 (left: -1.666666666666666 11.666666666666666)",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left",
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10)",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 - 10 = 0 (left: 0) || No possible next steps."
            ],
            "Evaluation": [
                0.002,
                1.001,
                0.0,
                2.0,
                0.003
            ],
            "Resampling": [
                "0 <- 8.3",
                "1 <- 3.2",
                "2 <- 5.0",
                "3 <- 1.1",
                "4 <- 8.1"
            ]
        },
        "Step 9": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2.5 (left: 2.5 10 10) || 10 - 2.5 = 7.5 (left: 7.5 10)",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 - 10 = 0 (left: 0) || There are no possible next steps as the input is 0.",
                "10 / 2 = 5 (left: 2 5 10) || 10 / 5 = 2 (left: 2 2) || 2 + 2 = 4",
                "10 / 2 = 5 (left: 2 5 10) || 5 * 2 = 10 (left: 10 10) || 10 + 10 = 20 (left: 20)",
                "2 + 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10) || 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10 10) || 10 + 1.6666666666666667 = 11.666666666666666 (left: 10 11.666666666666666) || 10 - 11.666666666666666 = -1.666666666666666 (left: -1.666666666666666 11.666666666666666) || -1.666666666666666 / 11.666666666666666 = -0.14285714285714285 (left: -0.142857142"
            ]
        },
        "Input": "2 2 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "9": {
        "puzzle": "1 1 1 12",
        "Step 0": {
            "steps": [
                "12 - 1 = 11 (left: 1 1 11)",
                "1 + 1 = 2 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "12 - 1 = 11 (left: 1 1 11)",
                "1 + 1 = 2 (left: 1 2 12)"
            ],
            "Evaluation": [
                1.002,
                60.0,
                60.0,
                1.002,
                60.0
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- INIT",
                "2 <- 0.4",
                "3 <- 0.1",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "1 / 1 = 1 (left: 1 1 12)",
                "1 + 1 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10)",
                "1 + 1 = 2 (left: 1 2 12) || 2 + 12 = 14 (left: 1 14)"
            ],
            "Evaluation": [
                20.002,
                41.0,
                60.0,
                60.0,
                20.001
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 1.3",
                "2 <- 1.2",
                "3 <- 1.3",
                "4 <- 0.4"
            ]
        },
        "Step 2": {
            "steps": [
                "1 / 1 = 1 (left: 1 1 12) || 1 + 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "1 + 1 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "1 + 1 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "1 + 1 = 2 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)"
            ],
            "Evaluation": [
                60.0,
                0.001,
                0.003,
                0.002,
                1.002
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 1.2",
                "2 <- 1.4",
                "3 <- 1.2",
                "4 <- 1.4"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "1 + 1 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 12) || 2 + 12 = 14 (left: 1 14) || 1 + 14 = 15 (left: 14)",
                "1 + 1 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 12) || 2 + 12 = 14 (left: 1 14) || 1 + 14 = 15 (left: 15)"
            ],
            "Evaluation": [
                0.002,
                60.0,
                0.002,
                60.0,
                0.002
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 1.3",
                "2 <- 3.3",
                "3 <- 3.3",
                "4 <- 3.3"
            ]
        },
        "Step 4": {
            "steps": [
                "1 / 1 = 1 (left: 1 1 12) || 1 * 1 = 1 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 12) || 12 - 2 = 10 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "1 + 1 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (1 + 1) * (1 * 12) = 24",
                "1 + 1 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (1 + 1) * (1 * 12) = 24",
                "1 + 1 = 2 (left: 1 2 12) || 1 * 2 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (1 * (1 + 1)) * 12 = 24"
            ]
        },
        "Input": "1 1 1 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    }
}