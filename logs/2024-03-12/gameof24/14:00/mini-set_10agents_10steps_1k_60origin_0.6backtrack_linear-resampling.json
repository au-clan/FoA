{
    "0": {
        "puzzle": "1 1 4 6",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6)",
                "6 - 1 = 5 (left: 1 4 5)",
                "4 + 1 = 5 (left: 1 5 6)",
                "6 - 4 = 2 (left: 1 2 6)",
                "6 - 1 = 5 (left: 1 4 5)",
                "6 - 1 = 5 (left: 1 4 5)",
                "6 - 4 = 2 (left: 1 2 6)",
                "4 * 1 = 4 (left: ",
                "6 - 4 = 2 (left: 1 2 6)",
                "6 - 1 = 5 (left: 1 4 5)"
            ],
            "Pruning": [],
            "Evaluation": [
                41.0,
                21.0,
                0.002,
                1.002,
                1.002,
                1.002,
                0.003,
                0.0,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.0",
                "2 <- 0.0",
                "3 <- 0.0",
                "4 <- 0.0",
                "5 <- 0.0",
                "6 <- 0.0",
                "7 <- 0.1",
                "8 <- 0.4",
                "9 <- 0.0"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2)",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 4 6) || 1 * 4 = 4 (left: 4 6)",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2)",
                "1 * 1 = 1 (left: 1 4 6) || 4 - 1 = 3 (left: 3 6)",
                "1 * 1 = 1 (left: 1 4 6) || 1 + 4 = 5 (left: 5 6)",
                "6 - 1 = 5 (left: 1 4 5) || 5 - 4 = 1 (left:",
                "6 - 1 = 5 (left: 1 4 5) || 4 + 1 = 5 (left: 5 5)",
                "1 * 1 = 1 (left: 1 4 6) || 27 / 3 = 9 (left: 9"
            ],
            "Pruning": [],
            "Evaluation": [
                0.002,
                1.002,
                60.0,
                60.0,
                0.002,
                3.0,
                0.003,
                0.001,
                0.002,
                0.001
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- INIT",
                "2 <- 1.2",
                "3 <- 1.3",
                "4 <- 1.2",
                "5 <- 1.3",
                "6 <- 0.1",
                "7 <- 1.2",
                "8 <- 1.2",
                "9 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 6 - 1 = 5 (left: 4 5)",
                "1 * 4 = 4 (left: 4 4 6)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || Possible next steps:",
                "1 * 1 = 1 (left: 1 4 6) || 1 * 4 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24 24)",
                "1 * 1 = 1 (left: 1 4 6) || 1 * 4 = 4 (left: 4 6) || 4 + 6 = 10 (left: 10)",
                "6 - 1 = 5 (left: 1 4 5) || 1 + 4 = 5 (left: 5 5)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 + 1 = 25 (left: 25)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24)"
            ],
            "Pruning": [],
            "Evaluation": [
                3.0,
                3.0,
                0.003,
                60.0,
                60.0,
                0.002,
                0.002,
                60.0,
                20.001,
                60.0
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 2.4",
                "2 <- 2.4",
                "3 <- 0.0",
                "4 <- 2.3",
                "5 <- 1.3",
                "6 <- 2.7",
                "7 <- 1.2",
                "8 <- 0.0",
                "9 <- 2.9"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 1 * 4 = 4 (left: 4 6) || Input: 10 20 30",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24 24) || 24 + 24 = 48",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24 24) || 24 + 24 = 48",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 1 = ",
                "1 * 1 = 1 (left: 1 4 6) || 1 * 4 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 1) * (4 * 6) = 24",
                "1 * 1 = 1 (left: 1 4 6) || 1 * 4 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24) || Answer: (1 * 1) * (4 * 6) = 24",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 - 24 = 0 (left: 0)",
                "1 * 1 = 1 (left: 1 4 6) || 1 + 4 = 5 (left: 5 6)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 6 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24) || Answer: 1 * (1 * 4 * 6) = 24"
            ]
        },
        "Input": "1 1 4 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "Cost": {
        "input_tokens": 40478,
        "output_tokens": 5057.6,
        "total_cost": 0.0278254
    }
}