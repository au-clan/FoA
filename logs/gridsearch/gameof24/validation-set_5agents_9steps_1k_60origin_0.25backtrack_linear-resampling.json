{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 12"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "1 6 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 6 "
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 12"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 12"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "4 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 + 3 = 15 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3 12"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "9 12"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "9 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 6 "
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "9 12"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 * 12 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "9 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3 12"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 3 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 12"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 9 30 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "9 30 12"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 9 30 12) -> 12 * 9 = 108 (left: 30 108)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 6 "
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 12"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "3 12"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 5 15 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 6 "
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 6 "
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "9 12"
                }
            },
            "Step 7": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 12"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 12"
                }
            },
            "Step 8": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "9 12"
                }
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 - 6 = 5 (left: 5 19) -> 5 + 19 = 24 (left: 24) -> Answer: ((6 + 9) + 10) - 11 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 9 + 11 = 20 (left: 20 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "10 11 15"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 11 * 15 = 165 (left: 10 165)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 - 6 = 5 (left: 5 19) -> 5 + 19 = 24 (left: 24) -> Answer: (11 - 6) + (9 + 10) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 9 11 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 11 44)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 19"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 - 6 = 5 (left: 5 19) -> 5 / 19 \u2248 0.263 (left: 0.263)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 - 6 = 5 (left: 5 19) -> 5 + 19 = 24 (left: 24) -> Answer: (11 - 6) + (9 + 10) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 19"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 - 6 = 5 (left: 5 19) -> 5 + 19 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 - 6 = 5 (left: 5 19) -> 5 + 19 = 24 (left: 24) -> Answer: ((9 + 10) - 6) + 11 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 - 6 = 5 (left: 5 19)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 11 = 43 (left: 10 43)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 - 6 = 5 (left: 5 19) -> 5 + 19 = 24 (left: 24) -> Answer: ((6 + 9) + 10) + 11 = 24"
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 11 / 5 = 2.2 (left: 2.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 + 16 = 24 (left: 24) -> Answer: (4 * 2) + (5 + 11) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 / 16 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 + 16 = 24 (left: 24) -> Answer: (4 * 2) + (5 + 11) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 + 11 = 12"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 3"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)"
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 1 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5 10"
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 10 - 1 = 9 (left: 9 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 40"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 40 - 40 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 40"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 40 - 40 = 0 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 40"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 40 / 1 = 40 (left: 1 40)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 40"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 40 / 1 = 40 (left: 1 40) -> 40 / 1 = 40 (left: 40)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 5 8"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> Input: 3 9 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 40"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 40 - 1 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 40"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 1 - 40 = -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 40"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 1 / 40 = 0.025 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 40"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 40 / 1 = 40 (left: 1 40) -> 1 + 40 = 41 (left: 41)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 1 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 5 10"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 5 10) -> 5 + 3 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 40"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 40 - 1 = 39 (left: 1 39)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 40"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 1 * 40 = 40 (left: 40 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 40"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 1 + 40 = 41 (left: 40 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 40"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 40 / 1 = 40 (left: 1 40) -> 15 - 5 =",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 5 8"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 5 8"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 40"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 1 + 40 = 41 (left: 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 40"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 1 / 40 = 0.025 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 40"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 40 / 1 = 40 (left: 1 40) -> 40 - 1 = 39 (left: 39)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5 10"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 10 - 1 = 9 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 5 8"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 40"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 40 - 1 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 40"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 40 / 1 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 40"
                }
            },
            "Step 7": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 1 + 40 = 41 (left: 40 41)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 40"
                }
            },
            "Step 8": {
                "Step": "10 - 2 = 8 (left: 1 5 8) -> 5 * 8 = 40 (left: 1 40) -> 40 / 1 = 40 (left: 1 40) -> 1 * 40 = 40 (left: 40)",
                "Pruning": "NA"
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 / 2 = 1 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 7 - 3 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 4 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 7 - 3 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4 5"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "4 5"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 7 - 3 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4 5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 2 + 5 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 10 + 5 = 15 (left: 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 + 2 = 6 (left: 6 5) -> 6 + 5 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 7 - 3 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 7 - 3 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4 5"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "4 5"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 7 - 3 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 7 - 3 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 7 - 3 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4 5"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "4 5"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 7 - 3 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4 5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 2 * 5 = 10 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 2 * 5 = 10 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 7 - 3 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 7 - 3 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4 5"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "4 5"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 7 - 3 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 10 - 3 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "4 5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 3 5"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 3 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "4 9"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 7 - 3 = 4 (left: 4 9) -> Input: 3 12 6",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "4 5"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 7 - 3 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4 5"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "4 5"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 - 2 = 2 (left: 2 5) -> 7 - 3 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4 5"
                }
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 2": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 13 19"
                }
            },
            "Step 3": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 19 - 12 = 7 (left: 7 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "13 13 72"
                }
            },
            "Step 4": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 / 13 = 1 (left: 1 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "13 / 6 = 2.16666666667 (left:"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: -> 13 * 6 = 78 (left: 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "12 247"
                }
            },
            "Step 6": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 13 * 19 = 247 (left: 12 247) -> 247 / 12 = 20.583333333333332 (left: 20.583333333333332)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20.583333333333332"
                }
            },
            "Step 7": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 13 * 19 = 247 (left: 12 247) -> 247 / 12 = 20.583333333333332 (left: 20.583333333333332) -> 20.583333333333332 + 2 = 22.583333333333332",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20.583333333333332"
                }
            },
            "Step 8": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 13 * 19 = 247 (left: 12 247) -> 247 / 12 = 20.583333333333332 (left: 20.583333333333332) -> 20.583333333333332 + 2 = 22.583333333333332",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 2": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.1667 (left: 2.1667 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 13"
                }
            },
            "Step 4": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 19 - 12 = 7 (left: 7 13) -> 7 + 13 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "13 / 6 = 2.16666666667 (left:"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: -> None",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "12 247"
                }
            },
            "Step 6": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 13 * 19 = 247 (left: 12 247) -> 247 / 12 = 20.583333333333332 (left: 20.583333333333332)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20.583333333333332"
                }
            },
            "Step 7": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 13 * 19 = 247 (left: 12 247) -> 247 / 12 = 20.583333333333332 (left: 20.583333333333332) -> 20.583333333333332 / 2 = 10.291666666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20.583333333333332"
                }
            },
            "Step 8": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 13 * 19 = 247 (left: 12 247) -> 247 / 12 = 20.583333333333332 (left: 20.583333333333332) -> 20.583333333333332 - 2 = 18.583333333333332",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 13 19"
                }
            },
            "Step 3": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 19 - 12 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 + 13 = 19 (left: 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "78"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: -> 13 * 6 = 78 (left: 78) -> 8 - 7 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "12 247"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20.583333333333332"
                }
            },
            "Step 7": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 13 * 19 = 247 (left: 12 247) -> 247 / 12 = 20.583333333333332 (left: 20.583333333333332) -> 20.583333333333332 + 8 = 28.583333333333332",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20.583333333333332"
                }
            },
            "Step 8": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 13 * 19 = 247 (left: 12 247) -> 247 / 12 = 20.583333333333332 (left: 20.583333333333332) -> 20.583333333333332 + 2 = 22.583333333333332",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 2": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 / 13 = 0.461538461",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "7 13"
                }
            },
            "Step 4": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 19 - 12 = 7 (left: 7 13) -> 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "12 13 19"
                }
            },
            "Step 5": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 13 * 19 = 247 (left: 12 247)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "12 247"
                }
            },
            "Step 6": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 13 * 19 = 247 (left: 12 247) -> 12 * 247 = 2964 (left: 2964)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20.583333333333332"
                }
            },
            "Step 7": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 13 * 19 = 247 (left: 12 247) -> 247 / 12 = 20.583333333333332 (left: 20.583333333333332) -> 20 + 0.583333333333332 = 20.583333333333332",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20.583333333333332"
                }
            },
            "Step 8": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 13 * 19 = 247 (left: 12 247) -> 247 / 12 = 20.583333333333332 (left: 20.583333333333332) -> 20.583333333333332 - 2 = 18.583333333333332",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "13 13 72"
                }
            },
            "Step 4": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 13 * 13 = 169 (left: 169 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "13 / 6 = 2.16666666667 (left:"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: -> 13 + 6 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "12 247"
                }
            },
            "Step 6": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 13 * 19 = 247 (left: 12 247) -> 247 / 12 = 20.583333333333332 (left: 20.583333333333332)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20.583333333333332"
                }
            },
            "Step 7": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 13 * 19 = 247 (left: 12 247) -> 247 / 12 = 20.583333333333332 (left: 20.583333333333332) -> 20.583333333333332 + 2 = 22.583333333333332",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20.583333333333332"
                }
            },
            "Step 8": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 13 * 19 = 247 (left: 12 247) -> 247 / 12 = 20.583333333333332 (left: 20.583333333333332) -> 20.583333333333332 + 2 = 22.583333333333332",
                "Pruning": null
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.666666666666666",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3 - 3) * 6 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3) * (3 - 3) * 6 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3) * (3 - 3) * 6 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 3 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 3) - (3 * 6) = 24"
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> Input: 1.14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 3 4 11) -> 3 * 4 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 3"
                }
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 3"
                }
            },
            "Step 5": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 5 * 9 = 45",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10) -> 80 - 2 = 78 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)  -> There are no possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 12 11"
                }
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 8 * 12 = 96 (left: 96 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 7 8"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "12 8 11"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 12 8 11) -> 12 + 8 = 20 (left: 11 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)  -> 18 * 8 = 144 (left: 8 144)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 7 8"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 3"
                }
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 5 + 9 = 14 (left: 14 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 7 8"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)  -> 18 * 8 = 144 (left: 144)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "4 * 3 = 12 (left: 8 12 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 7 8"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 3 * 7 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 12 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "12 8 11"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 12 8 11) -> 8 - 11 = -3 (left: -3 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10) -> 4 + 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)  -> 18 + 8 = 26 (left: 8 26)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 12 11"
                }
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 11 - 8 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 7 8"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 3"
                }
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "12 8 11"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 12 8 11) -> 12 - 8 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 7": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)  -> 18 - 2 = 16 (left: 2 16)",
                "Pruning": null
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 4 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (13 - 4)) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 9 = 27 (left: 3 8 27)\n3 - 8 = -5 (left: -5 27)\n-5 + 27 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((3 * 9) + (3 - 8)) + 2 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (13 - 4)) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 8 9\nSteps:\n3 + 3 = 6 (left: 6 8 9)\n6 * 8 = 48 (left: 9 48)\n48 / 9 = 5.33333333333\nAnswer: (3 + 3) * (8 / 9) = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (13 - 4)) = 24 -> Input: 3 3 7 9\nSteps:\n3 * 9 = 27 (left: 3 7 27)\n7 - 3 = 4 (left: 4 27)\n27 / 4 = 6.75 (left: 6.75)\nAnswer: (3 * 9) / (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> Input: 5 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 12 / 10 = 1.2 (left: 1.2 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 - (13 - 4)) = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 6 7 9\nSteps:\n6 * 3 = 18 (left: 7 9 18)\n9 - 7 = 2 (left: 2 18)\n18 + 2 = 20 (left: 20)\n20 + 4 = 24\nAnswer: ((6 * 3) + (9 - 7)) + 4 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (13 - 4)) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n3 * 17 = 51 (left: 51)\n51 / 2 = 24 (left: 24)\nAnswer: ((3 * 7) - 4) / 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 4 + 10 = 14 (left: 14 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 * 3 = 24 (left: 24 8)\nAnswer: (3 + 5) * 8 = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (13 - 4)) = 24 -> Input: 3 5 6 7\nSteps:\n3 * 7 = 21 (left: 5 6 21)\n5 + 6 = 11 (left: 11 21)\n21 * 11 = 231 (left: 231)\nAnswer: (3 * 7) * (5 + 6) = 231",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (13 - 4)) = 24 -> Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n6 + 9 = 15 (left: 15 24)\n15 - 24 = 9 (left: 9)\nAnswer: (3 * 8) + (6 + 9 - 24) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 6 13) -> 13 - 6 = 7 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 + (13 - 4)) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (6 - (13 - 4)) = 24 -> Input: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 15 10)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: ((3 * 7) + 5) - 3 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 4) * 6 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 24 = 24 (left: 24)\nAnswer: (((",
                "Pruning": "NA"
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 10 / 14 = 0.71428571429 (left: 0.71428571429)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (2 + 7) + 10 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 7 10"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 7 10) -> 7 - 3 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: ((6 - 4) * 7) + 10 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (2 + 7 + 10) = 24"
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (11 / 6 + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 12 - 1 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 2": {
                "Step": "12 - 11 = 1 (left: 6 11 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (11 / 6 + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 / 1.83333 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (11 / 6 + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (11 / 6 + 11) + 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 6 = 17 (left: 11 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 11 - 1.83333 = 9.16667 (left: 9.16667 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (11 / 6 + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (11 / 6 + 11) + 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((11 / 6) + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (11 / 6 + 11) + 12 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 + 11 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (11 / 6 + 11) + 12 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 48 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.333 9"
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 6 8 9) -> 8 / 6 = 1.333 (left: 1.333 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 * 1 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 / 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.333 9"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 6 8 9) -> 8 / 6 = 1.333 (left: 1.333 9) -> 1.333 + 9 = 10.333 (left: 10.333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 * 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "7.667"
                }
            },
            "Step 8": {
                "Step": "11 - 3 = 8 (left: 6 8 9) -> 8 / 6 = 1.333 (left: 1.333 9) -> 9 - 1.333 = 7.667 (left: 7.667) -> 7.667 / 2 = 3.833",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 6 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 / 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.333 9"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 6 8 9) -> 8 / 6 = 1.333 (left: 1.333 9) -> 9 - 1.333 = 7.667 (left: 7.667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 * 1 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 2": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 3": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.333 9"
                }
            },
            "Step 7": {
                "Step": "11 - 3 = 8 (left: 6 8 9) -> 8 / 6 = 1.333 (left: 1.333 9) -> 9 / 1.333 = 6.754 (left: 6.754)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 6 8 9) -> 8 / 6 = 1.333 (left: 1.333 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.333 9"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 6 8 9) -> 8 / 6 = 1.333 (left: 1.333 9) -> 9 - 1.333 = 7.667 (left: 7.667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 * 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 8 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 7 = 1.2857142857142858 (left: 1.285714285714285",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 15"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (13 - 5) + (7 + 8) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 26"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 * 13 = 26 (left: 5 26) -> 26 / 5 = 5.2 (left: 5.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 15"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 * 15 = 135 (left: 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (13 - 5) + (7 + 8) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 26"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 * 13 = 26 (left: 5 26) -> 26 - 5 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 15"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: ((13 - 5) + 7) + 9 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 * 13 = 26 (left: 5 26)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 26"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 * 13 = 26 (left: 5 26) -> 10 / 3 = 3.33 (left: 3.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 5 / 2 = 2.5 (left: 2.5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 15"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (13 - 5) + (7 + 8) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 26"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 * 13 = 26 (left: 5 26) -> 5 + 26 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 26"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 5 2 13) -> 2 * 13 = 26 (left: 5 26) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 15"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 / 15 = 0.6 (left: 0.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 9 + 15 = 24 (left: 24) -> Answer: (13 - 5) + (7 + 8) = 24"
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 4 5 6\nSteps:\n5 * 4 = 20 (left: 3 6 20)\n6 - 3 = 3 (left: 3 20)\n3 * 20 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((5 * 4) - 3) * 20 / 2.5 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (2 + 4) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n8 - 9 = -1 (left: -1 9)\n-1 * 9 = -9 (left: -9)\n9 - (-9) = 18 (left: 18)\n18 + 8 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> Input: 18 72 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\nAnswer: (3 * 7) - (5 - 3) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 * 12 = 132 (left: 132)\n132 / 11 = 12 (left: 12)\nAnswer: ((3 * 4) + (5 + 6)) * (12 / 11) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 * 12 = 72 (left: 12 12 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) - (6 - 3) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (2 + 4) * (12 + 12) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (5 - 3) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 4) * (12 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 - 6 = -2 (left: -2 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 / 4 = 1.5 (left: 1.5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((2 + 4) * 12) + 12 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n6 - 3 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\nAnswer: (3 * 4) * (6 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n3 * 6 = 18 (left: 18 24)\n18 + 24 = 42 (left: 42)\nAnswer: (3 * 8) / (3 * 6) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (12 / 2) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) - 6 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 9) * (11 - 12) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 / 2.25 = 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 9) * (11 - 12) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 / 2.25 = 4.8888888889 (left: 4.8888888889 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 11 * 3 = 33 (left: 12 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 9 - 11) * 12 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 12 36"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 36 - 11 = 25 (left: 12 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 / 11 = 1.09 (left: 1.09 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 9) * (11 - 12) = 24"
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 1 13"
                }
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 1 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> There is only one possible next step: 8 + 3 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "4.7",
                    "Pruned state": "2. 3 - 2 = 1"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 2": {
                "Step": "13 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 48 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "1.71"
                }
            },
            "Step 8": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 1 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71) -> 1.71 * 2 = 3.42",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 8 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 2": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "7 13 17"
                }
            },
            "Step 4": {
                "Step": "9 + 8 = 17 (left: 7 13 17) -> 17 + 7 = 24 (left: 13 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 9"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7 12"
                }
            },
            "Step 7": {
                "Step": "9 - 8 = 1 (left: 7 1 13) -> 13 - 1 = 12 (left: 7 12) -> 12 / 7 = 1.71 (left: 1.71)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> There are no possible next steps as there are not enough numbers provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 7 1 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 8 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> 2. 3 - 2 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> Input: 2 10 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 6"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12 "
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 / 12 = 1 (left: 1) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n6 - 5 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 4) * (6 - 5)) * 2 = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 / 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 6"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 6) -> 6 + 6 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "12 12 "
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "12 12 "
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12 "
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n3 * 5 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * (3 * 5)) - 10 = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 6"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> No possible next steps, 36 is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12 "
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 3 3 4\nSteps:\n3 * 4 = 12 (left: 3 3 12)\n3 + 3 = 6 (left: 6 12)\n6 * 4 = 24 (left: 24)\nAnswer: (3 * 4) * (3 + 3) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "None, as there is only one number provided."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 6"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 12 "
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 3 = 18 (left: 8 18)\n18 / 8 = 2.25 (left: 2.25)\n2.25 * 24 = 24 (left: 24)\nAnswer: ((3 * 7) - 3) / 8 * 24 = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "None, as there is only one number provided."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 2 "
                }
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 2  -> 2 + 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 6"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There is only one number provided, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "12 12 "
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 + 12 = 24 (left: 24) -> Answer: (6 * 2) + (12 + 12) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: (3 + 7) * (5 + 3) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 - 3 = 17 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 3 6 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6.67 20"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 6.67 + 20 = 26.67 (left: 20 26.67)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6.67 20"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "20 26.67"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 6.67 + 20 = 26.67 (left: 20 26.67) -> 20 / 26.67 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "6.67 20"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6.67 13.33"
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6.66 13.33"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 13.33 - 6.67 = 6.66 (left: 6.66 13.33) -> 13.33 - 6.66 = 6.67 (left: 6.66 6.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "6.67 13.33"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 6.67 * 2 = 13.34 (left: 13.34)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "6.66 13.33"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 3 * 6 = 18 (left: 18 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 - 5 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 6 9"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "20 26.67"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 6.67 + 20 = 26.67 (left: 20 26.67) -> 20 + 26.67 = 46.67 (left: 46.67)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "20 26.67"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "20 26.67"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 6.67 + 20 = 26.67 (left: 20 26.67) -> 20 * 26.67 = 533.4 (left: 533.4)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "20 26.67"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6.67 13.33"
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20 26.67"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 6.67 + 20 = 26.67 (left: 20 26.67) -> 20 + 26.67 = 46.67 (left: 46.67)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6.67 13.33"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "6.67 13.33"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 13.33 - 6.67 = 6.66 (left: 6.66)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "6.66 13.33"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6.67 20"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 6.67 * 20 = 133.4 (left: 20 133.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6.67 20"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 6.67 + 20 = 26.67 (left: 20 26.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "20 26.67"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 6.67 + 20 = 26.67 (left: 20 26.67) -> 20 + 26.67 = 46.67 (left: 46.67)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "20 26.67"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 6 9"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6.67 13.33"
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 13.33 / 6.67 = 1.996 (left: 1.996 13.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "6.67 20"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 * 6.67 = 133.4 (left: 6.67 133.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6.66 13.33"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 13.33 - 6.67 = 6.66 (left: 6.66 13.33) -> 6.66 + 13.33 = 19.99 (left: 19.99)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "6.66 13.33"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6.67 20"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 / 6.67 = 2.996 (left: 2.996)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 6 / 5 = 1.2 (left: 1.2 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "20 26.67"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 6.67 + 20 = 26.67 (left: 20 26.67) -> 20 * 26.67 = 533.4 (left: 533.4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "3 6 9"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "20 26.67"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 6.67 + 20 = 26.67 (left: 20 26.67) -> 20 * 26.67 = 533.4 (left: 533.4)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6.67 13.33"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6.67 13.33"
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 13.33 - 6.67 = 6.66 (left: 6.66 13.33)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "20 26.67"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 6.67 + 20 = 26.67 (left: 20 26.67) -> 20 - 26.67 = -6.67 (left: -6.67)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "6.66 13.33"
                },
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "6.67 13.33"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 6.67 * 13.33 = 89.1 (left: 89.1)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "6.66 13.33"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6.67 20"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6.67 20"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 6.67 * 20 = 133.4 (left: 20 133.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "20 26.67"
                }
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 6.67 + 20 = 26.67 (left: 20 26.67) -> 20 / 26.67 = 0.75 (left: 0.75)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "20 26.67"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 6 9"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 - 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "20 26.67"
                }
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 6.67 + 20 = 26.67 (left: 20 26.67) -> 20 - 26.67 = -6.67 (left: -6.67)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "20 26.67"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6.66 13.33"
                }
            },
            "Step 7": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 13.33 - 6.67 = 6.66 (left: 6.66 13.33) -> 6.66 - 13.33 = -6.67 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "6.67 13.33"
                }
            },
            "Step 8": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 20 / 3 = 6.67 (left: 6.67 20) -> 20 - 6.67 = 13.33 (left: 6.67 13.33) -> 13.33 - 6.67 = 6.66 (left: 6.66 13.33)",
                "Pruning": null
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "192 12"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 / 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 "
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 6 * 10 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "12 12 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 * 12 = 144 (left: 16 144)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "192 12"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 + 12 = 204 (left: 204)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "16 144"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 * 12 = 144 (left: 16 144) -> 16 * 9 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "192 12"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 / 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 10 "
                }
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 10  -> 10 + 6 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "16 144"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 * 12 = 144 (left: 16 144) -> 144 / 16 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "16"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 / 12 = 16 (left: 16) -> There are no possible next steps with the number 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "16 144"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 * 12 = 144 (left: 16 144) -> 144 - 16 = 128 (left: 128)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "16 144"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 * 12 = 144 (left: 16 144) -> 144 - 16 = 128 (left: 128)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "192 12"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 + 12 = 204 (left: 204)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "16"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 / 12 = 16 (left: 16) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "12 12 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 + 12 = 24 (left: 16 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "16 144"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 * 12 = 144 (left: 16 144) -> 16 * 144 = 2304 (left: 2304)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "192 12"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 7": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 8": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 * 16 = 192 (left: 192 12) -> 192 * 12 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.8 10"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 10 - 1.8 = 8.2 (left: 8.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 - 5 = 4 (left: 10 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "10 4"
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 - 5 = 4 (left: 10 4) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "10 4"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 - 5 = 4 (left: 10 4) -> 10 + 4 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "10 55.55555555555555"
                }
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 10 / 1.8 = 5.555555555555555 (left: 5.555555555555555 10) -> 5.555555555555555 * 10 = 55.55555555555555 (left: 10 55.55555555555555) -> 10 * 55.55555555555555 = 555.5555555555555 (left: 55.55555555555555 555.5555555555555)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.8 10"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 1.8 - 10 = -8.2 (left: -8.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.8 10"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 1.8 + 10 = 11.8 (left: 11.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.8 10"
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 1.8 + 10 = 11.8 (left: 11.8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.8 10"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 10 / 1.8 = 5.555555555555556 (left: 5.555555555555556)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "10 55.55555555555555"
                }
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 10 / 1.8 = 5.555555555555555 (left: 5.555555555555555 10) -> 5.555555555555555 * 10 = 55.55555555555555 (left: 10 55.55555555555555) -> 10 - 55.55555555555555 = -45.55555555555555 (left:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 25 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.8 10"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 1.8 * 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.8 10"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 10 / 1.8 = 5.555555555555555 (left: 5.555555555555555 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.8 10"
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 10 - 1.8 = 8.2 (left: 8.2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "10 4"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 - 5 = 4 (left: 10 4) -> 10 + 4 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "10 55.55555555555555"
                }
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 10 / 1.8 = 5.555555555555555 (left: 5.555555555555555 10) -> 5.555555555555555 * 10 = 55.55555555555555 (left: 10 55.55555555555555) -> 10 * 55.55555555555555 = 555.5555555555555",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 / 5 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.8 10"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 1.8 + 10 = 11.8 (left: 11.8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.8 10"
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 10 - 1.8 = 8.2 (left: 8.2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.8 10"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 10 / 1.8 = 5.555555555555556 (left: 5.555555555555556)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "10 55.55555555555555"
                }
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 10 / 1.8 = 5.555555555555555 (left: 5.555555555555555 10) -> 5.555555555555555 * 10 = 55.55555555555555 (left: 10 55.55555555555555) -> 10 / 55.55555555555555 = 0.18018018018018017 (left",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 10 5 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.8 10"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 1.8 + 10 = 11.8 (left: 11.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.8 10"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 1.8 + 10 = 11.8 (left: 11.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1.8 10"
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 1.8 + 10 = 11.8 (left: 11.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5.555555555555555 10"
                }
            },
            "Step 7": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 10 / 1.8 = 5.555555555555555 (left: 5.555555555555555 10) -> 5.555555555555555 * 10 = 55.55555555555555 (left: 10 55.55555555555555)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "10 55.55555555555555"
                }
            },
            "Step 8": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 9 / 5 = 1.8 (left: 1.8 10) -> 10 / 1.8 = 5.555555555555555 (left: 5.555555555555555 10) -> 5.555555555555555 * 10 = 55.55555555555555 (left: 10 55.55555555555555) -> 10 / 55.555555",
                "Pruning": null
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 11 - 10 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "0.25"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 1 / 4 = 0.25 (left: 0.25) -> 0.25 + 2 = 2.25 (left: 2.25)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 1 / 4 = 0.25 (left: 0.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "4"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 6 11"
                }
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 6 11) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "4"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 11"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 11) -> 5 * 11 = 55 (left: 55)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 7": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "5"
                }
            },
            "Step 8": {
                "Step": "6 - 5 = 1 (left: 1 5  -> 5 - 1 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "9 9 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 48 / 9 = 5 (left: 5 9 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24.03"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 + 2 = 26.03",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24.03"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 - 2 = 22.03",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 48 / 9 = 5 (left: 5 9 9) -> 5 * 9 = 45 (left: 9 45)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.36 (left: 3.36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 + 2 = 26.03",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24.03"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24 + 0.03 = 24.03",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24.03"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24 + 3 = 27.03 (left: 3 27.03)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 8 + 9 = 17 (left: 17 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 9 14"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 14 - 9 = 5 (left: 9 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 48 / 9 = 5 (left: 5 9 9) -> Input: 3 7 7 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 + 2 = 26.03",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24.03"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> There are no possible next steps with the input of 24.03 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24.03"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24 + 0.03 = 24.03",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 48 / 9 = 5 (left: 5 9 9) -> 9 / 5 = 1.8 (left: 1.8 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24.03"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24 + 0.03 = 24.03",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24.03"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> There are no possible next steps for the input 24.03 as it is a single number and not a mathematical expression.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 / 8 = 1.125 (left: 1.125 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 48 / 9 = 5 (left: 5 9 9) -> 5 + 9 = 14 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 - 2 = 22.03",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24.03"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> There are no possible next steps for the input 24.03.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24.03"
                }
            },
            "Step 8": {
                "Step": "9 - 6 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 + 2 = 26.03",
                "Pruning": null
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 - 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n4 * 2 = 8 (left: 8 9)\n9 * 8 = 72 (left: 72)\nAnswer: 2 * ((3 + 6) - 4) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n2 * 5 = 10 (left: 10 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (3 + 7)) / 4 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (6 * 2) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 * 2) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 + 5 = 8 (left: 2 7 8)\n2 * 7 = 14 (left: 14 8)\n14 - 8 = 6 (left: 6)\n6 * 4 = 24\nAnswer: (2 * 7) - (3 + 5) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 / 6 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (2 * 6) * (4 * 3) = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n5 * 7 = 35 (left: 2 3 35)\n35 - 3 = 32 (left: 2 32)\n32 / 2 = 16 (left: 16)\nAnswer: (5 * 7) - (3 + 2) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 5\nSteps:\n5 + 5 = 10 (left: 2 3 10)\n2 * 3 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\nAnswer: (2 * 3) * (5 + 5) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 9\nSteps:\n3 * 9 = 27 (left: 2 6 27)\n27 - 6 = 21 (left: 2 21)\n21 - 2 = 19 (left: 19)\nAnswer: ((2 * 3) + 9) * 6 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (2 * 3) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 4\nSteps:\n3 + 4 = 7 (left: 2 4 7)\n4 * 2 = 8 (left: 8 7)\n8 * 7 = 56 (left: 56)\nAnswer: (2 * 4) * (3 + 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 4 = 10 (left: 10 6)\n10 * 6 = 60 (left: 60)\nAnswer: (2 * 3) * (4 + 6) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 3 5 2\nSteps:\n7 - 2 = 5 (left: 3 5 5)\n5 * 5 = 25 (left: 3 25)\n25 - 3 = 22 (left: 22)\nAnswer: (7 - 2) * (5 * 5) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 10\nSteps:\n2 * 10 = 20 (left: 3 5 20)\n20 / 5 = 4 (left: 3 4)\n4 + 3 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 10 = 31 (left: 31)\n31 - 10 = 21 (left: 21)\n21 + ",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n2 + 3 = 5 (left: 5 7 5)\n5 + 5 = 10 (left: 7 10)\n10 * 7 = 70 (left: 70)\n70 / 5 = 14 (left: 14)\n14 - 10 = 4 (left: 4)\n4 * 5 = 20 (left: 20)\n20 + ",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n5 + 3 = 8 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n16 + 6 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((5 + 3) * 2) + 6 + 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 7 7 3\nSteps:\n7 + 7 = 14 (left: 14 7 3)\n14 - 7 = 7 (left: 7 7)\n7 * 7 = 49 (left: 49)\n49 / 3 = 16.33 (left: 16.33)\nAnswer: ((7 + 7) - 7) * (7 * 3) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 10 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((2 * 5) + (3 + 7)) -",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n5 + 3 = 8 (left: 2 6 8)\n8 * 6 = 48 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((5 + 3) * 6) / 2 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n15 - 6 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 5) - 6) + 2 = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 8\nSteps:\n6 * 3 = 18 (left: 2 8 18)\n18 - 8 = 10 (left: 2 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((6 * 3) - 8) * 2 + 4 = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 3 12\nSteps:\n3 * 3 = 9 (left: 2 9 12)\n9 + 12 = 21 (left: 2 21)\n2 * 21 = 42 (left: 42)\nAnswer: (3 * 3 + 12) * 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\nAnswer: ((3 * 7) - 5) * 2 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n9 * 4 = 36 (left: 2 36)\n36 / 2 = 18 (left: 18)\n18 + 18 = 36 (left: 36)\nAnswer: ((2 + (3 + 6)) * 4) - 4 = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n2 * 3 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n5 * 12 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((2 * 3) + 6) * (5 * 12) / 2.5 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - 12) * 2 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (3 * 4) + (6 * 2) = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n5 + 7 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\n18 - 3 = 15 (left: 15)\n15",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 11 = 37 (left: 9 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 11 15"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 8 11 15) -> 11 + 15 = 26 (left: 8 26)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 1 - 10 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "9"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 - 5 = -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 9 + 11 = 20 (left: 20 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 / 9 = 1.22222 (left: 1.22222 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 11 - 9 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 * 2 = 20 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 11 "
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 * 11 = 99 (left: 99) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 11"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 11 - 9 = 2 (left: 2 11) -> 11 - 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "10"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 2 = 5 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 11 = 37 (left: 9 37)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 7": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 4 / 4 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 3 11"
                }
            },
            "Step 2": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 - 2 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 3": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 3 11"
                }
            },
            "Step 4": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 3 * 11 = 33 (left: 4 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 3.67"
                }
            },
            "Step 5": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 2 + 3.67 = 5.67 (left: 5.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 - 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 - 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 2": {
                "Step": "3 + 1 = 4 (left: 4 3 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 3 11"
                }
            },
            "Step 3": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 3 + 11 = 14 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 14"
                }
            },
            "Step 4": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 3 + 11 = 14 (left: 4 14) -> 14 / 4 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 3 11"
                }
            },
            "Step 5": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 3 + 11 = 14 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 - 3 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 - 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 - 3 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 - 2 = 8 (left: 2 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 3 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 3 * 3 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 3 11"
                }
            },
            "Step 2": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 - 3 = 8 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 3 11"
                }
            },
            "Step 3": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 3 + 11 = 14 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 3 11"
                }
            },
            "Step 4": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 + 3 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 3 11"
                }
            },
            "Step 5": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 - 3 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 - 3 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 - 3 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 - 3 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 3 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 3 3 10) -> 3 * 3 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 4 = 7 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 3": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 - 3 = 8 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 3 11"
                }
            },
            "Step 4": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 + 3 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 3.67"
                }
            },
            "Step 5": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 3.67 / 2 = 1.835 (left: 1.835)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 - 3 = 1 (left: 1 11) -> 1 + 11 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 - 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1.835"
                }
            },
            "Step 8": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67) -> 3.67 / 2 = 1.835 (left: 1.835) -> 1.835 / 2 = 0.9175",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "3 - 1 = 2 (left: 2 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 11 - 3 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 3 11"
                }
            },
            "Step 3": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 3 11"
                }
            },
            "Step 4": {
                "Step": "3 - 1 = 2 (left: 2 3 11) -> 11 / 3 = 3.67 (left: 2 3.67)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 3 11"
                }
            },
            "Step 5": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 3 + 11 = 14 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 - 3 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 - 3 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "3 + 1 = 4 (left: 4 3 11) -> 4 - 3 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2."
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2. -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.5 11 13"
                }
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 13 - 2.5 = 10.5 (left: 10.5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 13 / 3 = 4.33 (left: 4.33 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 15 - 3 = 12 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> Input: 4 5 7 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 15"
                }
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 13 / 3 = 4 (left: 4 15) -> 4 + 15 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 13 15"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 3 * 13 = 39 (left: 39 15)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "39 15"
                }
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 3 * 13 = 39 (left: 39 15) -> 39 + 15 = 54 (left: 54)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 40 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 13 15"
                }
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 3 + 13 = 16 (left: 16 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 13 - 3 = 10 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> Input: 4 20 24",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 15"
                }
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 13 / 3 = 4 (left: 4 15) -> 4 + 15 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 13 15"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 4 + 5 = 9 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "39 15"
                }
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 3 * 13 = 39 (left: 39 15) -> 39 * 15 = 585 (left: 585)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 2": {
                "Step": "4 * 10 = 40 (left: 11 13 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 3 * 13 = 39 (left: 15 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 3 + 13 = 16 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 5": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> Input: 4 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 15 - 3 = 12 (left: 13 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 15 - 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "39 15"
                }
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 3 * 13 = 39 (left: 39 15) -> 39 - 15 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 11 13) -> 13 - 11 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 13 / 3 = 4 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.5 11 13"
                }
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13) -> 11 / 2.5 = 4.4 (left: 4",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 15 - 3 = 12 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "39 15"
                }
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 3 * 13 = 39 (left: 39 15) -> 39 - 15 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 6 * 11 = 66 (left: 13 66)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 3 + 13 = 16 (left: 16 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 + 14 = 27 (left: 11 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 15"
                }
            },
            "Step 6": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 13 / 3 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 13 15"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 7": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 3 + 13 = 16 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "39 15"
                }
            },
            "Step 8": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 13 - 10 = 3 (left: 3 13 15) -> 3 * 13 = 39 (left: 39 15) -> 10",
                "Pruning": "NA"
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.666666666666666"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 / 6 = 0.6666666666666666 (left: 0.666666666666666 -> There are no possible next steps for the input 0.666666666666666.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 / 3 = 2.33 (left: 2.33 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> Input: 3 7 11 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "-1 6"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> 6 / (-1) = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.33 7"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 7 / 3 = 2.33 (left: 2.33 7) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 + 6 = 12 (left: 12 6)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 / 6 = 0.6666666666666666 (left: 0.666666666666666",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0.666666666666666"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 / 6 = 0.6666666666666666 (left: 0.666666666666666 -> There are no possible next steps with the input \"0.666666666666666\".",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 9"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 7": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": "NA"
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 10 = 20 (left: 7 20 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 2": {
                "Step": "10 - 7 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 * 12 = 720 (left: 720)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 7": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "72"
                }
            },
            "Step 8": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72) -> 72 / 12 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 7 = 70 (left: 70 10 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 7": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "720"
                }
            },
            "Step 8": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 * 12 = 720 (left: 720) -> 7 * 2 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 2": {
                "Step": "7 + 10 = 17 (left: 10 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 * 12 = 720 (left: 720)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 7": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "72"
                }
            },
            "Step 8": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72) -> 72 / 2 = 36",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 * 12 = 720 (left: 720)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 7": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "72"
                }
            },
            "Step 8": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72) -> 72 + 2 = 74",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.42857142857 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "70 10 12"
                }
            },
            "Step 2": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "60 12"
                }
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "72"
                }
            },
            "Step 7": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72) -> 72 + 2 = 74 (left: 74)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "720"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "72"
                }
            },
            "Step 8": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 70 - 10 = 60 (left: 60 12) -> 60 + 12 = 72 (left: 72) -> 72 / 9 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 * 12 = 24 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 11 * 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 - 7 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 + 2 = 14 (left: 14) ",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 5 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 2 + 12 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 * 7 = 49 (left: 11 49)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 - 7 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 - 7 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 5 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 7 11"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 7 * 11 = 77 (left: 10 77)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5 5 11"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 5 11) -> 5 * 11 = 55 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 + 7 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 * 7 = 49 (left: 11 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "10"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 100)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 5": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 * 7 = 49 (left: 49 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 7 11"
                }
            },
            "Step 6": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 - 7 = 4 (left: 7 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 11"
                }
            },
            "Step 7": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "11"
                }
            },
            "Step 8": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 7 / 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 6 = 10 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 9 + 6 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 4 + 5 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 9 / 5 = 1.8 (left: 4 1.8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 45"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 5 * 9 = 45 (left: 4 45) -> 45 / 4 = 11.25 (left: 11.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "49"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 5 * 9 = 45 (left: 4 45) -> 4 + 45 = 49 (left: 49) -> 49 is a prime number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 4 "
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 4 "
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 4 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 4 * 5 = 20 (left: 9 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 45"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 5 * 9 = 45 (left: 4 45) -> 45 - 4 = 41 (left: 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "41"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 5 * 9 = 45 (left: 4 45) -> 45 - 4 = 41 (left: 41) -> 41 * 2 = 82",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 / 9 = 0.67 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 4 "
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 4 / 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 10 9"
                }
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 10 - 4 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 5 * 9 = 45 (left: 4 45)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 45"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 5 * 9 = 45 (left: 4 45) -> 4 + 45 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "49"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 5 * 9 = 45 (left: 4 45) -> 4 + 45 = 49 (left: 49) -> 49 - 2 = 47 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 4 "
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 4 / 2 = 2 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 4 "
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 4 "
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 5 / 4 = 1.25 (left: 1.25 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 5 * 4 = 20 (left: 9 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 45"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 5 * 9 = 45 (left: 4 45) -> 4 + 45 = 49 (left: 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "11.25"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 5 * 9 = 45 (left: 4 45) -> 45 / 4 = 11.25 (left: 11.25) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 4 "
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 5": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 4 * 5 = 20 (left: 9 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 6": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 5 * 9 = 45 (left: 4 45)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 45"
                }
            },
            "Step 7": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 5 * 9 = 45 (left: 4 45) -> 45 / 4 = 11.25 (left: 11.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "11.25"
                }
            },
            "Step 8": {
                "Step": "9 - 4 = 5 (left: 4 5 9) -> 5 * 9 = 45 (left: 4 45) -> 45 / 4 = 11.25 (left: 11.25) -> There are no valid operations that can be performed on 11.25 since it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 9 "
                }
            },
            "Step 3": {
                "Step": "10 * 12 = 120 (left: 6 9  -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 10 12) -> 3 + 10 = 13 (left: 10 12 13) -> 13 + 10 = 23 (left: 12 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 10 12) -> 3 + 10 = 13 (left: 10 12 13) -> 13 * 12 = 156 (left: 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.67 19 12"
                }
            },
            "Step 6": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 9 + 10 = 19 (left: 0.67 19 12) -> 12 / 0.67 = 17.91 (left: 19 17.91)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "0.6666666666666666"
                }
            },
            "Step 7": {
                "Step": "10 * 12 = 120 (left: 6 9  -> 6 / 9 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 * 2 = 1.3333333333333332",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "12 28.36"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 9 + 10 = 19 (left: 0.67 19 12) -> 19 / 0.67 = 28.36 (left: 12 28.36) -> 28.36 - 12 = 16.36 (left: 16.36 28.36)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 2": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 9 "
                }
            },
            "Step 3": {
                "Step": "10 * 12 = 120 (left: 6 9  -> 6 * 9 = 54 (left: 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 10 12) -> 3 + 10 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 10 12) -> 3 + 10 = 13 (left: 10 12 13) -> 12 + 13 = 25 (left: 10 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.67 19 12"
                }
            },
            "Step 6": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 9 + 10 = 19 (left: 0.67 19 12) -> 19 / 0.67 = 28.36 (left: 12 28.36)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 28.36"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 9 + 10 = 19 (left: 0.67 19 12) -> 19 / 0.67 = 28.36 (left: 12 28.36) -> 12 + 28.36 = 40.36 (left: 40.36)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "12 28.36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "12 28.36"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 9 + 10 = 19 (left: 0.67 19 12) -> 19 / 0.67 = 28.36 (left: 12 28.36) -> 12 * 28.36 = 340.32 (left: 340.32)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 12 90"
                }
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 90 / 12 = 7.5 (left: 6 7.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 10 12) -> 3 + 10 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 9 "
                }
            },
            "Step 4": {
                "Step": "10 * 12 = 120 (left: 6 9  -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 10 12) -> 3 + 10 = 13 (left: 10 12 13) -> 13 + 10 = 23 (left: 12 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.67 19 12"
                }
            },
            "Step 6": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 9 + 10 = 19 (left: 0.67 19 12) -> 19 - 12 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.67 19 12"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 9 + 10 = 19 (left: 0.67 19 12) -> 12 / 0.67 = 17.91 (left: 19 17.91)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "12 28.36"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 9 + 10 = 19 (left: 0.67 19 12) -> 19 / 0.67 = 28.36 (left: 12 28.36) -> 28.36 / 12 = 2.363333",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 6 2 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 9 "
                }
            },
            "Step 3": {
                "Step": "10 * 12 = 120 (left: 6 9  -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 10 12) -> 3 + 10 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "0.67 9 10 12"
                }
            },
            "Step 5": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 9 + 10 = 19 (left: 0.67 19 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 9 "
                }
            },
            "Step 6": {
                "Step": "10 * 12 = 120 (left: 6 9  -> 6 / 9 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 7": {
                "Step": "9 - 6 = 3 (left: 3 10 12) -> 3 + 10 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 28.36"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 9 + 10 = 19 (left: 0.67 19 12) -> 19 / 0.67 = 28.36 (left: 12 28.36) -> 12 + 28.36 = 40.36 (left: 40.36)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3 3.33 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 10 12) -> 3 + 10 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 10 12) -> 3 + 10 = 13 (left: 10 12 13) -> 15 + 5 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.67 19 12"
                }
            },
            "Step 6": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 9 + 10 = 19 (left: 0.67 19 12) -> 19 - 0.67 = 18.33 (left: 18.33 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 28.36"
                }
            },
            "Step 7": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 9 + 10 = 19 (left: 0.67 19 12) -> 19 / 0.67 = 28.36 (left: 12 28.36) -> 28.36 - 12 = 16.36 (left: 16.36)",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "12 28.36"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "12 28.36"
                }
            },
            "Step 8": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 9 + 10 = 19 (left: 0.67 19 12) -> 19 / 0.67 = 28.36 (left: 12 28.36) -> 12 * 2 = 24.0 (left: 24.0 28.36)",
                "Pruning": null
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 18 12"
                }
            },
            "Step 1": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 108"
                }
            },
            "Step 2": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> 108 - 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 108"
                }
            },
            "Step 3": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> 12 * 108 = 1296 (left: 1296)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 108"
                }
            },
            "Step 4": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> Input: 1296 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 4"
                }
            },
            "Step 5": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 4 - 6 = -2 (left: -2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 4"
                }
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 6 * 9 = 54 (left: 4 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "6 / 9 = 0."
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 6 / 9 = 0. -> There are no possible next steps because the result of 6 / 9 is 0.6666666666666666, which is not a whole number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "9 108"
                }
            },
            "Step 8": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> 108 / 12 = 9 (left: 9 108) -> 9 * 12 = 108 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 108"
                }
            },
            "Step 2": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> 12 + 108 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 3": {
                "Step": "12 / 3 = 4 (left: 6 9 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 4"
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 9 + 4 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 4"
                }
            },
            "Step 5": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 9 - 4 = 5 (left: 5 4) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 4"
                }
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 6 * 9 = 54 (left: 4 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 108"
                }
            },
            "Step 7": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> 12 * 108 = 1296 (left: 1296)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "9 108"
                }
            },
            "Step 8": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> 108 / 12 = 9 (left: 9 108) -> 9 * 12 = 108 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 9 12 54)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 108"
                }
            },
            "Step 2": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> 12 * 9 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 108"
                }
            },
            "Step 3": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 4"
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 4"
                }
            },
            "Step 5": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 6 / 9 = 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 4"
                }
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 6 + 9 = 15 (left: 15 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 108"
                }
            },
            "Step 7": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> 12 + 108 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "9 108"
                }
            },
            "Step 8": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> 108 / 12 = 9 (left: 9 108) -> 9 + 99 = 108 (left: 99)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 108"
                }
            },
            "Step 2": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> 108 - 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 108"
                }
            },
            "Step 3": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> 108 / 12 = 9 (left: 9 108)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 4"
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 9 - 4 = 5 (left: 5 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 4"
                }
            },
            "Step 5": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 6 * 9 = 54 (left: 4 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 15"
                }
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 6 + 9 = 15 (left: 4 15) -> 4 * 15 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 108"
                }
            },
            "Step 7": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> 108 / 12 = 9 (left: 9 108)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "9 108"
                }
            },
            "Step 8": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> 108 / 12 = 9 (left: 9 108) -> 108 / 9 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 108"
                }
            },
            "Step 2": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> 108 - 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "12 108"
                }
            },
            "Step 3": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> 120 * 3 = 360 (left: 360)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 4"
                }
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 6 / 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 4"
                }
            },
            "Step 5": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 15"
                }
            },
            "Step 6": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 6 + 9 = 15 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "5 4"
                }
            },
            "Step 7": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 9 - 4 = 5 (left: 5 4) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "9 108"
                }
            },
            "Step 8": {
                "Step": "9 + 9 = 18 (left: 6 18 12) -> 6 * 18 = 108 (left: 12 108) -> 108 / 12 = 9 (left: 9 108) -> 9 * 12 = 108 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 5 = 30 (left: 30 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "30 12"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 * 5 = 30 (left: 30 12) -> 30 - 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "12"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 12 - 5 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible next steps",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 - 5 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 6 - 5 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "12"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "12"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 * 6 = 30 (left: 30 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 2) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "8 20"
                }
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 5"
                }
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> Input: 3 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1 + 5 = 6"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 1 + 5 = 6 -> 6 / 1 = 6 (left: 6 = 6)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 5"
                }
            },
            "Step 2": {
                "Step": "4 - 2 = 2 (left: 2 4 5) -> 4 * 2 = 8 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "1 + 5 = 6"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 1 + 5 = 6 -> 1 - 5 = -4 (left: -4)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "4"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "1 + 5 = 6"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 1 + 5 = 6 -> 1 * 5 = 5 (left: 5 5 6)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 30"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 30 - 4 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1 + 5 = 6"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 1 + 5 = 6 -> 5 + 1 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 4 1"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 2 4 1) -> 4 - 2 = 2 (left: 2 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 4 * 5 = 20 (left: 6 20)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "4"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4) -> There are no possible next steps with the input 4.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 4 5"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 1 - 5 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 5"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1 + 5 = 6"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 4 / 4 = 1 (left: 1 5) -> 1 + 5 = 6 -> 1 / 5 = 0.2 (left: 0.2 6)",
                "Pruning": null
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 * 10 = 240 (left: 10 240)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.16666666667 (left: 2.4 4.16666666667)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 - 2.4 = 7.6 (left: 7.6 10)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 * 10 = 240 (left: 240 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.166666666666667 (left: 4.166666666666667)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2.4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.16666666667 (left: 4.16666666667)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "2.4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.16667 (left: 4.16667)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2.4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 - 2.4 = 7.6 (left: 2.4 7.6)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 - 2 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 + 4 = 14 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10 240"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 * 10 = 240 (left: 10 240) -> 10 + 240 = 250 (left: 250)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "10 240"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 + 10 = 12.4 (left: 12.4)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2.4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.16667 (left: 4.16667)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2.4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 * 10 = 24 (left: 10)",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "2.4 7.6"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 * 4 = 24 (left: 24 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 / 4 = 1.5 (left: 1.5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.16666666667 (left: 4.16666666667)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "2.4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 - 2.4 = 7.6 (left: 2.4 7.6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Input: 5 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.16667 (left: 2.4 4.16667)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "10 240"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 7": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 5 + 5 = 10 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 8": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 - 2.4 = 7.6 (left: 2.4 7.6)",
                "Pruning": null
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 4 + 9 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 3 / 4 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3 / 4 ="
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 3 / 4 = -> 3 / 4 = 0.75",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 - 4 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 3 * 4 = 12 (left: 12 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1.33"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 - 4 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "7"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "There is only one number given, so there are no possible next steps."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 3 3 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 - 1 = 2 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 / 3 = 1.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 3 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 3 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "4 3"
                }
            },
            "Step 7": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "1.33"
                }
            },
            "Step 8": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 / 3 = 1.33 (left: 1.33) -> There are no possible next steps for the input 1.33 as it is a single number and not a mathematical expression.",
                "Pruning": null
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = 2.5 (left: 2 2.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 2.5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = 2.5 (left: 2 2.5) -> 2 / 2.5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 7) - (2 * 2) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 7) - (2 * 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 2 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 * 2 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 / 2 = 7 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (2 * (7 - 2)) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 7) - (2 * 2) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 7) - (2 * 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 * 2 = 4 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 * 2 = 4 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 7) - (2 * 2) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (2 * (7 - 2)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> Input: 1 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 * 2 = 4 (left: 4 14) -> 14 - 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 7) - (2 * 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 2 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 2.5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 / 2 = 2.5 (left: 2 2.5) -> 2 * 2.5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 7) - (2 * 2) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "2 12"
                }
            },
            "Step 7": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 14 - 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 7) - (2 * 2) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 3 + 3 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 11 19"
                }
            },
            "Step 3": {
                "Step": "10 + 9 = 19 (left: 4 11 19) -> 11 / 4 = 2.75 (left: 2.75 19)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "9 36"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps as there are no more numbers to operate on. The final result is 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 2": {
                "Step": "10 + 9 = 19 (left: 4 11 19)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 11 19"
                }
            },
            "Step 3": {
                "Step": "10 + 9 = 19 (left: 4 11 19) -> 4 + 11 = 15 (left: 15 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> No possible next steps with a single number input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 - 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "36 is a prime number, so there are no possible next steps to manipulate it further."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 / 36 = 0.25 (left: 0.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 is a prime number, so there are no possible next steps to manipulate it further.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 11 19"
                }
            },
            "Step 3": {
                "Step": "10 + 9 = 19 (left: 4 11 19) -> 19 / 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 is already a single number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 - 2 = 34",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None - 36 is a single number and cannot be combined with any other numbers.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 36 - 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 * 2 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "There are no possible next steps as there are no more numbers to operate on. The final result is 36."
                }
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 11 19"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 11 * 7 = 77 (left: 77 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 7 * 11 = 77 (left: 77 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 - 7 = 4 (left: 4 90)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 9 21"
                }
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 7 9 21) -> 9 * 7 = 63 (left: 63 21)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "63 21"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 7 9 21) -> 9 * 7 = 63 (left: 63 21) -> 63 / 21 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "90 -"
                }
            },
            "Step 8": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 - 7 = 4 (left: 4 11 90) -> 90 - -> 90 - 2 = 88",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 7 + 11 = 18 (left: 18 90)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 7 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 9 21"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 7 9 21) -> 9 - 7 = 2 (left: 2 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 11 19"
                }
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 19 - 11 = 8 (left:",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "63 21"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 7 9 21) -> 9 * 7 = 63 (left: 63 21) -> 63 * 21 = 1323 (left: 1323)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1323"
                }
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 7 9 21) -> 9 * 7 = 63 (left: 63 21) -> 63 * 21 = 1323 (left: 1323) -> 1 * 3 * 2 * 3 = 18 (left: 18)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 / 7 = 1.57 (left: 1.57 90)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 - 10 = 1 (left: 1 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 9 21"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 7 9 21) -> 21 - 7 = 14 (left: 14 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 11 90"
                }
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 - 7 = 4 (left: 4 11 90) -> 90 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "63 21"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 7 9 21) -> 9 * 7 = 63 (left: 63 21) -> 63 * 21 = 1323 (left: 1323)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "1323"
                }
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 7 9 21) -> 9 * 7 = 63 (left: 63 21) -> 63 * 21 = 1323 (left: 1323) -> 13 * 23 = 299 (left:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 7 9 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 11 * 10 = 110 (left: 110 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 - 11 = 79 (left: 7 79)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 9 21"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 7 9 21) -> 21 / 7 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 9 21"
                }
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 7 9 21) -> 9 - 7 = 2 (left: 2 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "63 21"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 7 9 21) -> 9 * 7 = 63 (left: 63 21) -> 63 + 21 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "1323"
                }
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 7 9 21) -> 9 * 7 = 63 (left: 63 21) -> 63 * 21 = 1323 (left: 1323) -> 2 * 3 = 6 (left: ",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 - 7 = 4 (left: 4 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 11 90"
                }
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 - 7 = 4 (left: 4 11 90) -> 4 * 11 = 44 (left: 44 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 9 21"
                }
            },
            "Step 5": {
                "Step": "10 + 11 = 21 (left: 7 9 21) -> 21 - 7 = 14 (left: 14 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "2 21"
                }
            },
            "Step 6": {
                "Step": "10 + 11 = 21 (left: 7 9 21) -> 9 - 7 = 2 (left: 2 21) -> 2 + 21 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "63 21"
                }
            },
            "Step 7": {
                "Step": "10 + 11 = 21 (left: 7 9 21) -> 9 * 7 = 63 (left: 63 21) -> 63 + 21 = 84 (left: 84)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "10 + 11 = 21 (left: 7 9 21) -> 9 * 7 = 63 (left: 63 21) -> 63 / 21 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 9 - 4 = 5 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 6 / 3 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> There are no possible next steps with the number 3.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Input: 7 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> There are no more possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "9 9"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 * 3 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 9"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 * 3 = 9 (left: 9 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "3"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "9 9"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 * 3 = 9 (left: 9 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "9 9"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> Input: 3 9 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 4": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> There is only one possible next step: 3 + 3 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "3"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 8 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> 3 * 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.5",
                    "Pruned state": "3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "3"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 - 5 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3) -> There is only one possible next step: 3.",
                "Pruning": null
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 9 9"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 9 / 7 = 1.2857 (approximate) (left: 1.2857 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 4": {
                "Step": "9 + 4 = 13 (left: 3 9  -> 9 / 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "18"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8 20"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> None, as there are no more numbers to operate on.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 3 9  -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 15"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> Input: 10 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "18"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2 8 20"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 + 2 = 20 (left: 2 8 20) -> 20 / 2 = 10 (left: 8 10)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.25 6"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6) -> 2.25 * 6 = 13.5 (left: 13.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 3 9  -> 9 / 3 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 15"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 4 - 15 = -11 (left: -11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "4 15"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 4 + 15 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 + 2 = 20 (left: 2 8 20)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2 8 20"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 + 2 = 20 (left: 2 8 20) -> 20 / 2 = 10 (left:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 9 "
                }
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 3 9  -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> No possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 2 = 16 (left: 8)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "18"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "18"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 * 2 = 36 (left: 8)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "2 8 20"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "18"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.7",
                    "Pruned state": "2 8 20"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Input: 4 6 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "18"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "2 8 20"
                }
            },
            "Step 7": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 + 2 = 20 (left: 2 8 20) -> 2 + 8 = 10 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "2 8 20"
                }
            },
            "Step 8": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 - 6 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 + 2 = 20 (left: 2 8 20) -> 20 / 8 = 2.5 (",
                "Pruning": null
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (6 + 3)) * 8 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * (3 + 8) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (6 + 3)) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 9 8"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 6 / 3) * 8 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 6) * 8 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * (3 * 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (6 + 3)) * 8 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * 3 * 8 = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 6 / 3) * 8 = 24",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * (3 * 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 8 / 3 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((3 + 3) + 6) * 8 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 + 6 / 3) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "0.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * (3 * 8) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.2857142857142856 (left: 2.2857142857142856 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": ""
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 - 8 = -1 (left:  -> It seems you did not provide an input to continue with the calculations. If you provide the numbers, I can give you the possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 * 1 = 8 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.28571428571 8"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 8 - 2.28571428571 = 5.71428571429 (left: 5.71428571429)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8 18.28571428568"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 2.28571428571 * 8 = 18.28571428568 (left: 8 18.28571428568) -> 8 + 18.28571428568 = 26.28571428568 (left: 18.28571428568 26.28571428568)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8 18.28571428568"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 2.28571428571 * 8 = 18.28571428568 (left: 8 18.28571428568) -> 8 * 18.28571428568 = 146.28571428544 (left: 18.28571428568 146.28571428544",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "18.28571428568 146.28571428544"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 2.28571428571 * 8 = 18.28571428568 (left: 8 18.28571428568) -> 8 * 18.28571428568 = 146.28571428544 (left: 18.28571428568 146.28571428544 -> 18.28571428568 * 146.28571428544 = 2677.14285714302 (left:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 4 "
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 4  -> 4 - 4 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 - 8 = -1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 4": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "7 8 16"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 16 / 8 = 2 (left: 7 2 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.28571428571 8"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 8 - 2.28571428571 = 5.71428571429 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "-10.28571428568 18.28571428568"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 2.28571428571 * 8 = 18.28571428568 (left: 8 18.28571428568) -> 8 - 18.28571428568 = -10.28571428568 (left: -10.28571428568 18.28571428568) -> -10.28571428568 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "18.28571428568 146.28571428544"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 2.28571428571 * 8 = 18.28571428568 (left: 8 18.28571428568) -> 8 * 18.28571428568 = 146.28571428544 (left: 18.28571428568 146.28571428544 -> 18.28571428568 * 146.28571428544 = 2673.14285714301 (left: 146.285",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "18.28571428568 146.28571428544"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 - 8 = -1 (left: ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.28571428571 8"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 8 / 3.5 = 2.28571428571 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.28571428571 8"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 8 - 2.28571428571 = 5.71428571429 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "-10.28571428568 18.28571428568"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 2.28571428571 * 8 = 18.28571428568 (left: 8 18.28571428568) -> 8 - 18.28571428568 = -10.28571428568 (left: -10.28571428568 18.28571428568) -> ",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "-10.28571428568 18.28571428568"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "18.28571428568 146.28571428544"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 2.28571428571 * 8 = 18.28571428568 (left: 8 18.28571428568) -> 8 * 18.28571428568 = 146.28571428544 (left: 18.28571428568 146.28571428544 -> 18.28571428568 / 146.28571428544 = 0.125 (left: 0.125 146.28571428544)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 4 "
                }
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 - 7 = 9 (left: 9 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.28571428571 8"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 2.28571428571 * 8 = 18.28571428568 (left: 18.28571428568)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "18.28571428568 26.28571428568"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 2.28571428571 * 8 = 18.28571428568 (left: 8 18.28571428568) -> 8 + 18.28571428568 = 26.28571428568 (left: 18.28571428568 26.28571428568) -> 18.28571428568 + 26.28571428568 = 44.57142857136 (left: 44.57142857136)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "-10.28571428568 18.28571428568"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "18.28571428568 146.28571428544"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 2.28571428571 * 8 = 18.28571428568 (left: 8 18.28571428568) -> 8 * 18.28571428568 = 146.28571428544 (left: 18.28571428568 146.28571428544 -> 146.28571428544 - 18.28571428568 = 128 (left: 18.28571428568 128)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 7 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 - 7 = 9 (left: 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 7 8"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 7 - 1 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 + 8 = 24 (left: 7 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2.28571428571 8"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 2.28571428571 * 8 = 18.28571428568 (left: 8 18.28571428568)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8 18.28571428568"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 2.28571428571 * 8 = 18.28571428568 (left: 8 18.28571428568) -> 8 - 18.28571428568 = -10.28571428568 (left: -10.28571428568 18.28571428568)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.6",
                    "Resampled state": "-10.28571428568 18.28571428568"
                }
            },
            "Step 7": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 2.28571428571 * 8 = 18.28571428568 (left: 8 18.28571428568) -> 8 - 18.28571428568 = -10.28571428568 (left: -10.28571428568 18.28571428568) -> -10.28571428568 - 18.28571428568 = -28.57142857136 (left: -28.57142857136)",
                "Pruning": {
                    "Idx": "4.6",
                    "Pruned state": "-10.28571428568 18.28571428568"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "18.28571428568 146.28571428544"
                }
            },
            "Step 8": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 16 / 7 = 2.28571428571 (left: 2.28571428571 8) -> 2.28571428571 * 8 = 18.28571428568 (left: 8 18.28571428568) -> 8 * 18.28571428568 = 146.28571428544 (left: 18.28571428568 146.28571428544 -> 18.28571428568 * 146.28571428544 = 2677.42857142819 (left:",
                "Pruning": null
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 2": {
                "Step": "11 + 3 = 14 (left: 5 14 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 11 12"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 12 - 8 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 + 11 = 26 (left: 12 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 * 3 = 18 (left: 18 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 12 = 1.33 (left: 1.33 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "36"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "12 - 3 = 9 (left"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 12 - 3 = 9 (left -> 12 - 3 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12) -> 12 / 1 = 12 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 11 * 12 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 11 / 15 = 0.73 (left: 0.73 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 12 - 3 = 9 (left",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> None, as 36 is the final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the number 36 as the only input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 - 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.7",
                    "Pruned state": "There are no possible next steps with the number 36."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 8 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 12"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12) -> 1 * 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 14 12"
                }
            },
            "Step 3": {
                "Step": "11 + 3 = 14 (left: 5 14 12) -> 5 / 14 = 0.357 (left: 0.357 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 11 12"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "12 - 3 = 9 (left"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 12 - 3 = 9 (left -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.7",
                    "Pruned state": "There are no possible next steps with the number 36 as the only input."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 3 16 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 12 / 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 12 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 8 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 7": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps as there are no other numbers provided in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36"
                }
            },
            "Step 8": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 11 - 8 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with just the number 36.",
                "Pruning": null
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 * 2 = 4",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 + 10 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2"
                }
            },
            "Step 8": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> Invalid input. Please enter at least two numbers.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 4 6 2.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 4 / 4 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 10"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 7": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "12"
                }
            },
            "Step 8": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 8 - 6 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.5 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 + 4 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 4 6  -> Input: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 10 13"
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 10 - 9 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.6667 (left: 0.6667 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "7.5 13"
                }
            },
            "Step 6": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 - 1.5 = 7.5 (left: 7.5 13) -> 7.5 + 13 = 20.5 (left: 20.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0.6667 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.6667 (left: 0.6667 4) -> 0.6667 - 4 = -3.3333 (left: -3.3333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "20.5"
                }
            },
            "Step 8": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 - 1.5 = 7.5 (left: 7.5 13) -> 7.5 + 13 = 20.5 (left: 20.5) -> There are no possible next steps for the input 20.5 as there are no other numbers provided for operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.5 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "7.5 13"
                }
            },
            "Step 6": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 - 1.5 = 7.5 (left: 7.5 13) -> 7.5 + 13 = 20.5 (left: 20.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0.6667 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.6667 (left: 0.6667 4) -> 4 / 0.6667 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "-3.3333"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.6667 (left: 0.6667 4) -> 0.6667 - 4 = -3.3333 (left: -3.3333) -> -3.3333 + 2 = -1.3333",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 * 9 = 117 (left: 117 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.5 9 13"
                }
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 / 1.5 = 6 (left: 6 13",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 10 / 5 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "9 10 13"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 10 - 9 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "7.5 13"
                }
            },
            "Step 6": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 - 1.5 = 7.5 (left: 7.5 13) -> 13 / 7.5 = 1.7333333333333334 (left: 1.7333333333333334)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "7.5 13"
                }
            },
            "Step 7": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 - 1.5 = 7.5 (left: 7.5 13) -> 13 - 7.5 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "-3.3333"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.6667 (left: 0.6667 4) -> 0.6667 - 4 = -3.3333 (left: -3.3333) -> -3.3333 - 2 = -5.3333",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 4 6  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 5": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0.6667 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.6667 (left: 0.6667 4) -> 0.6667 * 4 = 2.6668 (left: 2.6668)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "6"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.6667 (left: 0.6667 4) -> 4 / 0.6667 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 4 15 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.5 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 / 4 = 1.5 (left: 1.5 4) -> 1.5 * 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 4 6  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1.5 9 13"
                }
            },
            "Step 5": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 - 1.5 = 7.5 (left: 7.5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 6": {
                "Step": "9 + 13 = 22 (left: 4 6  -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0.6667 4"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.6667 (left: 0.6667 4) -> 0.6667 * 4 = 2.6668 (left: 2.6668)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "2.6668"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.6667 (left: 0.6667 4) -> 0.6667 * 4 = 2.6668 (left: 2.6668) -> There are no possible next steps for the input 2.6668 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 11 - 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 15 / 6 = 2.5 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 3 = 8 (left: 8 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 11 15"
                }
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 11 15) -> 11 * 5 = 55 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 15"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 11 15) -> 15 - 11 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 15"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 15"
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 11 15) -> 15 - 11 = 4 (left: 4 15) -> 15 - 4 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 5 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> 5 + 11 = 16 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 + 8 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 15 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 11 15"
                }
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 11 15) -> 11 / 5 = 2.2 (left: 2.2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 15"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 11 15) -> 15 - 11 = 4 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 15"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 15"
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 11 15) -> 15 - 11 = 4 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 + 15 = 26 (left: 6 26)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 + 8 = 14 (left: 14 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 11 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 11 15"
                }
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 11 15) -> 15 - 11 = 4 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 15"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 11 15) -> 15 - 11 = 4 (left: 4 15) -> 4 - 15 = -11 (left: -11)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 15"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 15"
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 11 15) -> 15 - 11 = 4 (left: 4 15) -> 4 * 15 = 60 (left: 60)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 - 6 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 8 / 6 = 1.33 (left: 1.33 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 - 3 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 11 15"
                }
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 11 15) -> 11 + 5 = 16 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 15"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 11 15) -> 15 - 11 = 4 (left: 4 15) -> 4 + 15 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 15"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 15"
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 11 15) -> 15 - 11 = 4 (left: 4 15) -> 5",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 * 6 = 18 (left: 18 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 17 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 15 - 6 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 11 15"
                }
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 11 15) -> 11 - 5 = 6 (left: 6 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 15"
                }
            },
            "Step 7": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 11 15) -> 15 - 11 = 4 (left: 4 15) -> 4 + 15 = 19 (left: 19)",
                "Pruning": {
                    "Idx": "2.6",
                    "Pruned state": "4 15"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "4 15"
                }
            },
            "Step 8": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 11 15) -> 15 - 11 = 4 (left: 4 15) -> 4 + 15 = 19 (left: 19)",
                "Pruning": "NA"
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 39 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 - 1 = 39 (left: 13 39)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 + 1 = 14 (left: 40 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 13"
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 13 - 8 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "40 13"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 5 * 8 = 40 (left: 40 13) -> 40 + 13 = 53 (left: 13 53)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3.07692307692"
                }
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 5 * 8 = 40 (left: 40 13) -> 40 / 13 = 3.07692307692 (left: 3.07692307692) -> 3.07692307692 / 3 = 1.02564102564",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 12 +",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 - 6 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 13"
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 13"
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 5 + 8 = 13 (left: 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 8 13"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 8 - 6 = 2 (left: 2 8 13) -> 13 - 2 = 11 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "40 13"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 5 * 8 = 40 (left: 40 13) -> 40 * 13 = 520 (left: 520)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3.07692307692"
                }
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 5 * 8 = 40 (left: 40 13) -> 40 / 13 = 3.07692307692 (left: 3.07692307692) -> 3.07692307692 * 2 = 6.15384615384 (left: 6.15384615384)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 + 1 = 14 (left: 40 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 3": {
                "Step": "8 / 1 = 8 (left: 5 8 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 13"
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 13"
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 5 + 8 = 13 (left: 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1.6 13"
                }
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 8 / 5 = 1.6 (left: 1.6 13) -> 1.6 - 13 = -11.4 (left: -11.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "40 13"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 5 * 8 = 40 (left: 40 13) -> 40 / 13 = 3.07692307692 (left: 3.07692307692)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3.07692307692"
                }
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 5 * 8 = 40 (left: 40 13) -> 40 / 13 = 3.07692307692 (left: 3.07692307692) -> 3.07692307692 - 3 = 0.07692307692",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 1 40 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 5 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 1 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 + 40 = 41 (left: 13 41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 13"
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 8 / 5 = 1.6 (left: 1.6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 13"
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 8 / 5 = 1.6 (left: 1.6 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 13"
                }
            },
            "Step 6": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 5 * 8 = 40 (left: 40 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "40 13"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 5 * 8 = 40 (left: 40 13) -> 40 / 13 = 3.08 (left: 3.08)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "520"
                }
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 5 * 8 = 40 (left: 40 13) -> 40 * 13 = 520 (left: 520) -> 5 * 2 = 10 (left: 10 0)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 * 5 = 40 (left: 1 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 1 3 13) -> 13 - 1 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 6 + 8 = 14 (left: 14 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 13"
                }
            },
            "Step 4": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 8 - 5 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 8 13"
                }
            },
            "Step 5": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 13 - 8 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "6 8 13"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 8 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "40 13"
                }
            },
            "Step 7": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 5 * 8 = 40 (left: 40 13) -> 40 + 13 = 53 (left: 53)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.7",
                    "Resampled state": "3.07692307692"
                }
            },
            "Step 8": {
                "Step": "8 / 1 = 8 (left: 5 8 13) -> 5 * 8 = 40 (left: 40 13) -> 40 / 13 = 3.07692307692 (left: 3.07692307692) -> 3.07692307692 - 2 = 1.07692307692",
                "Pruning": null
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> Input: 3 9 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "18 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 3 * (3 + (13 - 9)) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 * 9 = 81 (left: 81 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "18 13"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "3.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "18 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 9 + 9 = 18 (left: 18 13) -> 18 * 13 = 234 (left: 234)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 5 / 10 = 0.5 (left: 0.5",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "18 13"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 + 13) = 24",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.6",
                    "Resampled state": "24"
                }
            },
            "Step 7": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "1.6",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.7",
                    "Resampled state": "24"
                }
            },
            "Step 8": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 + 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (3 + 3) * (13 - 9) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 + 2 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (7 * (9 - 7)) + 10 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 3 + 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (7 * (9 - 7)) + 10 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (7 * (9 - 7)) + 10 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 / 1 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (9 - 7) * (7 * 2 + 10) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 9"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (7 * (9 - 7)) + 10 = 24"
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            }
        ]
    },
    "Cost": {
        "input_tokens": 699031,
        "output_tokens": 249440.77539682525,
        "total_cost": 0.7236766630952378
    }
}