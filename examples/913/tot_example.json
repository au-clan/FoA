{
    "steps": [
        {
            "step": 0,
            "x": "1 4 4 8",
            "ys": [
                ""
            ],
            "new_ys": [
                "1 + 4 = 5 (left: 4 5 8)\n",
                "4 / 1 = 4 (left: 4 4 8)\n",
                "8 + 1 = 9 (left: 4 4 9)\n",
                "1 * 4 = 4 (left: 4 4 8)\n",
                "4 - 1 = 3 (left: 3 4 8)\n",
                "8 - 4 = 4 (left: 1 4 4)\n",
                "8 / 1 = 8 (left: 4 4 8)\n",
                "8 - 1 = 7 (left: 4 4 7)\n"
            ],
            "values": [
                3.0,
                41.0,
                3.0,
                41.0,
                21.001,
                1.002,
                41.0,
                3.0
            ],
            "select_new_ys": [
                "4 / 1 = 4 (left: 4 4 8)\n",
                "1 * 4 = 4 (left: 4 4 8)\n",
                "8 / 1 = 8 (left: 4 4 8)\n",
                "4 - 1 = 3 (left: 3 4 8)\n",
                "1 + 4 = 5 (left: 4 5 8)\n"
            ]
        },
        {
            "step": 1,
            "x": "1 4 4 8",
            "ys": [
                "4 / 1 = 4 (left: 4 4 8)\n",
                "1 * 4 = 4 (left: 4 4 8)\n",
                "8 / 1 = 8 (left: 4 4 8)\n",
                "4 - 1 = 3 (left: 3 4 8)\n",
                "1 + 4 = 5 (left: 4 5 8)\n"
            ],
            "new_ys": [
                "4 / 1 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 8 8)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 8 16)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n",
                "1 * 4 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 8 8)\n",
                "1 * 4 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                "1 * 4 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 8 16)\n",
                "1 * 4 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n",
                "1 * 4 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                "8 / 1 = 8 (left: 4 4 8)\n4 + 4 = 8 (left: 8 8)\n",
                "8 / 1 = 8 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                "8 / 1 = 8 (left: 4 4 8)\n4 * 4 = 16 (left: 8 16)\n",
                "8 / 1 = 8 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n",
                "8 / 1 = 8 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n",
                "4 - 1 = 3 (left: 3 4 8)\n3 + 4 = 7 (left: 7 8)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n",
                "4 - 1 = 3 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n",
                "4 - 1 = 3 (left: 3 4 8)\n8 - 3 = 5 (left: 4 5)\n",
                "4 - 1 = 3 (left: 3 4 8)\n8 / 4 = 2 (left: 2 3)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 - 3 = 1 (left: 1 8)\n",
                "1 + 4 = 5 (left: 4 5 8)\n4 + 5 = 9 (left: 8 9)\n",
                "1 + 4 = 5 (left: 4 5 8)\n5 - 4 = 1 (left: 1 8)\n",
                "1 + 4 = 5 (left: 4 5 8)\n8 - 4 = 4 (left: 4 5)\n",
                "1 + 4 = 5 (left: 4 5 8)\n8 - 5 = 3 (left: 3 4)\n",
                "1 + 4 = 5 (left: 4 5 8)\n4 * 5 = 20 (left: 8 20)\n",
                "1 + 4 = 5 (left: 4 5 8)\n8 / 4 = 2 (left: 2 5)\n"
            ],
            "values": [
                0.003,
                0.003,
                0,
                0.003,
                0.003,
                0.003,
                0,
                0.003,
                0,
                0.003,
                0.003,
                0,
                0.003,
                0.003,
                0.003,
                1.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                1.002,
                0.003
            ],
            "select_new_ys": [
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n",
                "1 + 4 = 5 (left: 4 5 8)\n4 * 5 = 20 (left: 8 20)\n",
                "4 / 1 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 8 8)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n"
            ]
        },
        {
            "step": 2,
            "x": "1 4 4 8",
            "ys": [
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n",
                "1 + 4 = 5 (left: 4 5 8)\n4 * 5 = 20 (left: 8 20)\n",
                "4 / 1 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 8 8)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n"
            ],
            "new_ys": [
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n12 / 8 = 1.5 (left: 1.5)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\n",
                "1 + 4 = 5 (left: 4 5 8)\n4 * 5 = 20 (left: 8 20)\n8 + 20 = 28 (left: 28)\n",
                "1 + 4 = 5 (left: 4 5 8)\n4 * 5 = 20 (left: 8 20)\n20 - 8 = 12 (left: 12)\n",
                "1 + 4 = 5 (left: 4 5 8)\n4 * 5 = 20 (left: 8 20)\n20 / 8 = 2.5 (left: 2.5)\n",
                "1 + 4 = 5 (left: 4 5 8)\n4 * 5 = 20 (left: 8 20)\n8 * 20 = 160 (left: 160)\n",
                "4 / 1 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 8 8)\n8 + 8 = 16 (left: 16)\n",
                "4 / 1 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 8 8)\n8 - 8 = 0 (left: 0)\n",
                "4 / 1 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 8 8)\n8 * 8 = 64 (left: 64)\n",
                "4 / 1 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 8 8)\n8 / 8 = 1 (left: 1)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n4 + 4 = 8 (left: 8)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n4 - 4 = 0 (left: 0)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n4 / 4 = 1 (left: 1)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n4 * 4 = 16 (left: 16)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n2 + 4 = 6 (left: 6)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n4 / 2 = 2 (left: 2)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n4 - 2 = 2 (left: 2)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n2 * 4 = 8 (left: 8)\n"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                0.003,
                0.002,
                20.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                40.001,
                0.003,
                0.003,
                0.003
            ],
            "select_new_ys": [
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n2 + 4 = 6 (left: 6)\n",
                "1 + 4 = 5 (left: 4 5 8)\n4 * 5 = 20 (left: 8 20)\n20 - 8 = 12 (left: 12)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\n"
            ]
        },
        {
            "step": 3,
            "x": "1 4 4 8",
            "ys": [
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n2 + 4 = 6 (left: 6)\n",
                "1 + 4 = 5 (left: 4 5 8)\n4 * 5 = 20 (left: 8 20)\n20 - 8 = 12 (left: 12)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\n"
            ],
            "new_ys": [
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n2 + 4 = 6 (left: 6)\n10 + 6 = 16 (left: 8 14 16)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n2 + 4 = 6 (left: 6)\n4 + 6 = 10 (left: 8 10 14)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n2 + 4 = 6 (left: 6)\n16 - 6 = 10 (left: 8 10 14)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n2 + 4 = 6 (left: 6)\n8 + 6 = 14 (left: 8 14 14)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n2 + 4 = 6 (left: 6)\n6 / 2 = 3 (left: 3 8 14)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n2 + 4 = 6 (left: 6)\n8 - 6 = 2 (left: 2 8 14)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n2 + 4 = 6 (left: 6)\n14 - 6 = 8 (left: 8 8 14)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n2 + 4 = 6 (left: 6)\n14 / 6 = ~2.33 (left: ~2.33 8 8)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n2 + 4 = 6 (left: 6)\n12 - 6 = 6 (left: 6 8 8)\n",
                "1 + 4 = 5 (left: 4 5 8)\n4 * 5 = 20 (left: 8 20)\n20 - 8 = 12 (left: 12)\n12 + 8 = 20 (left: 8 8 20)\n",
                "1 + 4 = 5 (left: 4 5 8)\n4 * 5 = 20 (left: 8 20)\n20 - 8 = 12 (left: 12)\n12 / 2 = 6 (left: 6 8 8)\n",
                "1 + 4 = 5 (left: 4 5 8)\n4 * 5 = 20 (left: 8 20)\n20 - 8 = 12 (left: 12)\n8 - 12 = -4 (left: -4 8 8)\n",
                "1 + 4 = 5 (left: 4 5 8)\n4 * 5 = 20 (left: 8 20)\n20 - 8 = 12 (left: 12)\n12 - 8 = 4 (left: 4 8 8)\n",
                "1 + 4 = 5 (left: 4 5 8)\n4 * 5 = 20 (left: 8 20)\n20 - 8 = 12 (left: 12)\n12 - 2 = 10 (left: 8 8 10)\n",
                "1 + 4 = 5 (left: 4 5 8)\n4 * 5 = 20 (left: 8 20)\n20 - 8 = 12 (left: 12)\n2 * 12 = 24 (left: 8 8 24)\n",
                "1 + 4 = 5 (left: 4 5 8)\n4 * 5 = 20 (left: 8 20)\n20 - 8 = 12 (left: 12)\n12 / 8 = 1.5 (left: 1.5 8 8)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n10 + 10 = 20 (left: 20)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n20 / 1 = 20 (left: 20)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n20 - 0 = 20 (left: 20)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n20 * 1 = 20 (left: 20)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n4 + 2 = 6 (left: 6 8 8 14)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n4 * 2 = 8 (left: 8 8 8 14)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n14 + 4 = 18 (left: 18 2 8 8)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n14 - 4 = 10 (left: 10 2 8 8)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n8 + 4 = 12 (left: 12 2 8 14)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n8 - 4 = 4 (left: 4 2 8 14)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n14 / 4 = 3.5 (left: 3.5 2 8 8) \n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4)\n8 / 4 = 2 (left: 2 2 8 14)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\nSince only one number is given, there are no possible next steps for mathematical operations.\n"
            ],
            "values": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0.003,
                0.003,
                0.003,
                0.003,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ],
            "select_new_ys": [
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n10 + 10 = 20 (left: 20)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n20 / 1 = 20 (left: 20)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n20 - 0 = 20 (left: 20)\n",
                "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n20 * 1 = 20 (left: 20)\n",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n2 + 4 = 6 (left: 6)\n10 + 6 = 16 (left: 8 14 16)\n"
            ]
        }
    ],
    "idx": 913,
    "ys": [
        "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n10 + 10 = 20 (left: 20)\n",
        "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n20 / 1 = 20 (left: 20)\n",
        "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n20 - 0 = 20 (left: 20)\n",
        "4 - 1 = 3 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n8 + 12 = 20 (left: 20)\n20 * 1 = 20 (left: 20)\n",
        "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n2 + 4 = 6 (left: 6)\n10 + 6 = 16 (left: 8 14 16)\n"
    ],
    "infos": [
        {
            "r": 0
        },
        {
            "r": 0
        },
        {
            "r": 0
        },
        {
            "r": 0
        },
        {
            "r": 0
        }
    ],
    "usage_so_far": {
        "completion_tokens": 96550.0,
        "prompt_tokens": 303055,
        "cost": 14.884649999999999
    }
}