{
    "900": {
        "puzzle": "4 5 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 4 = 24 (left: 5 10 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 11",
                    "Value": 2.001,
                    "Values": [
                        6.0,
                        3.0,
                        3.0,
                        2.001,
                        2.001,
                        2.001,
                        2.001,
                        2.001
                    ]
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 4 10 11) -> 11 - 10 = 1 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 10 11",
                    "Value": 0.2001,
                    "Values": [
                        3.0,
                        1.002,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 4 10 11) -> 10 - 4 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 4",
                    "Value": 0.00030000000000000003,
                    "Values": [
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 4 10 11) -> 11 - 10 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 8 12",
                    "Value": 2.0,
                    "Values": [
                        2.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.002,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 4 10 11) -> 11 - 10 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4) -> 16 - 4 = 12 (left: 8 8 12) -> 8 * 8 = 64 (left: 12 64)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 24",
                    "Value": 2.001,
                    "Values": [
                        6.0,
                        3.0,
                        3.0,
                        2.001,
                        2.001,
                        2.001,
                        2.001,
                        2.001
                    ]
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 5 10 24) -> 5 + 10 = 15 (left: 15 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 10 11",
                    "Value": 0.2001,
                    "Values": [
                        3.0,
                        1.002,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 4 10 11) -> 4 * 11 = 44 (left: 10 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 6",
                    "Value": 0.003,
                    "Values": [
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 10 - 9 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 8 12",
                    "Value": 2.0,
                    "Values": [
                        2.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.002,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 4 10 11) -> 11 - 10 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4) -> 16 - 4 = 12 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6",
                    "Value": 3.0,
                    "Values": [
                        6.0,
                        3.0,
                        3.0,
                        2.001,
                        2.001,
                        2.001,
                        2.001,
                        2.001
                    ]
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 10 11",
                    "Value": 0.2001,
                    "Values": [
                        3.0,
                        1.002,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 4 10 11) -> 4 + 10 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1.5 10",
                    "Value": 0.003,
                    "Values": [
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 9 / 6 = 1.5 (left: 1.5 10) -> 10 / 1.5 = 6.67 (left: 6.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 8 12",
                    "Value": 2.0,
                    "Values": [
                        2.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.002,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 4 10 11) -> 11 - 10 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4) -> 16 - 4 = 12 (left: 8 8 12) -> 8 * 8 = 64 (left: 12 64)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10",
                    "Value": 6.0,
                    "Values": [
                        6.0,
                        3.0,
                        3.0,
                        2.001,
                        2.001,
                        2.001,
                        2.001,
                        2.001
                    ]
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 6 10 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 4",
                    "Value": 0.003,
                    "Values": [
                        3.0,
                        1.002,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 4 10 11) -> 11 - 10 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10 44",
                    "Value": 0.003,
                    "Values": [
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 4 10 11) -> 4 * 11 = 44 (left: 10 44) -> 44 / 10 = 4.4 (left: 4.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 8 12",
                    "Value": 2.0,
                    "Values": [
                        2.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.002,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 4 10 11) -> 11 - 10 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4) -> 16 - 4 = 12 (left: 8 8 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 24",
                    "Value": 2.001,
                    "Values": [
                        6.0,
                        3.0,
                        3.0,
                        2.001,
                        2.001,
                        2.001,
                        2.001,
                        2.001
                    ]
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 5 10 24) -> 24 - 5 = 19 (left: 10 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 9 10",
                    "Value": 3.0,
                    "Values": [
                        3.0,
                        1.002,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 9 / 6 = 1.5 (left: 1.5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4",
                    "Value": 0.003,
                    "Values": [
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 4 10 11) -> 11 - 10 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4) -> 16 - 4 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 8 12",
                    "Value": 2.0,
                    "Values": [
                        2.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.002,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 4 10 11) -> 11 - 10 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4) -> 16 - 4 = 12 (left: 8 8 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 10",
                    "Value": 2.001,
                    "Values": [
                        6.0,
                        3.0,
                        3.0,
                        2.001,
                        2.001,
                        2.001,
                        2.001,
                        2.001
                    ]
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 5 10) -> 10 / 2 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 9 10",
                    "Value": 3.0,
                    "Values": [
                        3.0,
                        1.002,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 10 - 9 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 11",
                    "Value": 0.003,
                    "Values": [
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 4 10 11) -> 10 - 4 = 6 (left: 6 11) -> 11 - 6 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 8 12",
                    "Value": 2.0,
                    "Values": [
                        2.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.002,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 4 10 11) -> 11 - 10 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4) -> 16 - 4 = 12 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10",
                    "Value": 6.0,
                    "Values": [
                        6.0,
                        3.0,
                        3.0,
                        2.001,
                        2.001,
                        2.001,
                        2.001,
                        2.001
                    ]
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 9 10",
                    "Value": 3.0,
                    "Values": [
                        3.0,
                        1.002,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 9 / 6 = 1.5 (left: 1.5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 14",
                    "Value": 0.003,
                    "Values": [
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 4 10 11) -> 4 + 10 = 14 (left: 11 14) -> 11 + 14 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 8 12",
                    "Value": 2.0,
                    "Values": [
                        2.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.002,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 4 10 11) -> 11 - 10 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4) -> 16 - 4 = 12 (left: 8 8 12) -> 8 * 8 = 64 (left: 12 64)",
                "Pruning": null
            }
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "2 - 1 = 1 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 4 7",
                    "Value": 40.001,
                    "Values": [
                        60.0,
                        40.001,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        1.002
                    ]
                }
            },
            "Step 1": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 7 - 1 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        4.0001,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 7 - 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 7 - 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - (2 - 1)) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 4 7",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        40.001,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        1.002
                    ]
                }
            },
            "Step 1": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 1 + 4 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        4.0001,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 7 - 1 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 7 - 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - (2 - 1)) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 - 1 = 1 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 4 7",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        40.001,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        1.002
                    ]
                }
            },
            "Step 1": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 7 / 1 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        4.0001,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 7 - 1 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6",
                    "Value": 6.0,
                    "Values": [
                        60.0,
                        60.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 7 - 1 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 4 7",
                    "Value": 40.001,
                    "Values": [
                        60.0,
                        40.001,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        1.002
                    ]
                }
            },
            "Step 1": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 4 * 1 = 4 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        4.0001,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 7 - 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 7 - 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - (2 - 1)) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 4 7",
                    "Value": 40.001,
                    "Values": [
                        60.0,
                        40.001,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        1.002
                    ]
                }
            },
            "Step 1": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 1 + 4 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 4 7",
                    "Value": 6.0,
                    "Values": [
                        60.0,
                        6.0,
                        4.0001,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 1 + 4 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 7 - 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - (2 - 1)) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 1 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 3 7",
                    "Value": 3.0,
                    "Values": [
                        60.0,
                        40.001,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        1.002
                    ]
                }
            },
            "Step 1": {
                "Step": "4 - 1 = 3 (left: 2 3 7) -> 2 + 3 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        4.0001,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 7 - 1 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 7 - 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - (2 - 1)) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 2 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 4 7",
                    "Value": 40.001,
                    "Values": [
                        60.0,
                        40.001,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        1.002
                    ]
                }
            },
            "Step 1": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 1 + 4 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        4.0001,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 7 - 1 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "2 - 1 = 1 (left: 1 4 7) -> 7 - 1 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - (2 - 1)) = 24"
            }
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11",
                    "Value": 6.0,
                    "Values": [
                        22.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        2.001
                    ]
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 5 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 11",
                    "Value": 2.2,
                    "Values": [
                        3.0,
                        2.2,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 + 8 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 40",
                    "Value": 0.003,
                    "Values": [
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 5 8 9) -> 5 * 8 = 40 (left: 9 40) -> 40 / 9 = 4.44 (left: 4.44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "12",
                    "Value": 40.0,
                    "Values": [
                        40.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 - 2 = 10 (left: 8 8 10)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 5 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 8 11",
                    "Value": 3.0,
                    "Values": [
                        22.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        2.001
                    ]
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 6 11",
                    "Value": 0.30000000000000004,
                    "Values": [
                        3.0,
                        2.2,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.6 9",
                    "Value": 0.003,
                    "Values": [
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 5 8 9) -> 8 / 5 = 1.6 (left: 1.6 9) -> 1.6 * 9 = 14.4 (left: 14.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "12",
                    "Value": 40.0,
                    "Values": [
                        40.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 2 * 12 = 24 (left: 8 8 24)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 11",
                    "Value": 22.0,
                    "Values": [
                        22.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        2.001
                    ]
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 8 9",
                    "Value": 3.0,
                    "Values": [
                        3.0,
                        2.2,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 5 8 9) -> 5 * 8 = 40 (left: 9 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 5",
                    "Value": 0.003,
                    "Values": [
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 5 8 9) -> 9 - 8 = 1 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "12",
                    "Value": 40.0,
                    "Values": [
                        40.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 8 - 12 = -4 (left: -4 8 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 11",
                    "Value": 22.0,
                    "Values": [
                        22.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        2.001
                    ]
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 11",
                    "Value": 0.2001,
                    "Values": [
                        3.0,
                        2.2,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "11 11",
                    "Value": 0.00030000000000000003,
                    "Values": [
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 + 8 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "12",
                    "Value": 40.0,
                    "Values": [
                        40.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 11",
                    "Value": 22.0,
                    "Values": [
                        22.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        2.001
                    ]
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11",
                    "Value": 0.30000000000000004,
                    "Values": [
                        3.0,
                        2.2,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 8",
                    "Value": 0.002,
                    "Values": [
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "12",
                    "Value": 40.0,
                    "Values": [
                        40.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 8 - 12 = -4 (left: -4 8 8)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 8 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 11",
                    "Value": 3.0,
                    "Values": [
                        22.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        2.001
                    ]
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 11 / 7 = 1.57 (left: 1.57 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 8 9",
                    "Value": 3.0,
                    "Values": [
                        3.0,
                        2.2,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 5 8 9) -> 8 / 5 = 1.6 (left: 1.6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 6",
                    "Value": 0.003,
                    "Values": [
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "12",
                    "Value": 40.0,
                    "Values": [
                        40.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8 8)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 11",
                    "Value": 22.0,
                    "Values": [
                        22.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        2.001
                    ]
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 + 8 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 8 9",
                    "Value": 3.0,
                    "Values": [
                        3.0,
                        2.2,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 5 8 9) -> 9 - 8 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.6 9",
                    "Value": 0.003,
                    "Values": [
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 5 8 9) -> 8 / 5 = 1.6 (left: 1.6 9) -> 9 - 1.6 = 7.4 (left: 7.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "12",
                    "Value": 40.0,
                    "Values": [
                        40.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 8 20)",
                "Pruning": null
            }
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 4 13",
                    "Value": 1.001,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        2.001,
                        2.001,
                        2.001,
                        1.001
                    ]
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 - 4 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        6.0,
                        6.0,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.1001,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 / 6 = 0.67 (left: 0.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        40.0,
                        6.0,
                        6.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 where 10 = 13 - 3"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 10",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        2.001,
                        2.001,
                        2.001,
                        1.001
                    ]
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        6.0,
                        6.0,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.1001,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        40.0,
                        6.0,
                        6.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 3 - 4) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 4 10",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        2.001,
                        2.001,
                        2.001,
                        1.001
                    ]
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 4 * 4 = 16 (left: 10 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        6.0,
                        6.0,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.1001,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24",
                    "Value": 40.0,
                    "Values": [
                        60.0,
                        40.0,
                        6.0,
                        6.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 3 - 4) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        2.001,
                        2.001,
                        2.001,
                        1.001
                    ]
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 4 * 4 = 16 (left: 10 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        6.0,
                        6.0,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.1001,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6",
                    "Value": 6.0,
                    "Values": [
                        60.0,
                        40.0,
                        6.0,
                        6.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 10",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        2.001,
                        2.001,
                        2.001,
                        1.001
                    ]
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        6.0,
                        6.0,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.1001,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6",
                    "Value": 6.0,
                    "Values": [
                        60.0,
                        40.0,
                        6.0,
                        6.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 4 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 4 10",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        2.001,
                        2.001,
                        2.001,
                        1.001
                    ]
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        6.0,
                        6.0,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.1001,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        40.0,
                        6.0,
                        6.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 where 10 is (13 - 3)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 4 10",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        2.001,
                        2.001,
                        2.001,
                        1.001
                    ]
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 2.5 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        6.0,
                        6.0,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.1001,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        40.0,
                        6.0,
                        6.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 4) = 24 where 10 = 13 - 3"
            }
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9",
                    "Value": 6.0,
                    "Values": [
                        6.0,
                        3.0,
                        3.0,
                        2.001,
                        2.001,
                        2.001,
                        2.0,
                        1.002
                    ]
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 9 13",
                    "Value": 3.0,
                    "Values": [
                        3.0,
                        2.001,
                        1.002,
                        1.002,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.5385",
                    "Value": 1.002,
                    "Values": [
                        1.002,
                        1.002,
                        0.10020000000000001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 / 8 = 1.625 (left: 1.625 9) -> 9 / 1.625 = 5.5385 (left: 5.5385) -> Unfortunately, as 5.5385 is a single number and not an array of numbers like the previous input, we cannot perform operations between multiple numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.5385",
                    "Value": 0.10020000000000001,
                    "Values": [
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 / 8 = 1.625 (left: 1.625 9) -> 9 / 1.625 = 5.5385 (left: 5.5385) -> As the input is a single number, there are no possible next steps for mathematical operations involving multiple numbers.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 7 8",
                    "Value": 3.0,
                    "Values": [
                        6.0,
                        3.0,
                        3.0,
                        2.001,
                        2.001,
                        2.001,
                        2.0,
                        1.002
                    ]
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 7 8) -> 7 + 3 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2.33 8",
                    "Value": 1.002,
                    "Values": [
                        3.0,
                        2.001,
                        1.002,
                        1.002,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 7 8) -> 7 / 3 = 2.33 (left: 2.33 8) -> 8 - 2.33 = 5.67 (left: 5.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 8",
                    "Value": 1.002,
                    "Values": [
                        1.002,
                        1.002,
                        0.10020000000000001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "32",
                    "Value": 0.003,
                    "Values": [
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 9",
                    "Value": 3.0,
                    "Values": [
                        6.0,
                        3.0,
                        3.0,
                        2.001,
                        2.001,
                        2.001,
                        2.0,
                        1.002
                    ]
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 7 9) -> 9 / 2 = 4.5 (left: 4.5 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 7 8",
                    "Value": 2.001,
                    "Values": [
                        3.0,
                        2.001,
                        1.002,
                        1.002,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.5385",
                    "Value": 1.002,
                    "Values": [
                        1.002,
                        1.002,
                        0.10020000000000001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 / 8 = 1.625 (left: 1.625 9) -> 9 / 1.625 = 5.5385 (left: 5.5385) -> There are no possible next steps as 5.5385 is a single number and there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "32",
                    "Value": 0.003,
                    "Values": [
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 32) -> 32 - 14 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "Unfortunately, as 5.5385 is a single number and not an array of numbers like the previous input, we cannot perform operations between multiple numbers.",
                    "Value": 0.00030000000000000003,
                    "Values": [
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 7 8",
                    "Value": 2.001,
                    "Values": [
                        6.0,
                        3.0,
                        3.0,
                        2.001,
                        2.001,
                        2.001,
                        2.0,
                        1.002
                    ]
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 7 8) -> 7 / 3 = 2.33 (left: 2.33 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1.625 9",
                    "Value": 1.002,
                    "Values": [
                        3.0,
                        2.001,
                        1.002,
                        1.002,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 / 8 = 1.625 (left: 1.625 9) -> 9 / 1.625 = 5.5385 (left: 5.5385)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 8",
                    "Value": 1.002,
                    "Values": [
                        1.002,
                        1.002,
                        0.10020000000000001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.5385",
                    "Value": 0.10020000000000001,
                    "Values": [
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 / 8 = 1.625 (left: 1.625 9) -> 9 / 1.625 = 5.5385 (left: 5.5385) -> There are no possible next steps as there is only one number given. The operation requires at least two numbers.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 13",
                    "Value": 2.001,
                    "Values": [
                        6.0,
                        3.0,
                        3.0,
                        2.001,
                        2.001,
                        2.001,
                        2.0,
                        1.002
                    ]
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 / 8 = 1.625 (left: 1.625 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 9 13",
                    "Value": 3.0,
                    "Values": [
                        3.0,
                        2.001,
                        1.002,
                        1.002,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 - 8 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 8",
                    "Value": 1.002,
                    "Values": [
                        1.002,
                        1.002,
                        0.10020000000000001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.5385",
                    "Value": 0.10020000000000001,
                    "Values": [
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 / 8 = 1.625 (left: 1.625 9) -> 9 / 1.625 = 5.5385 (left: 5.5385) -> No possible next steps as there is only one number and no operations can be performed.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 9",
                    "Value": 3.0,
                    "Values": [
                        6.0,
                        3.0,
                        3.0,
                        2.001,
                        2.001,
                        2.001,
                        2.0,
                        1.002
                    ]
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 7 9) -> 2 * 7 = 14 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 7 8",
                    "Value": 0.2001,
                    "Values": [
                        3.0,
                        2.001,
                        1.002,
                        1.002,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 8",
                    "Value": 1.002,
                    "Values": [
                        1.002,
                        1.002,
                        0.10020000000000001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5.5385",
                    "Value": 0.10020000000000001,
                    "Values": [
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 / 8 = 1.625 (left: 1.625 9) -> 9 / 1.625 = 5.5385 (left: 5.5385) -> As the input is a single number, no mathematical operations can be performed.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9",
                    "Value": 6.0,
                    "Values": [
                        6.0,
                        3.0,
                        3.0,
                        2.001,
                        2.001,
                        2.001,
                        2.0,
                        1.002
                    ]
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 7 8",
                    "Value": 2.001,
                    "Values": [
                        3.0,
                        2.001,
                        1.002,
                        1.002,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.2001,
                        0.2001,
                        0.2001,
                        0.2,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 7 8) -> 8 / 3 = 2.67 (left: 2.67 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 8",
                    "Value": 1.002,
                    "Values": [
                        1.002,
                        1.002,
                        0.10020000000000001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 4 * 8 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "2",
                    "Value": 0.003,
                    "Values": [
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 7 8) -> 7 - 3 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2) -> None (no other numbers to perform operations with)",
                "Pruning": null
            }
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13",
                    "Value": 6.0,
                    "Values": [
                        40.001,
                        6.0,
                        2.001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 1": {
                "Step": "13 + 1 = 14 (left: 11 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 12",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        4.0001,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        20.002,
                        20.001,
                        6.0,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 10 = 16 (left: 8 14 16)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13",
                    "Value": 40.001,
                    "Values": [
                        40.001,
                        6.0,
                        2.001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 12",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        4.0001,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6",
                    "Value": 20.001,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        20.002,
                        20.001,
                        6.0,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 10 + 6 = 16 (left: 8 14 16)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 11 = 11 (left: 11 13 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13",
                    "Value": 40.001,
                    "Values": [
                        40.001,
                        6.0,
                        2.001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 / 11 = 1.09 (approximately, left: 1.09 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 12",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        4.0001,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        20.002,
                        20.001,
                        6.0,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (13 - 11) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13",
                    "Value": 40.001,
                    "Values": [
                        40.001,
                        6.0,
                        2.001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 12",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        4.0001,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        20.002,
                        20.001,
                        6.0,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 4 + 6 = 10 (left: 8 10 14)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 + 1 = 14 (left: 11 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13",
                    "Value": 40.001,
                    "Values": [
                        40.001,
                        6.0,
                        2.001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 12",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        4.0001,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        20.002,
                        20.001,
                        6.0,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (13 - 11) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13",
                    "Value": 40.001,
                    "Values": [
                        40.001,
                        6.0,
                        2.001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 12",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        4.0001,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        20.002,
                        20.001,
                        6.0,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 10 + 6 = 16 (left: 8 14 16)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 + 1 = 14 (left: 11 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13",
                    "Value": 40.001,
                    "Values": [
                        40.001,
                        6.0,
                        2.001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 12",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        4.0001,
                        0.2001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        20.002,
                        20.001,
                        6.0,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 14 - 6 = 8 (left: 2 8 8)"
            }
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 11",
                    "Value": 3.0,
                    "Values": [
                        6.0,
                        3.0,
                        2.001,
                        1.002,
                        1.002,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1.25 10",
                    "Value": 2.001,
                    "Values": [
                        2.001,
                        1.002,
                        0.30000000000000004,
                        0.2001,
                        0.10020000000000001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8",
                    "Value": 1.002,
                    "Values": [
                        1.002,
                        0.2001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8) -> 8 + 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8",
                    "Value": 0.10020000000000001,
                    "Values": [
                        0.10020000000000001,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.0002
                    ]
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8",
                    "Value": 20.002,
                    "Values": [
                        20.002,
                        2.001,
                        1.002,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.0002
                    ]
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8) -> No possible next steps, as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 11",
                    "Value": 3.0,
                    "Values": [
                        6.0,
                        3.0,
                        2.001,
                        1.002,
                        1.002,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 11 - 8 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1.25 10",
                    "Value": 2.001,
                    "Values": [
                        2.001,
                        1.002,
                        0.30000000000000004,
                        0.2001,
                        0.10020000000000001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8",
                    "Value": 1.002,
                    "Values": [
                        1.002,
                        0.2001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8) -> None (no more operations can be performed on a single number)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8",
                    "Value": 20.002,
                    "Values": [
                        20.002,
                        2.001,
                        1.002,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.0002
                    ]
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8) -> None (only one number left)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 1 = 9 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 10 10",
                    "Value": 1.002,
                    "Values": [
                        6.0,
                        3.0,
                        2.001,
                        1.002,
                        1.002,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 9",
                    "Value": 1.002,
                    "Values": [
                        2.001,
                        1.002,
                        0.30000000000000004,
                        0.2001,
                        0.10020000000000001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 11 - 8 = 3 (left: 3 9) -> 3 * 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8",
                    "Value": 1.002,
                    "Values": [
                        1.002,
                        0.2001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8",
                    "Value": 0.10020000000000001,
                    "Values": [
                        0.10020000000000001,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.0002
                    ]
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8",
                    "Value": 20.002,
                    "Values": [
                        20.002,
                        2.001,
                        1.002,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.0002
                    ]
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8) -> No possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 11",
                    "Value": 3.0,
                    "Values": [
                        6.0,
                        3.0,
                        2.001,
                        1.002,
                        1.002,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 11",
                    "Value": 0.30000000000000004,
                    "Values": [
                        2.001,
                        1.002,
                        0.30000000000000004,
                        0.2001,
                        0.10020000000000001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 11 - 9 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8",
                    "Value": 1.002,
                    "Values": [
                        1.002,
                        0.2001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8) -> 8 + 2 = 10 (left: 10 8 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8",
                    "Value": 20.002,
                    "Values": [
                        20.002,
                        2.001,
                        1.002,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.0002
                    ]
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "10 8 14",
                    "Value": 0.10020000000000001,
                    "Values": [
                        0.2001,
                        0.10020000000000001,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 10 10",
                    "Value": 2.001,
                    "Values": [
                        6.0,
                        3.0,
                        2.001,
                        1.002,
                        1.002,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 + 10 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 9",
                    "Value": 1.002,
                    "Values": [
                        2.001,
                        1.002,
                        0.30000000000000004,
                        0.2001,
                        0.10020000000000001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 11 - 8 = 3 (left: 3 9) -> 3 * 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8",
                    "Value": 1.002,
                    "Values": [
                        1.002,
                        0.2001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8) -> 8 + 2 = 10 (left: 10 8 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8",
                    "Value": 20.002,
                    "Values": [
                        20.002,
                        2.001,
                        1.002,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.0002
                    ]
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8) -> 8 * 2 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "10 8 14",
                    "Value": 0.2001,
                    "Values": [
                        0.2001,
                        0.10020000000000001,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 11",
                    "Value": 3.0,
                    "Values": [
                        6.0,
                        3.0,
                        2.001,
                        1.002,
                        1.002,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 11 - 8 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1.25 10",
                    "Value": 2.001,
                    "Values": [
                        2.001,
                        1.002,
                        0.30000000000000004,
                        0.2001,
                        0.10020000000000001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 1.25 * 10 = 12.5 (left: 12.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8",
                    "Value": 1.002,
                    "Values": [
                        1.002,
                        0.2001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8) -> 8 + 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8",
                    "Value": 0.10020000000000001,
                    "Values": [
                        0.10020000000000001,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.0002
                    ]
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8",
                    "Value": 20.002,
                    "Values": [
                        20.002,
                        2.001,
                        1.002,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.0002
                    ]
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8) -> 8 + 14 = 22 (left: 2 8 22)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 10 10",
                    "Value": 2.001,
                    "Values": [
                        6.0,
                        3.0,
                        2.001,
                        1.002,
                        1.002,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 - 8 = 2 (left: 2 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 11",
                    "Value": 0.30000000000000004,
                    "Values": [
                        2.001,
                        1.002,
                        0.30000000000000004,
                        0.2001,
                        0.10020000000000001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 8 + 9 = 17 (left: 11 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8",
                    "Value": 1.002,
                    "Values": [
                        1.002,
                        0.2001,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "8",
                    "Value": 20.002,
                    "Values": [
                        20.002,
                        2.001,
                        1.002,
                        0.10020000000000001,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.0002
                    ]
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 8 10 10) -> 10 / 8 = 1.25 (left: 1.25 10) -> 10 / 1.25 = 8 (left: 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "10 8 14",
                    "Value": 0.2001,
                    "Values": [
                        0.2001,
                        0.10020000000000001,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            }
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 7",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        41.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 3 6 7) -> 7 + 3 = 10 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 7",
                    "Value": 6.0,
                    "Values": [
                        6.0,
                        6.0,
                        6.0,
                        4.1000000000000005,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        1.002,
                        1.002,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        40.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (9 - (2 + 3)) * 6 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 7",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        41.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 9",
                    "Value": 6.0,
                    "Values": [
                        6.0,
                        6.0,
                        6.0,
                        4.1000000000000005,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        1.002,
                        1.002,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        40.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (9 - (2 + 3)) * 6 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 9",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        41.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 5 * 6 = 30 (left: 9 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 9",
                    "Value": 6.0,
                    "Values": [
                        6.0,
                        6.0,
                        6.0,
                        4.1000000000000005,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 5 = 1.8 (left: 1.8 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        1.002,
                        1.002,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        40.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 3) * (9 - (2 + 3)) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 6 9",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        41.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 / 5 = 1.2 (left: 1.2 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 6 9",
                    "Value": 6.0,
                    "Values": [
                        6.0,
                        6.0,
                        6.0,
                        4.1000000000000005,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        1.002,
                        1.002,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24",
                    "Value": 40.0,
                    "Values": [
                        60.0,
                        40.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 3) * (9 - (2 + 3)) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 4 9",
                    "Value": 41.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        41.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 3 4 9) -> 4 * 3 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 9",
                    "Value": 6.0,
                    "Values": [
                        6.0,
                        6.0,
                        6.0,
                        4.1000000000000005,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 5 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        1.002,
                        1.002,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24",
                    "Value": 40.0,
                    "Values": [
                        60.0,
                        40.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (9 - (2 + 3)) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 7",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        41.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 6 9",
                    "Value": 6.0,
                    "Values": [
                        6.0,
                        6.0,
                        6.0,
                        4.1000000000000005,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 5 + 6 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        1.002,
                        1.002,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        40.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (9 - (2 + 3)) * 6 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 9",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        41.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 / 5 = 1.2 (left: 1.2 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 9",
                    "Value": 6.0,
                    "Values": [
                        6.0,
                        6.0,
                        6.0,
                        4.1000000000000005,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 5 * 6 = 30 (left: 9 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        1.002,
                        1.002,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24",
                    "Value": 40.0,
                    "Values": [
                        60.0,
                        40.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (9 - (2 + 3)) * 6 = 24"
            }
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 4 9",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        22.0,
                        22.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 4 * 3 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 4 9",
                    "Value": 41.0,
                    "Values": [
                        60.0,
                        41.0,
                        6.0,
                        2.2,
                        2.2,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002
                    ]
                }
            },
            "Step 2": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24",
                    "Value": 40.0,
                    "Values": [
                        40.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.0002
                    ]
                }
            },
            "Step 3": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (5 - 1) * (9 - 3) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 1 = 4 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 5 6",
                    "Value": 22.0,
                    "Values": [
                        60.0,
                        22.0,
                        22.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 1 5 6) -> 6 - 1 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        41.0,
                        6.0,
                        2.2,
                        2.2,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002
                    ]
                }
            },
            "Step 2": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24",
                    "Value": 40.0,
                    "Values": [
                        40.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.0002
                    ]
                }
            },
            "Step 3": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (5 - 1) * (9 - 3) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 1 5 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 4 9",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        22.0,
                        22.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        41.0,
                        6.0,
                        2.2,
                        2.2,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002
                    ]
                }
            },
            "Step 2": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 - 6 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24",
                    "Value": 40.0,
                    "Values": [
                        40.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.0002
                    ]
                }
            },
            "Step 3": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (9 - 3) * (5 - 1) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 - 1 = 2 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 4 9",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        22.0,
                        22.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 4 - 3 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 4 9",
                    "Value": 41.0,
                    "Values": [
                        60.0,
                        41.0,
                        6.0,
                        2.2,
                        2.2,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002
                    ]
                }
            },
            "Step 2": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 4 - 3 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 6",
                    "Value": 6.0,
                    "Values": [
                        40.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.0002
                    ]
                }
            },
            "Step 3": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 - 1 = 2 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9",
                    "Value": 6.0,
                    "Values": [
                        60.0,
                        22.0,
                        22.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "5 - 1 = 4 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        41.0,
                        6.0,
                        2.2,
                        2.2,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002
                    ]
                }
            },
            "Step 2": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24",
                    "Value": 40.0,
                    "Values": [
                        40.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.0002
                    ]
                }
            },
            "Step 3": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (5 - 1) * (9 - 3) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9",
                    "Value": 22.0,
                    "Values": [
                        60.0,
                        22.0,
                        22.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 5 9) -> 9 - 5 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        41.0,
                        6.0,
                        2.2,
                        2.2,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002
                    ]
                }
            },
            "Step 2": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24",
                    "Value": 40.0,
                    "Values": [
                        40.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.0002
                    ]
                }
            },
            "Step 3": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (9 - 3) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 - 1 = 2 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 4 9",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        22.0,
                        22.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 6",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        41.0,
                        6.0,
                        2.2,
                        2.2,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002
                    ]
                }
            },
            "Step 2": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 6",
                    "Value": 6.0,
                    "Values": [
                        40.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.002,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.0002
                    ]
                }
            },
            "Step 3": {
                "Step": "5 - 1 = 4 (left: 3 4 9) -> 9 - 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)"
            }
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 12",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        3.0,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        6.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 - (7 - 3)) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 7 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12",
                    "Value": 6.0,
                    "Values": [
                        60.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 8",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        3.0,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        6.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 - (7 - 3)) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 12",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 - 3 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        3.0,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8",
                    "Value": 6.0,
                    "Values": [
                        60.0,
                        6.0,
                        6.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 12",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 8",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        3.0,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        6.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 - (7 - 3)) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 12",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 4 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        3.0,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        6.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 - (7 - 3)) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 12",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 8",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        3.0,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        6.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 - (7 - 3)) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 + 3 = 10 (left: 10 3 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 12",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0,
                        3.0
                    ]
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 8",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        60.0,
                        60.0,
                        6.0,
                        3.0,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.30000000000000004,
                        0.003,
                        0.003,
                        0.003
                    ]
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24",
                    "Value": 60.0,
                    "Values": [
                        60.0,
                        6.0,
                        6.0,
                        6.0,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.003,
                        0.00030000000000000003,
                        0.00030000000000000003,
                        0.00030000000000000003
                    ]
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 - (7 - 3)) = 24"
            }
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "Cost": {
        "Step": {
            "input_cost": 0.5502,
            "output_cost": 1.457487142857143,
            "total_cost": 2.007687142857143
        },
        "Evaluation": {
            "input_cost": 1.9185299999999998,
            "output_cost": 1.3948810000000007,
            "total_cost": 3.3134110000000003
        },
        "Total cost": {
            "input_cost": 2.46873,
            "output_cost": 2.8523681428571437,
            "total_cost": 5.321098142857144
        }
    },
    "Models": {
        "Step": "gpt-4-0613",
        "Evaluation": "gpt-4-0613"
    }
}