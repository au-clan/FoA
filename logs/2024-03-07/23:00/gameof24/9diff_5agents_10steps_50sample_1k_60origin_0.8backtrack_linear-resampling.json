{
    "900": {
        "puzzle": "4 5 6 10",
        "Step 0": {
            "steps": [
                "6 + 10 = 16 (left: ",
                "5 * 6 = 30 (left: 4 30 ",
                "4 * 5 = 20 (left: 6 20 10)",
                "4 * 5 = 20 (left: 6 10 20)",
                "5 + 6 = 11 (left: 4 11 10)"
            ],
            "Evaluation": [
                0.0,
                21.001,
                3.0,
                3.0,
                3.0
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.1",
                "2 <- INIT",
                "3 <- 0.1",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 10 20)",
                "5 * 6 = 30 (left: 4 30  || 4 + 30 = 34 (left: 30 34)",
                "4 * 5 = 20 (left: 6 20 10)",
                "5 * 6 = 30 (left: 4 30  || 10 + 5 = 15 (left: 15 3)",
                "10 - 4 = 6 (left: 5 6 6)"
            ],
            "Evaluation": [
                20.002,
                0.003,
                3.0,
                0.003,
                3.0
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 0.1",
                "2 <- 0.4",
                "3 <- INIT",
                "4 <- 0.1"
            ]
        },
        "Step 2": {
            "steps": [
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 10 20) || 10 - 4 = 6 (left: 6 10 20)",
                "5 * 6 = 30 (left: 4 30  || 4 * 30 = 120 (left: 120)",
                "5 + 6 = 11 (left: 4 11 10) || 4 + 11 = 15 (left: 10 15)",
                "5 + 6 = 11 (left: 4 11 10)",
                "5 * 6 = 30 (left: 4 30  || 30 - 4 = 26 (left: 26)"
            ],
            "Evaluation": [
                3.0,
                0.003,
                0.003,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.0",
                "2 <- INIT",
                "3 <- 1.0",
                "4 <- 0.1"
            ]
        },
        "Step 3": {
            "steps": [
                "6 * 4 = 24 (left: 5 10 24)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 10 20) || 4 * 10 = 40 (left: 40 20)",
                "4 + 6 = 10 (left: 5 10 10)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 10 20) || 4 * 10 = 40 (left: 40 20)",
                "5 * 6 = 30 (left: 4 30  || 4 * 30 = 120 (left: 30)"
            ],
            "Evaluation": [
                1.002,
                20.0,
                22.0,
                0.0,
                0.002
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 2.0",
                "2 <- 1.0",
                "3 <- 1.4",
                "4 <- 3.2"
            ]
        },
        "Step 4": {
            "steps": [
                "4 + 6 = 10 (left: 5 10 10) || 10 - 5 = 5 (left: 5 10 10)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 10 20) || 10 - 4 = 6 (left: 6 10 20) || 10 - 6 = 4 (left: 4 10 20)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 10 20) || 10 - 4 = 6 (left: 6 20)",
                "10 - 4 = 6 (left: 5 6 6) || 5 + 6 = 11 (left: 6 11)",
                "4 + 6 = 10 (left: 5 10 10) || 10 / 5 = 2 (left: 2 10 10)"
            ],
            "Evaluation": [
                40.001,
                2.001,
                1.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 4.0",
                "1 <- 4.0",
                "2 <- 0.1",
                "3 <- INIT",
                "4 <- 4.0"
            ]
        },
        "Step 5": {
            "steps": [
                "4 + 6 = 10 (left: 5 10 10) || 10 - 5 = 5 (left: 5 10 10) || 5 * 10 = 50 (left: 10 50)",
                "4 + 6 = 10 (left: 5 10 10) || 10 - 5 = 5 (left: 5 10 10) || 10 - 5 = 5 (left: 5 10)",
                "5 * 6 = 30 (left: 4 30  || 2 + 3 = 5 (left: 5 5)",
                "4 + 5 = 9 (left: 6 9 10)",
                "4 + 6 = 10 (left: 5 10 10) || 10 - 5 = 5 (left: 5 10 10) || Input: 3 6 6"
            ],
            "Evaluation": [
                21.001,
                0.002,
                0.002,
                2.0,
                0.003
            ],
            "Resampling": [
                "0 <- 5.0",
                "1 <- 3.2",
                "2 <- 3.1",
                "3 <- 3.2",
                "4 <- 5.0"
            ]
        },
        "Step 6": {
            "steps": [
                "4 + 6 = 10 (left: 5 10 10) || 10 - 5 = 5 (left: 5 10 10) || 5 * 10 = 50 (left: 10 50) || 9 / 3 = 3 (left: 3 27)",
                "4 + 6 = 10 (left: 5 10 10) || 10 / 5 = 2 (left: 2 10 10)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 10 20) || 4 * 10 = 40 (left: 40 20) || 40 / 20 = 2 (left: 2)",
                "4 + 6 = 10 (left: 5 10 10) || 10 - 5 = 5 (left: 5 10 10)",
                "4 + 6 = 10 (left: 5 10 10) || 10 - 5 = 5 (left: 5 10 10) || 5 * 10 = 50 (left: 10 50) || 50 / 10 = 5 (left: 5)"
            ],
            "Evaluation": [
                0.003,
                1.001,
                1.002,
                0.0,
                3.0
            ],
            "Resampling": [
                "0 <- 5.0",
                "1 <- 4.0",
                "2 <- 4.0",
                "3 <- 4.0",
                "4 <- 1.0"
            ]
        },
        "Step 7": {
            "steps": [
                "4 + 6 = 10 (left: 5 10 10) || 10 - 5 = 5 (left: 5 10 10) || 5 * 10 = 50 (left: 10 50) || 10 * 50 = 500 (left: 500)",
                "4 + 6 = 10 (left: 5 10 10) || 10 - 5 = 5 (left: 5 10 10) || 10 / 5 = 2 (left: 2 10)",
                "4 + 6 = 10 (left: 5 10 10) || 10 - 5 = 5 (left: 5 10 10) || 10 / 5 = 2 (left: 2 10 10)",
                "4 + 6 = 10 (left: 5 10 10) || 10 - 5 = 5 (left: 5 10 10) || 5 + 10 = 15 (left: 10 15)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 10 20) || 10 * 4 = 40 (left: 40 20)"
            ],
            "Evaluation": [
                1.0,
                0.003,
                0.003,
                0.0,
                3.0
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 4.2",
                "2 <- 6.4",
                "3 <- 5.0",
                "4 <- 1.0"
            ]
        },
        "Step 8": {
            "steps": [
                "5 * 6 = 30 (left: 4 30  || 6",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 10 20) || 10 - 4 = 6 (left: 6 20) || 6 * 20 = 120 (left: 120)",
                "4 * 5 = 20 (left: 6 20 10) || 20 / 10 = 2 (left: 6 2)",
                "4 + 6 = 10 (left: 5 10 10) || 10 - 5 = 5 (left: 5 10 10) || 5 * 10 = 50 (left: 10 50) || 50 / 10 = 5 (left: 5)",
                "4 * 5 = 20 (left: 6 10 20) || 10 - 6 = 4 (left: 4 10 20) || 20 / 4 = 5 (left: 5 10 20)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.002,
                22.0
            ],
            "Resampling": [
                "0 <- 4.0",
                "1 <- 0.1",
                "2 <- 0.1",
                "3 <- 5.0",
                "4 <- 8.4"
            ]
        },
        "Step 9": {
            "steps": [
                "4 + 6 = 10 (left: 5 10 10) || 10 - 5 = 5 (left: 5 10 10) || 10 / 5 = 2 (left: 2 10)",
                "5 * 6 = 30 (left: 4 30  || 30 - 4 = 26 (left: 26)",
                "5 * 6 = 30 (left: 4 30  || 30 / 4 = 7.5 (left: 7 30)",
                "4 + 6 = 10 (left: 5 10 10) || 10 - 5 = 5 (left: 5 10 10) || 5 * 10 = 50 (left: 10 50) || 50 - 10 = 40 (left: 40)",
                "10 - 4 = 6 (left: 5 6 6) || Input: 3 9 9"
            ]
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Step 0": {
            "steps": [
                "2 * 4 = 8 (left: 1 8 7)",
                "4 * 2 = 8 (left: 1 8 7)",
                "2 * 4 = 8 (left: 1 8 7)",
                "1 + 2 = 3 (left: 3 4 7)",
                "7 - 4 = 3 (left: 1 2 3)"
            ],
            "Evaluation": [
                1.002,
                1.002,
                3.0,
                3.0,
                1.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "7 - 1 = 6 (left: 2 4 6)",
                "1 + 2 = 3 (left: 3 4 7)",
                "1 * 2 = 2 (left: 2 4 7)",
                "2 * 4 = 8 (left: 1 8 7)",
                "1 + 2 = 3 (left: 3 4 7)"
            ],
            "Evaluation": [
                0.003,
                2.0,
                3.0,
                3.0,
                1.001
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.3",
                "2 <- 0.0",
                "3 <- INIT",
                "4 <- 1.1"
            ]
        },
        "Step 2": {
            "steps": [
                "2 * 4 = 8 (left: 1 8 7) || 7 + 1 = 8 (left: 8)",
                "1 + 2 = 3 (left: 3 4 7) || Input: 5",
                "2 * 4 = 8 (left: 1 8 7) || 7 + 1 = 8 (left: 8 7)",
                "7 - 2 = 5 (left: 1 4 5)",
                "1 + 2 = 3 (left: 3 4 7) || 5 + 5 ="
            ],
            "Evaluation": [
                0.003,
                0.003,
                1.002,
                21.0,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.2",
                "2 <- INIT",
                "3 <- 2.3",
                "4 <- 0.2"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 2 = 3 (left: 3 4 7)",
                "2 * 4 = 8 (left: 1 8 7) || 1 * 8 = 8 (left: 8 8)",
                "4 + 2 = 6 (left: 1 6 7)",
                "7 - 2 = 5 (left: 1 4 5) || 5 - 4 = 1 (left:",
                "2 * 4 = 8 (left: 1 8 7) || Possible next steps:"
            ],
            "Evaluation": [
                2.0,
                0.002,
                1.002,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 3.0",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- 2.3"
            ]
        },
        "Step 4": {
            "steps": [
                "2 * 4 = 8 (left: 1 8 7)",
                "1 + 2 = 3 (left: 3 4 7) || 7 - 3 = 4 (left: 4 7)",
                "4 - 2 = 2 (left: 1 2 7)",
                "1 * 2 = 2 (left: 2 4 7) || 4 / 2 = 2 (left: 2 7)",
                "7 - 2 = 5 (left: 1 4 5) || 1 + 4 = 5 (left: 5 5)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                1.002,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 2.3",
                "2 <- 2.3",
                "3 <- 2.3",
                "4 <- 1.3"
            ]
        },
        "Step 5": {
            "steps": [
                "7 - 2 = 5 (left: 1 4 5) || 1 + 4 = 5 (left: 5 5)",
                "7 - 2 = 5 (left: 1 4 5) || 1 + 4 = 5 (left: 5 5)",
                "7 - 2 = 5 (left: 1 4 5) || Input: 3 9 12 6",
                "7 - 2 = 5 (left: 1 4 5) || 4 / 1 = 4 (left: 4 5)",
                "2 * 4 = 8 (left: 1 8 7) || 1 * 8 = 8 (left: 8 7)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                2.001,
                20.002
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 5.4",
                "2 <- 1.3",
                "3 <- 2.3",
                "4 <- 2.3"
            ]
        },
        "Step 6": {
            "steps": [
                "7 - 2 = 5 (left: 1 4 5) || Possible",
                "2 * 4 = 8 (left: 1 8 7) || 1 * 8 = 8 (left: 8 7) || 8 - 7 = 1 (left: 1)",
                "2 * 4 = 8 (left: 1 8 7) || 1 + 8 = 9 (left: 7 9)",
                "7 - 2 = 5 (left: 1 4 5) || Input: 3 9 27",
                "7 - 2 = 5 (left: 1 4 5) || 1 + 4 = 5 (left: 5 5)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 5.4",
                "1 <- 0.3",
                "2 <- 5.4",
                "3 <- INIT",
                "4 <- 1.2"
            ]
        },
        "Step 7": {
            "steps": [
                "2 * 4 = 8 (left: 1 8 7) || 1 * 8 = 8 (left: 8 7) || 8 - 7 = 1 (left: 1)",
                "1 + 2 = 3 (left: 3 4 7) || 3 + 4 = 7 (left: 7 7)",
                "2 * 4 = 8 (left: 1 8 7) || 1 * 8 = 8 (left: 8 7) || 8 + 7 = 15 (left: 15)",
                "1 + 2 = 3 (left: 3 4 7)",
                "1 * 2 = 2 (left: 2 4 7) || 4 - 2 = 2 (left: 2 7)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.002,
                2.0,
                1.002
            ],
            "Resampling": [
                "0 <- 5.3",
                "1 <- 5.3",
                "2 <- 5.4",
                "3 <- 0.2",
                "4 <- 5.4"
            ]
        },
        "Step 8": {
            "steps": [
                "7 - 2 = 5 (left: 1 4 5) || 4 / 1 = 4 (left: 4 5) || 4 + 5 = 9 (left: 9)",
                "7 - 2 = 5 (left: 1 4 5) || 4 / 1 = 4 (left: 4 5) || 4 + 5 = 9 (left: 9)",
                "2 * 4 = 8 (left: 1 8 7) || 1 * 8 = 8 (left: 8 7) || 8 / 7 \u2248 1.14 (left: 1.14)",
                "2 * 4 = 8 (left: 1 8 7) || 7 * 1 = 7 (left: 7 7)",
                "2 * 4 = 8 (left: 1 8 7) || 1 * 8 = 8 (left: 8 7) || 8 + 7 = 15 (left: 15)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                0.002,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 5.4",
                "2 <- 0.2",
                "3 <- INIT",
                "4 <- 5.4"
            ]
        },
        "Step 9": {
            "steps": [
                "2 * 4 = 8 (left: 1 8 7) || 8 / 1 = 8 (left: 8)",
                "2 * 4 = 8 (left: 1 8 7) || 1 * 8 = 8 (left: 8 7) || 8 + 7 = 15 (left: 15)",
                "2 * 4 = 8 (left: 1 8 7) || 8 - 7 = 1 (left: 1)",
                "1 * 2 = 2 (left: 2 4 7)",
                "2 * 4 = 8 (left: 1 8 7) || 1 * 8 = 8 (left: 8 7) || 8 + 7 = 15 (left: 15)"
            ]
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Step 0": {
            "steps": [
                "8 / 2 = 4 (left: 4 5 ",
                "11 - 2 = 9 (left: 5 8 9)",
                "5 * 2 = 10 (left: 10 8 11)",
                "5 * 8 = 40 (left: 2 40 11)",
                "2 + 5 = 7 (left: 7 8 11)"
            ],
            "Evaluation": [
                2.0,
                3.0,
                0.003,
                2.001,
                2.0
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8)",
                "5 + 8 = 13 (left: 2 13 ",
                "11 - 2 = 9 (left: 2 5 9)",
                "5 + 8 = 13 (left: 2 13 11)",
                "11 - 5 = 6 (left: 2 6 8)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                1.002,
                1.002,
                2.001
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.0"
            ]
        },
        "Step 2": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "2 + 5 = 7 (left: 7 8 11)",
                "5 * 2 = 10 (left: 10 8 11)",
                "2 + 5 = 7 (left: 7 8 11)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)"
            ],
            "Evaluation": [
                0.003,
                3.0,
                1.002,
                3.0,
                0.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.0",
                "2 <- 2.2",
                "3 <- INIT",
                "4 <- 1.0"
            ]
        },
        "Step 3": {
            "steps": [
                "5 * 8 = 40 (left: 2 40 11)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "5 * 2 = 10 (left: 10 8 11) || 10 - 8 = 2 (left: 2 8 11)",
                "11 - 2 = 9 (left: 2 8 9)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)"
            ],
            "Evaluation": [
                1.002,
                60.0,
                1.002,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.0",
                "2 <- 3.1",
                "3 <- 3.1",
                "4 <- 3.1"
            ]
        },
        "Step 4": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24"
            ],
            "Evaluation": [
                0.001,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 4.4",
                "1 <- 4.3",
                "2 <- 3.1",
                "3 <- 4.3",
                "4 <- 4.3"
            ]
        },
        "Step 5": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 / 3 = 2.6667 (left: 2.6667)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.002,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- INIT",
                "2 <- 4.2",
                "3 <- 3.1",
                "4 <- 4.1"
            ]
        },
        "Step 6": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "8 + 11 = 19 (left: 2 5 19)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24"
            ],
            "Evaluation": [
                1.002,
                0.001,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 5.4",
                "1 <- 4.4",
                "2 <- 4.1",
                "3 <- 6.2",
                "4 <- 4.4"
            ]
        },
        "Step 7": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 7.4",
                "1 <- 7.3",
                "2 <- 3.1",
                "3 <- 7.2",
                "4 <- 4.2"
            ]
        },
        "Step 8": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || Possible next steps:"
            ],
            "Evaluation": [
                60.0,
                0.003,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 8.0",
                "1 <- 8.2",
                "2 <- 7.2",
                "3 <- 3.1",
                "4 <- 8.4"
            ]
        },
        "Step 9": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11) || 11 - 8 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 5) * (8 - 11) = 24"
            ]
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Step 0": {
            "steps": [
                "13 - 4 = 9 (left: ",
                "3 * 4 = 12 (left: 4 12 13)",
                "13 - 4 = 9 (left: ",
                "4 - 3 = 1 (left: 1 4 13)",
                "13 - 4 = 9 (left: "
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.0,
                1.002,
                0.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "3 * 4 = 12 (left: 4 12 13)",
                "4 - 3 = 1 (left: 1 4 13)",
                "13 - 3 = 10 (left: 4 4 10)",
                "4 / 3 = 1.33 (left: 1.33 4 13)",
                "4 / 3 = 1.33 (left: 1.33 4 13)"
            ],
            "Evaluation": [
                2.001,
                0.002,
                40.0,
                3.0,
                3.0
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "4 - 3 = 1 (left: 1 4 13) || 13 / 1 = 13 (left: 4 13)",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 + 4 = 14 (left: 4 14)",
                "13 - 3 = 10 (left: 4 4 10) || 3 + 5 = 8 (",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10)"
            ],
            "Evaluation": [
                1.002,
                20.0,
                0.003,
                0.003,
                21.001
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.3",
                "4 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10)",
                "4 / 3 = 1.33 (left: 1.33 4 13)",
                "13 - 3 = 10 (left: 4 4 10)",
                "4 - 3 = 1 (left: 1 4 13) || 4 - 1 = ",
                "3 * 4 = 12 (left: 4 12 13)"
            ],
            "Evaluation": [
                20.002,
                1.002,
                60.0,
                0.003,
                2.0
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 2.1",
                "2 <- 2.1",
                "3 <- 3.2",
                "4 <- 3.2"
            ]
        },
        "Step 4": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 * 4 = ",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 8 * 10 = 80 (left: 80)",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 18 - 2 = 16 (left: 16)",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.002,
                1.002,
                60.0
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.3",
                "2 <- 4.4",
                "3 <- 3.2",
                "4 <- 4.4"
            ]
        },
        "Step 5": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || Input: 3 5 12",
                "4 / 3 = 1.33 (left: 1.33 4 13) || 13 - 4 = 9 (left: 1.33 9)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 / 4 = 1 (left: 1 10) || 1 + 10 = 11 (left: 11)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                0.003,
                0.002,
                0.001
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 3.2",
                "3 <- 1.2",
                "4 <- 1.2"
            ]
        },
        "Step 6": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 2.5 4)",
                "13 - 3 = 10 (left: 4 4 10) || Input: 3 7",
                "13 - 3 = 10 (left: 4 4 10) || Input: 3 5",
                "13 - 3 = 10 (left: 4 4 10) || 4 * 4 = 16 (left: 16 10)"
            ],
            "Evaluation": [
                1.002,
                21.001,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 3.2",
                "2 <- 1.2",
                "3 <- 3.4",
                "4 <- 1.2"
            ]
        },
        "Step 7": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10) || 10 * 8 = 80 (left: 80)",
                "13 - 3 = 10 (left: 4 4 10) || 4 + 4 = 8 (left: 8 10)",
                "13 - 3 = 10 (left: 4 4 10) || 4 * 4 = 16 (left: 16 10)",
                "3 * 4 = 12 (left: 4 12 13) || 4 * 12 = 48 (left: 48 13)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.003,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 7.4",
                "2 <- 7.4",
                "3 <- 7.4",
                "4 <- 3.2"
            ]
        },
        "Step 8": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 - 4 = 0 (left: 0 10)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5)"
            ],
            "Evaluation": [
                20.0,
                0.001,
                0.003,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 7.4",
                "2 <- 8.4",
                "3 <- 8.3",
                "4 <- 8.4"
            ]
        },
        "Step 9": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10) || 4 - 4 = 0 (",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5) || 4 / 2.5 = 1.6 (left: 1.6)",
                "13 - 3 = 10 (left: 4 4 10) || 10 - 4 = 6 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: 4 * (4 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 4 4 10) || 10 / 4 = 2.5 (left: 4 2.5) || 4 * 2.5 = 10 (left: 10)"
            ]
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Step 0": {
            "steps": [
                "6 + 7 = 13 (left: 8 9 13)",
                "6 + 7 = 13 (left: 8 9 13)",
                "6 + 7 = 13 (left: 8 9 13)",
                "7 * 8 = 56 (left: 6 9 56)",
                "7 + 8 = 15 (left: 6 9 15)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                1.002,
                2.001,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "8 / 9 = 0",
                "9 / 6 = 1.5 (left: 1.",
                "8 * 9 = 72 (left: 6 7 ",
                "9 - 8 = 1 (left: 6 1 ",
                "8 * 9 = 72 (left: 6 7 "
            ],
            "Evaluation": [
                0.003,
                0.0,
                1.002,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.1",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "8 * 9 = 72 (left: 6 7  || 7 - 6 = 1 (left: 1)",
                "7 + 8 = 15 (left: 6 9 15)",
                "7 * 8 = 56 (left: 6 9 56)",
                "6 + 7 = 13 (left: 8 9 13) || 9 - 8 = 1 (left: 1 13)",
                "7 + 9 = 16 (left: 6 8 16)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                1.002,
                1.001,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.2"
            ]
        },
        "Step 3": {
            "steps": [
                "8 + 9 = 17 (left: 6 7 17)",
                "6 + 7 = 13 (left: 8 9 13)",
                "6 * 7 = 42 (left: 8 9 42)",
                "6 * 7 = 42 (left: 8 9 42)",
                "6 + 7 = 13 (left: 8 9 13) || 9 + 13 = 22 (left: 8 22)"
            ],
            "Evaluation": [
                0.002,
                3.0,
                2.0,
                0.001,
                1.002
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- INIT",
                "2 <- 3.1",
                "3 <- INIT",
                "4 <- 2.4"
            ]
        },
        "Step 4": {
            "steps": [
                "6 + 7 = 13 (left: 8 9 13) || 8 * 9 = 72 (left: 72 13)",
                "9 - 8 = 1 (left: 6 1 9)",
                "6 + 7 = 13 (left: 8 9 13) || 13 + 8 = 21 (left: 9 21)",
                "7 - 6 = 1 (left: 1 8 9)",
                "7 + 9 = 16 (left: 6 8 16) || 16 - 6 = 10 (left: 6 10)"
            ],
            "Evaluation": [
                1.001,
                3.0,
                1.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 1.2",
                "2 <- 0.4",
                "3 <- 3.1",
                "4 <- 3.4"
            ]
        },
        "Step 5": {
            "steps": [
                "6 + 7 = 13 (left: 8 9 13) || 13 - 8 = 5 (left: 5 13)",
                "8 * 9 = 72 (left: 6 7  || 7 - 6 = 1 (left: 1)",
                "7 + 8 = 15 (left: 6 9 15) || 9 / 6 = 1.5 (left: 1.5 15)",
                "6 + 7 = 13 (left: 8 9 13) || 13 - 8",
                "6 + 7 = 13 (left: 8 9 13) || 9 + 13 = 22 (left: 8 22) || 22 / 8 = 2.75 (left: 2.75)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                2.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 3.1",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 4.1"
            ]
        },
        "Step 6": {
            "steps": [
                "7 + 9 = 16 (left: 6 8 16) || 8 / 6 = 1.33 (left: 1.33 16)",
                "6 + 7 = 13 (left: 8 9 13) || Input: 3 4",
                "7 * 8 = 56 (left: 6 9 56)",
                "9 - 7 = 2 (left: 2 8 8)",
                "9 - 8 = 1 (left: 6 1 9) || 6 + 1 = 7 (left: 7 9)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                3.0,
                1.002,
                0.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 2.1",
                "2 <- 0.3",
                "3 <- 0.4",
                "4 <- 2.3"
            ]
        },
        "Step 7": {
            "steps": [
                "8 + 9 = 17 (left: 6 7 17)",
                "7 + 8 = 15 (left: 6 9 15) || 15 - 6 = 9 (left: 6 9)",
                "7 * 8 = 56 (left: 6 9 56) || 56 - 9 = 47 (left: 6 47)",
                "7 + 8 = 15 (left: 6 9 15) || 6 + 9 = 15 (left: 15)",
                "6 + 7 = 13 (left: 8 9 13) || 9 - 8 = 1 (left: 1 13) || 1 + 13 = 14 (left: 14)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.002,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 6.2",
                "2 <- 3.1",
                "3 <- 4.1",
                "4 <- 6.2"
            ]
        },
        "Step 8": {
            "steps": [
                "6 + 7 = 13 (left: 8 9 13) || 9 + 13 = 22 (left: 8 22) || 8 * 22 = 176 (left: 176)",
                "7 * 8 = 56 (left: 6 9 56) || 9 + 6 = 15 (left: 15 56)",
                "6 + 7 = 13 (left: 8 9 13) || 13 / 8 = ",
                "9 - 8 = 1 (left: 6 1 9) || Input: 3 5 7",
                "7 * 8 = 56 (left: 6 9 56) || 6 + 9 = 15 (left: 15 56)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 4.0",
                "1 <- 2.4",
                "2 <- 0.4",
                "3 <- 6.2",
                "4 <- 2.4"
            ]
        },
        "Step 9": {
            "steps": [
                "6 + 7 = 13 (left: 8 9 13) || 8 * 9 = 72 (left: 72 13) || 72 / 13 = 5.538461538461538 (left: 5.538461538461538)",
                "7 + 9 = 16 (left: 6 8 16) || 6 * 8 = 48 (left: 48 16)",
                "7 + 8 = 15 (left: 6 9 15) || 9 / 3 = 3 (left: 3 9)",
                "7 * 8 = 56 (left: 6 9 56) || 6 * 9 = 54 (left: 54 56)",
                "7 + 9 = 16 (left: 6 8 16) || 6 * 8 = 48 (left: 48 16)"
            ]
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Step 0": {
            "steps": [
                "11 / 1 = 11 (left: 11 11 13)",
                "11 - 1 = 10 (left: 10 11 13)",
                "11 * 1 = 11 (left: 11 11 13)",
                "11 + 1 = 12 (left: 11 12 13)",
                "13 - 11 = 2 (left: 1 11 2)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                3.0,
                60.0,
                2.001
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- INIT",
                "2 <- 0.3",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "11 + 1 = 12 (left: 11 12 13) || 12 / 13 = 0.9230769230769231 (left: 11)",
                "11 / 1 = 11 (left: 11 11 13)",
                "11 + 1 = 12 (left: 11 12 13) || 13 / 11 = 1.181818181",
                "1 + 11 = 12 (left: 11 12 13)",
                "1 + 11 = 12 (left: 11 12 13)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                21.001,
                22.0
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.3",
                "2 <- 1.3",
                "3 <- 0.3",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "11 + 1 = 12 (left: 11 12 13) || 11 - 12 = -1 (left: -1 13)",
                "11 + 1 = 12 (left: 11 12 13) || 12 + 13 = 25 (left: 11 25)",
                "1 + 11 = 12 (left: 11 12 13) || Input: 3 5",
                "11 + 1 = 12 (left: 11 12 13) || 13 / 11 = 1.181818181818182",
                "1 + 11 = 12 (left: 11 12 13)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                0.003,
                41.0
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 2.4",
                "2 <- 2.4",
                "3 <- 2.4",
                "4 <- 0.3"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13) || 12 * 13 = 156 (left: 11 156)",
                "1 + 11 = 12 (left: 11 12 13) || 12 - 11 = 1 (left: 1 13)",
                "1 + 11 = 12 (left: 11 12 13) || 13 / 12 = 1.0833 (left: 11 1.0833)",
                "1 + 11 = 12 (left: 11 12 13) || 11 + 12 = 23 (left: 13 23)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                1.0,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 2.4",
                "2 <- 2.4",
                "3 <- 0.3",
                "4 <- INIT"
            ]
        },
        "Step 4": {
            "steps": [
                "13 - 11 = 2 (left: 1 11 2)",
                "1 + 11 = 12 (left: 11 12 13) || 13 / 11 = 1.181818181",
                "1 + 11 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)",
                "11 + 1 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)",
                "11 + 1 = 12 (left: 11 12 13)"
            ],
            "Evaluation": [
                2.001,
                0.003,
                20.002,
                0.002,
                21.001
            ],
            "Resampling": [
                "0 <- 4.2",
                "1 <- 0.3",
                "2 <- 4.2",
                "3 <- 4.0",
                "4 <- 2.4"
            ]
        },
        "Step 5": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 13 - 132 = -119 (left: -119)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 13)",
                "1 + 11 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 132 - 13 = 119 (left: 119)",
                "13 - 11 = 2 (left: 1 11 2) || 1 * 11 = 11 (left: 11 2)",
                "1 + 11 = 12 (left: 11 12 13) || 12 - 11 = 1 (left: 1 13)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.002,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 3.4",
                "2 <- 1.3",
                "3 <- 3.4",
                "4 <- 3.4"
            ]
        },
        "Step 6": {
            "steps": [
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "1 + 11 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: ",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.001,
                0.0,
                0.0,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 4.4",
                "1 <- 4.4",
                "2 <- 3.4",
                "3 <- 4.2",
                "4 <- 2.4"
            ]
        },
        "Step 7": {
            "steps": [
                "11 + 1 = 12 (left: 11 12 13) || 11 + 12 = 23 (left: 13 23)",
                "11 + 1 = 12 (left: 11 12 13) || 12 + 13 = 25 (left: 11)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "1 + 11 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 132 - 13 = 119 (left: 119)",
                "1 + 11 = 12 (left: 11 12 13) || 11 - 12 = -1 (left: -1 13)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.002,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 3.4",
                "2 <- 3.4",
                "3 <- 3.4",
                "4 <- 3.4"
            ]
        },
        "Step 8": {
            "steps": [
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10 12",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)"
            ],
            "Evaluation": [
                60.0,
                0.001,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 8.0",
                "2 <- 8.0",
                "3 <- 2.4",
                "4 <- 4.2"
            ]
        },
        "Step 9": {
            "steps": [
                "11 + 1 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13)",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (11 + 1) * (13 - 11) = 24",
                "11 + 1 = 12 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (11 + 1) * (13 - 11) = 24",
                "1 + 11 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)",
                "1 + 11 = 12 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 13 - 132 = -119 (left: -119)"
            ]
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Step 0": {
            "steps": [
                "1 + 8 = 9 (left: 9 10 11)",
                "8 / 1 = 8 (left: 8 10 ",
                "8 / 1 = 8 (left: 8 10 ",
                "8 + 1 = 9 (left: 9 10 11)",
                "10 - 1 = 9 (left: 8 9 11)"
            ],
            "Evaluation": [
                1.001,
                2.001,
                1.001,
                0.003,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 8 = 9 (left: 9 10 11)",
                "10 + 1 = 11 (left: 8 11)",
                "11 - 1 = 10 (left: 8 10 10)",
                "1 + 8 = 9 (left: 9 10 11)",
                "11 - 10 = 1 (left: 1 8 "
            ],
            "Evaluation": [
                2.001,
                2.001,
                1.002,
                3.0,
                1.002
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.3",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "11 - 1 = 10 (left: 8 10 10) || 8 / 10 = 0.8 (left: 0.8 10)",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11)",
                "8 - 1 = 7 (left: 7 10 11)",
                "11 - 1 = 10 (left: 8 10 10) || Possible next steps:",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 10 11)"
            ],
            "Evaluation": [
                20.0,
                40.0,
                2.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- 2.1",
                "3 <- 2.0",
                "4 <- 2.0"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 11 * 1 = 11 (left: 11)",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 11 * 1 = 11 (left: 11)",
                "11 - 1 = 10 (left: 8 10 10) || 8 / 10 = 0.8 (left: 0.8 10) || 0.8 + 10 = 10.8 (left: 10.8)",
                "11 - 1 = 10 (left: 8 10 10) || 8 / 10 = 0.8 (left: 0.8 10) || 10 / 0.8 = 12.5 (left: 12.5)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.001,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- 2.1",
                "3 <- 2.1",
                "4 <- 2.1"
            ]
        },
        "Step 4": {
            "steps": [
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 1 + 11 = 12",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 1 + 11 = 12 (left: 12)",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 1 + 11 = 12 (left: 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.001,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 2.0",
                "2 <- 2.1",
                "3 <- 1.3",
                "4 <- 2.1"
            ]
        },
        "Step 5": {
            "steps": [
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 11 * 1 = 11 (left: 11)",
                "11 - 1 = 10 (left: 8 10 10) || 8 / 10 = 0.8 (left: 0.8 10) || 10 - 0.8 = 9.2 (left: 9.2)",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 11 / 1 = 11 (left: 11)",
                "1 + 8 = 9 (left: 9 10 11) || 9 + 10 = 19 (left: 11 19)",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 11 - 1 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.001,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.3",
                "2 <- 2.1",
                "3 <- 2.0",
                "4 <- 2.1"
            ]
        },
        "Step 6": {
            "steps": [
                "11 - 1 = 10 (left: 8 10 10)",
                "1 + 8 = 9 (left: 9 10 11) || 9 + 10 = 19 (left: 11 19)",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 1 + 11 = 12 (left: 12)",
                "11 - 1 = 10 (left: 8 10 10) || 8 / 10 = 0.8 (left: 0.8 10) || 0.8 * 10 = 8 (left: 8)",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 1 + 11 = 12 (left: 12)"
            ],
            "Evaluation": [
                3.0,
                0.003,
                0.002,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 1.1",
                "2 <- 2.1",
                "3 <- 2.1",
                "4 <- INIT"
            ]
        },
        "Step 7": {
            "steps": [
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "10 + 1 = 11 (left: 8 11) || 8 - 11 = -3 (left: -3)",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "8 / 1 = 8 (left: 8 10 11)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.003,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- 2.1",
                "3 <- 2.1",
                "4 <- 2.0"
            ]
        },
        "Step 8": {
            "steps": [
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 1 * 11 = 11 (left: 11)",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 1 + 11 = 12 (left: 12)",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 1 + 11 = 12",
                "11 - 1 = 10 (left: 8 10 10) || 8 / 10 = 0.8 (left: 0.8 10) || 0.8 * 10 = 8 (left: 8 10)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.002,
                0.003,
                20.001
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 2.0",
                "2 <- 1.0",
                "3 <- 2.1",
                "4 <- 8.4"
            ]
        },
        "Step 9": {
            "steps": [
                "8 - 1 = 7 (left: 7 10 11) || 10 / 11 = 0.909 (left: 7)",
                "11 - 1 = 10 (left: 8 10 10) || 8 / 10 = 0.8 (left: 0.8 10) || 10 / 0.8 = 12.5 (left: 12.5)",
                "1 + 8 = 9 (left: 9 10 11) || 11 - 9 = 2 (left: 2 10)",
                "1 + 8 = 9 (left: 9 10 11) || 10 - 9 = 1 (left: 1 11) || 11 * 1 = 11 (left: 11)",
                "11 - 1 = 10 (left: 8 10 10) || 8 / 10 = 0.8 (left: 0.8 10) || 0.8 * 10 = 8 (left: 8 10) || 10 - 8 = 2 (left: 2)"
            ]
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Step 0": {
            "steps": [
                "9 - 6 = 3 (left: 2 3 3)",
                "2 + 3 = 5 (left: 5 6 9)",
                "2 + 3 = 5 (left: 5 6 9)",
                "6 - 3 = 3 (left: 2 3 9)",
                "2 + 3 = 5 (left: 5 6 9)"
            ],
            "Evaluation": [
                1.001,
                3.0,
                3.0,
                0.003,
                22.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.4",
                "2 <- 0.4",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "6 + 3 = 9 (left: 2 6 9)",
                "2 + 3 = 5 (left: 5 6 9) || Input: 3 4 7 10",
                "2 + 3 = 5 (left: 5 6 9) || 6 * 9 = ",
                "6 * 3 = 18 (left: 2 9 ",
                "9 / 3 = 3 (left: 2 3 "
            ],
            "Evaluation": [
                2.001,
                0.003,
                20.002,
                1.001,
                0.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.2",
                "3 <- 1.0",
                "4 <- 0.4"
            ]
        },
        "Step 2": {
            "steps": [
                "9 - 3 = 6 (left: 2 6 ",
                "6 * 2 = 12 (left: 3 6 12)",
                "2 + 3 = 5 (left: 5 6 9) || 6 * 9 =  || 6 * 9 = 54",
                "6 + 3 = 9 (left: 2 6 9) || 2 * 6 = 12 (left: 12 9)",
                "2 + 3 = 5 (left: 5 6 9) || 6 - 5 = 1 (left: 1 9)"
            ],
            "Evaluation": [
                2.001,
                1.002,
                0.003,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 1.2",
                "2 <- 2.4",
                "3 <- 2.4",
                "4 <- 1.2"
            ]
        },
        "Step 3": {
            "steps": [
                "2 + 3 = 5 (left: 5 6 9) || 6 - 5 = 1 (left: 1 9) || 9 / 1 = 9 (left: 9)",
                "2 + 3 = 5 (left: 5 6 9) || 6 * 9 =  || 6 * 9 = 54",
                "2 + 3 = 5 (left: 5 6 9) || 6 - 5 = 1 (left: 1 9) || 9 / 1 = 9 (left: 9)",
                "2 + 3 = 5 (left: 5 6 9) || 6 - 5 = 1 (left: 1 9) || 9 / 1 = 9 (left: 9)",
                "2 + 3 = 5 (left: 5 6 9) || 6 * 9 =  || 6 * 9 = 54"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 2.4",
                "2 <- 2.4",
                "3 <- 2.4",
                "4 <- 2.4"
            ]
        },
        "Step 4": {
            "steps": [
                "2 + 3 = 5 (left: 5 6 9) || 6 - 5 = 1 (left: 1 9) || 9 - 1 = 8 (left: 8)",
                "2 + 3 = 5 (left: 5 6 9) || 6 - 5 = 1 (left: 1 9) || 9 - 1 = 8 (left: 8)",
                "2 + 3 = 5 (left: 5 6 9) || 6 - 5 = 1 (left: 1 9) || 9 - 1 = 8 (left: 8)",
                "2 + 3 = 5 (left: 5 6 9) || 6 - 5 = 1 (left: 1 9) || 9 / 1 = 9 (left: 9)",
                "2 + 3 = 5 (left: 5 6 9) || 6 - 5 = 1 (left: 1 9) || 1 * 9 = 9 (left: 9)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.001,
                0.002,
                0.001
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 2.4",
                "2 <- INIT",
                "3 <- 2.4",
                "4 <- 0.4"
            ]
        },
        "Step 5": {
            "steps": [
                "2 + 3 = 5 (left: 5 6 9) || Possible",
                "2 + 3 = 5 (left: 5 6 9) || 6 - 5 = 1 (left: 1 9) || 1 * 9 = 9 (left: 9)",
                "6 / 2 = 3 (left: 3 3 9)",
                "2 + 3 = 5 (left: 5 6 9) || 6 - 5 = 1 (left: 1 9) || 1 + 9 = 10 (left: 10)",
                "2 + 3 = 5 (left: 5 6 9) || 9 - 5 = 4 (left: 4 6)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                1.001,
                0.001,
                41.0
            ],
            "Resampling": [
                "0 <- 5.4",
                "1 <- 5.4",
                "2 <- 2.4",
                "3 <- 5.4",
                "4 <- 5.4"
            ]
        },
        "Step 6": {
            "steps": [
                "2 + 3 = 5 (left: 5 6 9) || 9 - 5 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "2 + 3 = 5 (left: 5 6 9) || 9 - 5 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "2 + 3 = 5 (left: 5 6 9) || 6 - 5 = 1 (left: 1 9) || 1 * 9 = 9 (left: 9)",
                "2 + 3 = 5 (left: 5 6 9) || 9 - 5 = 4 (left: 4 6) || 4 + 6 = 10 (left: 10)",
                "2 + 3 = 5 (left: 5 6 9) || 9 - 5 = 4 (left: 4 6) || 4 + 6 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                0.003,
                0.002,
                0.001
            ],
            "Resampling": [
                "0 <- 5.4",
                "1 <- 5.4",
                "2 <- 5.4",
                "3 <- 5.4",
                "4 <- 5.4"
            ]
        },
        "Step 7": {
            "steps": [
                "2 + 3 = 5 (left: 5 6 9) || 9 - 5 = 4 (left: 4 6) || 4 + 6 = 10 (left: 10)",
                "2 + 3 = 5 (left: 5 6 9) || 9 - 5 = 4 (left: 4 6) || 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)",
                "2 + 3 = 5 (left: 5 6 9) || 9 - 5 = 4 (left: 4 6) || 4 + 6 = 10 (left: 10)",
                "2 + 3 = 5 (left: 5 6 9) || 9 - 5 = 4 (left: 4 6) || 6 * 4 = 24 (left:",
                "2 + 3 = 5 (left: 5 6 9) || 9 - 5 = 4 (left: 4 6) || 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)"
            ],
            "Evaluation": [
                0.002,
                1.001,
                0.002,
                60.0,
                20.002
            ],
            "Resampling": [
                "0 <- 5.4",
                "1 <- 2.4",
                "2 <- 7.4",
                "3 <- 2.4",
                "4 <- 5.4"
            ]
        },
        "Step 8": {
            "steps": [
                "2 + 3 = 5 (left: 5 6 9) || 9 - 5 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "2 + 3 = 5 (left: 5 6 9) || 6 - 5 = 1 (left: 1 9) || 1 + 9 = 10 (left: 10)",
                "2 + 3 = 5 (left: 5 6 9) || 9 - 5 = 4 (left: 4 6) || 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666) || There are no possible next steps with the input 0.6666666666666666.",
                "2 + 3 = 5 (left: 5 6 9) || 6 - 5 = 1 (left: 1 9) || 9 / 1 = 9 (left: 9)",
                "2 + 3 = 5 (left: 5 6 9) || 9 - 5 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.003,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 8.4",
                "1 <- 0.4",
                "2 <- 7.3",
                "3 <- 0.4",
                "4 <- 7.3"
            ]
        },
        "Step 9": {
            "steps": [
                "2 + 3 = 5 (left: 5 6 9) || 9 - 5 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (2 + 3) * (6 + 9) = 24",
                "2 + 3 = 5 (left: 5 6 9) || 9 / 6 = 1.5 (left: 5 1.5)",
                "2 + 3 = 5 (left: 5 6 9) || 9 - 5 = 4 (left: 4 6) || 6 * 4 = 24 (left: || 6 * 4 = 24 (left: 24)",
                "2 + 3 = 5 (left: 5 6 9) || 5 + 6 = 11 (left: 9 11)",
                "2 + 3 = 5 (left: 5 6 9) || 9 - 5 = 4 (left: 4 6) || 6 * 4 = 24 (left: || 6 * 4 = 24 (left: 24)"
            ]
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Step 0": {
            "steps": [
                "3 * 5 = 15 (left: 1 15 9)",
                "5 + 9 = 14 (left: 1 3 14)",
                "9 - 1 = 8 (left: 3 5 8)",
                "9 - 1 = 8 (left: 3 5 ",
                "3 - 1 = 2 (left: 2 5 9)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                3.0,
                1.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.2"
            ]
        },
        "Step 1": {
            "steps": [
                "9 / 3 = 3 (left: 1 3 ",
                "5 + 9 = 14 (left: 1 3 14)",
                "1 * 3 = 3 (left: 3 5 9)",
                "3 + 5 = 8 (left: 1 8 9)",
                "9 - 1 = 8 (left: 3 5 8) || 5 - 3 = 2 (left: 2 8)"
            ],
            "Evaluation": [
                0.0,
                20.002,
                60.0,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- 1.1",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "5 * 9 = 45 (left: 1 3 ",
                "1 * 3 = 3 (left: 3 5 9) || 5 * 9 = 45 (left: 3 45)",
                "1 * 3 = 3 (left: 3 5 9) || 5 + 3 = 8 (left: 8 9)",
                "5 + 9 = 14 (left: 1 3 14) || 14 / 3 = 4.666666666666667 (left: 1 4.666666666666",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 3 = 6 (left: 6 9)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                0.003,
                1.001,
                0.003
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.1",
                "2 <- 1.2",
                "3 <- 1.1",
                "4 <- 1.2"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 5 - 3 = 2 (left: 2 9)",
                "5 + 9 = 14 (left: 1 3 14) || 3 * 1 = 3 (left: 3 14)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9)",
                "5 + 9 = 14 (left: 1 3 14) || 1 + 3 = 4 (left: 4 14)",
                "1 * 3 = 3 (left: 3 5 9) || Input: 4 6 12 24"
            ],
            "Evaluation": [
                0.001,
                0.003,
                60.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 3.2",
                "3 <- 3.2",
                "4 <- 1.2"
            ]
        },
        "Step 4": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 9 / 5 = 1 (left: 1 9)",
                "1 * 3 = 3 (left: 3 5 9) || 5 / 3 = 1.67 (left: 1.67 9)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 * 9 = 135 (left: 135)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 9 + 15 = 24 (left: 24)",
                "1 * 3 = 3 (left: 3 5 9) || 3 + 5 = 8 (left: 8 9)"
            ],
            "Evaluation": [
                60.0,
                0.0,
                0.003,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 4.3",
                "2 <- 3.2",
                "3 <- 1.2",
                "4 <- 3.2"
            ]
        },
        "Step 5": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 * 9 = 135 (left: 135)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 9 + 15 = 24 (left: 24) || Answer: (1 * 3) * (5 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 + 9 = 24 (left: 24)",
                "1 * 3 = 3 (left: 3 5 9) || 9 - 5 = 4 (left: 3 4)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 * 9 = 135 (left: 135)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                21.0,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 5.1",
                "2 <- 5.1",
                "3 <- 5.1",
                "4 <- 4.0"
            ]
        },
        "Step 6": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 - 9 = 6 (left: 6)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 + 9 = 24 (left: 24) || Answer: (1 * 3) * (5 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 + 9 = 24 (left: 24) || Answer: (1 * 3) * (5 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 + 9 = 24 (left: 24) || Answer: (1 * 3) * (5 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9) || 9 / 5 = 1 (left: 1 9) || 1 + 9 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                1.001,
                20.002,
                22.0
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 5.4",
                "2 <- 4.0",
                "3 <- 1.2",
                "4 <- 3.2"
            ]
        },
        "Step 7": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 9 + 15 = 24 (left: 24) || Answer: (1 * 3) * (5 + 9) = 24",
                "1 * 3 = 3 (left: 3 5 9) || 9 / 5 = 1 (left: 1 9) || 1 * 9 = 9 (left: 9)",
                "1 * 3 = 3 (left: 3 5 9) || 9 / 5 = 1 (left: 1 9) || 1 * 9 = 9 (left: 9)",
                "1 * 3 = 3 (left: 3 5 9) || 5 * 3 = 15 (left: 15 9)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)"
            ],
            "Evaluation": [
                0.001,
                0.001,
                40.001,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 5.4",
                "1 <- 5.1",
                "2 <- 7.4",
                "3 <- 7.2",
                "4 <- 3.2"
            ]
        },
        "Step 8": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 9 / 5 = 1 (left: 1 9) || 1 + 9 = 10 (left: 10)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 + 9 = 24 (left: 24) || Answer: (1 * 3) + (5 * 9) = 24",
                "1 * 3 = 3 (left: 3 5 9) || 9 / 5 = 1 (left: 1 9) || 1 + 9 = 10 (left: 10)",
                "1 * 3 = 3 (left: 3 5 9) || 5 * 3 = 15 (left: 15 9) || 15 / 9 = 1.67 (left: 1.67)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.001,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 7.2",
                "1 <- 7.4",
                "2 <- 3.2",
                "3 <- 5.4",
                "4 <- 4.3"
            ]
        },
        "Step 9": {
            "steps": [
                "1 * 3 = 3 (left: 3 5 9) || 5 * 3 = 15 (left: 15 9) || 9 - 15 = -6 (left: -6)",
                "1 * 3 = 3 (left: 3 5 9) || 9 / 5 = 1 (left: 1 9) || 1 * 9 = 9 (left: 9)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 15 / 9 = 1.6667 (left: 1.6667)",
                "1 * 3 = 3 (left: 3 5 9) || 9 / 5 = 1 (left: 1 9) || 9 / 1 = 9 (left: 9)",
                "1 * 3 = 3 (left: 3 5 9) || 3 * 5 = 15 (left: 15 9) || 9 + 15 = 24 (left: 24) || Answer: (1 * 3) * (5 + 9) = 24"
            ]
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Step 0": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 ",
                "12 - 7 = 5 (left: 3 5 12)",
                "12 - 7 = 5 (left: 3 5 ",
                "7 - 3 = 4 (left: 3 4 12)",
                "7 - 3 = 4 (left: 3 4 12)"
            ],
            "Evaluation": [
                22.0,
                2.001,
                0.001,
                22.0,
                20.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.3",
                "2 <- 0.3",
                "3 <- 0.4",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "3 * 7 = 21 (left: 3 12 21)",
                "7 - 3 = 4 (left: 3 4 12) || 4 + 3 = 7 (left: 7 12)",
                "7 - 3 = 4 (left: 3 4 12) || 4 - 3 = 1 (left: 1 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9)",
                "3 / 3 = 1 (left: 1 7 12)"
            ],
            "Evaluation": [
                2.001,
                1.001,
                0.002,
                40.0,
                2.001
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 1.3",
                "2 <- 1.3",
                "3 <- 1.3",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || Possible next steps:",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || 4 * 9 = 36 (left: 36)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || 9 / 4 = 2.25 (left: 2.25)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || Input: 3 6 10",
                "12 - 7 = 5 (left: 3 5 12)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.002,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 2.1",
                "2 <- 1.3",
                "3 <- 1.3",
                "4 <- 2.1"
            ]
        },
        "Step 3": {
            "steps": [
                "7 - 3 = 4 (left: 3 4  || 4 - 3 = 1 (left: 1)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || 4 * 9 = 36 (left: 36) || There are no possible next steps as there is only one number provided.",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || 9 / 4 = 2.25 (left: 2.25)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || 4 * 9 = 36 (left: 9 36)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || 4 * 9 = 36 (left: 36) || There are no possible operations to perform on the number 36."
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.001,
                20.002,
                0.003
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 3.3",
                "2 <- 2.1",
                "3 <- 1.3",
                "4 <- 1.3"
            ]
        },
        "Step 4": {
            "steps": [
                "7 - 3 = 4 (left: 3 4  || 4 / 3 = 1.33 (left: 1.33)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || 4 * 9 = 36 (left: 9 36) || 36 - 9 = 27 (left: 27)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 / 9 = 4 (left: 4)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || 4 + 9 = 13 (left: 9 13)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || 4 * 9 = 36 (left: 9)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.0,
                60.0,
                20.0
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 0.0",
                "2 <- 4.3",
                "3 <- 1.0",
                "4 <- 0.1"
            ]
        },
        "Step 5": {
            "steps": [
                "7 - 3 = 4 (left: 3 4  || 4 - 3 = 1 (left: 1)",
                "7 - 3 = 4 (left: 3 4  || 3 * 4 = 12 (left: 4)",
                "7 - 3 = 4 (left: 3 4  || Input: 5 7",
                "3 * 7 = 21 (left: 3 12 21) || 21 - 3 = 18 (left:",
                "12 - 7 = 5 (left: 3 5 12) || 12 - 3 = 9 (left: 5 9)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 0.3",
                "2 <- 4.3",
                "3 <- 1.1",
                "4 <- 4.4"
            ]
        },
        "Step 6": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || 4 * 9 = 36 (left: 9)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12)",
                "7 - 3 = 4 (left: 3 4  || 4 - 3 = 1 (left: 1)",
                "7 - 3 = 4 (left: 3 4 12) || 4 + 3 = 7 (left: 7 12) || 12 / 7 = 1.71 (left: 1.71)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || 4 * 9 = 36 (left: 36) || There are no possible next steps with the input of 36 as it is already a single number."
            ],
            "Evaluation": [
                0.0,
                40.0,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 6.1",
                "2 <- 6.1",
                "3 <- 0.3",
                "4 <- 6.1"
            ]
        },
        "Step 7": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || 4 * 9 = 36 (left: 36) || 36 / 2 = 18",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 3 * 8 = 24 (left: 24 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 / 3 = 4 (left: 4 12)",
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 3 = 9 (left: 8 9)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 7.3",
                "1 <- 1.3",
                "2 <- 6.1",
                "3 <- 7.3",
                "4 <- 6.1"
            ]
        },
        "Step 8": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || Input: 3 11",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 8 - 3 = 5 (left: 5 12)",
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12) || 12 + 12 = 24",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 3 + 8 = 11 (left: 11 12)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                1.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 0.0",
                "2 <- 6.1",
                "3 <- 7.3",
                "4 <- 6.1"
            ]
        },
        "Step 9": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12) || 12 - 3 = 9 (left: 4 9) || 4 * 9 = 36 (left: 36) || No more possible next steps as there is only one number left.",
                "7 - 3 = 4 (left: 3 4  || 4 - 3 = 1 (left: 1)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 3 * 8 = 24 (left: 24 12)",
                "7 - 3 = 4 (left: 3 4 12) || 4 * 3 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)",
                "7 - 3 = 4 (left: 3 4 12) || 12 - 4 = 8 (left: 3 8 12) || 12 - 8 = 4 (left:"
            ]
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "910": {
        "puzzle": "4 5 7 9",
        "Step 0": {
            "steps": [
                "4 * 5 = 20 (left: 7 9)",
                "5 * 7 = 35 (left: 4 9 35)",
                "5 * 7 = 35 (left: 4 9 35)",
                "4 -",
                "4 / 5 = 0.8 (left: 0.8 7 9)"
            ],
            "Evaluation": [
                0.002,
                1.001,
                0.003,
                0.003,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.4",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "7 * 9 = 63 (left: 4 5 63)",
                "4 + 5 = 9 (left: 7 9)",
                "4 / 5 = 0.8 (left: 0.8 7 9) || 7 / 0.8 = 8.75 (left: 8.75 9)",
                "4 * 5 = 20 (left: 7 9 20)",
                "7 * 9 = 63 (left: 4 5 63)"
            ],
            "Evaluation": [
                1.001,
                1.002,
                2.001,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 1.0",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "4 * 5 = 20 (left: 7 9 20) || 20 - 7 = 13 (left: 7 13)",
                "7 * 9 = 63 (left: 4 5 63) || 63 / 4 = 15.75 (left: 5 15.75)",
                "4 + 5 = 9 (left: 7 9)",
                "7 + 9 = 16 (left: 4 5 16)",
                "4 / 5 = 0.8 (left: 0.8 7 9) || 7 / 0.8 = 8.75 (left: 8.75 9) || 8.75 + 9 = 17.75 (left: 17.75)"
            ],
            "Evaluation": [
                0.001,
                2.0,
                0.003,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "4 * 5 = 20 (left: 7 9)",
                "4 + 5 = 9 (left: 7 9)",
                "4 -",
                "4 -",
                "5 * 7 = 35 (left: 4 35 9)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- INIT",
                "2 <- 0.4",
                "3 <- 3.1",
                "4 <- INIT"
            ]
        },
        "Step 4": {
            "steps": [
                "7 * 9 = 63 (left: 4 5 63) || 63 / 4 = 15.75 (left: 5 15.75) || 15.75 - 5 = 10.75 (left: 10.75)",
                "7 + 9 = 16 (left: 4 5 16)",
                "4 / 5 = 0.8 (left: 0.8 7 9) || 0.8 + 7 = 7.8 (left: 7.8 9)",
                "4 + 5 = 9 (left: 7 9) || 9 - 7 = 2 (left: 2)",
                "7 * 9 = 63 (left: 4 5)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.001,
                0.002,
                3.0
            ],
            "Resampling": [
                "0 <- 4.1",
                "1 <- 4.1",
                "2 <- 4.1",
                "3 <- 4.1",
                "4 <- 4.1"
            ]
        },
        "Step 5": {
            "steps": [
                "7 + 9 = 16 (left: 4 5 16) || 4 * 5 = 20 (left: 20 16)",
                "7 + 9 = 16 (left: 4 5 16) || 5 * 4 = 20 (left: 20 16)",
                "7 + 9 = 16 (left: 4 5 16) || 5 * 4 = 20 (left: 20 16)",
                "7 + 9 = 16 (left: 4 5 16) || 16 - 5 = 11 (left: 4",
                "7 + 9 = 16 (left: 4 5 16) || 16 / 5 = 3.2 ("
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 4.1",
                "1 <- 4.1",
                "2 <- 4.1",
                "3 <- 4.1",
                "4 <- 4.1"
            ]
        },
        "Step 6": {
            "steps": [
                "7 + 9 = 16 (left: 4 5 16) || 16 / 4 = 4 (left: 5 4)",
                "7 + 9 = 16 (left: 4 5 16) || 4 + 5 = 9 (left: 9 16)",
                "7 + 9 = 16 (left: 4 5 16) || 4 + 5 = 9 (left: 9 16)",
                "7 + 9 = 16 (left: 4 5 16) || 5 + 4 = 9 (left: 9 16)",
                "7 + 9 = 16 (left: 4 5 16) || 5 * 4 = 20 (left: 20 16)"
            ],
            "Evaluation": [
                3.0,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 4.1",
                "1 <- 4.1",
                "2 <- 4.1",
                "3 <- 4.1",
                "4 <- 2.3"
            ]
        },
        "Step 7": {
            "steps": [
                "7 + 9 = 16 (left: 4 5 16) || 5 * 4 = 20 (left: 20 16)",
                "7 + 9 = 16 (left: 4 5 16) || 16 - 5 = 11 (",
                "7 + 9 = 16 (left: 4 5 16) || 5 + 4 = 9 (left: 9 16)",
                "7 + 9 = 16 (left: 4 5 16) || 4 * 5 = 20 (left: 20 16)",
                "7 + 9 = 16 (left: 4 5 16) || 16 - 4 = 12 (left: 5 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                1.002,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 4.1",
                "1 <- INIT",
                "2 <- 4.1",
                "3 <- 4.1",
                "4 <- 4.1"
            ]
        },
        "Step 8": {
            "steps": [
                "7 + 9 = 16 (left: 4 5 16) || 5 + 4 = 9 (left: 9 16)",
                "5 + 7 = 12 (left: 4 12 9)",
                "7 + 9 = 16 (left: 4 5 16) || 16 / 4 = 4 (left: 5 4)",
                "7 + 9 = 16 (left: 4 5 16) || 5 * 4 = 20 (left: 20 16)",
                "7 + 9 = 16 (left: 4 5 16) || 5 * 16 = 80 (left: 80)"
            ],
            "Evaluation": [
                1.002,
                3.0,
                1.001,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 4.1",
                "1 <- 8.1",
                "2 <- 8.1",
                "3 <- 4.1",
                "4 <- INIT"
            ]
        },
        "Step 9": {
            "steps": [
                "7 + 9 = 16 (left: 4 5 16) || 16 - 4 = 12 (left: 5 12)",
                "5 + 7 = 12 (left: 4 12 9) || 12 / 4 = 3 (left: 3 9)",
                "5 + 7 = 12 (left: 4 12 9) || 4 + 12 = 16 (left: 16 9)",
                "7 + 9 = 16 (left: 4 5 16) || 5 * 4 = 20 (left: 20 16)",
                "4 /"
            ]
        },
        "Input": "4 5 7 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "911": {
        "puzzle": "1 2 8 13",
        "Step 0": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13)",
                "13 - 2 = 11 (left: 1 8 11)",
                "13 - 1 = 12 (left: 2 8 ",
                "2 * 8 = 16 (left: 1 16 13)",
                "1 + 2 = 3 (left: 3 8 13)"
            ],
            "Evaluation": [
                60.0,
                1.001,
                2.001,
                3.0,
                60.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.0",
                "2 <- 0.4",
                "3 <- 0.0",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "13 - 1 = 12 (left: 2 8 12)",
                "1 + 2 = 3 (left: 3 8 13) || 13 - 3 = 10 (left: 8 10)",
                "1 + 2 = 3 (left: 3 8 13) || 3 * 8 = 24 (left: 24 13)",
                "1 + 2 = 3 (left: 3 8 13) || 3 * 8 = 24 (left: 24 13)",
                "13 + 1 = 14 (left: 2 8 14)"
            ],
            "Evaluation": [
                1.002,
                1.001,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.0",
                "2 <- 0.4",
                "3 <- INIT",
                "4 <- 0.4"
            ]
        },
        "Step 2": {
            "steps": [
                "8 - 2 = 6 (left: 1 6 13)",
                "1 + 2 = 3 (left: 3 8 13) || 8 - 3 = 5 (left: 5 13)",
                "1 + 2 = 3 (left: 3 8 13) || 13 / 3 = ",
                "13 - 1 = 12 (left: 2 8 12)",
                "1 + 2 = 3 (left: 3 8 13) || 13 / 3 = 4."
            ],
            "Evaluation": [
                2.001,
                0.002,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.4",
                "2 <- 0.4",
                "3 <- 0.0",
                "4 <- 0.4"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13) || 8 / 3 = 2.66667 (left: 2.66667 13)",
                "1 + 2 = 3 (left: 3 8 13) || 13 - 8 = 5 (left: 3 5)",
                "1 + 2 = 3 (left: 3 8 13) || 8 - 3 = 5 (left: 5 8 13)",
                "1 + 2 = 3 (left: 3 8 13) || 13 - 8 = 5 (left: ",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13)"
            ],
            "Evaluation": [
                0.003,
                1.001,
                1.002,
                0.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 0.4",
                "2 <- 0.0",
                "3 <- 3.4",
                "4 <- 0.4"
            ]
        },
        "Step 4": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 / 13 = 0.84615384615 (left: 0.84615384615)",
                "1 + 2 = 3 (left: 3 8 13) || 13 + 3 = 16 (left: 8 16)",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 13 - 11 = 2 (left: 2)",
                "1 + 2 = 3 (left: 3 8 13) || 13 - 8 = 5 (left: 3 5)"
            ],
            "Evaluation": [
                0.002,
                60.0,
                60.0,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 4.2",
                "1 <- 4.2",
                "2 <- 4.2",
                "3 <- 3.4",
                "4 <- 4.1"
            ]
        },
        "Step 5": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 - 13 = -2 (left: -2)",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13) || 13 + 3 = 16 (left: 8 16) || 16 - 8 = 8 (left: 8)"
            ],
            "Evaluation": [
                60.0,
                0.0,
                60.0,
                60.0,
                0.002
            ],
            "Resampling": [
                "0 <- 5.2",
                "1 <- 3.4",
                "2 <- 0.4",
                "3 <- 3.4",
                "4 <- 5.3"
            ]
        },
        "Step 6": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 + 13 = 24 (left: 24) || Answer: ((1 + 2) + 8) + 13 = 24",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "1 + 2 = 3 (left: 3 8 13) || 13 / 3 = ",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13) || 3 + 8 = 11 (left: 11 13) || 11 + 13 = 24 (left: 24) || Answer: ((1 + 2) + 8) + 13 = 24"
            ]
        },
        "Input": "1 2 8 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "912": {
        "puzzle": "4 6 6 9",
        "Step 0": {
            "steps": [
                "4 + 6 = 10 (left: 6 6 9)",
                "6 - 4 = 2 (left: 2 6 9)",
                "4 + 6 = 10 (left: 6 6 9)",
                "9 - 6 = 3 (left: ",
                "4 * 6 = 24 (left: 6 6 24)"
            ],
            "Evaluation": [
                3.0,
                0.003,
                2.001,
                0.0,
                0.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.0",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3)",
                "6 / 4 = 1.5 (left: 1.5 6 9)",
                "6 - 4 = 2 (left: 2 6 9)",
                "4 + 6 = 10 (left: 6 6 9) || 6 * 6 = 36 (left: 9 36)",
                "6 - 4 = 2 (left: 2 6 9)"
            ],
            "Evaluation": [
                60.0,
                3.0,
                1.002,
                20.002,
                1.002
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.0",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3) || 4 + 6 = 10 (left: 3 10)",
                "9 - 6 = 3 (left: 4 6 3) || 4 + 6 = 10 (left: 3 10)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3",
                "4 + 6 = 10 (left: 6 6 9) || 6 * 6 = 36 (left: 9 36) || 9 * 36 = 324 (left: 324)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                2.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.0",
                "2 <- 1.3",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3) || 6 - 4 = 2 (left: 2 3)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3)",
                "4 + 6 = 10 (left: 6 6 9) || 6 * 6 = 36 (left: 9 36) || 36 - 9 = 27 (left: 27)",
                "6 / 4 = 1.5 (left: 1.5 6 9)",
                "6 / 4 = 1.5 (left: 1.5 6 9)"
            ],
            "Evaluation": [
                0.002,
                60.0,
                20.001,
                2.001,
                2.001
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.0",
                "2 <- 3.1",
                "3 <- 3.1",
                "4 <- 3.1"
            ]
        },
        "Step 4": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3) || 4 + 6 = 10 (left: 3 10)",
                "9 - 6 = 3 (left: 4 6 3) || 3 - 4 = -1 (left: -1 3)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 * 3 = 72 (left: 3 72)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 * 3 = 72 (left: 72)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                40.0,
                0.003
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 1.0",
                "2 <- 3.1",
                "3 <- 3.2",
                "4 <- 1.4"
            ]
        },
        "Step 5": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 - 3 = 21 (left: 21)",
                "9 - 6 = 3 (left: 4 6 3) || Possible",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8)",
                "4 + 6 = 10 (left: 6 6 9) || 6 * 6 = 36 (left: 9 36) || 36 - 9 = 27 (left: 27) || 27 * 2 = 54 (left: 54)",
                "6 - 4 = 2 (left: 2 6 9) || 6 * 2 = 12 (left: 12 9)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.002,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 5.4",
                "1 <- 5.4",
                "2 <- 5.4",
                "3 <- 5.4",
                "4 <- 1.3"
            ]
        },
        "Step 6": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 - 3 = 21 (left: 21)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 + 3 = 27 (left: 3)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 - 3 = 21 (left: 3)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 3 - 24 = -21 (left: 24)",
                "4 + 6 = 10 (left: 6 6 9) || 6 * 6 = 36 (left: 9 36) || 9 - 36 = -27 (left: -27)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                0.003,
                60.0,
                0.002
            ],
            "Resampling": [
                "0 <- 5.4",
                "1 <- 3.1",
                "2 <- 3.2",
                "3 <- 4.3",
                "4 <- 6.3"
            ]
        },
        "Step 7": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 + 3 = 27 (left: 27)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8)",
                "4 + 6 = 10 (left: 6 6 9) || 6 * 6 = 36 (left: 9 36) || 36 - 9 = 27 (left: 27) || 27 * 2 = 54 (left: 54)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3) || 8 / 3 = 2.67 (left: 2.67)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 3 - 24 = -21 (left: 24) || Answer: 4 * (6 - (9 - 6)) = 24"
            ],
            "Evaluation": [
                0.002,
                0.003,
                60.0,
                40.0,
                0.003
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 5.4",
                "2 <- 3.1",
                "3 <- 3.1",
                "4 <- 6.3"
            ]
        },
        "Step 8": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 3 - 24 = -21 (left: 24)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 3)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 + 3 = 27 (left: 27)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 - 3 = 21 (left: 3)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 3 - 24 = -21 (left: 24) || Answer: (4 * 6) - (9 - 6) = 24"
            ],
            "Evaluation": [
                60.0,
                0.001,
                0.0,
                0.001,
                60.0
            ],
            "Resampling": [
                "0 <- 6.3",
                "1 <- 5.4",
                "2 <- 8.0",
                "3 <- 8.4",
                "4 <- 8.0"
            ]
        },
        "Step 9": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 3 - 24 = -21 (left: 24) || Answer: (4 * 6) - (9 - 6) = 24",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 + 3 = 27 (left: 3)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 3 - 24 = -21 (left: 24) || Answer: 4 * (6 - (9 - 6)) = 24",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 24 / 3 = 8 (left: 8 3)",
                "9 - 6 = 3 (left: 4 6 3) || 4 * 6 = 24 (left: 24 3) || 3 - 24 = -21 (left: 24) || Answer: 4 * (6 - (6 - 9)) = 24"
            ]
        },
        "Input": "4 6 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "913": {
        "puzzle": "1 4 4 8",
        "Step 0": {
            "steps": [
                "8 - 4 = 4 (left: 1 4 4)",
                "1 + 4 = 5 (left: 4 5 8)",
                "4 - 1 = 3 (left: 3 4 ",
                "4 / 1 = 4 (left: 4 4 8)",
                "4 / 4 = 1 (left: 1 4 "
            ],
            "Evaluation": [
                2.001,
                3.0,
                60.0,
                22.0,
                0.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.2",
                "2 <- 0.3",
                "3 <- 0.2",
                "4 <- 0.2"
            ]
        },
        "Step 1": {
            "steps": [
                "4 / 1 = 4 (left: 4 4 8)",
                "4 - 1 = 3 (left: 3 4  || 4 - 3 = 1 (left: 1)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8)",
                "4 - 1 = 3 (left: 3 4  || 3 * 4 = 12 (left: 12)",
                "4 - 1 = 3 (left: 3 4  || 3 * 4 = 12 (left: 12)"
            ],
            "Evaluation": [
                3.0,
                0.002,
                40.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "4 / 1 = 4 (left: 4 4 8) || 8 / 4 = 2 (left: 2",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 - 8 = 8 (left: 8)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 * 8 = 128 (left: 128)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 + 8 = 24 (left: 8 24)",
                "4 + 1 = 5 (left: 4 4 5)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.2",
                "2 <- 0.3",
                "3 <- 1.2",
                "4 <- 1.2"
            ]
        },
        "Step 3": {
            "steps": [
                "4 / 1 = 4 (left: 4 4 8) || Possible",
                "4 - 1 = 3 (left: 3 4  || 3 + 4 = 7 (left: 7)",
                "4 / 1 = 4 (left: 4 4 8) || 8 - 4 = 4 (left: 4 8)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 8 / 16 = 0.5 (left: 0.5)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 / 8 = 2 (left: 2 8)"
            ],
            "Evaluation": [
                0.003,
                0.0,
                0.003,
                20.001,
                0.002
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 1.2",
                "2 <- 0.2",
                "3 <- 3.3",
                "4 <- INIT"
            ]
        },
        "Step 4": {
            "steps": [
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 8 / 16 = 0.5 (left: 0.5) || There is only one possible next step:",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 - 8 = 8 (left: 8)",
                "4 - 1 = 3 (left: 3 4  || 3 + 4 = 7 (left: 7)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 8 / 16 = 0.5 (left: 0.5) || 0.5 / 2 = 0.25 (left: 0.25)",
                "8 - 4 = 4 (left: 1 4 4)"
            ],
            "Evaluation": [
                20.002,
                0.002,
                0.0,
                21.001,
                60.0
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 4.4",
                "2 <- 4.3",
                "3 <- 4.4",
                "4 <- 0.2"
            ]
        },
        "Step 5": {
            "steps": [
                "4 - 1 = 3 (left: 3 4  || 4 / 3 = 1.33 (left: 1.33)",
                "4 / 1 = 4 (left: 4 4 8) || 4 + 4 = 8 (left: 8 8)",
                "8 - 4 = 4 (left: 1 4 4) || 4 * 1 = 4 (left: 4 4)",
                "4 / 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8)",
                "4 - 1 = 3 (left: 3 4  || 3 + 4 = 7 (left: 7)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                40.0,
                0.0
            ],
            "Resampling": [
                "0 <- 5.3",
                "1 <- 4.4",
                "2 <- 0.2",
                "3 <- 4.4",
                "4 <- 5.3"
            ]
        },
        "Step 6": {
            "steps": [
                "4 / 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8) || 8 / 1 = 8 (left: 8)",
                "4 / 1 = 4 (left: 4 4 8) || 8 - 4 = 4 (left: 4 8)",
                "4 - 1 = 3 (left: 3 4  || 3 + 4 = 7 (left: 7)",
                "4 / 1 = 4 (left: 4 4 8) || 8 - 4 = 4 (left: 4 4)",
                "4 / 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8) || 1 + 8 = 9 (left: 9)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.002,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 5.3",
                "1 <- 5.3",
                "2 <- 1.2",
                "3 <- 5.3",
                "4 <- 4.4"
            ]
        },
        "Step 7": {
            "steps": [
                "4 / 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "4 / 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 16 - 8 = 8 (left: 8 8)",
                "4 / 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 8 = 32 (left: 32)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                0.003,
                0.0,
                0.002
            ],
            "Resampling": [
                "0 <- 5.3",
                "1 <- 5.3",
                "2 <- 5.3",
                "3 <- 4.0",
                "4 <- 4.0"
            ]
        },
        "Step 8": {
            "steps": [
                "4 / 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "4 / 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8) || 8 - 1 = 7 (left: 7)",
                "4 / 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8) || 8 / 1 = 8 (left: 1 8)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 8 / 16 = 0.5 (left: 0.5) || There is only one possible next step: || 8 / 2 = 4 (left: 2 4 14)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 8 / 16 = 0.5 (left: 0.5) || There is only one possible next step: || 8 + 8 = 16 (left: 2 16)"
            ],
            "Evaluation": [
                0.002,
                0.0,
                60.0,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 4.0",
                "2 <- 8.2",
                "3 <- 5.3",
                "4 <- 8.2"
            ]
        },
        "Step 9": {
            "steps": [
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 8 / 16 = 0.5 (left: 0.5) || 0.5 * 2 = 1 (left: 1)",
                "4 / 1 = 4 (left: 4 4 8) || 4 * 4 = 16 (left: 16 8) || 8 / 16 = 0.5 (left: 0.5) || There is only one possible next step: || 8 + 8 = 16 (left: 2 16)",
                "4 / 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8) || 8 / 1 = 8 (left: 1 8) || 1 + 8 = 9 (left: 8)",
                "4 / 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8) || 8 - 1 = 7 (left: 7)",
                "4 / 1 = 4 (left: 4 4 8) || 4 / 4 = 1 (left: 1 8) || 8 / 1 = 8 (left: 1 8) || 8 - 1 = 7 (left: 7)"
            ]
        },
        "Input": "1 4 4 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "914": {
        "puzzle": "1 5 10 11",
        "Step 0": {
            "steps": [
                "10 / 1 = 10 (left: 5 10 ",
                "1 + 5 = 6 (left: 6 10 11)",
                "11 - 10 = 1 (left: 1 5 11)",
                "10 + 1 = 11 (left: 5 11 11)",
                "5 * 1 = 5 (left: 5 10 11)"
            ],
            "Evaluation": [
                1.001,
                3.0,
                1.002,
                21.001,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "10 + 1 = 11 (left: 5 11 11)",
                "5 * 10 = 50 (left: 1 50 11)",
                "10 + 1 = 11 (left: 5 11 11)",
                "1 + 5 = 6 (left: 6 10 11)",
                "1 + 5 = 6 (left: 6 10 11)"
            ],
            "Evaluation": [
                3.0,
                3.0,
                2.001,
                2.001,
                2.001
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.3",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "10 + 1 = 11 (left: 5 11 11) || 11 - 5 = 6 (left: 6 11)",
                "1 + 5 = 6 (left: 6 10 11)",
                "5 + 10 = ",
                "10 + 1 = 11 (left: 5 11 11) || 11 - 5 = 6 (left: 6 11)",
                "5 * 10 = 50 (left: 1 50 11)"
            ],
            "Evaluation": [
                1.002,
                2.001,
                0.003,
                0.001,
                1.0
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.2",
                "2 <- INIT",
                "3 <- 0.3",
                "4 <- 0.3"
            ]
        },
        "Step 3": {
            "steps": [
                "10 + 1 = 11 (left: 5 11 11) || 11 - 5 = 6 (left: 6 11)",
                "11 - 10 = 1 (left: 1 5 11) || 1 + 5 = 6 (left: 6 11)",
                "1 + 5 = 6 (left: 6 10 11)",
                "10 + 1 = 11 (left: 5 11 11) || 5 * 11 = 55 (left: 11 11 55)",
                "10 + 1 = 11 (left: 5 11 11) || Input: 3 9 9"
            ],
            "Evaluation": [
                20.0,
                1.0,
                3.0,
                41.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- INIT",
                "2 <- 3.0",
                "3 <- 3.3",
                "4 <- 3.0"
            ]
        },
        "Step 4": {
            "steps": [
                "10 + 1 = 11 (left: 5 11 11) || 11 * 5 = 55 (left: 11 55)",
                "10 + 1 = 11 (left: 5 11 11)",
                "10 + 1 = 11 (left: 5 11 11) || 11 - 5 = 6 (left: 6 11) || 6 * 11 = 66 (left: 66)",
                "10 + 1 = 11 (left: 5 11 11) || 5 * 11 = 55 (left: 11 11 55) || Input: 3 6 10",
                "10 + 1 = 11 (left: 5 11 11) || 11 - 5 = 6 (left: 6 11) || 6 * 11 = 66 (left: 66)"
            ],
            "Evaluation": [
                0.002,
                21.001,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 4.1",
                "2 <- 4.1",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 5": {
            "steps": [
                "10 + 1 = 11 (left: 5 11 11) || 5 * 11 = 55 (left: 11 11 55) || 11 + 11 = 22 (left: 22 55)",
                "10 + 1 = 11 (left: 5 11 11) || 11 - 5 = 6 (left: ",
                "10 + 1 = 11 (left: 5 11 11) || 3 + 9 = 12 (left: 9 12)",
                "11 - 1 = 10 (left: 5 10 11)",
                "1 + 5 = 6 (left: 6 10 11)"
            ],
            "Evaluation": [
                0.003,
                0.0,
                0.003,
                3.0,
                2.001
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- INIT",
                "2 <- 0.3",
                "3 <- 3.3",
                "4 <- 3.3"
            ]
        },
        "Step 6": {
            "steps": [
                "10 + 1 = 11 (left: 5 11 11) || 5 * 11 = 55 (left: 11 11 55) || 55 - 11 = 44 (left: 11 44)",
                "1 + 5 = 6 (left: 6 10 11)",
                "10 + 1 = 11 (left: 5 11 11) || 11 - 5 = 6 (left: 6 11 11)",
                "10 + 1 = 11 (left: 5 11 11) || 5 * 11 = 55 (left: 11 11 55) || 11 * 11 = 121 (left: 121 55)",
                "10 + 1 = 11 (left: 5 11 11) || 5 * 11 = 55 (left: 11 11 55) || 55 / 11 = 5 (left: 11 5)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                41.0,
                0.001,
                1.002
            ],
            "Resampling": [
                "0 <- 6.2",
                "1 <- 6.2",
                "2 <- 6.2",
                "3 <- 3.3",
                "4 <- 3.3"
            ]
        },
        "Step 7": {
            "steps": [
                "10 + 1 = 11 (left: 5 11 11) || 11 - 5 = 6 (left: 6 11 11) || Input: 8 3",
                "10 + 1 = 11 (left: 5 11 11) || 11 - 5 = 6 (left: 6 11 11) || 11 / 6 = 1.8333 (left: 1.8333 11 11)",
                "10 + 1 = 11 (left: 5 11 11) || 11 - 5 = 6 (left: 6 11 11) || 11",
                "10 + 1 = 11 (left: 5 11 11) || 5 * 11 = 55 (left: 11 11 55) || 11 * 11 = 121 (left: 121 55)",
                "10 + 1 = 11 (left: 5 11 11) || 5 * 11 = 55 (left: 11 11 55) || 11 * 11 = 121 (left: 121 55)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                1.002,
                0.002
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 5.3",
                "2 <- 6.1",
                "3 <- 0.3",
                "4 <- 3.3"
            ]
        },
        "Step 8": {
            "steps": [
                "10 + 1 = 11 (left: 5 11 11) || 11 - 5 = 6 (left: 6 11) || 11 + 6 = 17 (left: 17)",
                "11 - 1 = 10 (left: 5 10 11) || 10 - 5 = 5 (left: 5 11)",
                "1 + 5 = 6 (left: 6 10 11) || 10 + 11 = 21 (left: 6 21)",
                "10 + 1 = 11 (left: 5 11 11) || 5 + 11 = 16 (left: 11 16)",
                "10 + 1 = 11 (left: 5 11 11) || 5 * 11 = 55 (left: 11 11 55) || Input: 3 9"
            ],
            "Evaluation": [
                0.001,
                0.002,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 4.1",
                "1 <- 0.3",
                "2 <- 6.2",
                "3 <- 6.2",
                "4 <- 6.2"
            ]
        },
        "Step 9": {
            "steps": [
                "10 + 1 = 11 (left: 5 11 11) || 3 + 9 = 12 (left: 7 12)",
                "10 + 1 = 11 (left: 5 11 11) || 5 + 11 = 16 (left: 11 16)",
                "10 + 1 = 11 (left: 5 11 11) || 11 - 5 = 6 (left: 6 11 11) || 11 - 6 = 5 (left: 5 11 11)",
                "10 + 1 = 11 (left: 5 11 11) || 11 - 5 = 6 (left: 6 11 11) || 11 * 6 = 66 (left: 11 66)",
                "10 + 1 = 11 (left: 5 11 11) || 11 - 5 = 6 (left: 6 11 11) || 11 - 6 = 5 (left: 5 11 11)"
            ]
        },
        "Input": "1 5 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "915": {
        "puzzle": "3 4 6 11",
        "Step 0": {
            "steps": [
                "4 + 6 = 10 (left: 3 10 11)",
                "3 + 4 = 7 (left: 6 7 11)",
                "3 * 4 = 12 (left: 6 12 11)",
                "6 + 4 = 10 (left: 3 10 ",
                "3 * 4 = 12 (left: 6 12 11)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                2.001,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.2",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "3 + 4 = 7 (left: 6 7 11)",
                "11 - 4 = 7 (left: 3 6 7)",
                "4 - 3 = 1 (left: 1 6 11)",
                "3 * 4 = 12 (left: 6 12 11) || 12 - 6 = 6 (left: 6 11)",
                "6 + 4 = 10 (left: 3 10 "
            ],
            "Evaluation": [
                22.0,
                40.001,
                2.001,
                20.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- INIT",
                "2 <- 1.0",
                "3 <- 1.1",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "3 * 4 = 12 (left: 6 12 11) || 12 - 6 = 6 (left: 6 11) || 6 * 11 = 66 (left: 66)",
                "6 - 4 = 2 (left: 2 4 ",
                "3 + 4 = 7 (left: 6 7 11) || 11 / ",
                "11 - 4 = 7 (left: 3 6 7) || 7 - 3 = 4 (left: 4 7)",
                "3 * 4 = 12 (left: 6 12 11) || 12 - 6 = 6 (left: 6 11) || 6 + 11 = 17 (left: 17)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                1.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.3",
                "2 <- 1.3",
                "3 <- INIT",
                "4 <- 1.3"
            ]
        },
        "Step 3": {
            "steps": [
                "3 + 4 = 7 (left: 6 7 11) || 11 - 6 = 5 (left: 5 7)",
                "3 * 4 = 12 (left: 6 12 11) || 12 - 6 = 6 (left: 6 11) || 11 - 6 = 5 (left: 5)",
                "3 * 4 = 12 (left: 6 12 11) || 12 - 6 = 6 (left: 6 11) || 6 / 11 = 0.5454545454545454 (left: 0.5454545454545454)",
                "6 - 3 = 3 (left: 3 4 11)",
                "3 * 4 = 12 (left: 6 12 11) || 12 - 6 = 6 (left: 6 11) || 11 - 6 = 5 (left: 5)"
            ],
            "Evaluation": [
                20.001,
                0.002,
                0.002,
                22.0,
                0.002
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 3.3",
                "2 <- 1.3",
                "3 <- 1.0",
                "4 <- 1.1"
            ]
        },
        "Step 4": {
            "steps": [
                "11 - 4 = 7 (left: 3 6 7) || 7 - 3 = 4 (left: 4 7)",
                "6 - 3 = 3 (left: 3 4 11) || 3 + 4 = 7 (left: 7 11)",
                "3 * 4 = 12 (left: 6 12 11) || 12 - 6 = 6 (left: 6 11) || 11 / 6 = 1.83 (left: 1.83)",
                "3 + 4 = 7 (left: 6 7 11) || 6 * 7 = 42 (left: 11 42)",
                "11 - 4 = 7 (left: 3 6 7) || 6 / 3 = 2 (left:"
            ],
            "Evaluation": [
                1.002,
                0.0,
                0.003,
                0.001,
                0.002
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 1.3",
                "2 <- 1.0",
                "3 <- 1.1",
                "4 <- 1.2"
            ]
        },
        "Step 5": {
            "steps": [
                "3 + 4 = 7 (left: 6 7 11) || 11 - 6 = 5 (left: 5 7) || 5 * 7 = 35 (left: 35)",
                "3 * 4 = 12 (left: 6 12 11) || 12 - 6 = 6 (left: 6 11) || 11 - 6 = 5 (left: 5)",
                "3 + 4 = 7 (left: 6 7 11) || 6 / 7 = 0.857142",
                "11 - 4 = 7 (left: 3 6 7) || 7 / 3 = 2.3333333333333335 (left: 2.333333333333333",
                "4 - 3 = 1 (left: 1 6 11) || 1 + 6 = 7 (left: 7 11)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.002,
                0.001
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 3.3",
                "2 <- 2.3",
                "3 <- 3.3",
                "4 <- 3.3"
            ]
        },
        "Step 6": {
            "steps": [
                "3 * 4 = 12 (left: 6 12 11) || 12 - 6 = 6 (left: 6 11) || 11 - 6 = 5 (left: 5)",
                "6 - 3 = 3 (left: 3 4 11) || 11 / 4 = 2.75 (left: 2.75 3)",
                "11 - 4 = 7 (left: 3 6 7) || 7 - 3 = 4 (left: 4 7) || 7 - 4 = 3 (left: 3)",
                "6 - 3 = 3 (left: 3 4 11) || 3 * 4 = 12 (left: 12 11)",
                "6 - 3 = 3 (left: 3 4 11) || 4 * 3 = 12 (left: 12 11)"
            ],
            "Evaluation": [
                0.001,
                2.001,
                0.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.2",
                "2 <- 6.1",
                "3 <- 1.3",
                "4 <- 3.0"
            ]
        },
        "Step 7": {
            "steps": [
                "6 - 3 = 3 (left: 3 4 11)",
                "3 * 4 = 12 (left: 6 12 11) || 12 / 6 = 2 (left: 2 11)",
                "6 - 3 = 3 (left: 3 4 11) || 11 / 4 = 2.75 (left: 2.75 3) || 2.75 / 3 = 0.9166666666666666 (left: 0.9166666666666666)",
                "3 * 4 = 12 (left: 6 12 11) || 12 - 6 = 6 (left: 6 11) || 6 + 11 = 17 (left: 17)",
                "3 + 4 = 7 (left: 6 7 11) || 11 - 6 = 5 (left: 5 7) || 5 + 7 = 12 (left: 12)"
            ],
            "Evaluation": [
                22.0,
                0.003,
                0.001,
                0.001,
                0.002
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 7.0",
                "2 <- 3.3",
                "3 <- 6.1",
                "4 <- 3.0"
            ]
        },
        "Step 8": {
            "steps": [
                "11 - 4 = 7 (left: 3 6 7) || 3 * 6 = 18 (left: 7 18)",
                "6 - 3 = 3 (left: 3 4 11) || 3 + 4 = 7 (left: 7 11)",
                "6 - 3 = 3 (left: 3 4 11) || 11 / 3 = 3 (left: 3 4)",
                "6 - 3 = 3 (left: 3 4 11) || 11 / 4 = 2.75 (left: 2.75 3) || 2.75 + 3 = 5.75 (left: 5.75)",
                "3 + 4 = 7 (left: 6 7 11) || 11 - 6 = 5 (left: 5 7) || 5 * 7 = 35 (left: 35)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                22.0,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 8.2",
                "2 <- 7.0",
                "3 <- 8.2",
                "4 <- 1.1"
            ]
        },
        "Step 9": {
            "steps": [
                "11 - 4 = 7 (left: 3 6 7) || Input: 4 5",
                "6 - 3 = 3 (left: 3 4 11) || 11 / 3 = 3 (left: 3 4) || 3 + 4 = 7 (left: 7)",
                "6 - 3 = 3 (left: 3 4 11) || 11 - 4 = 7 (left: 3 7)",
                "6 - 3 = 3 (left: 3 4 11) || 11 / 3 = 3 (left: 3 4) || 4 - 3 = 1 (left: 1)",
                "11 - 4 = 7 (left: 3 6 7) || 7 / 3 = 2.33 (left: 2.33)"
            ]
        },
        "Input": "3 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "916": {
        "puzzle": "2 4 8 9",
        "Step 0": {
            "steps": [
                "2 + 4 = 6 (left: 6 8 9)",
                "9 - 4 = 5 (left: 2 5 8)",
                "8 / 2 = 4 (left: 4 8 9)",
                "9 - 4 = 5 (left: 2 4 5)",
                "4 * 2 = 8 (left: 8 8 9)"
            ],
            "Evaluation": [
                3.0,
                0.003,
                3.0,
                2.001,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "2 + 4 = 6 (left: 6 8 9)",
                "4 + 2 = 6 (left: 6 8 ",
                "8 - 4 = 4 (left: 2 4 9)",
                "9 - 4 = 5 (left: 2 8 5)",
                "9 - 2 = 7 (left: 2 4 "
            ],
            "Evaluation": [
                1.001,
                1.002,
                1.002,
                3.0,
                0.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.1",
                "2 <- INIT",
                "3 <- 1.1",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "9 - 4 = 5 (left: 2 8 5)",
                "4 + 2 = 6 (left: 6 8  || 6 + 8 = 14 (left: 14)",
                "9 - 4 = 5 (left: 2 8 ",
                "4 + 2 = 6 (left: 6 8  || 8 - 6 = 2 (left: 2)",
                "4 + 2 = 6 (left: 6 8 "
            ],
            "Evaluation": [
                2.001,
                0.001,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 1.2",
                "2 <- 2.0",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "9 - 4 = 5 (left: 2 4 5) || 2 + 4 = 6 (left: 6 5)",
                "8 - 4 = 4 (left: 2 4 9) || 2 + 4 = 6 (left: 6 9)",
                "9 - 4 = 5 (left: 2 8 5) || 5 - 2 = 3 (left: 3 8)",
                "4 + 2 = 6 (left: 6 8 ",
                "8 - 4 = 4 (left: 4 8 "
            ],
            "Evaluation": [
                0.003,
                0.003,
                60.0,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 0.0",
                "2 <- 3.2",
                "3 <- 0.0",
                "4 <- 1.3"
            ]
        },
        "Step 4": {
            "steps": [
                "9 - 4 = 5 (left: 2 8 5) || 5 - 2 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "2 + 4 = 6 (left: 6 8 9) || 9 / 6 = 1.5 (left: 1.5 8)",
                "9 - 4 = 5 (left: 2 8 5) || 5 - 2 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "2 + 4 = 6 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8)",
                "9 - 4 = 5 (left: 2 8 5) || 8 - 2 = 6 (left: 6 5)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                0.003,
                60.0,
                20.002
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 4.3",
                "2 <- 3.2",
                "3 <- 4.3",
                "4 <- 4.3"
            ]
        },
        "Step 5": {
            "steps": [
                "9 - 4 = 5 (left: 2 8 5) || 5 - 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "2 + 4 = 6 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "9 - 4 = 5 (left: 2 8 5) || 5 - 2 = 3 (left: 3 8) || 10 / 5 = 2 (",
                "2 + 4 = 6 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 8 / 3 = 2.66666666667 (left: 2.66666666667)",
                "2 + 4 = 6 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)"
            ],
            "Evaluation": [
                60.0,
                0.001,
                0.003,
                0.001,
                0.002
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 5.0",
                "2 <- INIT",
                "3 <- 4.4",
                "4 <- 3.2"
            ]
        },
        "Step 6": {
            "steps": [
                "2 + 4 = 6 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "9 - 4 = 5 (left: 2 8 5) || 5 - 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (9 - 4) - (2 - 8) = 24",
                "2 + 4 = 6 (left: 6 8 9)",
                "9 - 4 = 5 (left: 2 8 5) || 8 - 2 = 6 (left: 6 5) || 6 * 5 = 30 (left: 30)",
                "9 - 4 = 5 (left: 2 8 5) || 5 - 2 = 3 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67 8)"
            ],
            "Evaluation": [
                60.0,
                22.0,
                0.003,
                3.0,
                40.0
            ],
            "Resampling": [
                "0 <- 5.0",
                "1 <- 5.0",
                "2 <- INIT",
                "3 <- 6.0",
                "4 <- 6.0"
            ]
        },
        "Step 7": {
            "steps": [
                "9 - 4 = 5 (left: 2 8 5) || 5 - 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (9 - 4) * (2 - 8) = 24",
                "9 - 4 = 5 (left: 2 8 5) || 5 - 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (9 - 4) * (5 - 2) * 8 = 24",
                "9 - 2 = 7 (left: 2 8 7)",
                "2 + 4 = 6 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 4) * (8 - 9) = 24",
                "2 + 4 = 6 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 4) * (8 - 9) = 24"
            ],
            "Evaluation": [
                3.0,
                60.0,
                22.0,
                60.0,
                40.0
            ],
            "Resampling": [
                "0 <- 7.1",
                "1 <- 7.3",
                "2 <- 4.4",
                "3 <- 7.1",
                "4 <- 5.0"
            ]
        },
        "Step 8": {
            "steps": [
                "9 - 4 = 5 (left: 2 8 5) || 5 - 2 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "2 + 4 = 6 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 3 * 8 = 24 (left: 8 24)",
                "9 - 4 = 5 (left: 2 8 5) || 8 - 2 = 6 (left: 6 5) || 6 + 5 = 11 (left: 11)",
                "9 - 4 = 5 (left: 2 8 5) || 5 - 2 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5 8)",
                "9 - 4 = 5 (left: 2 8 5) || 5 - 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (9 - 4) * (2 - 8) = 24"
            ],
            "Evaluation": [
                0.002,
                2.0,
                0.001,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 6.0",
                "1 <- 3.2",
                "2 <- 5.0",
                "3 <- 7.1",
                "4 <- 7.1"
            ]
        },
        "Step 9": {
            "steps": [
                "2 + 4 = 6 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (2 + 4) * (8 - 9) = 24",
                "9 - 4 = 5 (left: 2 8 5) || 5 - 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "9 - 4 = 5 (left: 2 8 5) || 5 - 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (9 - 4) - (2 - 8) = 24",
                "9 - 4 = 5 (left: 2 8 5) || 5 - 2 = 3 (left: 3 8) || 3 + 8 = 11",
                "9 - 4 = 5 (left: 2 8 5) || 5 - 2 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)"
            ]
        },
        "Input": "2 4 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "917": {
        "puzzle": "1 4 5 13",
        "Step 0": {
            "steps": [
                "1 + 4 = 5 (left: 5 5 13)",
                "4 + 5 = 9 (left: 1 9 13)",
                "13 - 1 = 12 (left: 4 5 12)",
                "1 * 4 = 4 (left: 4 5 13)",
                "13 - 1 = 12 (left: 4 5 12)"
            ],
            "Evaluation": [
                21.001,
                1.002,
                2.001,
                1.002,
                20.002
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- INIT",
                "2 <- 0.4",
                "3 <- 0.0",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "13 - 1 = 12 (left: 4 5 12) || 4 + 5 = 9 (left: 9 12)",
                "13 - 1 = 12 (left: 4 5 12)",
                "13 - 1 = 12 (left: 4 5 12) || 4 - 5 = -1 (left: -1 12)",
                "1 + 4 = 5 (left: 5 5 13) || 13 - 5 = 8 (left: 5",
                "13 - 4 = 9 (left: 1 5 9)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.002,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.0",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.4"
            ]
        },
        "Step 2": {
            "steps": [
                "5 + 1 = 6 (left: 4 6 13)",
                "1 + 4 = 5 (left: 5 5 13) || 5 * 5 = 25 (left: 25 13)",
                "5 * 4 = 20 (left: 1 20 13)",
                "1 + 4 = 5 (left: 5 5 13)",
                "13 - 1 = 12 (left: 4 5 12) || 12 - 5 = 7 (left:"
            ],
            "Evaluation": [
                22.0,
                0.003,
                0.003,
                1.002,
                0.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.4",
                "4 <- 0.4"
            ]
        },
        "Step 3": {
            "steps": [
                "13 - 4 = 9 (left: 5 9 ",
                "1 * 4 = 4 (left: 4 5 13)",
                "13 - 1 = 12 (left: 4 5 ",
                "13 - 4 = 9 (left: 1 5 9) || 5 - 1 = 4 (left: 4 9)",
                "13 - 1 = 12 (left: 4 5 12) || 4 + 5 = 9 (left: 9 12)"
            ],
            "Evaluation": [
                0.001,
                2.001,
                20.001,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 0.4",
                "2 <- 0.1",
                "3 <- 3.2",
                "4 <- 3.2"
            ]
        },
        "Step 4": {
            "steps": [
                "5 + 1 = 6 (left: 4 6 13) || 13 - 6 = 7 (left: 4 7)",
                "13 - 1 = 12 (left: 4 5 12) || 5 / 4 = 1.25 (left: 1.25 12)",
                "4 + 5 = 9 (left: 1 9 13) || 9 - 1 = 8 (left: 8 13)",
                "13 - 1 = 12 (left: 4 5  || 5 - 4 = 1 (left: 1)",
                "13 - 1 = 12 (left: 4 5  || 4 + 5 = 9 (left: 9)"
            ],
            "Evaluation": [
                0.002,
                1.001,
                0.0,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 3.2",
                "2 <- INIT",
                "3 <- 0.4",
                "4 <- 2.0"
            ]
        },
        "Step 5": {
            "steps": [
                "13 - 1 = 12 (left: 4 5 12) || 5 + 4 = 9 (left: 9 12)",
                "13 - 1 = 12 (left: 4 5  || 2 - 10 = -8 (left: -8)",
                "13 - 5 = 8 (left: 1 4 ",
                "13 - 1 = 12 (left: 4 5 12) || 12 / 4 = 3 (left: 3 5)",
                "5 + 1 = 6 (left: 4 6 13) || 6 * 4 = 24 (left: 24 13)"
            ],
            "Evaluation": [
                0.003,
                0.0,
                1.001,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 5.2",
                "1 <- 3.2",
                "2 <- 2.0",
                "3 <- 0.4",
                "4 <- INIT"
            ]
        },
        "Step 6": {
            "steps": [
                "13 - 5 = 8 (left: 1 4  || 4 - 1 = 3 (left: 3)",
                "13 - 1 = 12 (left: 4 5  || 4 * 5 = 20 (left: 20)",
                "5 + 1 = 6 (left: 4 6 13) || 13 / 6 = 2.1667",
                "13 - 1 = 12 (left: 4 5 12) || 4 + 5 = 9 (left: 9 12)",
                "13 - 4 = 9 (left: 1 5 9)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.4",
                "2 <- 3.1",
                "3 <- 0.0",
                "4 <- 3.2"
            ]
        },
        "Step 7": {
            "steps": [
                "1 + 4 = 5 (left: 5 5 13) || 5 * 5 = 25 (left: 25 13)",
                "13 - 1 = 12 (left: 4 5 12) || 12 / 4 = 3 (left: 5 3)",
                "1 * 4 = 4 (left: 4 5 13) || 5 + 13 = 18 (left: 4 18)",
                "1 + 4 = 5 (left: 5 5 13) || 13 - 5 = 8 (left: 5",
                "13 - 1 = 12 (left: 4 5  || 5 - 4 = 1 (left: 1)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 6.4",
                "1 <- INIT",
                "2 <- 6.4",
                "3 <- 3.2",
                "4 <- 0.4"
            ]
        },
        "Step 8": {
            "steps": [
                "13 - 4 = 9 (left: 1 5 9) || 5 * 9 = 45 (left: 1 45)",
                "4 + 1 = 5 (left: 5 5 13)",
                "13 - 4 = 9 (left: 1 5 9) || 1 * 5 = 5 (left: 5 9)",
                "13 - 1 = 12 (left: 4 5  || 4 / 5 = 0.8 (left: 0.8)",
                "13 - 1 = 12 (left: 4 5 12) || 5 + 4 = 9 (left: 9 12)"
            ],
            "Evaluation": [
                0.001,
                2.001,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 8.1",
                "1 <- 0.4",
                "2 <- 7.1",
                "3 <- 3.1",
                "4 <- 3.2"
            ]
        },
        "Step 9": {
            "steps": [
                "4 + 1 = 5 (left: 5 5 13) || 13 / 5 = 2.6 (left: 2.6 13)",
                "13 - 1 = 12 (left: 4 5 12) || 5 + 4 = 9 (left: 9 12)",
                "13 - 1 = 12 (left: 4 5 12) || 12 / 4 = 3 (left: 5 3) || 5 * 3 = 15 (left: 15)",
                "1 * 4 = 4 (left: 4 5 13) || 5 - 4 = 1 (left: 1 13)",
                "13 - 1 = 12 (left: 4 5  || 5 - 4 = 1 (left: 1)"
            ]
        },
        "Input": "1 4 5 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "918": {
        "puzzle": "2 2 7 12",
        "Step 0": {
            "steps": [
                "7 / 2 = 3.5 (left: 2 ",
                "12 - 2 = 10 (left: ",
                "2 * 2 = 4 (left: 4 7 12)",
                "2 + 7 = 9 (left: 9 2 ",
                "12 - 2 = 10 (left: 2 7 10)"
            ],
            "Evaluation": [
                0.0,
                0.0,
                2.0,
                0.001,
                60.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.4",
                "2 <- 0.4",
                "3 <- INIT",
                "4 <- 0.4"
            ]
        },
        "Step 1": {
            "steps": [
                "7 + 2 = 9 (left: 2 9 ",
                "12 - 2 = 10 (left: 2 7 10) || 2 + 7 = 9 (left: 9 10)",
                "12 - 2 = 10 (left: 2 7 10) || 7 / 2 = 3.5 (",
                "2 - 2 = 0 (left: 0 7 12)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10)"
            ],
            "Evaluation": [
                2.001,
                0.003,
                0.003,
                3.0,
                40.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.4",
                "2 <- 0.4",
                "3 <- 1.4",
                "4 <- 0.4"
            ]
        },
        "Step 2": {
            "steps": [
                "2 * 2 = 4 (left: 4 7 12)",
                "12 - 2 = 10 (left: 2 7 10) || 7 / 2 = 3.5 (left: 3.5 10)",
                "12 - 2 = 10 (left: 2 7 10) || 2 / 7 = 0.2857 (left: 0.2857 10)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 - 10 = 4 (left: 4)",
                "12 - 2 = 10 (left: 2 7 10) || 2 * 7 = 14 (left: 14 10)"
            ],
            "Evaluation": [
                2.001,
                0.003,
                1.002,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 2.4",
                "2 <- 1.4",
                "3 <- 0.4",
                "4 <- 1.4"
            ]
        },
        "Step 3": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10) || 2 * 7 = 14 (left: 14 10) || 14 * 10 = 140 (left: 140)",
                "12 - 2 = 10 (left: 2 7 10) || 2 * 7 = 14 (left: 14 10) || 14 + 10 = 24 (left: 24)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 + 10 = 24 (left: 24)",
                "12 - 2 = 10 (left: 2 7 10) || 10 - 7 = 3 (left: 2 3 10)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 / 10 = 1.4 (left: 1.4)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                60.0,
                22.0,
                0.0
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 3.1",
                "2 <- 3.1",
                "3 <- 1.4",
                "4 <- 1.4"
            ]
        },
        "Step 4": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10) || 2 * 7 = 14 (left: 14 10) || 14 + 10 = 24 (left: 24) || Answer: (12 - 2) + (2 * 7) = 24",
                "12 - 2 = 10 (left: 2 7 10) || 2 * 7 = 14 (left: 14 10) || 14 + 10 = 24 (left: 24) || Answer: (12 - 2) * (2 * 7) = 24",
                "12 - 2 = 10 (left: 2 7 10) || 2 * 7 = 14 (left: 14 10) || 14 + 10 = 24 (left: 24) || Answer: (12 - 2) * (2 * 7) = 24",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 * 10 = 140 (left: 140)",
                "12 - 2 = 10 (left: 2 7 10) || 7 * 2 = 14 (left: 14 10) || 14 - 10 = 4 (left: 4)"
            ]
        },
        "Input": "2 2 7 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "919": {
        "puzzle": "3 3 6 7",
        "Step 0": {
            "steps": [
                "3 * 3 = 9 (left: 9 6 7)",
                "3 * 3 = 9 (left: 9 6 7)",
                "3 - 3 = 0 (left: 0 3 7)",
                "3 * 3 = 9 (left: 6 9 7)",
                "6 + 3 = 9 (left: 3 9 7)"
            ],
            "Evaluation": [
                3.0,
                3.0,
                1.002,
                3.0,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.0",
                "3 <- INIT",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "3 + 6 = 9 (left: 9 3 ",
                "6 + 3 = 9 (left: 3 6 7)",
                "3 * 3 = 9 (left: 9 6 7) || 7 +",
                "7 - 3 = 4 (left: 3 6 7)",
                "3 * 3 = 9 (left: 9 6 7) || 6 - 7 = -1 (left: 9 -1)"
            ],
            "Evaluation": [
                40.0,
                40.001,
                0.003,
                2.001,
                20.001
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.4",
                "2 <- 0.3",
                "3 <- 0.1",
                "4 <- 1.1"
            ]
        },
        "Step 2": {
            "steps": [
                "3 + 6 = 9 (left: 9 3  || 9 / 3 = 3 (left: 3)",
                "3 * 3 = 9 (left: 9 6 7) || 6 - 7 = -1 (left: 9 -1) || 9 + (-1) = 8",
                "3 * 3 = 9 (left: 6 9 7) || 9 - 6 = 3 (left: 3 7)",
                "3 * 3 = 9 (left: 9 6 7) || 6 + 7 = 13 (left: 9 13)",
                "6 + 3 = 9 (left: 3 6 7) || 3 + 6 = 9 (left: 7 9)"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.0,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.0",
                "2 <- 1.1",
                "3 <- INIT",
                "4 <- 1.4"
            ]
        },
        "Step 3": {
            "steps": [
                "3 + 6 = 9 (left: 9 3  || 9 - 3 = 6 (left: 6)",
                "3 + 6 = 9 (left: 9 3  || 9 / 3 = 3 (left: 3)",
                "6 + 3 = 9 (left: 3 6 7) || 7 / 3 = 2 (left: 2 7)",
                "3 + 3 = 6 (left: 6 6 7)",
                "3 * 3 = 9 (left: 9 6 7) || 6 - 7 = -1 (left: 9 -1) || 9 * (-1) = -9 (left: -9)"
            ],
            "Evaluation": [
                0.003,
                0.0,
                0.001,
                3.0,
                20.001
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- INIT",
                "2 <- 1.0",
                "3 <- INIT",
                "4 <- 3.3"
            ]
        },
        "Step 4": {
            "steps": [
                "6 + 3 = 9 (left: 3 6 7) || 6 / 7 = ",
                "6 - 3 = 3 (left: 3 3 ",
                "3 + 6 = 9 (left: 9 3  || 9 * 3 = 27 (left: 27)",
                "7 - 3 = 4 (left: 3 6 4)",
                "3 + 3 = 6 (left: 6 6 7) || 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.003,
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.0",
                "2 <- 3.4",
                "3 <- 3.4",
                "4 <- 1.1"
            ]
        },
        "Step 5": {
            "steps": [
                "3 + 6 = 9 (left: 9 3  || 9 - 3 = 6 (left: 3 6)",
                "3 + 6 = 9 (left: 9 3  || 9 * 3 = 27 (left: 27)",
                "3 * 3 = 9 (left: 9 6 7) || 6 - 7 = -1 (left: 9 -1) || 9 * (-1) = -9 (left: -9) || There are no possible next steps with the given input.",
                "3 * 3 = 9 (left: 9 6 7) || 6 - 7 = -1 (left: 9 -1) || 9 * (-1) = -9 (left: -9) || There are no valid operations that can be performed with the given input to reach the target numbers.",
                "6 + 3 = 9 (left: 3 6 7) || 7 - 3 = 4 (left: 4)"
            ],
            "Evaluation": [
                3.0,
                0.001,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- INIT",
                "2 <- 1.4",
                "3 <- 1.0",
                "4 <- 1.1"
            ]
        },
        "Step 6": {
            "steps": [
                "6 + 3 = 9 (left: 3 6 7) || 6 - 3 = 3 (left: 3 7)",
                "3 + 3 = 6 (left: 6 6 7)",
                "3 * 3 = 9 (left: 9 6 7) || 6 - 7 = -1 (left: 9 -1) || 9 + (-1) = 8",
                "3 + 6 = 9 (left: 9 3  || 9 + 3 = 12 (left: 12)",
                "6 + 3 = 9 (left: 3 6 7) || 3 * 6 = 18 (left: 7 18)"
            ],
            "Evaluation": [
                1.001,
                2.001,
                0.003,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 1.1",
                "2 <- 3.4",
                "3 <- 6.1",
                "4 <- 1.0"
            ]
        },
        "Step 7": {
            "steps": [
                "6 + 3 = 9 (left: 3 6 7) || 3 + 6 = 9 (left: 7 9)",
                "6 + 3 = 9 (left: 3 6 7) || 6 - 3 = 3 (left: 3 7)",
                "3 * 3 = 9 (left: 9 6 7) || 6 - 7 = -1 (left: 9 -1) || 9 * (-1) = -9 (left: -9) || There are no possible next steps for the input -9.",
                "3 + 3 = 6 (left: 6 6 7) || 7 + 6 = 13 (left: 6 13)",
                "3 + 6 = 9 (left: 9 3  || 9 * 3 = 27 (left: 27)"
            ],
            "Evaluation": [
                1.002,
                0.0,
                0.003,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 1.0",
                "2 <- 7.0",
                "3 <- 1.1",
                "4 <- 6.0"
            ]
        },
        "Step 8": {
            "steps": [
                "3 * 3 = 9 (left: 9 6 7) || 6 - 7 = -1 (left: 9 -1) || 9 * (-1) = -9 (left: -9) || There are no possible next steps with the input of -9.",
                "3 + 6 = 9 (left: 9 3  || 9 * 3 = 27 (left: 27)",
                "6 + 3 = 9 (left: 3 6 7) || 3 + 6 = 9 (left: 7 9) || 7 - 9 = -2 (left: -2)",
                "6 + 3 = 9 (left: 3 6 7) || 6 / 7 = ",
                "6 + 3 = 9 (left: 3 6 7) || 6 - 3 = 3 (left: 3 7) || 3 * 7 = 21 (left: 21)"
            ],
            "Evaluation": [
                0.003,
                0.0,
                2.0,
                0.003,
                20.0
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 1.0",
                "2 <- 1.4",
                "3 <- 3.4",
                "4 <- 8.4"
            ]
        },
        "Step 9": {
            "steps": [
                "6 + 3 = 9 (left: 3 6 7) || 6 + 7 = 13 (left: 3 13)",
                "3 + 6 = 9 (left: 9 3  || 9 / 3 = 3 (left: 3)",
                "3 * 3 = 9 (left: 9 6 7) || 6 - 7 = -1 (left: 9 -1) || 9 + (-1) = 8 (left: 8)",
                "3 * 3 = 9 (left: 9 6 7) || 6 - 7 = -1 (left: 9 -1) || 9 * (-1) = -9 (left: -9) || There are no possible next steps with the input of -9.",
                "6 + 3 = 9 (left: 3 6 7) || 6 - 3 = 3 (left: 3 7) || 3 * 7 = 21 (left: 21) || 21 * 2 = 42 (left: 42)"
            ]
        },
        "Input": "3 3 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "920": {
        "puzzle": "1 5 9 13",
        "Step 0": {
            "steps": [
                "1 * 5 = 5 (left: 5 9 13)",
                "1 * 5 = 5 (left: 5 9 13)",
                "13 - 5 = 8 (left: 1 9 8)",
                "5 + 9 = 14 (left: 1 14 13)",
                "9 - 1 = 8 (left: 8 5 13)"
            ],
            "Evaluation": [
                2.001,
                2.001,
                0.003,
                0.003,
                2.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "9 - 5 = 4 (left: 1 4 13)",
                "13 - 5 = 8 (left: 1 8 9)",
                "9 - 1 = 8 (left: 8 5 13)",
                "13 - 9 = 4 (left: 1 4 9)",
                "13 - 9 = 4 (left: 1 4 13)"
            ],
            "Evaluation": [
                2.0,
                2.0,
                1.001,
                2.001,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "9 - 1 = 8 (left: 8 5 13)",
                "5 * 9 = 45 (left: 1 45 13)",
                "1 * 5 = 5 (left: 5 9 13)",
                "5 + 9 = 14 (left: 1 14 ",
                "9 - 1 = 8 (left: 8 5 13) || 8 / 5 = 1.6 (left: 1.6 13)"
            ],
            "Evaluation": [
                40.0,
                0.003,
                2.001,
                0.001,
                2.001
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 2.0",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 2.0"
            ]
        },
        "Step 3": {
            "steps": [
                "9 - 1 = 8 (left: 8 5 13) || 13 / 5 = 2.6 (left: 2.6 13)",
                "9 - 1 = 8 (left: 8 5 13) || 5 - 13 = -8 (left: -8)",
                "5 + 9 = 14 (left: 1 14 13)",
                "13 - 5 = 8 (left: 1 9 8)",
                "9 - 1 = 8 (left: 8 5 13) || 8 + 5 = 13 (left: 13)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                1.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 2.0",
                "2 <- 2.0",
                "3 <- INIT",
                "4 <- 2.0"
            ]
        },
        "Step 4": {
            "steps": [
                "5 / 1 = 5 (left: 5 5 9)",
                "9 - 1 = 8 (left: 8 5 13) || 8 / 5 = 1.6 (left: 1.6 13)",
                "9 - 1 = 8 (left: 8 5 13) || 13 / 5 = 2.6 (left: 2.6 13)",
                "1 + 5 = 6 (left: 6 9 13)",
                "9 - 1 = 8 (left: 8 5 13) || 5 + 13 = 18 (left: 8 18)"
            ],
            "Evaluation": [
                2.001,
                1.002,
                0.003,
                21.001,
                1.002
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 4.3",
                "2 <- 4.3",
                "3 <- 2.0",
                "4 <- 2.0"
            ]
        },
        "Step 5": {
            "steps": [
                "1 * 5 = 5 (left: 5 9 13) || 13 - 9 = 4 (left:",
                "1 + 5 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 4 13)",
                "1 + 5 = 6 (left: 6 9 13) || 6 * 9 = 54 (left: 13 54)",
                "9 - 1 = 8 (left: 8 5 13) || 8 - 5 = 3 (left: 3 13)",
                "9 - 1 = 8 (left: 8 5 13) || 5 + 13 = 18 (left: 8 18)"
            ],
            "Evaluation": [
                1.001,
                0.002,
                2.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 4.0",
                "2 <- 3.2",
                "3 <- 4.3",
                "4 <- 2.0"
            ]
        },
        "Step 6": {
            "steps": [
                "1 + 5 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4 ",
                "5 / 1 = 5 (left: 5 5 9) || 9 / 5 = 1 (left: 1 5)",
                "5 + 9 = 14 (left: 1 14 13) || 13 / 1 = 13 (left: 13)",
                "1 + 5 = 6 (left: 6 9 13) || 6 * 9 = 54 (left: 54 13)",
                "9 - 1 = 8 (left: 8 5 13) || 8 - 5 = 3 (left: 3 13)"
            ],
            "Evaluation": [
                60.0,
                40.0,
                0.003,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 6.1",
                "2 <- 0.0",
                "3 <- 6.0",
                "4 <- 6.1"
            ]
        },
        "Step 7": {
            "steps": [
                "1 + 5 = 6 (left: 6 9 13) || 9 + 13 = 22 (left: 6 22)",
                "5 / 1 = 5 (left: 5 5 9) || 9 / 5 = 1 (left: 1 5) || 1 + 5 = 6 (left: 6)",
                "1 * 5 = 5 (left: 5 9 13) || 13 - 5 = 8 (left: 8 9)",
                "1 + 5 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4  || 6 + 4 = 10 (left: 10)",
                "5 / 1 = 5 (left: 5 5 9) || 9 / 5 = 1 (left: 1 5) || 1 * 5 = 5 (left: 5)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                0.003,
                20.001,
                0.002
            ],
            "Resampling": [
                "0 <- 7.3",
                "1 <- 7.3",
                "2 <- 6.1",
                "3 <- 6.0",
                "4 <- 2.0"
            ]
        },
        "Step 8": {
            "steps": [
                "1 + 5 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4  || 6 + 4 = 10 (left: 10) || 10 + 8 = 18 (left: 8)",
                "1 + 5 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4  || 6 + 4 = 10 (left: 10) || 10 / 10 = 1 (left: 1)",
                "5 / 1 = 5 (left: 5 5 9) || 9 / 5 = 1 (left: 1 5) || 5 - 1 = 4 (left: 4)",
                "1 + 5 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4  || 6 - 4 = 2 (left: 2)",
                "9 - 1 = 8 (left: 8 5 13) || 5 + 13 = 18 (left: 8 18) "
            ],
            "Evaluation": [
                20.001,
                0.0,
                1.002,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 8.4",
                "1 <- 8.3",
                "2 <- 6.0",
                "3 <- 8.3",
                "4 <- 6.1"
            ]
        },
        "Step 9": {
            "steps": [
                "5 / 1 = 5 (left: 5 5 9) || 9 / 5 = 1 (left: 1 5) || 1 + 5 = 6",
                "1 + 5 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24)",
                "1 + 5 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4  || 6 + 4 = 10 (left: 10)",
                "1 + 5 = 6 (left: 6 9 13) || 13 - 9 = 4 (left: 6 4  || 4 / 6 = 0.67 (left: 0.67)",
                "5 / 1 = 5 (left: 5 5 9) || 9 / 5 = 1 (left: 1 5) || 1 + 5 = 6 (left: 6)"
            ]
        },
        "Input": "1 5 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "921": {
        "puzzle": "5 6 7 13",
        "Step 0": {
            "steps": [
                "6 + 7 = 13 (left: 5 13 13)",
                "6 + 7 = 13 (left: 5 13 13)",
                "13 - 7 = 6 (left: 5 6 6)",
                "6 + 7 = 13 (left: 5 13 13)",
                "13 - 7 = 6 (left: 5 6 6)"
            ],
            "Evaluation": [
                1.002,
                1.002,
                22.0,
                0.003,
                21.0
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.2",
                "4 <- 0.4"
            ]
        },
        "Step 1": {
            "steps": [
                "13 - 7 = 6 (left: 5 6 6) || Possible next steps:",
                "6 * 7 = 42 (left: 5 42 ",
                "5 + 6 = 11 (left: 7 11 13)",
                "13 - 7 = 6 (left: 5 6 6) || Input: 3 9 5 1",
                "13 - 7 = 6 (left: 5 6 6) || 5 * 6 = 30 (left: 30)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                1.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.4",
                "2 <- INIT",
                "3 <- 0.2",
                "4 <- 0.4"
            ]
        },
        "Step 2": {
            "steps": [
                "5 * 6 = 30 (left: 7 30 ",
                "13 - 7 = 6 (left: 5 6 6) || 6 * 5 = 30 (left: 30)",
                "5 * 6 = 30 (left: 7 30 13)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6)",
                "13 - 7 = 6 (left: 5 6 6) || 5 + 6 = 11 (left: 6 11)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                3.0,
                40.0,
                0.002
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 2.3",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 2.3"
            ]
        },
        "Step 3": {
            "steps": [
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "6 + 7 = 13 (left: 5 13 13)",
                "6 / 5 = 1.2 (left: 1.2 7 13)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5) "
            ],
            "Evaluation": [
                0.001,
                0.001,
                2.001,
                3.0,
                0.002
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 2.3",
                "2 <- 0.2",
                "3 <- 0.2",
                "4 <- 0.4"
            ]
        },
        "Step 4": {
            "steps": [
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "13 - 7 = 6 (left: 5 6 6) || 5 + 6 = 11 (left: 6 11)",
                "13 - 7 = 6 (left: 5 6 6) || 6 * 5 = 30 (left: 30)",
                "13 - 7 = 6 (left: 5 6 6) || 6 / 5 = 1.2 (left: 1.2 6)"
            ],
            "Evaluation": [
                40.0,
                0.0,
                0.001,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 1.1",
                "2 <- 2.2",
                "3 <- 0.4",
                "4 <- 2.3"
            ]
        },
        "Step 5": {
            "steps": [
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "6 * 7 = 42 (left: 5 42  || 10 + 20 = 30 (left: 30 30)",
                "5 * 6 = 30 (left: 7 30 13) || 30 - 7 = 23 (left: 23 13)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 / 6 = 0.16666666666666666 (left: 0.16666666666666666)"
            ],
            "Evaluation": [
                0.002,
                20.002,
                0.003,
                41.0,
                0.002
            ],
            "Resampling": [
                "0 <- 5.3",
                "1 <- 0.4",
                "2 <- 5.3",
                "3 <- 5.1",
                "4 <- 5.1"
            ]
        },
        "Step 6": {
            "steps": [
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "13 - 7 = 6 (left: 5 6 6) || 6 + 5 = 11 (left: 5 11 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "6 * 7 = 42 (left: 5 42  || 10 + 20 = 30 (left: 30 30) || 30 + 30 = 60",
                "6 * 7 = 42 (left: 5 42  || 10 + 20 = 30 (left: 30 30) || 30 + 30 = 60"
            ],
            "Evaluation": [
                0.0,
                3.0,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 2.3",
                "2 <- 5.3",
                "3 <- 0.4",
                "4 <- 5.1"
            ]
        },
        "Step 7": {
            "steps": [
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6)",
                "6 * 7 = 42 (left: 5 42  || 10 + 20 = 30 (left: 30 30) || 30 / 30 = 1 (left: 1)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.0,
                40.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 4.0",
                "2 <- 4.0",
                "3 <- 5.3",
                "4 <- 7.3"
            ]
        },
        "Step 8": {
            "steps": [
                "13 - 7 = 6 (left: 5 6 6) || 6 / 5 = 1.2 (left: 1 1.2)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 / 6 = 0.16666666666666666 (left: 0.16666666666666666)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)"
            ],
            "Evaluation": [
                0.003,
                0.0,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 5.3",
                "1 <- 5.3",
                "2 <- 7.3",
                "3 <- 5.1",
                "4 <- 0.2"
            ]
        },
        "Step 9": {
            "steps": [
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "13 - 7 = 6 (left: 5 6 6) || 6 - 5 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "6 * 7 = 42 (left: 5 42  || 10 + 20 = 30 (left: 30 30) || 30 + 30 = 60 (left: 60)",
                "13 - 7 = 6 (left: 5 6 6) || 6 * 5 = 30 (left: 30 6)"
            ]
        },
        "Input": "5 6 7 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "922": {
        "puzzle": "5 5 8 10",
        "Step 0": {
            "steps": [
                "10 - 8 = 2 (left: 2 8 10)",
                "8 + 5 = 13 (left: 5 13 10)",
                "10 - 5 = 5 (left: 5 8 5)",
                "10 - 5 = 5 (left: 5 8 10)",
                ""
            ],
            "Evaluation": [
                1.002,
                22.0,
                3.0,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.3",
                "2 <- INIT",
                "3 <- 0.3",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "8 + 5 = 13 (left: 5 13 10) || 5 * 13 = 65 (left: 10 65)",
                "10 - 5 = 5 (left: 5 8 10) || 8 / 5 = 1.6 (left: 1.6 10)",
                "5 * 5 = 25 (left: 8 10 25)",
                "10 - 5 = 5 (left: 5 8 10) || 8 / 5 = 1.6 (left: 1.6 10)",
                "5 + 5 = 10 (left: 8 10 10)"
            ],
            "Evaluation": [
                0.002,
                0.0,
                0.003,
                0.0,
                1.002
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.1",
                "2 <- INIT",
                "3 <- 0.2",
                "4 <- 0.1"
            ]
        },
        "Step 2": {
            "steps": [
                "10 - 5 = 5 (left: 5 8 10) || 8 / 5 = 1.6 (left: 1.6 10)",
                "8 + 5 = 13 (left: 5 13 10) || 5 - 13 = -8 (left: -8 10)",
                "",
                "10 - 5 = 5 (left: 5 8 5) || 8 / 5 = 1.6 (left: 1.6 5)",
                "8 + 5 = 13 (left: 5 13 10) || 10 - 5 = 5 (left: 5 10)"
            ],
            "Evaluation": [
                1.0,
                2.0,
                0.003,
                0.001,
                0.001
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.3",
                "2 <- 0.2",
                "3 <- 0.3",
                "4 <- 0.3"
            ]
        },
        "Step 3": {
            "steps": [
                "8 + 5 = 13 (left: 5 13 10) || 5 * 13 = 65 (left: 10 65)",
                "10 - 5 = 5 (left: 5 8 10) || 5 * 8 = 40 (left: 40 10)",
                "10 - 5 = 5 (left: 5 8 5) || 8 / 5 = 1.6 (left: 1.6 5)",
                "10 - 5 = 5 (left: 5 8 10) || 5 + 8 = 13 (left: 10 13)",
                "10 - 5 = 5 (left: 5 8 10) || 5 + 8 = 13 (left: 10 13)"
            ],
            "Evaluation": [
                1.0,
                21.0,
                1.001,
                0.001,
                1.001
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.3",
                "2 <- 3.1",
                "3 <- 0.3",
                "4 <- 0.3"
            ]
        },
        "Step 4": {
            "steps": [
                "8 + 5 = 13 (left: 5 13 10) || 13 - 5 = 8 (left: 8 10)",
                "10 - 5 = 5 (left: 5 8 10) || 5 + 8 = 13 (left: 10 13)",
                "10 - 5 = 5 (left: 5 8 10) || 5 * 8 = 40 (left: 40 10) || 40 + 10 = 50 (left: 10)",
                "10 - 5 = 5 (left: 5 8 10) || 5 + 8 = 13 (left: 10 13)",
                "10 - 5 = 5 (left: 5 8 10) || 10 / 5 = 2 (left: 2 10)"
            ],
            "Evaluation": [
                1.0,
                0.002,
                0.002,
                0.001,
                2.0
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 3.0",
                "2 <- 0.1",
                "3 <- 3.1",
                "4 <- 0.3"
            ]
        },
        "Step 5": {
            "steps": [
                "8 + 5 = 13 (left: 5 13 10) || 13 + 5 = ",
                "8 + 5 = 13 (left: 5 13 10) || 5 * 13 = 65 (left: 10 65) || 10 + 65 = 75 (left: 75)",
                "8 + 5 = 13 (left: 5 13 10) || 13 / 5 = 2.6 (left: 2.6 10)",
                "10 - 5 = 5 (left: 5 8 10) || 5 * 8 = 40 (left: 40 10) || Input: 6 3 1",
                "10 - 5 = 5 (left: 5 8 10) || 10 / 5 = 2 (left: 2 10)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.0,
                0.003,
                3.0
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 2.0",
                "2 <- 3.1",
                "3 <- 0.1",
                "4 <- 3.1"
            ]
        },
        "Step 6": {
            "steps": [
                "10 - 5 = 5 (left: 5 8 10) || 8 / 5 = 1.6 (left: 1.6 10)",
                "10 - 5 = 5 (left: 5 8 10) || 8 / 5 = 1.6 (left: 1.6 10) || 1.6 + 10 = 11.6 (left: 10 11.6)",
                "10 - 5 = 5 (left: 5 8 10) || 5 * 8 = 40 (left: 40 10) || Possible next steps:",
                "8 + 5 = 13 (left: 5 13 10) || 10 + 5 = 15 (left: 15 10)",
                "10 - 5 = 5 (left: 5 8 10) || 5 * 8 = 40 (left: 40 10) || 40 + 10 = 50 (left: 10 50)"
            ],
            "Evaluation": [
                0.0,
                2.0,
                0.003,
                0.003,
                1.0
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 5.4",
                "2 <- 5.4",
                "3 <- 0.1",
                "4 <- 0.2"
            ]
        },
        "Step 7": {
            "steps": [
                "8 + 5 = 13 (left: 5 13 10) || 5 * 13 = 65 (left: 10 65)",
                "10 - 5 = 5 (left: 5 8 10) || 10 / 5 = 2 (left: 2 10) || 2 + 10 = 12 (left: 12)",
                "10 - 5 = 5 (left: 5 8 10) || 10 / 5 = 2 (left: 2 10) || 10 / 2 = 5 (left: 5) ",
                "8 + 5 = 13 (left: 5 13 10) || 10 / 5 = 2 (left: 2 10)",
                "10 - 5 = 5 (left: 5 8 5) || 8 / 5 = 1.6 (left: 1.6 5)"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.003,
                2.0,
                0.002
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 3.0",
                "2 <- 1.4",
                "3 <- 3.1",
                "4 <- 0.3"
            ]
        },
        "Step 8": {
            "steps": [
                "10 - 5 = 5 (left: 5 8 10) || 5 + 8 = 13 (left: 10 13)",
                "8 + 5 = 13 (left: 5 13 10) || 5 * 13 = 65 (left: 10 65) || 10 * 65 = 650 (left: 650)",
                "5 + 5 = 10 (left: 8 10 10) || 10 - 10 = ",
                "10 - 5 = 5 (left: 5 8 10) || 5 * 8 = 40 (left: 40 10) || 40 / 10 = 4 (left: 4)",
                "10 - 5 = 5 (left: 5 8 10) || 5 * 8 = 40 (left: 10 40)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                0.003,
                0.002,
                0.001
            ],
            "Resampling": [
                "0 <- 6.4",
                "1 <- 0.3",
                "2 <- 3.1",
                "3 <- 3.1",
                "4 <- 0.1"
            ]
        },
        "Step 9": {
            "steps": [
                "10 - 5 = 5 (left: 5 8 10) || 5 * 8 = 40 (left: 40 10) || 40 + 10 = 50 (left: 10 50) || 10 * 50 = 500 (left: 500)",
                "10 - 5 = 5 (left: 5 8 10) || 8 / 5 = 1.6 (left: 1.6 8 10)",
                "10 - 5 = 5 (left: 5 8 10) || 5 * 8 = 40 (left: 40 10) || 40 / 10 = 4 (left: 4)",
                "10 - 5 = 5 (left: 5 8 10) || 5 * 8 = 40 (left: 40 10) || 40 - 10 = 30 (left: 30)",
                "8 + 5 = 13 (left: 5 13 10) || 13 / 5 = 2.6 (left: 2.6 10)"
            ]
        },
        "Input": "5 5 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "923": {
        "puzzle": "2 4 6 12",
        "Step 0": {
            "steps": [
                "4 + 6 = 10 (left: 2 10 12)",
                "4 * 2 = 8 (left: 8 6 ",
                "6 * 2 = 12 (left: 4 12 12)",
                "2 + 4 = 6 (left: 6 6 12)",
                "4 * 2 = 8 (left: 8 6 "
            ],
            "Evaluation": [
                0.003,
                0.003,
                21.001,
                60.0,
                1.001
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.3",
                "2 <- 0.3",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "2 + 4 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12)",
                "2 + 4 = 6 (left: 6 6 12) || 12 - 6 = 6 (left: 6 6)",
                "2 + 4 = 6 (left: 6 6 12) || Input: 1 2 12",
                "4 + 6 = 10 (left: 2 10 12)",
                "4 * 6 = 24 (left: 2 24 12)"
            ],
            "Evaluation": [
                20.0,
                20.002,
                0.003,
                0.003,
                41.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.4",
                "2 <- 0.3",
                "3 <- 0.3",
                "4 <- 1.4"
            ]
        },
        "Step 2": {
            "steps": [
                "12 - 2 = 10 (left: 10 12)",
                "4 * 6 = 24 (left: 2 24 12) || 24 - 12 = 12 (left: 2 12)",
                "2 + 4 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12)",
                "2 + 4 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12)",
                "4 * 6 = 24 (left: 2 24 12) || 24 - 2 = 22 (left: 22 12)"
            ],
            "Evaluation": [
                0.0,
                60.0,
                60.0,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 2.1",
                "2 <- 0.2",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "2 + 4 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12)",
                "4 * 6 = 24 (left: 2 24 12) || 24 - 12 = 12 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "6 * 2 = 12 (left: 4 12 12) || 12 / 4 = 3 (left: 3 12)",
                "6 * 2 = 12 (left: 4 6 ",
                "6 *"
            ],
            "Evaluation": [
                40.0,
                0.003,
                0.003,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 2.3",
                "2 <- 2.3",
                "3 <- 1.0",
                "4 <- 2.3"
            ]
        },
        "Step 4": {
            "steps": [
                "4 * 6 = 24 (left: 2 24 12) || 24 / 2 = 12 (left: 12 12)",
                "2 + 4 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)",
                "2 + 4 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "2 + 4 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 12 / 0 = undefined (left: 0 12)",
                "2 + 4 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)"
            ],
            "Evaluation": [
                20.002,
                0.003,
                0.003,
                40.0,
                0.003
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 4.3",
                "2 <- 2.3",
                "3 <- 4.0",
                "4 <- 1.0"
            ]
        },
        "Step 5": {
            "steps": [
                "6 * 2 = 12 (left: 4 6  || 4 + 6 = 10 (left: 10)",
                "2 + 4 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 12 / 0 = undefined (left: 0 12) || 12 - 0 = 12 (left: 12)",
                "2 + 4 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "4 * 6 = 24 (left: 2 24 12) || 24 / 2 = 12 (left: 12 12) || 12 + 12 = 24",
                "2 + 4 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 0 + 12 = 12"
            ],
            "Evaluation": [
                0.002,
                20.002,
                0.003,
                0.003,
                40.001
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 4.3",
                "2 <- 2.2",
                "3 <- 0.3",
                "4 <- 0.2"
            ]
        },
        "Step 6": {
            "steps": [
                "2 + 4 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 12 / 0 = undefined (left: 0 12) || 12 * 0 = 0 (left: 0)",
                "2 + 4 = 6 (left: 6 6 12) || 6 - 6 = 0 (left: 0 12) || 12 / 0 = undefined (left: 0 12) || 12 / 0 = undefined",
                "2 + 4 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "2 + 4 = 6 (left: 6 6 12) || 6 / 6 = 1 (left: 1 12)",
                "6 * 2 = 12 (left: 4 12 12) || 12 - 4 = 8 (left: 8 12 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                1.002,
                40.001
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- 4.0",
                "3 <- 5.4",
                "4 <- 5.1"
            ]
        },
        "Step 7": {
            "steps": [
                "4 * 6 = 24 (left: 2 24 12) || 24 - 12 = 12 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "4 * 6 = 24 (left: 2 24 12) || 24 - 12 = 12 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "4 * 6 = 24 (left: 2 24 12) || 24 / 2 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)",
                "2 + 4 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "2 + 4 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0) || There are no possible next steps as there are no numbers given in the input."
            ],
            "Evaluation": [
                0.001,
                0.001,
                60.0,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 5.4",
                "2 <- 7.2",
                "3 <- 7.2",
                "4 <- 5.4"
            ]
        },
        "Step 8": {
            "steps": [
                "2 + 4 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)",
                "2 + 4 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)",
                "4 * 6 = 24 (left: 2 24 12) || 24 / 2 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: (4 * 6) / 2 + 12 = 24",
                "4 * 6 = 24 (left: 2 24 12) || 24 / 2 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: (4 * 6) / (2 + 12) = 24",
                "2 + 4 = 6 (left: 6 6 12) || 6 + 6 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)"
            ]
        },
        "Input": "2 4 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "924": {
        "puzzle": "6 7 8 11",
        "Step 0": {
            "steps": [
                "6 * 7 = 42 (left: 8 11 42)",
                "11 - 6 = 5 (left: 5 7 8)",
                "7 + 8 = 15 (left: 6 11 15)",
                "11 - 7 = 4 (left: 6 4 ",
                "8 - 6 = 2 (left: 2 7 11)"
            ],
            "Evaluation": [
                1.002,
                3.0,
                1.002,
                60.0,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.3",
                "3 <- 0.3",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "8 - 6 = 2 (left: 2 7 11)",
                "7 + 8 = 15 (left: 6 11 15)",
                "11 - 7 = 4 (left: 6 4  || 6 / 4 = 1.5 (left: 1.5)",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24)",
                "11 + 6 = 17 (left: 7 8 "
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.002,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.3",
                "2 <- 1.3",
                "3 <- INIT",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "8 * 11 = 88 (left: 6 7 ",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "7 + 8 = 15 (left: 6 11 15)",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24"
            ],
            "Evaluation": [
                1.002,
                60.0,
                60.0,
                2.001,
                60.0
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 0.3",
                "2 <- 2.4",
                "3 <- 2.4",
                "4 <- 2.1"
            ]
        },
        "Step 3": {
            "steps": [
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 3 2)\n3 * 2 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: (3 + 7) * (3 - 8) * 4 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 - 4 = 2 (left: 2)",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n12 + 3 = 15 (left: 7 15)\n15 + 7 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((3 * 4) + 3) + 7 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n1 * 3 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: (3 + 5) * (8 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 9\nSteps:\n3 * 3 = 9 (left: 5 9 9)\n5 + 9 = 14 (left: 14 9)\n14 - 9 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 * 3) + (5 + 9)) - 9 = 24"
            ],
            "Evaluation": [
                0.003,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 2.1",
                "2 <- 0.3",
                "3 <- 2.1",
                "4 <- 3.1"
            ]
        },
        "Step 4": {
            "steps": [
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 21 (left: 21)\nAnswer: ((3 * 7) - 5) / 2 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 + 4 = 10 (left: 10)",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n6 - 3 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (3 * 7) * (6 - 3) = 63",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24"
            ],
            "Evaluation": [
                60.0,
                0.002,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 3.3",
                "2 <- 3.1",
                "3 <- 4.4",
                "4 <- 4.4"
            ]
        },
        "Step 5": {
            "steps": [
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 7\nSteps:\n7 - 3 = 4 (left: 3 4 4)\n4 * 4 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 4 = 24 (left: 24)\nAnswer: ((7 - 3) * 4) + 3 + 4 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24"
            ],
            "Evaluation": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 5.0",
                "1 <- 5.3",
                "2 <- 4.2",
                "3 <- 3.2",
                "4 <- 5.3"
            ]
        },
        "Step 6": {
            "steps": [
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n21 - 6 = 15 (left: 3 15)\n15 + 3 = 18 (left: 18)\n18 / 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 7) - 6) + 3)",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n12 + 7 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 4) + 7) - 3 + 8 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n3 * 8 = 24 (left: 10 24)\n10 * 24 = 24\nAnswer: (3 + 7) * 8 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 9\nSteps:\n3 * 4 = 12 (left: 3 9 12)\n9 - 3 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)\nAnswer: (3 * 4) * (9 - 3) = 24"
            ],
            "Evaluation": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 5.0",
                "1 <- 3.3",
                "2 <- 6.2",
                "3 <- 6.0",
                "4 <- 3.2"
            ]
        },
        "Step 7": {
            "steps": [
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 + 3 = 8 (left: 8 21)\n8 * 3 = 24 (left: 24)\nAnswer: (5 + 3) * (3 * 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 8 9)\n9 - 8 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: ((3 * 3) - 8) * 24 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 4) * (7 - 3)) * 2 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 + 3 = 16 (left: 16)\nAnswer: ((3 * 7) - 5) + 3 = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24"
            ],
            "Evaluation": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 6.0",
                "1 <- 7.3",
                "2 <- 4.3",
                "3 <- 7.1",
                "4 <- 6.4"
            ]
        },
        "Step 8": {
            "steps": [
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 + 3 = 8 (left: 8 21)\n21 - 8 = 13 (left: 13)\n13 + 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: (((3 * 7) + (5 + 3)) -",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 4 8\nSteps:\n3 + 4 = 7 (left: 3 7 8)\n7 + 8 = 15 (left: 15)\n15 + 3 = 18 (left: 18)\n18 / 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 4) + 8) + 3) * ",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 3 1)\n3 * 1 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: ((4 + 6) * 3) - 5 = 24"
            ],
            "Evaluation": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 7.4",
                "1 <- 7.4",
                "2 <- 6.3",
                "3 <- 3.2",
                "4 <- 7.3"
            ]
        },
        "Step 9": {
            "steps": [
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 / 4 = 1.5 (left: 1.5)",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24",
                "11 - 7 = 4 (left: 6 4  || 6 * 4 = 24 (left: 24) || Answer: 6 * (11 - 7) = 24 || Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 / 3 = 5.33 (left: 5.33)\n5.33 * 3 = 16 (left: 24)\nAnswer: ((3 * 7) - 5) / 3 = 24"
            ]
        },
        "Input": "6 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "925": {
        "puzzle": "7 9 9 13",
        "Step 0": {
            "steps": [
                "9 - 7 = 2 (left: 2 9 13)",
                "13 - 9 =",
                "9 + 13 = 22 (left: 7 9 22)",
                "9 * 9 = 81 (left: 7 13 81)",
                "13 - 9 = 4 (left"
            ],
            "Evaluation": [
                2.001,
                0.003,
                2.001,
                2.001,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "9 - 7 = 2 (left: 2 9 13)",
                "13 + 7 = 20 (left: 7 9 20)",
                "7 + 9 = 16 (left: 9 9 13)",
                "9 - 7 = 2 (left: 2 9 13)",
                "7 + 9 = 16 (left: 9 9 13)"
            ],
            "Evaluation": [
                2.001,
                1.002,
                22.0,
                0.003,
                3.0
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.2",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "9 - 7 = 2 (left: 2 9 13) || 13 + 2 = 15 (left: 9 15)",
                "7 + 9 = 16 (left: 9 9 13) || 13 * 9 = 117 (left: 9 117)",
                "13 - 7 = 6 (left: 7 9 6)",
                "7 + 9 = 16 (left: 9 9 13) || 9 / 9 = 1 (left: 1 13)",
                "7 + 9 = 16 (left: 9 9 13) || 13 * 9 = 117 (left: 9 117)"
            ],
            "Evaluation": [
                22.0,
                0.002,
                3.0,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 2.0",
                "2 <- 2.0",
                "3 <- 2.0",
                "4 <- 1.0"
            ]
        },
        "Step 3": {
            "steps": [
                "7 + 9 = 16 (left: 9 9 13) || 13 / 9 = 1 (left: 1 9)",
                "9 - 7 = 2 (left: 2 9 13) || 13 + 2 = 15 (left: 9 15) || 9 + 15 = 24 (left: 24)",
                "9 - 7 = 2 (left: 2 9 13) || 13 + 2 = 15 (left: 9 15) || 15 - 9 = 6 (left: 6)",
                "9 - 7 = 2 (left: 2 9 13) || 13 + 2 = 15 (left: 9 15) || 9 * 15 = 135 (left: 135)",
                "9 - 7 = 2 (left: 2 9 13) || 9 - 2 = 7 (left: 7 13)"
            ],
            "Evaluation": [
                40.0,
                60.0,
                0.003,
                0.003,
                0.0
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 2.0",
                "2 <- 2.4",
                "3 <- 3.0",
                "4 <- 3.0"
            ]
        },
        "Step 4": {
            "steps": [
                "9 - 7 = 2 (left: 2 9 13) || 13 + 2 = 15 (left: 9 15) || 9 + 15 = 24 (left: 24) || Answer: (9 + (13 - 9)) + 7 = 24",
                "9 - 7 = 2 (left: 2 9 13) || 13 + 2 = 15 (left: 9 15) || 15 - 9 = 6 (left: 6)",
                "7 + 9 = 16 (left: 9 9 13) || 13 * 9 = 117 (left: 9 117) || 117 - 9 = 108 (left: 108)",
                "7 + 9 = 16 (left: 9 9 13) || 13 / 9 = 1 (left: 1 9) || 9 - 1 = 8 (left: 8)",
                "7 + 9 = 16 (left: 9 9 13) || 13 / 9 = 1 (left: 1 9) || 1 + 9 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 3.1",
                "2 <- 3.1",
                "3 <- 4.4",
                "4 <- 1.2"
            ]
        },
        "Step 5": {
            "steps": [
                "7 + 9 = 16 (left: 9 9 13) || 13 / 9 = 1 (left: 1 9) || 9 / 1 = 9 (left: 9)",
                "9 - 7 = 2 (left: 2 9 13) || 13 + 2 = 15 (left: 9 15) || 9 + 15 = 24 (left: 24) || Answer: (9 + (9 - 7)) + 13 = 24",
                "9 - 7 = 2 (left: 2 9 13) || 13 + 2 = 15 (left: 9 15) || 9 + 15 = 24 (left: 24) || Answer: (9 + (13 - 2)) + 9 = 24",
                "9 - 7 = 2 (left: 2 9 13) || 13 + 2 = 15 (left: 9 15) || 9 + 15 = 24 (left: 24) || Answer: (9 + (13 - 2)) + 15 = 24",
                "7 + 9 = 16 (left: 9 9 13) || 9 / 9 = 1 (left: 1 9 13)"
            ]
        },
        "Input": "7 9 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "926": {
        "puzzle": "3 6 9 12",
        "Step 0": {
            "steps": [
                "12 - 9 = 3 (left: 3 6 12)",
                "6 * 3 = 18 (left: 9 12 18)",
                "12 - 3 = 9 (left: 3 6 9)",
                "9 + 3 = 12 (left: 6 9 12)",
                "9 - 3 = 6 (left: 6 9 12)"
            ],
            "Evaluation": [
                0.003,
                3.0,
                0.003,
                3.0,
                2.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "12 / 3 = 4 (left: 4 9 ",
                "12 - 9 = 3 (left: 3 6 12)",
                "9 - 6 = 3 (left: 3 9 12)",
                "12 - 3 = 9 (left: 6 9 12)",
                "3 * 6 = 18 (left: 9 18 12)"
            ],
            "Evaluation": [
                60.0,
                1.002,
                2.001,
                41.0,
                3.0
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- INIT",
                "2 <- 1.0",
                "3 <- INIT",
                "4 <- 1.0"
            ]
        },
        "Step 2": {
            "steps": [
                "12 - 3 = 9 (left: 6 9 12) || 9 + 12 = 21 (left: 6 21)",
                "9 * 3 = 27 (left: 6 9 27)",
                "12 / 3 = 4 (left: 4 9  || 3 + 7 = 10 (left: 7 10)",
                "9 - 3 = 6 (left: 6 9 12)",
                "12 / 3 = 4 (left: 4 9  || 7 - 3 = 4 (left:"
            ],
            "Evaluation": [
                0.003,
                41.0,
                1.002,
                22.0,
                1.0
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 2.1",
                "2 <- 2.2",
                "3 <- 2.3",
                "4 <- 1.2"
            ]
        },
        "Step 3": {
            "steps": [
                "12 - 3 = 9 (left: 6 9 12) || 6 * 9 = 54 (left: 9 12 54)",
                "9 * 3 = 27 (left: 6 9 27) || 9 * 3",
                "12 / 3 = 4 (left: 4 9  || 3 + 7 = 10 (left: 7 10) || 7 * 10 = 70 (left: 70)",
                "9 - 3 = 6 (left: 6 9 12) || 6 + 9 = 15 (left: 12 15)",
                "9 - 6 = 3 (left: 3 9 12) || 9 - 3 = 6 (left: 6 12)"
            ],
            "Evaluation": [
                2.001,
                0.003,
                0.003,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 1.3",
                "2 <- 1.0",
                "3 <- 1.0",
                "4 <- 1.3"
            ]
        },
        "Step 4": {
            "steps": [
                "9 * 3 = 27 (left: 6 9 27) || 9 * 3 = 27 (left: 6 27)",
                "12 - 3 = 9 (left: 6 9 12) || 9 - 6 = 3 (left:",
                "12 / 3 = 4 (left: 4 9  || Possible next steps:",
                "12 / 3 = 4 (left: 4 9  || 4 + 9 = 13 (left: 9 13)",
                "12 - 3 = 9 (left: 6 9 12) || 6 * 9 = 54 (left: 54 12)"
            ],
            "Evaluation": [
                0.003,
                1.0,
                0.003,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.0",
                "2 <- 2.4",
                "3 <- 2.1",
                "4 <- 2.3"
            ]
        },
        "Step 5": {
            "steps": [
                "12 / 3 = 4 (left: 4 9  || 4 + 9 = 13 (left: 9 13)",
                "12 / 3 = 4 (left: 4 9  || 9 - 4 = 5 (left: 5 9)",
                "12 / 3 = 4 (left: 4 9  || 7 - 3 = 4 (left: || 7 * 3 = 21 (left: 21)",
                "9 * 3 = 27 (left: 6 9 27) || 27 / 9 = 3 (left: 6 3 27)",
                "9 - 3 = 6 (left: 6 9 12) || 12 / 6 = 2 (left: 2 9)"
            ],
            "Evaluation": [
                0.002,
                1.002,
                0.003,
                1.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 1.0",
                "2 <- INIT",
                "3 <- 1.0",
                "4 <- 1.0"
            ]
        },
        "Step 6": {
            "steps": [
                "9 + 3 = 12 (left: 6 9 12) || 9 / 6 = 1.5 (left: 1.5 12)",
                "12 / 3 = 4 (left: 4 9  || 4 * 9 = 36 (left: 9 36)",
                "3 + 6 = 9 (left: 9 9 12)",
                "12 / 3 = 4 (left: 4 9  || 9 - 4 = 5 (left: 5 9)",
                "12 / 3 = 4 (left: 4 9  || 9 - 4 = 5 (left: 5 9)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                2.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- INIT",
                "2 <- 1.3",
                "3 <- 2.1",
                "4 <- 2.1"
            ]
        },
        "Step 7": {
            "steps": [
                "9 - 3 = 6 (left: 6 9 12) || 6 + 9 = 15 (left: 15 12)",
                "12 - 6 = 6 (left: 3 6 ",
                "12 - 3 = 9 (left: 6 9 12) || 6 - 9 = -3 (left:",
                "9 * 3 = 27 (left: 6 9 27) || 9 / 3 = 3 (left: 6 3 27)",
                "9 * 3 = 27 (left: 6 9 27) || 6 * 4 = 24 ("
            ],
            "Evaluation": [
                0.003,
                41.0,
                0.0,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- 7.1",
                "1 <- 1.0",
                "2 <- 7.1",
                "3 <- 2.3",
                "4 <- 1.0"
            ]
        },
        "Step 8": {
            "steps": [
                "12 - 6 = 6 (left: 3 6  || 3 + 6 = 9 (left: 9)",
                "12 / 3 = 4 (left: 4 9  || 4 * 9 = 36 (left: 9 36)",
                "12 - 6 = 6 (left: 3 6  || 6 - 3 = 3 (left: 3)",
                "9 - 3 = 6 (left: 6 9 12) || 6 * 9 = 54 (left: 54 12)",
                "12 / 3 = 4 (left: 4 9  || Input: 3 6 10"
            ],
            "Evaluation": [
                0.0,
                0.002,
                0.002,
                20.001,
                0.003
            ],
            "Resampling": [
                "0 <- 8.3",
                "1 <- 2.1",
                "2 <- 2.1",
                "3 <- 1.3",
                "4 <- 8.3"
            ]
        },
        "Step 9": {
            "steps": [
                "9 - 3 = 6 (left: 6 9 12) || 6 * 9 = 54 (left: 54 12) || 54 - 12 = 42 (left: 42)",
                "9 * 3 = 27 (left: 6 9 27) || 6 * 9 = 54 (left: 27 54)",
                "9 * 3 = 27 (left: 6 9 27) || 6 + 9 = 15 (left: 15 15)",
                "12 - 3 = 9 (left: 6 9 12) || 12 - 6 = 6 (left: 6 9)",
                "9 - 3 = 6 (left: 6 9 12) || 6 * 9 = 54 (left: 54 12) || 54 - 12 = 42 (left: 42)"
            ]
        },
        "Input": "3 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "927": {
        "puzzle": "6 9 12 13",
        "Step 0": {
            "steps": [
                "12 - 6 = 6 (left: 6 13 12)",
                "13 - 6 = 7 (left: 7 12 13)",
                "6 + 9 = 15 (left: 12 13 15)",
                "12 * 13 = 156 (left: 6 9 ",
                "6 * 9 = 54 (left: 12 13 54)"
            ],
            "Evaluation": [
                3.0,
                0.003,
                0.002,
                0.001,
                1.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.0",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.0"
            ]
        },
        "Step 1": {
            "steps": [
                "6 + 9 = 15 (left: 12 13 15)",
                "12 - 6 = 6 (left: 6 13 12) || 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 12)",
                "13 - 6 = 7 (left: 7 9 12)",
                "9 - 6 = 3 (left: 3 12 13)",
                "12 - 6 = 6 (left: 6 13 12) || 13 - 6 = 7 (left: 7 12)"
            ],
            "Evaluation": [
                1.001,
                0.003,
                2.001,
                3.0,
                0.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.0",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "13 + 6 = 19 (left: 9 12 19)",
                "9 * 12 = 108 (left: 6 13 108)",
                "12 - 6 = 6 (left: 6 13 12) || 6 * 13 = 78 (left: 12 78)",
                "6 * 9 = 54 (left: 12 13 54)",
                "9 - 6 = 3 (left: 3 12 13)"
            ],
            "Evaluation": [
                2.001,
                2.0,
                0.003,
                1.002,
                21.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 2.3",
                "3 <- 2.4",
                "4 <- 2.4"
            ]
        },
        "Step 3": {
            "steps": [
                "12 + 9 = 21 (left: 6 21 13)",
                "9 + 3 = 12 (left: 6 12 13)",
                "6 * 9 = 54 (left: 12 13 54) || 12 * 13 = 156 (left: 156 54)",
                "9 - 6 = 3 (left: 3 12 13) || 12 + 1 = 13 (left: 3 13)",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 12 = 36 (left: 36 13)"
            ],
            "Evaluation": [
                3.0,
                1.002,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 2.4",
                "2 <- 2.4",
                "3 <- 2.4",
                "4 <- INIT"
            ]
        },
        "Step 4": {
            "steps": [
                "9 - 6 = 3 (left: 3 12 ",
                "9 - 6 = 3 (left: 3 12 13) || 4 + 5 = 9 (left:",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 4 = 12 (left: 4 12 13)  ",
                "9 - 6 = 3 (left: 3 12 13) || 3 * 12 = 36 (left: 13 36)",
                "6 + 9 = 15 (left: 12 13 15)"
            ],
            "Evaluation": [
                60.0,
                0.002,
                0.003,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- 4.0",
                "1 <- 4.0",
                "2 <- 4.0",
                "3 <- 2.4",
                "4 <- 4.0"
            ]
        },
        "Step 5": {
            "steps": [
                "9 - 6 = 3 (left: 3 12  || 3 ^ 12 = 531441 (left: 531441)",
                "9 - 6 = 3 (left: 3 12  || 12 / 3 = 4 (left: 4)",
                "9 - 6 = 3 (left: 3 12  || 12 - 3 = 9 (left: 9 12)",
                "9 - 6 = 3 (left: 3 12 13) || 3 + 12 = 15 (left: 15 13)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 4.0",
                "1 <- 4.0",
                "2 <- 5.4",
                "3 <- 4.0",
                "4 <- 4.0"
            ]
        },
        "Step 6": {
            "steps": [
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 / 2 = 18",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36)",
                "9 - 6 = 3 (left: 3 12  || 12 - 3 = 9 (left: 3 9)"
            ],
            "Evaluation": [
                60.0,
                60.0,
                0.003,
                20.0,
                0.003
            ],
            "Resampling": [
                "0 <- 4.0",
                "1 <- 6.0",
                "2 <- 6.0",
                "3 <- 6.1",
                "4 <- 4.0"
            ]
        },
        "Step 7": {
            "steps": [
                "9 - 6 = 3 (left: 3 12  || 12 / 3 = 4 (left: 4)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 / 2 = 18",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || None, as there is only one number provided.",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || There are no possible next steps for the number 36 as it is already a single number.",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 4.0",
                "1 <- 7.4",
                "2 <- 7.4",
                "3 <- 7.4",
                "4 <- 6.0"
            ]
        },
        "Step 8": {
            "steps": [
                "9 - 6 = 3 (left: 3 12  || 12 / 3 = 4 (left: 4 12)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 + 2 = 38",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 / 12 = 3 (left: 3)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || No possible next steps as there is only one number.",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || There are no possible next steps with the input 36."
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 7.4",
                "1 <- 6.1",
                "2 <- 4.0",
                "3 <- 7.4",
                "4 <- 6.0"
            ]
        },
        "Step 9": {
            "steps": [
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 / 2 = 18",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 / 2 = 18",
                "9 - 6 = 3 (left: 3 12  || 12 * 3 = 36 (left: 12 36)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 / 8 = 4.5 (left: 8)",
                "9 - 6 = 3 (left: 3 12  || 3 * 12 = 36 (left: 36) || 36 / 2 = 18"
            ]
        },
        "Input": "6 9 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "928": {
        "puzzle": "4 7 9 13",
        "Step 0": {
            "steps": [
                "9 + 4 = 13 (left: 7 13 13)",
                "7 / 4 = 1.75 (left: 1.75 9 13)",
                "13 - 9 = 4 (left: 4 7 4)",
                "4 + 7 = 11 (left: 9 11 13)",
                "4 + 7 = 11 (left: 9 11 13)"
            ],
            "Evaluation": [
                1.002,
                2.001,
                41.0,
                1.002,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.2",
                "2 <- INIT",
                "3 <- 0.2",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "9 - 4 = 5 (left: 5 7 13)",
                "13 - 9 = 4 (left: 4 7 4) || 7 + 4 = 11 (left: 11)",
                "4 + 7 = 11 (left: 9 11 13)",
                "13 - 9 = 4 (left: 4 7 4) || Input: 3 5 7 9",
                "7 / 4 = 1.75 (left: 1.75 9 13)"
            ],
            "Evaluation": [
                3.0,
                0.003,
                1.002,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 0.2",
                "2 <- 0.1",
                "3 <- 0.4",
                "4 <- 0.2"
            ]
        },
        "Step 2": {
            "steps": [
                "9 - 4 = 5 (left: 5 7 13) || 5 * 7 = 35 (left: 35 13)",
                "13 - 9 = 4 (left: 4 7 4) || 7 / 4 = 1.75 (left: 1.75)",
                "7 / 4 = 1.75 (left: 1.75 9 13) || 9 / 1.75 = 5.14 (left: 5",
                "4 + 7 = 11 (left: 9 11 13) || 13 / 9 = 1.44444 (left: 1.44444 11)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                1.0,
                60.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- INIT",
                "2 <- 0.2",
                "3 <- 2.4",
                "4 <- 2.4"
            ]
        },
        "Step 3": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4)",
                "7 - 4 = 3 (left: 3 9 13)",
                "13 - 9 = 4 (left: 4 7 4) || 7 / 4 = 1.75 (left: 1.75)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 / 28 = 0.14285714285714285 (left: 0.14285714285714285 28 4)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 / 28 = 0.142857142857 (left: 0.142857142857 4)"
            ],
            "Evaluation": [
                60.0,
                1.002,
                0.003,
                3.0,
                1.002
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 3.0",
                "2 <- 2.4",
                "3 <- 3.0",
                "4 <- 3.0"
            ]
        },
        "Step 4": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 4 / 4 = 1 (left: 1",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 4 + 112 = 116 (left: 4 116 4)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 112 4)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 112 - 4 = 108 (left: 4 108 4)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 112 / 4 = 28 (left: 28 4)"
            ],
            "Evaluation": [
                40.001,
                0.0,
                60.0,
                40.001,
                60.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 3.0",
                "2 <- 4.2",
                "3 <- 3.0",
                "4 <- 2.4"
            ]
        },
        "Step 5": {
            "steps": [
                "7 - 4 = 3 (left: 3 9 13)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 112 / 4 = 28 (left:",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 112 - 4 = 108 (left: 4 108 4) || 4 + 108 = 112 (left: 4 112 4)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 4 + 4 = 8 (left: 8 112)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4)"
            ],
            "Evaluation": [
                1.002,
                21.0,
                60.0,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 3.0",
                "2 <- 4.4",
                "3 <- 4.4",
                "4 <- 5.2"
            ]
        },
        "Step 6": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 + 28 = 32 (left: 32 4)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 4 + 4 = 8 (left: 8 112)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 + 28 = 32 (left: 32 4)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 112 - 4 = 108 (left: 4 108 4) || 4 + 108 = 112 (left: 4 112 4) || 4 + 112 = 116 (left: 4 116 4)"
            ],
            "Evaluation": [
                20.0,
                1.0,
                60.0,
                41.0,
                40.0
            ],
            "Resampling": [
                "0 <- 6.4",
                "1 <- 5.4",
                "2 <- 5.4",
                "3 <- 4.2",
                "4 <- 4.2"
            ]
        },
        "Step 7": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 112 - 4 = 108 (left: 4 108 4) || 4 + 108 = 112 (left: 4 112 4) || 4 + 112 = 116 (left: 4 116 4) || 116 - 4 = 112 (left: 4 112)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 112 - 4 = 108 (left: 4 108 4)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 112 / 4 = 28 (left: 28 4)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 112 - 4 = 108 (left: 4 108 4) || Input: 5 6 7 8",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 112 - 4 = 108 (left: 4 108 4) || 4 / 108 = 0.037037037037037035 (left: 4 0.037037037037037035 4)"
            ],
            "Evaluation": [
                60.0,
                60.0,
                20.002,
                0.003,
                3.0
            ],
            "Resampling": [
                "0 <- 6.4",
                "1 <- 4.0",
                "2 <- 2.4",
                "3 <- 6.2",
                "4 <- 2.4"
            ]
        },
        "Step 8": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 112 - 4 = 108 (left: 4 108 4) || 4 + 108 = 112 (left: 4 112 4) || 4 + 112 = 116 (left: 4 116 4) || 116 - 4 = 112 (left: 4 112 ",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 4 + 112 = 116 (left: 4 116 4) || 116 - 4 = 112 (left:",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 28 - 4 = 24 (left: 24 4)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 4 + 4 = 8 (left: 8 112)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                60.0,
                0.001,
                60.0
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 8.2",
                "2 <- 8.4",
                "3 <- 5.1",
                "4 <- 4.2"
            ]
        },
        "Step 9": {
            "steps": [
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 112 / 4 = 28 (left: 28 4) || 28 + 4 = 32 (left: 32)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 28 - 4 = 24 (left: 24 4) || 24 + 4 = 28 (left: 28)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 4 + 112 = 116 (left: 4 116 4)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 112 / 4 = 28 (left: || 112 - 28 = 84 (left: 84)",
                "13 - 9 = 4 (left: 4 7 4) || 4 * 7 = 28 (left: 4 28 4) || 4 * 28 = 112 (left: 4 112 4) || 112 - 4 = 108 (left: 4 108 4) || 108 - 4 = 104 (left: 4 104)"
            ]
        },
        "Input": "4 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "929": {
        "puzzle": "5 6 8 12",
        "Step 0": {
            "steps": [
                "6 / 5 = 1.2 (left: 1.",
                "6 * 8 = 48 (left: 5 12 ",
                "5 * 6 = 30 (left: 8 30 12)",
                "8 - 6 = 2 (left: 2 5 12)",
                "12 - 6 = 6 (left: 5 6 8)"
            ],
            "Evaluation": [
                0.0,
                1.002,
                22.0,
                3.0,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.2",
                "3 <- 0.2",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "5 + 6 = 11 (left: 8 11 12)",
                "12 / 6 = 2 (left: ",
                "5 * 6 = 30 (left: 8 30 12) || 30 / 12 = 2.5 (left: 2.5 12)",
                "5 * 6 = 30 (left: 8 30 12) || 30 / 8 = 3.75 (left: 3.75 12)",
                "12 - 8 = 4 (left: 5 6 4)"
            ],
            "Evaluation": [
                1.002,
                0.0,
                0.003,
                1.002,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.2",
                "2 <- 1.4",
                "3 <- 0.4",
                "4 <- 0.2"
            ]
        },
        "Step 2": {
            "steps": [
                "8 - 6 = 2 (left: 2 6 12)",
                "5 * 6 = 30 (left: 8 30 12) || 12 - 8 = 4 (left: ",
                "12 - 8 = 4 (left: 5 6 4) || Input: 10 3 7",
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8)",
                "5 * 6 = 30 (left: 8 30 12) || 30 - 8 = 22 (left: 22 12)"
            ],
            "Evaluation": [
                3.0,
                0.0,
                0.003,
                40.0,
                0.003
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 2.3",
                "2 <- 2.3",
                "3 <- 2.3",
                "4 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8) || 1 + 8 = 9 (left: 8)",
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8) || 1 + 8 = 9 (left: 9)",
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8) || 1 + 8 = 9 (left: 9)",
                "5 + 6 = 11 (left: 8 11 12)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.002,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- INIT",
                "2 <- 2.3",
                "3 <- 2.3",
                "4 <- 2.3"
            ]
        },
        "Step 4": {
            "steps": [
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8)",
                "8 - 6 = 2 (left: 5 2 12)",
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8) || 8 / 1 = 8 (left: 8)",
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8) || 8 / 1 = 8 (left: 8)"
            ],
            "Evaluation": [
                21.001,
                3.0,
                0.002,
                0.001,
                0.002
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 4.0",
                "2 <- 2.3",
                "3 <- 2.3",
                "4 <- 2.3"
            ]
        },
        "Step 5": {
            "steps": [
                "12 - 8 = 4 (left: 5 6 4) || 6 - 4 = 2 (left: 2)",
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8) || 8 / 1 = 8 (left: 8)",
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8) || 8 - 1 = 7 (left: 7)",
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8) || 1 + 8 = 9 (left: 9)",
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8) || 8 - 1 = 7 (left: 7)"
            ],
            "Evaluation": [
                0.0,
                0.003,
                0.002,
                0.001,
                0.001
            ],
            "Resampling": [
                "0 <- 4.0",
                "1 <- 0.2",
                "2 <- 2.3",
                "3 <- 4.1",
                "4 <- 2.3"
            ]
        },
        "Step 6": {
            "steps": [
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8) || 1 + 8 = 9 (left: 9)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240)",
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8) || 8 - 1 = 7 (left: 7)",
                "8 - 6 = 2 (left: 5 2 12) || 12 - 5 = 7 (left: 2 7)",
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8) || 1 * 8 = 8 (left: 8)"
            ],
            "Evaluation": [
                0.001,
                40.0,
                0.001,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 6.1",
                "1 <- 6.1",
                "2 <- 6.1",
                "3 <- 2.3",
                "4 <- 6.1"
            ]
        },
        "Step 7": {
            "steps": [
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 + 240 = 252 (left: 252)",
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8) || 1 + 8 = 9 (left: 9)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 240 = 2880 (left: 2880)"
            ],
            "Evaluation": [
                40.0,
                60.0,
                0.002,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 6.1",
                "1 <- 7.0",
                "2 <- 7.0",
                "3 <- 7.0",
                "4 <- 7.1"
            ]
        },
        "Step 8": {
            "steps": [
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || - 240 divided by 10 = 24",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 * 2 = 480 (left: 480)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || - 240 divided by 4 = 60",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 6 = 40 (left: 40)"
            ],
            "Evaluation": [
                0.003,
                20.002,
                0.003,
                41.0,
                60.0
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 7.0",
                "2 <- 7.1",
                "3 <- 8.4",
                "4 <- 8.4"
            ]
        },
        "Step 9": {
            "steps": [
                "12 - 6 = 6 (left: 5 6 8) || 6 - 5 = 1 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || There is only one number given (240), so there are no possible next steps to calculate.",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 240 / 12 = 20 (left",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || 4 + 0 = 4 (left: 2 4)",
                "5 * 6 = 30 (left: 8 30 12) || 8 * 30 = 240 (left: 12 240) || 12 * 20 = 240 (left: 240) || There are no possible next steps as the number 240 is already given and cannot be manipulated further."
            ]
        },
        "Input": "5 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "930": {
        "puzzle": "2 4 6 7",
        "Step 0": {
            "steps": [
                "4 + 6 = 10 (left: 2 10 7)",
                "4 + 6 = 10 (left: 2 10 7)",
                "2 * 4 = 8 (left: 8 6 7)",
                "6 - 4 = 2 (left: 2 6 7)",
                "6 / 2 = 3 (left: 4 3 "
            ],
            "Evaluation": [
                0.003,
                0.003,
                3.0,
                1.002,
                60.0
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.4",
                "2 <- 0.4",
                "3 <- INIT",
                "4 <- 0.4"
            ]
        },
        "Step 1": {
            "steps": [
                "6 / 2 = 3 (left: 4 3  || 3 / 4 =",
                "6 / 2 = 3 (left: 4 3  || 3 * 4 = 12 (left: 12)",
                "6 / 2 = 3 (left: 4 3  || 4 * 3 = 12 (left: 12)",
                "2 + 4 = 6 (left: 6 6 7)",
                "6 / 2 = 3 (left: 4 3  || 4 * 3 = 12 (left: 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                2.001,
                0.002
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- INIT",
                "2 <- 0.4",
                "3 <- 0.4",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "6 / 2 = 3 (left: 4 3  || 4 - 3 = 1 (left: 1)",
                "6 * 7 = 42 (left: 2 4 ",
                "6 / 2 = 3 (left: 4 3  || 4 / 3 = 1.33 (left: 1.33)",
                "6 / 2 = 3 (left: 4 3  || 4 - 3 = 1 (left: 1)",
                "6 / 2 = 3 (left: 4 3 "
            ],
            "Evaluation": [
                0.002,
                0.001,
                0.003,
                0.002,
                20.001
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.4",
                "2 <- 0.4",
                "3 <- INIT",
                "4 <- 0.4"
            ]
        },
        "Step 3": {
            "steps": [
                "6 / 2 = 3 (left: 4 3  || 4 + 3 = 7 (left: 7)",
                "6 / 2 = 3 (left: 4 3  || 4 + 3 = 7 (left: 7)",
                "6 / 2 = 3 (left: 4 3  || Input: 5 9 3",
                "6 - 2 = 4 (left: 4 6 7)",
                "6 / 2 = 3 (left: 4 3  || 3 * 4 = 12 ("
            ],
            "Evaluation": [
                0.0,
                0.001,
                0.003,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 3.3",
                "2 <- 2.4",
                "3 <- 3.3",
                "4 <- 0.4"
            ]
        },
        "Step 4": {
            "steps": [
                "6 - 2 = 4 (left: 4 6 7) || 7 / 4 = 1.75 (left: 1.75 6)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6)",
                "6 / 2 = 3 (left: 4 3  || 4 * 3 = 12 (left: 12)",
                "6 - 2 = 4 (left: 4 6 7) || 4 + 6 = 10 (left: 7 10)",
                "6 / 2 = 3 (left: 4 3  || 4 - 3 = 1 (left: 1)"
            ],
            "Evaluation": [
                0.002,
                1.0,
                0.003,
                0.0,
                0.001
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 3.3",
                "2 <- 3.3",
                "3 <- 3.3",
                "4 <- 2.4"
            ]
        },
        "Step 5": {
            "steps": [
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6)",
                "6 - 2 = 4 (left: 4 6 7) || 4 + 6 = 10 (left: 7 10)",
                "6 - 2 = 4 (left: 4 6 7) || 4 + 6 = 10 (left: 7 10)",
                "6 - 2 = 4 (left: 4 6 7) || 6 / 4 = 1.5 (left: 1.5 7)",
                "6 / 2 = 3 (left: 4 3  || 4 - 3 = 1 (left: 1)"
            ],
            "Evaluation": [
                41.0,
                0.002,
                1.001,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 5.0",
                "1 <- 5.0",
                "2 <- INIT",
                "3 <- 3.3",
                "4 <- INIT"
            ]
        },
        "Step 6": {
            "steps": [
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 6 / 3 = 2 (left: 2)",
                "4 + 6 = 10 (left: 2 10 7)",
                "6 - 2 = 4 (left: 4 6 7) || 6 / 4 = 1.5 (left: 1.5 7)",
                "4 + 6 = 10 (left: 2 10 7)"
            ],
            "Evaluation": [
                0.001,
                0.001,
                0.003,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.4",
                "2 <- 3.3",
                "3 <- 0.4",
                "4 <- 3.3"
            ]
        },
        "Step 7": {
            "steps": [
                "6 / 2 = 3 (left: 4 3  || 4 * 3 = 12 (left: 12)",
                "6 / 2 = 3 (left: 4 3  || 4 / 3 = 1.33 (left: 1.33)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6)",
                "6 / 2 = 3 (left: 4 3  || 5 * 10 = 50",
                "6 - 2 = 4 (left: 4 6 7) || Input: 3 7"
            ],
            "Evaluation": [
                0.002,
                0.003,
                20.0,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 2.4",
                "2 <- 5.0",
                "3 <- 5.0",
                "4 <- 3.3"
            ]
        },
        "Step 8": {
            "steps": [
                "6 - 2 = 4 (left: 4 6 7) || 6 - 4 = 2 (left: 2 7)",
                "6 / 2 = 3 (left: 4 3  || 4 / 3 = 1.33 (left: 1.33)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 6 / 3 = 2 (left: 2)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6) || 6 - 3 = 3 (left: 3)",
                "6 - 2 = 4 (left: 4 6 7) || 4 * 6 = 24 (left: 7 24)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.001,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 3.3",
                "2 <- 2.4",
                "3 <- 3.3",
                "4 <- 3.3"
            ]
        },
        "Step 9": {
            "steps": [
                "6 - 2 = 4 (left: 4 6 7) || 4 + 6 = 10 (left: 7 10)",
                "6 - 2 = 4 (left: 4 6 7) || 4 + 6 = 10 (left: 7 10)",
                "6 / 2 = 3 (left: 4 3  || 4 - 3 = 1 (left: 1)",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3",
                "6 - 2 = 4 (left: 4 6 7) || 7 - 4 = 3 (left: 3 6)"
            ]
        },
        "Input": "2 4 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "931": {
        "puzzle": "2 5 10 10",
        "Step 0": {
            "steps": [
                "10 - 2 = 8 (left: 8 10 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "10 - 2 = 8 (left: 8 10 10)",
                "5 * 2 = 10 (left: 10 10 10)",
                "2 + 5 = 7 (left: 7 10 10)"
            ],
            "Evaluation": [
                2.001,
                0.003,
                1.002,
                0.003,
                1.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "10 - 2 = 8 (left: 8 10 10)",
                "5 * 2 = 10 (left: 10 10 10)",
                "2 + 5 = 7 (left: 7 10 10)",
                "2 + 5 = 7 (left: 7 10 10)",
                "10 / 2 = 5 (left: 5 10 10)"
            ],
            "Evaluation": [
                1.002,
                40.001,
                2.001,
                2.001,
                1.002
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 1.4",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "5 * 2 = 10 (left: 10 10 10) || 5 + 3 = 8 (left: 7 8 2)",
                "10 / 2 = 5 (left: 5 10 10) || 10 / 5 = 2 (left: 2 10)",
                "2 + 5 = 7 (left: 7 10 10)",
                "10 / 5 = 2 (left: 2 10 ",
                "5 * 2 = 10 (left: 10 10 10)"
            ],
            "Evaluation": [
                3.0,
                3.0,
                0.003,
                60.0,
                21.001
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 2.3",
                "2 <- 1.1",
                "3 <- 1.1",
                "4 <- 1.1"
            ]
        },
        "Step 3": {
            "steps": [
                "10 / 5 = 2 (left: 2 10  || 10 * 2 = 20 (left: 20)",
                "10 / 5 = 2 (left: 2 10  || 2 + 10 = 12 (left: 12) ",
                "5 * 2 = 10 (left: 10 10 10) || 1 + 2 = 3 (left: 3 3 4)",
                "5 * 2 = 10 (left: 10 10 10) || 10 + 10 = 20 (left: 10 20)",
                "5 * 2 = 10 (left: 10 10 10) || 1 / 1 = 1 ("
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 2.4",
                "2 <- 1.1",
                "3 <- 1.1",
                "4 <- 2.3"
            ]
        },
        "Step 4": {
            "steps": [
                "10 / 5 = 2 (left: 2 10  || 10 * 2 = 20 (left: 20)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 - 10 = 0 (left: 0 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10)",
                "10 / 5 = 2 (left: 2 10  || 5 + 5 = 10 (left: "
            ],
            "Evaluation": [
                0.002,
                60.0,
                0.0,
                60.0,
                0.0
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 4.3",
                "2 <- 1.3",
                "3 <- 4.3",
                "4 <- 2.1"
            ]
        },
        "Step 5": {
            "steps": [
                "10 / 5 = 2 (left: 2 10  || 8 / 12 = 0.66667 (left: 0.66667)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "2 + 5 = 7 (left: 7 10 10) || 10 - 7 = 3 (left: 3 10 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "10 / 2 = 5 (left: 5 10 10) || 10 / 5 = 2 (left: 2 10) || 2 * 10 = 20 (left: 20)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 2.3",
                "2 <- 4.1",
                "3 <- 1.1",
                "4 <- 4.1"
            ]
        },
        "Step 6": {
            "steps": [
                "10 / 5 = 2 (left: 2 10  || 10 - 2 = 8 (left: 8)",
                "10 / 5 = 2 (left: 2 10  || 10 * 2 = 20 (left: 20)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 10 / 1 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                60.0,
                0.002
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 2.4",
                "2 <- 2.3",
                "3 <- 4.1",
                "4 <- 2.4"
            ]
        },
        "Step 7": {
            "steps": [
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 5 / 3 = 1.66667 (left: 1.66667 9",
                "5 * 2 = 10 (left: 10 10 10) || 5 + 5 = 10 (left: 5 10)",
                "10 / 5 = 2 (left: 2 10  || 2 * 10 = 20 (left: 20)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 + 10 = 20 (left: 10 20)"
            ],
            "Evaluation": [
                2.0,
                0.002,
                0.002,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 6.3",
                "1 <- 4.3",
                "2 <- 2.3",
                "3 <- 6.3",
                "4 <- 4.1"
            ]
        },
        "Step 8": {
            "steps": [
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "10 / 5 = 2 (left: 2 10  || 10 / 2 = 5 (left: 5)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.0,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 4.1",
                "1 <- 4.1",
                "2 <- 6.3",
                "3 <- 4.3",
                "4 <- 4.1"
            ]
        },
        "Step 9": {
            "steps": [
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 1 * 10 = 10 (left: 10)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 1 + 10 = 11 (left: 11)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "5 * 2 = 10 (left: 10 10 10) || 10 / 10 = 1 (left: 1 10) || 10 - 1 = 9 (left: 9)"
            ]
        },
        "Input": "2 5 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "932": {
        "puzzle": "6 6 7 12",
        "Step 0": {
            "steps": [
                "7 - 6 = 1 (left: 1 6 12)",
                "6 * 6 = 36 (left: 7 36)",
                "7 - 6 = 1 (left: 1 6 12)",
                "6 * 7 = 42 (left: 6 12 42)",
                "12 - 6 = 6 (left:"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                2.001,
                0.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "7 + 1 = 8 (left: 8 12)",
                "6 / 6 = 1 (left: 1 7 12)",
                "12 - 7 = 5 (left: 5 7 12)",
                "6 + 6 = 12 (left: 12 7 12)",
                "7 - 6"
            ],
            "Evaluation": [
                0.002,
                2.001,
                21.001,
                21.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "12 - 6 = 6 (left: 6 6)",
                "12 + 6 = 18 (left: 6 18)",
                "12 - 7 = 5 (left: 6 5 12)",
                "6 + 6 = 12 (left: 12 7 12) || 12 / 7 = 1.71 (left: 1.71 12)",
                "12 - 7 = 5 (left: 5 7 12) || 5 + 7 = 12 (left: 12 12)"
            ],
            "Evaluation": [
                0.003,
                20.002,
                3.0,
                1.001,
                20.002
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 2.1",
                "2 <- 1.3",
                "3 <- 1.3",
                "4 <- 2.1"
            ]
        },
        "Step 3": {
            "steps": [
                "6 + 6 = 12 (left: 12 7 12) || 12 * 7 = 84 (left: 84 12)",
                "12 + 6 = 18 (left: 6 18) || 18 - 6 = 12 (left: 12)",
                "6 + 6 = 12 (left: 12 7 12) || 7 - 12 = -5 (left: -5 12)",
                "6 + 6 = 12 (left: 12 7 12) || 12 / 7 = 1.71 (left: 1.71 12 12)",
                "12 + 6 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18)"
            ],
            "Evaluation": [
                40.0,
                0.003,
                0.003,
                1.001,
                60.0
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 3.4",
                "2 <- 1.3",
                "3 <- 3.4",
                "4 <- 1.3"
            ]
        },
        "Step 4": {
            "steps": [
                "12 + 6 = 18 (left: 6 18) || 18 / 6 = 3 (left: 3 18)",
                "12 + 6 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "6 + 6 = 12 (left: 12 7 12) || 12 / 7 = 1.71 (left: 1.71 12)",
                "12 + 6 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || There are no possible next steps with the input 18.",
                "6 + 6 = 12 (left: 12 7 12) || 7 - 12 = -5 (left: -5 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 3.4",
                "2 <- 2.4",
                "3 <- 3.0",
                "4 <- 1.3"
            ]
        },
        "Step 5": {
            "steps": [
                "6 + 6 = 12 (left: 12 7 12) || 12 * 7 = 84 (left: 84 12) || 84 / 12 = 7 (left: 7)",
                "12 + 6 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || There are no possible next steps as there are no other numbers provided to perform operations with.",
                "12 - 7 = 5 (left: 5 7 12) || 5 + 7 = 12 (left: 12 12) || 12 + 12 = 24",
                "6 + 6 = 12 (left: 12 7 12) || 12 * 7 = 84 (left: 84 12) || 84 + 12 = 96 (left: 96)",
                "6 + 6 = 12 (left: 12 7 12) || 7 / 12 = 0.58 (left: 7 0.58)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 3.4",
                "2 <- 3.4",
                "3 <- 2.4",
                "4 <- 1.2"
            ]
        },
        "Step 6": {
            "steps": [
                "12 - 7 = 5 (left: 6 5 12) || 6 / 5 = 1.2 (left: 1.2 12)",
                "12 + 6 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || There are no possible next steps with the given input of 18.",
                "12 + 6 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 - 2 = 16 (left: 8 16)",
                "12 - 7 = 5 (left: 5 7 12) || 5 + 7 = 12 (left: 12 12) || 12 + 12 = 24",
                "12 - 7 = 5 (left: 5 7 12) || 7 / 5 = 1.4 ("
            ],
            "Evaluation": [
                2.001,
                0.003,
                60.0,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 3.4",
                "2 <- 6.2",
                "3 <- 6.2",
                "4 <- 6.2"
            ]
        },
        "Step 7": {
            "steps": [
                "12 + 6 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 - 2 = 16 (left: 16)",
                "12 + 6 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || No possible next steps with the input 18.",
                "12 + 6 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 - 2 = 16 (left: 8 16) || 16 / 8 = 2 (left: 2)",
                "12 + 6 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 - 2 = 16 (left: 8 16) || 8 * 16 = 128 (left: 128)",
                "12 + 6 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 - 2 = 16 (left: 8 16) || 8 * 16 = 128 (left: 128)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                1.002,
                60.0,
                20.0
            ],
            "Resampling": [
                "0 <- 6.2",
                "1 <- 3.4",
                "2 <- 7.3",
                "3 <- 7.4",
                "4 <- 3.4"
            ]
        },
        "Step 8": {
            "steps": [
                "12 + 6 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 - 2 = 16 (left: 8 16) || 8 * 16 = 128 (left: 128)",
                "12 + 6 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || There are no possible next steps with the input of 18.",
                "12 - 7 = 5 (left: 5 7 12) || 5 + 7 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "12 + 6 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 - 2 = 16 (left: 8)",
                "12 + 6 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || There are no possible next steps for the input 18."
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                20.002
            ],
            "Resampling": [
                "0 <- 6.2",
                "1 <- 7.3",
                "2 <- 3.0",
                "3 <- 1.2",
                "4 <- 3.0"
            ]
        },
        "Step 9": {
            "steps": [
                "12 + 6 = 18 (left: 6 18) || 6 * 3 = 18 (left: 18) || 18 - 2 = 16 (left: 8 16) || 8 + 16 = 24 (left: 24)",
                "12 - 7 = 5 (left: 5 7 12) || 5 + 7 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)",
                "6 + 6 = 12 (left: 12 7 12) || 12 * 7 = 84 (left: 84 12) || 84 - 12 = 72 (left: 72)",
                "12 - 7 = 5 (left: 5 7 12) || 5 * 7 = 35 (left: 12 35)",
                "6 + 6 = 12 (left: 12 7 12) || 12 * 7 = 84 (left: 84 12) || Possible next steps:"
            ]
        },
        "Input": "6 6 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "933": {
        "puzzle": "6 9 9 11",
        "Step 0": {
            "steps": [
                "9 / 3 = 3 (left: 6 9 11)",
                "6 + 9 = 15 (left: 9 9 11)",
                "9 - 6 = 3 (left: 3 9 11)",
                "11 - 9 = 2 (left: 6 9 2)",
                "11 - 9 = 2 (left: 6 9 2)"
            ],
            "Evaluation": [
                2.001,
                2.001,
                0.003,
                3.0,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.3",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "9 + 9 = 18 (left: 6 11 18)",
                "11 - 9 = 2 (left: 6 9 2) || 9 * 2 = 18 (left: 6 18)",
                "9 - 6 = 3 (left: 3 9 11)",
                "9 / 9 = 1 (left: 6 1 11)",
                "9 - 6 = 3 (left: 3 9 11)"
            ],
            "Evaluation": [
                1.002,
                40.001,
                1.002,
                2.001,
                2.001
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 1.1",
                "2 <- 1.1",
                "3 <- INIT",
                "4 <- 1.1"
            ]
        },
        "Step 2": {
            "steps": [
                "11 - 9 = 2 (left: 6 9 2) || 9 * 2 = 18 (left: 6 18) || 18 / 6 = 3 (left: 3 18)",
                "11 - 9 = 2 (left: 6 9 2) || 9 * 2 = 18 (left: 6 18) || 6 + 18 = 24 (left: 24)",
                "11 - 9 = 2 (left: 6 9 2) || 9 * 2 = 18 (left: 6 18) || 6 + 18 = 24 (left: 24)",
                "9 - 6 = 3 (left: 3 9 11)",
                "11 - 9 = 2 (left: 6 9 2) || 9 * 2 = 18 (left: 6 18) || 6 * 18 = 108 (left: 108)"
            ],
            "Evaluation": [
                0.003,
                40.0,
                60.0,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 0.0",
                "2 <- 0.3",
                "3 <- 2.2",
                "4 <- 2.2"
            ]
        },
        "Step 3": {
            "steps": [
                "11 - 9 = 2 (left: 6 9 2) || 9 * 2 = 18 (left: 6 18) || 6 + 18 = 24 (left: 24) || Answer: (6 + 9 - 9) * 11 = 24",
                "9 / 3 = 3 (left: 6 9 11) || 6 / 9 = 0.666666",
                "11 - 9 = 2 (left: 6 9 2) || 6 * 9 = 54 (left: 54 2)",
                "11 - 9 = 2 (left: 6 9 2) || 9 * 2 = 18 (left: 6 18) || 6 + 18 = 24 (left: 24) || Answer: (6 + (9 * (11 - 9))) = 24",
                "11 - 9 = 2 (left: 6 9 2) || 9 * 2 = 18 (left: 6 18) || 6 + 18 = 24 (left: 24) || Answer: 6 + (9 * (11 - 9)) = 24"
            ]
        },
        "Input": "6 9 9 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "934": {
        "puzzle": "5 8 11 12",
        "Step 0": {
            "steps": [
                "11 + 5 = 16 (left: 8 12 16)",
                "5 + 8 = 13 (left: 11 12 13)",
                "12 - 11 = 1 (left: ",
                "11 + 12 = 23 (left: 5 8 23)",
                "12 - 11 = 1 (left: "
            ],
            "Evaluation": [
                2.001,
                21.001,
                0.0,
                2.0,
                0.0
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "11 + 5 = 16 (left: 8 12 16) || 16 - 8 = 8 (left: 8 8)",
                "5 + 8 = 13 (left: 11 12 13)",
                "8 - 5 = 3 (left: 3 11 12)",
                "5 + 8 = 13 (left: 11 12 13)",
                "5 + 8 = 13 (left: 11 12 13) || 12 + 13 = 25 (left: 11 25)"
            ],
            "Evaluation": [
                0.003,
                41.0,
                1.002,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 1.3",
                "2 <- 1.3",
                "3 <- 1.3",
                "4 <- 0.0"
            ]
        },
        "Step 2": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13) || 12 / 11 = 1.09 (left: 1.09 13)",
                "5 + 8 = 13 (left: 11 12 13) || 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13)",
                "5 + 8 = 13 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)",
                "5 + 8 = 13 (left: 11 12 13) || 12 - 11 = 1 (left: 1 13)",
                "11 + 5 = 16 (left: 8 12 16) || 12 + 16 = 28 (left: 8 28)"
            ],
            "Evaluation": [
                0.003,
                1.0,
                0.001,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 1.3",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- 1.3"
            ]
        },
        "Step 3": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13) || 11 - 12 = -1 (left: -1 13)",
                "5 + 8 = 13 (left: 11 12 13) || 13 / 11 = 1.18181818182 (left: 1.18181818182 12 13)",
                "5 + 8 = 13 (left: 11 12 13)",
                "5 + 8 = 13 (left: 11 12 13) || 12 - 11 = 1 (left: 1 12 13)",
                "5 + 8 = 13 (left: 11 12 13) || 11 + 12 = 23 (left: 13 23)"
            ],
            "Evaluation": [
                0.001,
                40.001,
                40.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 1.1",
                "2 <- 1.1",
                "3 <- 1.3",
                "4 <- 1.3"
            ]
        },
        "Step 4": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13) || 12 - 11 = 1 (left: 1 12 13)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12)",
                "5 + 8 = 13 (left: 11 12 13) || 12 + 13 = 25 (left: 11 25)",
                "5 + 8 = 13 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)",
                "5 + 8 = 13 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.003,
                20.001,
                0.002
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 3.2",
                "2 <- 1.3",
                "3 <- 1.1",
                "4 <- 4.1"
            ]
        },
        "Step 5": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13) || Input:",
                "5 + 8 = 13 (left: 11 12 13) || 12 / 11 = 1.09 (left: 1.09 13)",
                "5 + 8 = 13 (left: 11 12 13) || 13 / 11 = 1.1818181818181819 (left: 1.181818181818181",
                "5 + 8 = 13 (left: 11 12 13) || 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.002,
                2.0,
                60.0
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 3.1",
                "2 <- 1.3",
                "3 <- 5.4",
                "4 <- 4.1"
            ]
        },
        "Step 6": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13) || 12 - 11 = 1 (left: 1 13)",
                "5 + 8 = 13 (left: 11 12 13) || 13 / 11 = 1.18181818182 (left: 1.18181818182 12 13) || ",
                "5 + 8 = 13 (left: 11 12 13) || 11 + 12 = 23 (left: 13)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24) || Answer: (5 + 8) * (11 - 12) = 24",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.002,
                0.001,
                60.0
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 4.1",
                "2 <- 6.4",
                "3 <- 4.1",
                "4 <- 6.4"
            ]
        },
        "Step 7": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13) || 13 / 11 = 1.18181818182 (left: 1.18181818182 12 13) || 1.18181818182 * 12 = 14 (left: 14 13)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 + 12 = 14",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 - 2 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.001,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 4.1",
                "1 <- 4.3",
                "2 <- 6.4",
                "3 <- 3.2",
                "4 <- 4.1"
            ]
        },
        "Step 8": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "5 + 8 = 13 (left: 11 12 13) || 11 * 12 = 132 (left: 13 132) || 13 + 132 = 145 (left: 145)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 + 12 = 14",
                "5 + 8 = 13 (left: 11 12 13) || 13 / 11 = 1.181818181",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 + 12 = 14 (left: 14)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 4.1",
                "1 <- 3.1",
                "2 <- 3.1",
                "3 <- 4.1",
                "4 <- 6.4"
            ]
        },
        "Step 9": {
            "steps": [
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)",
                "5 + 8 = 13 (left: 11 12 13) || 13 / 11 = 1.18181818182 (left: 1.18181818182 12 13) || 1.18181818182 * 12 = 14.181818",
                "5 + 8 = 13 (left: 11 12 13) || 13 / 11 = 1.18181818182 (left: 1.18181818182 12 13) || 12 + 13 = 25 (left: 1.18181818182 25)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 2 * 12 = 24 (left: 24)",
                "5 + 8 = 13 (left: 11 12 13) || 13 - 11 = 2 (left: 2 12) || 12 / 2 = 6 (left: 6)"
            ]
        },
        "Input": "5 8 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "935": {
        "puzzle": "5 6 8 10",
        "Step 0": {
            "steps": [
                "5 + 6 = 11 (left: 8 10 11)",
                "6 - 5 = 1 (left: 1 8 10)",
                "10 - 8 = 2 (left: 5 2 10)",
                "5 + 6 = 11 (left: 8 10 11)",
                "10 - 6 = 4 (left: 4 8 10)"
            ],
            "Evaluation": [
                1.002,
                1.001,
                2.001,
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.3",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "5 / 6 = 0.8333 (",
                "5 + 6 = 11 (left: 8 10 11) || 8 + 10 = 18 (left: 18 11)",
                "6 / 5 = 1.2 (left: 1.2 8 10)",
                "6 + 8 = 14 (left: 5 10 14)",
                "5 * 6 = 30 (left: 8 10 30)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                3.0,
                20.002,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.3",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "5 + 6 = 11 (left: 8 10 11)",
                "6 + 8 = 14 (left: 5 10 14) || 14 - 5 = 9 (left: 9 10 14)",
                "6 + 8 = 14 (left: 5 10 14)",
                "10 - 6 = 4 (left: 4 8 10)",
                "6 / 5 = 1.2 (left: 1.2 8 10) || 8 / 1.2 = 6.66667 (left: "
            ],
            "Evaluation": [
                2.001,
                1.002,
                1.002,
                1.002,
                0.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- 1.3",
                "3 <- 1.3",
                "4 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "5 + 6 = 11 (left: 8 10 11)",
                "6 / 5 = 1.2 (left: 1.2 8 10) || 8 - 1.2 = 6.8 (left: 6.8 10)",
                "6 + 8 = 14 (left: 5 10 14) || 14 - 5 = 9 (left: 9 10)",
                "6 + 8 = 14 (left: 5 10 14) || 14 - 5 = 9 (left: 10 9)",
                "6 - 5 = 1 (left: 1 6 8)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 0.3",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- 1.3"
            ]
        },
        "Step 4": {
            "steps": [
                "6 + 8 = 14 (left: 5 10 14) || 5 * 10 = 50 (left: 50 14)",
                "5 + 6 = 11 (left: 8 10 11) || 8 / 10 = 0.8 (",
                "6 / 5 = 1.2 (left: 1.2 8 10)",
                "6 + 8 = 14 (left: 5 10 14) || 10 - 5 = 5 (left: 5 14)",
                "6 + 8 = 14 (left: 5 10 14) || 10 - 5 = 5 (left: 5 14)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                3.0,
                2.001,
                1.002
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- INIT",
                "2 <- 0.1",
                "3 <- INIT",
                "4 <- 1.3"
            ]
        },
        "Step 5": {
            "steps": [
                "6 / 5 = 1.2 (left: 1.2 8 10) || 8 + 1.2 = 9.2 (left: 9.2 10)",
                "8 - 5 = 3 (left: 3 6 10)",
                "6 - 5 = 1 (left: 1 8 10) || 8 / 1 = 8 (left: 8 10)",
                "10 - 6 = 4 (left: 5 4 8)",
                "6 + 8 = 14 (left: 5 10 14) || 10 - 5 = 5 (left: 5 14 10)"
            ],
            "Evaluation": [
                2.0,
                1.002,
                20.001,
                1.002,
                3.0
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 1.2",
                "2 <- 2.1",
                "3 <- 5.2",
                "4 <- 5.4"
            ]
        },
        "Step 6": {
            "steps": [
                "6 + 8 = 14 (left: 5 10 14) || 14 - 10 = 4 (left: 5 4)",
                "6 / 5 = 1.2 (left: 1.2 8 10) || 1.2 + 8 = 9.2 (left: 9.2 10)",
                "6 + 8 = 14 (left: 5 10 14) || 14 - 5 = 9 (left: 9 10 14) || 14 - 9 = 5 (left: 5 10)",
                "6 - 5 = 1 (left: 1 8 10) || 8 / 1 = 8 (left: 8 10) || 8 + 10 = 18 (left: 18)",
                "6 + 8 = 14 (left: 5 10 14) || 10 - 5 = 5 (left: 5 14 10) || Input: 3 12"
            ],
            "Evaluation": [
                1.001,
                3.0,
                0.002,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 5.4",
                "1 <- 6.1",
                "2 <- 5.4",
                "3 <- 1.3",
                "4 <- 5.2"
            ]
        },
        "Step 7": {
            "steps": [
                "6 + 8 = 14 (left: 5 10 14) || 10 - 5 = 5 (left: 5 14 10) || 14 + 5 = 19 (left: 10 19)",
                "6 / 5 = 1.2 (left: 1.2 8 10) || 1.2 + 8 = 9.2 (left: 9.2 10) || 9.2 * 10 = 92 (left: 92)",
                "6 + 8 = 14 (left: 5 10 14) || 10 - 5 = 5 (left: 5 14 10) || 5 + 14 = 19 (left: 10 19)",
                "6 + 8 = 14 (left: 5 10 14) || 14 / 5 = ",
                "6 - 5 = 1 (left: 1 8 10) || 8 / 1 = 8 (left: 8 10) || 8 + 10 = 18 (left: 18)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                0.003,
                0.0
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 1.3",
                "2 <- 2.0",
                "3 <- 5.2",
                "4 <- 4.2"
            ]
        },
        "Step 8": {
            "steps": [
                "6 + 8 = 14 (left: 5 10 14) || 10 / 5 = 2 (left: 2 14)",
                "6 + 8 = 14 (left: 5 10 14) || 14 - 5 = 9 (left: 9 14)",
                "5 + 6 = 11 (left: 8 10 11) || 10 / 11 = ",
                "6 - 5 = 1 (left: 1 8 10) || 8 / 1 = 8 (left: 8 10) || 4 + 8 = 12 (left: 12 14)",
                "6 / 5 = 1.2 (left: 1.2 8 10) || 8 - 1.2 = 6.8 (left: 6.8 10)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- 6.1",
                "1 <- 1.3",
                "2 <- 5.2",
                "3 <- 5.2",
                "4 <- 0.3"
            ]
        },
        "Step 9": {
            "steps": [
                "6 / 5 = 1.2 (left: 1.2 8 10) || 1.2 + 8 = 9.2 (left: 9.2 10) || 9.2 - 10 = -0.8 (left: -0.8)",
                "6 + 8 = 14 (left: 5 10 14) || 5 * 10 = 50 (left: 14 50)",
                "6 - 5 = 1 (left: 1 8 10) || 8 / 1 = 8 (left: 8 10) || 8 + 10 = 18 (left: 18)",
                "6 - 5 = 1 (left: 1 8 10) || 8 / 1 = 8 (left: 8 10) || 8 + 10 = 18 (left: 18)",
                "5 + 6 = 11 (left: 8 10 11) || 10 / 8 = 1.25 (left: 1.25 11)"
            ]
        },
        "Input": "5 6 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "936": {
        "puzzle": "6 11 12 13",
        "Step 0": {
            "steps": [
                "12 + 13 = 25 (left: 6 11 25)",
                "11 - 6 = 5 (left: 5 12 13)",
                "11 + 12 = 23 (left: 6 13 23)",
                "11 + 12 = 23 (left: 6 13 23)",
                "11 - 6 = 5 (left: 5 12 13)"
            ],
            "Evaluation": [
                2.001,
                1.002,
                3.0,
                1.002,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "6 * 11 = 66 (left: 12 13 66)",
                "6 * 11 = 66 (left: 12 13 66)",
                "6 - 11 = -5 (left: -5 11 12)",
                "13 - 6 = 7 (left: 7 11 ",
                "6 + 11 = 17 (left: 12 13 17)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                3.0,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.4",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "6 + 11 = 17 (left: 12 13 17)",
                "11 - 6 = 5 (left: 5 12 13) || 13 / 5 = ",
                "11 - 6 = 5 (left: 5 12 13)",
                "11 / 6 = 1.83 (left: 1.83 ",
                "6 * 11 = 66 (left: 12 13 66)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                3.0,
                0.0,
                2.001
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- INIT",
                "2 <- 1.1",
                "3 <- 1.2",
                "4 <- 1.1"
            ]
        },
        "Step 3": {
            "steps": [
                "6 - 11 = -5 (left: -5 11 12) || Input: ",
                "12 + 13 = 25 (left: 6 11 25)",
                "6 * 11 = 66 (left: 12 13 66) || 5.5 +",
                "6 - 11 = -5 (left: -5 11 12) || -5 + 11 = 6 (left: 6 12)",
                "6 * 11 = 66 (left: 12 13 66) || 12 * 13 = 156 (left: 156 66)"
            ],
            "Evaluation": [
                0.003,
                3.0,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- 3.3"
            ]
        },
        "Step 4": {
            "steps": [
                "6 * 11 = 66 (left: 12 13 66) || 12 / 13 = 0.923076923 (left: 0.",
                "12 + 6 = 18 (left: 11 13 18)",
                "12 + 13 = 25 (left: 6 11 25)",
                "6 - 11 = -5 (left: -5 11 12) || -5 + 11 = 6 (left: 6 12)",
                "6 - 11 = -5 (left: -5 11 12) || -5 + 11 = 6 (left: 6 12) || 6 * 12 = 72 (left: 72) "
            ],
            "Evaluation": [
                20.0,
                1.002,
                2.001,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 0.2",
                "2 <- 4.0",
                "3 <- 4.0",
                "4 <- 4.2"
            ]
        },
        "Step 5": {
            "steps": [
                "6 + 11 = 17 (left: 12 13 17) || 12 + 13 = 25 (left: 17 25)",
                "11 + 12 = 23 (left: 6 13 23) || 13 - 6 = 7 (left: 7 23)",
                "6 * 11 = 66 (left: 12 13 66) || 12 / 13 = 0.923076923 (left: 0. || There are no possible next steps with the input of 0.",
                "6 * 11 = 66 (left: 12 13 66) || 12 / 13 = 0.923076923 (left: 0. || There are no possible next steps with the input of 0.",
                "12 + 13 = 25 (left: 6 11 25) || 11 - 6 = 5 (left: 5 11 25)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 4.0",
                "2 <- 1.2",
                "3 <- 4.0",
                "4 <- 5.4"
            ]
        },
        "Step 6": {
            "steps": [
                "11 - 6 = 5 (left: 5 12 13) || 13 - 5 = 8 (left: 8 13)",
                "6 * 11 = 66 (left: 12 13 66) || 12 / 13 = 0.923076923 (left: 0. || There are no possible next steps with the input 0.",
                "6 - 11 = -5 (left: -5 11 12) || 11 - (-5) = 16 (left: 16 12)",
                "6 * 11 = 66 (left: 12 13 66) || 12 / 13 = 0.923076923 (left: 0. || There are no possible next steps with 0 as the input.",
                "12 + 13 = 25 (left: 6 11 25) || 11 - 6 = 5 (left: 5 11 25) || 11 -"
            ],
            "Evaluation": [
                1.001,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 4.2",
                "2 <- 4.0",
                "3 <- 4.0",
                "4 <- 4.0"
            ]
        },
        "Step 7": {
            "steps": [
                "12 + 6 = 18 (left: 11 13 18)",
                "12 + 13 = 25 (left: 6 11 25) || 25 / 5 = 5 (left: 6 11 5)",
                "6 * 11 = 66 (left: 12 13 66) || 12 / 13 = 0.923076923 (left: 0. || There are no possible next steps with the input \"0\".",
                "6 * 11 = 66 (left: 12 13 66) || 12 / 13 = 0.923076923 (left: 0. || There are no possible next steps with the input of 0.",
                "6 * 11 = 66 (left: 12 13 66) || 12 / 13 = 0.923076923 (left: 0. || There are no possible next steps with the input 0."
            ],
            "Evaluation": [
                1.002,
                3.0,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 4.0",
                "1 <- 2.0",
                "2 <- 7.1",
                "3 <- 4.1",
                "4 <- INIT"
            ]
        },
        "Step 8": {
            "steps": [
                "6 * 11 = 66 (left: 12 13 66) || 12 / 13 = 0.923076923 (left: 0. || There are no possible next steps with the input 0.",
                "6 + 11 = 17 (left: 12 13 17) || 12 * 13 = 156 (left: 17 156)",
                "12 + 13 = 25 (left: 6 11 25) || 25 / 5 = 5 (left: 6 11 5) || 11 - 6 = 5 (left: 5 5)",
                "12 + 6 = 18 (left: 11 13 18) || 13 / 11 = 1.18181818182 (left: 1.18181818182 18)",
                "11 + 12 = 23 (left: 6 13 23)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                2.0,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 8.4",
                "2 <- 4.0",
                "3 <- 0.2",
                "4 <- 4.0"
            ]
        },
        "Step 9": {
            "steps": [
                "13 - 11 = 2 (left: ",
                "11 + 12 = 23 (left: 6 13 23) || 6 + 13 = 19 (left: 19 23)",
                "6 * 11 = 66 (left: 12 13 66) || 12 / 13 = 0.923076923 (left: 0. || There are no possible next steps as there are no numbers provided after the input \"0\".",
                "11 + 12 = 23 (left: 6 13 23) || 6 * 13 = 78 (left: 78 23)",
                "6 * 11 = 66 (left: 12 13 66) || 12 / 13 = 0.923076923 (left: 0. || There are no possible next steps with the input of 0."
            ]
        },
        "Input": "6 11 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "937": {
        "puzzle": "2 2 8 8",
        "Step 0": {
            "steps": [
                "8 - 2 = 6 (left: 2 8 8)",
                "8 - 2 = 6 (left: 2 6 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)"
            ],
            "Evaluation": [
                2.001,
                1.002,
                22.0,
                41.0,
                21.0
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.2",
                "2 <- 0.3",
                "3 <- 0.3",
                "4 <- 0.2"
            ]
        },
        "Step 1": {
            "steps": [
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32)",
                "2 * 2 = 4 (left: 4 8 8) || 4 + 8 = 12 (left: 8 8 12)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32)",
                "2 * 2 = 4 (left: 4 8 8) || 2 + 4 = 6 (left: 4 4 6)"
            ],
            "Evaluation": [
                60.0,
                2.001,
                41.0,
                40.001,
                3.0
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 1.3",
                "2 <- 1.2",
                "3 <- 0.4",
                "4 <- 1.0"
            ]
        },
        "Step 2": {
            "steps": [
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 32 - 8 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)",
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 8 + 32 = 40 (left: 32)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 2.1",
                "2 <- 1.0",
                "3 <- 2.1",
                "4 <- 1.2"
            ]
        },
        "Step 3": {
            "steps": [
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 8 * 4 = 32 (left: 32)",
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 32 - 8 = 24 (left: 24) || Answer: ((2 * 2) * 8) - 8 = 24",
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 8 * 4 = 32 (left: 32)",
                "2 * 2 = 4 (left: 4 8 8) || 4 * 8 = 32 (left: 8 32) || 32 - 8 = 24 (left: 24) || Answer: ((2 * 2) * 8) - 8 = 24",
                "2 * 2 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8 8) || 8 - 4 = 4 (left: 4 8)"
            ]
        },
        "Input": "2 2 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "938": {
        "puzzle": "2 7 12 13",
        "Step 0": {
            "steps": [
                "2 + 7 = 9 (left: 9 12 13)",
                "2 + 7 = 9 (left: 9 12 13)",
                "13 - 2 = 11 (left: 2 7 ",
                "7 - 2 = 5 (left: 2 5 12)",
                "13 - 12 = 1 (left: 2 7 "
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.001,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "12 + 2 = 14 (left: 7 12 14)",
                "2 + 7 = 9 (left: 9 12 13)",
                "7 + 12 = 19 (left: 2 19 13)",
                "12 - 2 = 10 (left: 2 10 13)",
                "12 - 2 = 10 (left: 10 13 19)"
            ],
            "Evaluation": [
                3.0,
                0.003,
                1.002,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "2 + 12 = 14 (left: 7 13 ",
                "12 + 2 = 14 (left: 7 13 14)",
                "2 * 7 = 14 (left: 12 13 14)",
                "12 + 1 = 13 (left: 2 13 13)",
                "13 - 2 = 11 (left: 7 12 "
            ],
            "Evaluation": [
                2.0,
                1.002,
                2.001,
                0.002,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 2.4",
                "2 <- 2.1",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "2 + 7 = 9 (left: 9 12 13)",
                "13 - 2 = 11 (left: 7 12  || 7 + 12 = 19",
                "12 + 2 = 14 (left: 7 13 14) || 13 - 7 = 6 (left: 6 14)",
                "7 - 2 = 5 (left: 5 12 13)",
                "7 + 5 = 12 (left: 12 12 13)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                0.002,
                3.0,
                20.002
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- INIT",
                "2 <- 0.3",
                "3 <- INIT",
                "4 <- 3.4"
            ]
        },
        "Step 4": {
            "steps": [
                "7 + 5 = 12 (left: 12 12 13) || 12 + 12 = 24 (left: 13 24)",
                "12 + 2 = 14 (left: 7 14 13)",
                "7 - 2 = 5 (left: 2 5 12) || 12 - 5 = 7 (left:",
                "2 + 7 = 9 (left: 9 12 13)",
                "7 + 5 = 12 (left: 12 12 13) || 12 / 12 = 1 (left: 1 13)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                1.002,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 3.4",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 3.3"
            ]
        },
        "Step 5": {
            "steps": [
                "7 + 5 = 12 (left: 12 12 13) || 12 - 12 = 0 (left: 0 13)",
                "7 + 5 = 12 (left: 12 12 13) || 13 + 12 = ",
                "7 + 12 = 19 (left: 2 13 19)",
                "7 - 2 = 5 (left: 5 12 13)",
                "7 - 2 = 5 (left: 5 12 13) || 13 - 5 = 8 (left: 8 13)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                2.001,
                3.0,
                0.0
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 3.4",
                "2 <- 4.1",
                "3 <- INIT",
                "4 <- 3.4"
            ]
        },
        "Step 6": {
            "steps": [
                "7 + 5 = 12 (left: 12 12 13) || 13 + 12 = 25 (left: 25)",
                "7 + 5 = 12 (left: 12 12 13) || 12 * 12 = 144 (left: 144 13)",
                "12 + 2 = 14 (left: 7 14 13) || 13 - 7 = 6 (left: 6 14)",
                "12 + 2 = 14 (left: 7 14 13)",
                "7 + 5 = 12 (left: 12 12 13) || 12 * 12 = 144 (left: 144 13)"
            ],
            "Evaluation": [
                20.001,
                1.002,
                0.003,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 4.1",
                "2 <- 4.2",
                "3 <- 4.1",
                "4 <- 6.0"
            ]
        },
        "Step 7": {
            "steps": [
                "12 - 2 = 10 (left: 10 13 19) || 19 - 13 = 6 (left: 10 6)",
                "12 + 2 = 14 (left: 7 14 13) || 13 + 7 = 20 (left: 20)",
                "7 - 2 = 5 (left: 2 5 12) || 12 - 5 = 7 (left: || 5 / 12 = 0.4166666666666667 (left: 0.4166666666666667)",
                "12 + 2 = 14 (left: 7 14 13) || 7 * 2 = 14 (left: 13 14)",
                "7 + 5 = 12 (left: 12 12 13) || 13 + 12 = 25 (left: 25) || 25 - 8 = 17 (left: 8)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.001,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 3.4",
                "2 <- 4.2",
                "3 <- 3.4",
                "4 <- 3.3"
            ]
        },
        "Step 8": {
            "steps": [
                "7 + 5 = 12 (left: 12 12 13) || 12 / 12 = 1 (left: 1 13)",
                "7 + 5 = 12 (left: 12 12 13) || 12 + 12 = 24 (left: 13 24)",
                "7 - 2 = 5 (left: 2 5 12) || 12 - 5 = 7 (left: || 5 - 2 = 3 (left: 3)",
                "7 + 5 = 12 (left: 12 12 13) || 13 * 12 = ",
                "7 - 2 = 5 (left: 5 12 13) || 5 * 12 = 60 (left: 60 13)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 6.0",
                "1 <- 6.0",
                "2 <- 6.0",
                "3 <- 6.0",
                "4 <- 6.0"
            ]
        },
        "Step 9": {
            "steps": [
                "7 + 5 = 12 (left: 12 12 13) || 13 + 12 = 25 (left: 25) || 25 + 8 = 33 (left: 8)",
                "7 + 5 = 12 (left: 12 12 13) || 13 + 12 = 25 (left: 25) || 25 - 2 = 23 (left: 2)",
                "7 + 5 = 12 (left: 12 12 13) || 13 + 12 = 25 (left: 25) || 25 * 2 = 50 (left: 2)",
                "7 + 5 = 12 (left: 12 12 13) || 13 + 12 = 25 (left: 25) || 25 - 25 = 0 (left: 0 25)",
                "7 + 5 = 12 (left: 12 12 13) || 13 + 12 = 25 (left: 25) || 25 * 2 = 50 (left: 50)"
            ]
        },
        "Input": "2 7 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "939": {
        "puzzle": "2 6 8 12",
        "Step 0": {
            "steps": [
                "12 / 2 = 6 (left: 6 4 12)",
                "8 + 6 = 14 (left: 14 8 12)",
                "2 + 6 = 8 (left: 8 8 12)",
                "2 + 6 = 8 (left: 8 8 12)",
                "6 * 2 = 12 (left: 12 8 12)"
            ],
            "Evaluation": [
                41.0,
                1.002,
                1.002,
                22.0,
                1.002
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.3",
                "2 <- 0.3",
                "3 <- 0.3",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "2 + 6 = 8 (left: 8 8 12) || 8 / 8 = 1 (left: 1 12)",
                "2 + 6 = 8 (left: 8 8 12) || 8 / 8 = 1 (left: 1 12)",
                "2 + 6 = 8 (left: 8 8 12) || 12 - 8 = 4 (left: 4",
                "2 + 6 = 8 (left: 8 8 12) || 12 / 8 = 1.5 (left: 8 1.5)",
                "8 - 2 = 6 (left: 6 8 12)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.002,
                2.0,
                1.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.0",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.0"
            ]
        },
        "Step 2": {
            "steps": [
                "12 + 2 = 14 (left: 6 8 14)",
                "12 / 2 = 6 (left: 6 4 12) || 6 + 4 = 10 (left: 10 12)",
                "12 - 2 = 10 (left: 2 6 10)",
                "12 / 2 = 6 (left: 6 6 ",
                "12 / 2 = 6 (left: 6 4 12) || 12 / 4 = 3 (left: 6 3)"
            ],
            "Evaluation": [
                2.001,
                0.002,
                21.001,
                20.002,
                0.0
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 0.3",
                "2 <- 2.3",
                "3 <- 2.2",
                "4 <- 0.3"
            ]
        },
        "Step 3": {
            "steps": [
                "12 / 2 = 6 (left: 6 6  || 6 + 6 = 12 (left: 12) ",
                "2 + 6 = 8 (left: 8 8 12) || 12 - 8 = 4 (left: 8 4)",
                "12 / 2 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36) ",
                "12 - 2 = 10 (left: 2 6 10) || 2 * 6 = 12 (left: 12 10)",
                "2 + 6 = 8 (left: 8 8 12) || 8 / 8 = 1 (left: 1 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                60.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 0.3",
                "2 <- 0.0",
                "3 <- 3.2",
                "4 <- 2.2"
            ]
        },
        "Step 4": {
            "steps": [
                "12 / 2 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36)  || 36 / 2 = 18",
                "2 + 6 = 8 (left: 8 8 12) || 8 - 8 = 0 (left: 0 12)",
                "12 / 2 = 6 (left: 6 4 12) || 6 + 4 = 10 (left: 10 12)",
                "12 / 2 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36)  || 36 / 2 = 18",
                "12 - 2 = 10 (left: 2 6 10) || 10 - 2 = 8 (left: 6 8)"
            ],
            "Evaluation": [
                0.003,
                20.0,
                1.002,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 3.2",
                "2 <- 2.3",
                "3 <- 0.0",
                "4 <- 3.2"
            ]
        },
        "Step 5": {
            "steps": [
                "12 / 2 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36)  || 36 / 2 = 18",
                "12 / 2 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36)  || 36 * 2 = 72 (left: 72)",
                "12 / 2 = 6 (left: 6 6  || 6 + 6 = 12 (left: 12)",
                "12 / 2 = 6 (left: 6 4 12) || 4 + 6 = 10 (left: 10 12)",
                "12 / 2 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36)  || 36 / 2 = 18"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 2.3",
                "2 <- 3.2",
                "3 <- 2.2",
                "4 <- 3.2"
            ]
        },
        "Step 6": {
            "steps": [
                "12 / 2 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36)  || 36 / 3 = 12",
                "12 / 2 = 6 (left: 6 6  || 6 - 6 = 0 (left: 0)",
                "12 / 2 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36)  || No possible next steps with the input of 36.",
                "12 - 2 = 10 (left: 2 6 10) || 6 / 2 = 3 (left: 3 10)",
                "12 / 2 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36)  || None, as there is only one number provided."
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 3.2",
                "2 <- 0.3",
                "3 <- INIT",
                "4 <- 2.3"
            ]
        },
        "Step 7": {
            "steps": [
                "6 * 2 = 12 (left: 8 12 12)",
                "12 / 2 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36)  || 36 * 2 = 72 (left: 72)",
                "2 + 6 = 8 (left: 8 8 12) || 8 / 8 = 1 (left: 1 12)",
                "6 * 8 = 48 (left: 2 48 12)",
                "12 / 2 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36)"
            ],
            "Evaluation": [
                2.001,
                0.002,
                0.001,
                60.0,
                0.0
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 7.3",
                "2 <- 3.2",
                "3 <- 3.2",
                "4 <- 7.0"
            ]
        },
        "Step 8": {
            "steps": [
                "12 / 2 = 6 (left: 6 6  || 6 - 6 = 0 (left: 0)",
                "6 * 8 = 48 (left: 2 48 12) || 48 / 12 = 4 (left: 2 4)",
                "12 / 2 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36)  || There are no possible next steps as there is only one number provided.",
                "12 / 2 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36)  || 36 / 18 = 2 (left: 2)",
                "6 * 2 = 12 (left: 8 12 12) || 12 - 8 = 4 (left: 4 12)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.003,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 3.2",
                "2 <- 3.2",
                "3 <- 0.3",
                "4 <- 7.3"
            ]
        },
        "Step 9": {
            "steps": [
                "12 / 2 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36)  || 36 / 18 = 2 (left: 2)",
                "12 / 2 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36)  || 36 + 2 = 38",
                "12 / 2 = 6 (left: 6 6  || 6 * 6 = 36 (left: 36)  || No possible next steps as there is only one number.",
                "2 + 6 = 8 (left: 8 8 12) || 8 * 8 = 64 (left: 64 12)",
                "6 * 8 = 48 (left: 2 48 12) || 2 * 48 = 96 (left: 12 96)"
            ]
        },
        "Input": "2 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "940": {
        "puzzle": "3 4 9 13",
        "Step 0": {
            "steps": [
                "13 - 9 = 4 (left: 3 4 13)",
                "3 + 4 = 7 (left: 7 9 13)",
                "3 + 4 = 7 (left: 7 9 13)",
                "3 + 4 = 7 (left: 7 9 13)",
                "3 + 9 = 12 (left: 4 12 13)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                1.002,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "3 * 4 = 12 (left: 12 9 13)",
                "9 + 4 = 13 (left: 3 9 13)",
                "9 + 3 = 12 (left: 4 12 13)",
                "4 / 3 = 1 (left: 1 9 13)",
                "9 + 4 = 13 (left: 3 13 13)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                2.001,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "3 + 9 = 12 (left: 4 12 13) || 13 - 1 = ",
                "9 - 4 = 5 (left: 3 5 13)",
                "9 / 3 = 3 (left: 4 3 ",
                "9 - 4 = 5 (left: 3 5 13)",
                "4 * 3 = 12 (left: 12 9 13)"
            ],
            "Evaluation": [
                0.003,
                20.002,
                0.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 2.1",
                "4 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "9 - 4 = 5 (left: 3 5 13) || 5 - 3 = 2 (left: 2 13)",
                "9 / 3 = 3 (left: 3 4 13)",
                "13 - 9 = 4 (left: 3 4 4)",
                "9 - 4 = 5 (left: 3 5 13) || 13 / 3 = ",
                "3 + 4 = 7 (left: 7 9 13)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                20.001,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 3.2",
                "2 <- 3.2",
                "3 <- 2.1",
                "4 <- 2.1"
            ]
        },
        "Step 4": {
            "steps": [
                "9 + 4 = 13 (left: 3 13 13) || 13 + 3 = 16 (left: 13 16)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4)",
                "9 - 4 = 5 (left: 3 5 13) || 3 + 5 = 8 (left: 8 13)",
                "9 - 4 = 5 (left: 3 5 13) || 3 + 5 = 8 (left: 8 13)"
            ],
            "Evaluation": [
                1.002,
                60.0,
                60.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 4.1",
                "1 <- 4.2",
                "2 <- INIT",
                "3 <- 4.2",
                "4 <- 1.2"
            ]
        },
        "Step 5": {
            "steps": [
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 4 / 1 = 4 (left: 4)",
                "9 + 3 = 12 (left: 4 12 13)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 4 / 1 = 4 (left: 4)",
                "9 + 3 = 12 (left: 4 12 13) || 4 + 12 = 16 (left: 16 13)"
            ],
            "Evaluation": [
                0.001,
                0.001,
                1.002,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 4.2",
                "1 <- 4.2",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 4.1"
            ]
        },
        "Step 6": {
            "steps": [
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 1 * 4 = 4 (left: 4)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "13 - 9 = 4 (left: ",
                "3 + 4 = 7 (left: 7 9 13)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 4 - 1 = 3 (left: 3)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                0.0,
                2.001,
                0.002
            ],
            "Resampling": [
                "0 <- 4.2",
                "1 <- 4.1",
                "2 <- 4.1",
                "3 <- 4.1",
                "4 <- 4.2"
            ]
        },
        "Step 7": {
            "steps": [
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 1 * 4 = 4 (left: 4)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 1 + 4 = 5 (left: 5)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 4 / 1 = 4 (left: 4)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 4 - 1 = 3 (left: 3)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                0.002,
                0.001,
                0.002
            ],
            "Resampling": [
                "0 <- 4.2",
                "1 <- 4.2",
                "2 <- 4.1",
                "3 <- 4.1",
                "4 <- 4.1"
            ]
        },
        "Step 8": {
            "steps": [
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 1 + 4 = 5",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 1 * 4 = 4 (left: 4)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 1 * 4 = 4 (left: 4)"
            ],
            "Evaluation": [
                0.003,
                1.0,
                0.002,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 4.1",
                "1 <- INIT",
                "2 <- 4.1",
                "3 <- 4.2",
                "4 <- 4.2"
            ]
        },
        "Step 9": {
            "steps": [
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 4 - 1 = 3 (left: 3)",
                "3 + 4 = 7 (left: 7 9 13)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 1 * 4 = 4 (left: 4)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 1 + 4 = 5 (left: 5)",
                "13 - 9 = 4 (left: 3 4 4) || 4 - 3 = 1 (left: 1 4) || 1 * 4 = 4 (left: 4)"
            ]
        },
        "Input": "3 4 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "941": {
        "puzzle": "4 5 10 12",
        "Step 0": {
            "steps": [
                "10 - 4 = 6 (left: 6 10 12)",
                "5 + 10 = 15 (left: 4 15 12)",
                "4 * 5 = 20 (left: 20 10 12)",
                "4 * 5 = 20 (left: 20 10 12)",
                "5 * 10 = 50 (left: 4 50 12)"
            ],
            "Evaluation": [
                41.0,
                21.001,
                1.002,
                20.002,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.0",
                "3 <- INIT",
                "4 <- 0.3"
            ]
        },
        "Step 1": {
            "steps": [
                "4 + 5 = 9 (left: 9 10 12)",
                "12 - 10 = 2 (left: 4 5 2)",
                "10 - 4 = 6 (left: 6 10 12) || 6 + 10 = 16 (left: 16 12)",
                "12 - 10 = 2 (left: 4 5 ",
                "4 * 5 = 20 (left: 20 10 12) || 10 * 12 = 120 (left: 20 120)"
            ],
            "Evaluation": [
                3.0,
                1.001,
                1.002,
                0.0,
                20.002
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.3",
                "2 <- 0.3",
                "3 <- 0.0",
                "4 <- 0.1"
            ]
        },
        "Step 2": {
            "steps": [
                "10 - 4 = 6 (left: 6 10 12) || 10 * 12 = 120 (left: 6 120)",
                "4 * 5 = 20 (left: 20 10 12) || 20 + 10 = 30 (left: 12 30)",
                "4 * 5 = 20 (left: 20 10 12) || 20 + 10 = 30 (left: 12 30)",
                "10 - 4 = 6 (left: 6 10 12) || 10 + 12 = 22 (left: 6 22)",
                "5 + 10 = 15 (left: 4 15 12) || 12 - 4 = 8 (left: 8 12)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 0.0",
                "2 <- 1.4",
                "3 <- 0.0",
                "4 <- 0.3"
            ]
        },
        "Step 3": {
            "steps": [
                "4 * 5 = 20 (left: 20 10 12) || 10 * 12 = 120 (left: 20 120) || 120 - 20 = 100 (left: 100)",
                "10 - 4 = 6 (left: 6 10 12) || 10 - 6 = 4 (left: 4 12)",
                "4 * 5 = 20 (left: 20 10 12) || 10 * 12 = 120 (left: 20 120) || 120 - 100 = 20 (left: 20)",
                "10 - 4 = 6 (left: 6 10 12) || 12 / 6 = 2 (left: 6 10)",
                "4 * 5 = 20 (left: 20 10 12) || 10 * 2 = 20 (left: 20 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.0",
                "2 <- 0.0",
                "3 <- 0.0",
                "4 <- 0.0"
            ]
        },
        "Step 4": {
            "steps": [
                "5 + 10 = 15 (left: 4 15 12) || 15 - 12 = 3 (left: 3 12)",
                "10 - 4 = 6 (left: 6 10 12) || 12 / 6 = 2 (left: 10 2)",
                "10 - 4 = 6 (left: 6 10 12) || 10 * 12 = 120 (left: 6 120)",
                "10 - 4 = 6 (left: 6 10 12) || 6 / 10 = 0.6 (left: 0.6 12)",
                "10 - 4 = 6 (left: 6 10 12) || 6 * 12 = 72 (left:"
            ],
            "Evaluation": [
                20.002,
                0.001,
                0.003,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 4.0",
                "2 <- 0.4",
                "3 <- 0.3",
                "4 <- 0.1"
            ]
        },
        "Step 5": {
            "steps": [
                "10 - 4 = 6 (left: 6 10 12) || 10 + 12 = 22 (left: 6 22)",
                "5 + 10 = 15 (left: 4 15 12) || 15 - 12 = 3 (left: 3 12) || 3 * 12 = 36 (left: 36)",
                "5 * 10 = 50 (left: 4 50 12) || 50 / 4 = 12.5 (left: 12 12.5)",
                "4 * 5 = 20 (left: 20 10 12) || 20 - 10 = 10 (left: 10 12)",
                "5 + 10 = 15 (left: 4 15 12) || 15 - 4 = 11 (left: 11 12)"
            ],
            "Evaluation": [
                0.003,
                20.0,
                40.001,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 5.2",
                "1 <- 5.1",
                "2 <- 0.3",
                "3 <- 4.0",
                "4 <- INIT"
            ]
        },
        "Step 6": {
            "steps": [
                "5 * 10 = 50 (left: 4 50 12) || 50 / 4 = 12.5 (left: 12 12.5) || 12 / 12.5 = 0.96 (left: 0.96)",
                "5 + 10 = 15 (left: 4 15 12) || 15 - 12 = 3 (left: 3 12) || 3 * 12 = 36 (left: 36) || 36 / 2 = 18",
                "4 * 5 = 20 (left: 20 10 12) || 10 * 2 = 20 (left: 20 12)",
                "5 + 10 = 15 (left: 4 15 12) || 15 - 12 = 3 (left: 3 12) || 3 * 4 = 12 (left: 12)",
                "10 + 4 = 14 (left: 5 14 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 5.1",
                "1 <- 5.2",
                "2 <- 5.2",
                "3 <- 0.0",
                "4 <- 0.0"
            ]
        },
        "Step 7": {
            "steps": [
                "5 + 10 = 15 (left: 4 15 12) || 15 - 12 = 3 (left: 3 12) || 3 * 12 = 36 (left: 36) || There are no possible next steps with only one number provided.",
                "5 * 10 = 50 (left: 4 50 12) || 50 / 4 = 12.5 (left: 12 12.5) || 12 + 12.5 = 24.5 (left: 24.5)",
                "5 * 10 = 50 (left: 4 50 12) || 50 / 4 = 12.5 (left: 12 12.5) || 12 - 12.5 = -0.5 (left: -0.5)",
                "10 - 4 = 6 (left: 6 10 12) || 10 - 6 = 4 (left: 4 12)",
                "10 - 4 = 6 (left: 6 10 12) || 6 + 10 = 16 (left: 16 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 0.0",
                "2 <- 5.2",
                "3 <- 5.2",
                "4 <- 5.2"
            ]
        },
        "Step 8": {
            "steps": [
                "4 * 5 = 20 (left: 20 10 12) || 10 * 12 = 120 (left: 20 120) || 20 / 120 = 0.1667 (left: 0.1667)",
                "10 - 4 = 6 (left: 6 10 12) || 12 - 6 = 6 (left: 6 12)",
                "5 * 10 = 50 (left: 4 50 12) || 50 / 4 = 12.5 (left: 12 12.5) || 12 / 12.5 = 0.96 (left: 0.96)",
                "5 * 10 = 50 (left: 4 50 12) || 50 / 4 = 12.5 (left: 12 12.5) || 12 + 12.5 = 24.5 (left: 24.5)",
                "5 * 10 = 50 (left: 4 50 12) || 50 / 4 = 12.5 (left: 12 12.5) || 12 / 12.5 = 0.96 (left: 0.96)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                20.002,
                0.002
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 8.3",
                "2 <- 4.0",
                "3 <- 5.2",
                "4 <- 8.3"
            ]
        },
        "Step 9": {
            "steps": [
                "4 + 5 = 9 (left: 9 10 12) || 9 + 10 = 19 (left: 12 19)",
                "5 * 10 = 50 (left: 4 50 12) || 50 / 4 = 12.5 (left: 12 12.5) || 12 + 12.5 = 24.5 (left: 24.5) || There are no possible next steps with the input of 24.5.",
                "5 + 10 = 15 (left: 4 15 12) || 15 - 12 = 3 (left: 3 12) || 3 * 12 = 36 (left: 36)",
                "5 * 10 = 50 (left: 4 50 12) || 50 / 4 = 12.5 (left: 12 12.5) || 12 - 12.5 = -0.5 (left: -0.5)",
                "5 * 10 = 50 (left: 4 50 12) || 50 / 4 = 12.5 (left: 12 12.5) || 12 + 12.5 = 24.5 (left: 24.5) || There are no possible next steps for the input 24.5."
            ]
        },
        "Input": "4 5 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "942": {
        "puzzle": "1 2 7 11",
        "Step 0": {
            "steps": [
                "7 + 2 = 9 (left: 1 9 ",
                "1 + 2 = 3 (left: 3 7 11)",
                "2 * 7 = 14 (left: 1 14 11)",
                "11 - 7 = 4 (left: 1 2 4)",
                "2 * 7 = 14 (left: 1 14 11)"
            ],
            "Evaluation": [
                41.0,
                0.003,
                1.002,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.0",
                "3 <- 0.0",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 2 = 3 (left: 3 7 11)",
                "2 * 7 = 14 (left: 1 14 11)",
                "7 + 2 = 9 (left: 1 9  || 9 / 1 = 9 (left: 9)",
                "7 + 2 = 9 (left: 1 9  || 9 - 1 = 8 (left: 8)",
                "7 + 11 = 18 (left: 1 2 18)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.001,
                0.002,
                40.001
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.0",
                "2 <- 0.0",
                "3 <- 1.4",
                "4 <- 1.4"
            ]
        },
        "Step 2": {
            "steps": [
                "7 + 2 = 9 (left: 1 9  || 9 / 1 = 9 (left: 9)",
                "7 + 2 = 9 (left: 1 9  || 9 - 1 = 8 (left: 8 9)",
                "7 + 2 = 9 (left: 1 9  || 1 * 9 = 9 (left: 9)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9)",
                "7 + 11 = 18 (left: 1 2 18) || 1 + 2 = 3 (left: 3 18)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 2.3",
                "2 <- 1.4",
                "3 <- 2.3",
                "4 <- 0.0"
            ]
        },
        "Step 3": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 1 * 9 = 9 (left: 9)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 9 - 1 = 8 (left: 8 9)",
                "7 + 11 = 18 (left: 1 2 18) || 18 - 1 = 17 (left:",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 9 - 1 = 8 (left: 8)",
                "7 + 2 = 9 (left: 1 9  || 1 + 9 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.002,
                0.002,
                20.001,
                0.001,
                0.002
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 2.3",
                "2 <- 0.0",
                "3 <- 2.3",
                "4 <- 0.0"
            ]
        },
        "Step 4": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18) || 18 - 1 = 17 (left: || 18 * 1 = 18 (left: 1 17 18)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 1 * 9 = 9 (left: 9)",
                "7 + 2 = 9 (left: 1 9  || 9 * 1 = 9 (left: 9 9)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 9 / 1 = 9 (left: 9)",
                "7 + 2 = 9 (left: 1 9  || 9 - 1 = 8 (left: 8)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.002,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 2.3",
                "2 <- 2.3",
                "3 <- 0.0",
                "4 <- 2.3"
            ]
        },
        "Step 5": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 1 + 9 = 10 (left: 10)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 9 / 1 = 9 (left: 9)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 9 - 1 = 8 (left: 8)",
                "7 + 2 = 9 (left: 1 9  || 1 * 9 = 9 (left: 9)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 1 * 9 = 9 (left: 9)"
            ],
            "Evaluation": [
                0.001,
                0.0,
                0.003,
                0.003,
                0.0
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 2.3",
                "2 <- 2.3",
                "3 <- 1.4",
                "4 <- 2.3"
            ]
        },
        "Step 6": {
            "steps": [
                "7 + 2 = 9 (left: 1 9  || 1 * 9 = 9 (left: 9)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 9 / 1 = 9 (left: 9)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 1 + 9 = 10 (left: 10)",
                "7 + 11 = 18 (left: 1 2 18) || 18 - 1 = 17 (left: 1 17)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 9 - 1 = 8 (left: 8)"
            ],
            "Evaluation": [
                0.002,
                0.0,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 2.3",
                "2 <- 1.4",
                "3 <- 1.4",
                "4 <- 2.3"
            ]
        },
        "Step 7": {
            "steps": [
                "7 + 2 = 9 (left: 1 9  || 1 + 9 = 10 (left: 10)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 9 / 1 = 9 (left: 9)",
                "7 + 11 = 18 (left: 1 2 18) || 1 + 2 = 3 (left: 3 18)",
                "7 + 11 = 18 (left: 1 2 18) || 1 * 18 = 18 (left: 2 18)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 9 / 1 = 9 (left: 9)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 0.0",
                "2 <- 3.2",
                "3 <- 2.3",
                "4 <- 0.0"
            ]
        },
        "Step 8": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18) || 2 * 18 = 36 (left: 1 36)",
                "7 + 2 = 9 (left: 1 9  || 9 - 1 = 8 (left: 8)",
                "7 + 11 = 18 (left: 1 2 18) || 18 - 1 = 17 (left: || 18 - 1 = 17 (left: 17)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 9 / 1 = 9 (left: 9)",
                "7 + 2 = 9 (left: 1 9  || 9 - 1 = 8 (left: 8)"
            ],
            "Evaluation": [
                60.0,
                0.002,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 8.0",
                "1 <- 2.3",
                "2 <- 2.3",
                "3 <- 8.0",
                "4 <- 0.0"
            ]
        },
        "Step 9": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18) || 2 * 18 = 36 (left: 1 36) || 36 / 1 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 1 * 9 = 9 (left: 9)",
                "7 + 11 = 18 (left: 1 2 18) || 18 / 2 = 9 (left: 1 9) || 9 - 1 = 8 (left: 8)",
                "7 + 11 = 18 (left: 1 2 18) || 2 * 18 = 36 (left: 1 36) || 36 - 1 = 35 (left: 35)",
                "7 + 2 = 9 (left: 1 9  || 9 - 1 = 8 (left: 8)"
            ]
        },
        "Input": "1 2 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "943": {
        "puzzle": "4 5 6 8",
        "Step 0": {
            "steps": [
                "6 - 4 = 2 (left: 2 5 8)",
                "4 + 5 = 9 (left: 6 8 9)",
                "4 + 5 = 9 (left: 6 8 9)",
                "6 * 8 = 48 (left: 4 5 ",
                "4 / 5 = 0.8 (left: 0.8 6 8)"
            ],
            "Evaluation": [
                2.0,
                1.002,
                3.0,
                0.001,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "5 + 6 = 11 (left: 4 8 11)",
                "6 * 8 = 48 (left: 4 5 ",
                "4 + 5 = 9 (left: 6 8 9)",
                "6 + 8 = 14 (left: 4 14 8)",
                "5 * 6 = 30 (left: 4 8 30)"
            ],
            "Evaluation": [
                2.001,
                1.0,
                2.001,
                21.001,
                2.0
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "5 * 6 = 30 (left: 4 8 30) || 4 * 8 = 32 (left: 8 30 32)",
                "4 + 5 = 9 (left: 6 8 9)",
                "6 + 8 = 14 (left: 4 5 14)",
                "6 + 8 = 14 (left: 4 14 8) || 4 * 14 = 56 (left: 56 8)",
                "6 + 8 = 14 (left: 4 14 8) || 14 / 4 = 3.5 (left: 3.5 8)"
            ],
            "Evaluation": [
                3.0,
                3.0,
                20.002,
                1.001,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 1.3",
                "2 <- 1.0",
                "3 <- 1.3",
                "4 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "4 + 5 = 9 (left: 6 8 9) || 6 * 8 = 48 (left: 48 9)",
                "6 + 8 = 14 (left: 4 14 8) || 14 / 4 = 3.5 (left: 3.5 8)",
                "5 + 6 = 11 (left: 4 8 11) || 4 + 8 = 12 (left: 11 12)",
                "6 + 8 = 14 (left: 4 14 8) || 4 * 14 = 56 (left: 8 56)",
                "6 + 8 = 14 (left: 4 5 14)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.002,
                41.0,
                0.003
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- INIT",
                "2 <- 3.3",
                "3 <- 2.1",
                "4 <- 3.3"
            ]
        },
        "Step 4": {
            "steps": [
                "6 + 8 = 14 (left: 4 14 8) || 4 * 14 = 56 (left: 8 56) || 8 * 7 = 56 (left: 56)",
                "6 + 8 = 14 (left: 4 5 14)",
                "6 + 8 = 14 (left: 4 14 8) || 4 * 14 = 56 (left: 8 56) || 8 * 56 = 448 (left: 448)",
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8)",
                "6 + 8 = 14 (left: 4 14 8) || 4 * 14 = 56 (left: 8 56) || 8 * 7 = 56 (left: 56)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                60.0,
                0.002
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 4.3",
                "2 <- 3.3",
                "3 <- INIT",
                "4 <- 4.3"
            ]
        },
        "Step 5": {
            "steps": [
                "6 + 8 = 14 (left: 4 5 14) || 4 + 5 = 9 (left: 9 14)",
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 10 - 5 = 5 (left: 5)",
                "6 + 8 = 14 (left: 4 14 8) || 4 * 14 = 56 (left: 8 56) || 56 / 8 = 7 (left: 7)",
                "4 * 5 = 20 (left: 6 8 20)",
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 8 / 3 = 2.66667 (left: 2.66667)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                0.002,
                2.001,
                0.002
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 4.3",
                "2 <- 4.3",
                "3 <- 3.3",
                "4 <- 2.2"
            ]
        },
        "Step 6": {
            "steps": [
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "6 + 8 = 14 (left: 4 14 8) || 4 * 14 = 56 (left: 8 56) || 8 * 7 = 56 (left: 56)",
                "6 + 8 = 14 (left: 4 5 14) || 4 / 5 = 0.8 (left: 0"
            ],
            "Evaluation": [
                60.0,
                0.003,
                0.002,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 4.3",
                "1 <- 4.3",
                "2 <- 6.0",
                "3 <- 4.3",
                "4 <- 4.3"
            ]
        },
        "Step 7": {
            "steps": [
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (4 + 5) * (6 - 8) = 24",
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5 8)",
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 7.4",
                "1 <- 6.0",
                "2 <- 2.0",
                "3 <- 6.0",
                "4 <- 6.0"
            ]
        },
        "Step 8": {
            "steps": [
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 3 * 8 = 24 (left: 8 24)",
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (4 + 5) * (6 - 8) = 24",
                "5 * 6 = 30 (left: 4 8 30) || 4 * 8 = 32 (left: 8 30 32) || 32 + 8 = 40 (left: 30 40)",
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (4 + 5) * (6 - 8) = 24",
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (4 + 5) * (6 - 8) = 24"
            ],
            "Evaluation": [
                21.001,
                21.001,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 7.4",
                "1 <- 8.1",
                "2 <- 8.3",
                "3 <- 8.3",
                "4 <- 8.3"
            ]
        },
        "Step 9": {
            "steps": [
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 8 / 3 = 2.6666666666666665 (left: 2.666",
                "5 * 6 = 30 (left: 4 8 30) || 4 * 8 = 32 (left: 8 30 32) || 32 + 8 = 40 (left: 30 40) || 40 / 30 = 1.3333 (left: 1.3333)",
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "4 + 5 = 9 (left: 6 8 9) || 9 - 6 = 3 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67 8)"
            ]
        },
        "Input": "4 5 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "944": {
        "puzzle": "6 10 12 13",
        "Step 0": {
            "steps": [
                "6 * 10 = 60 (left: 12 60 13)",
                "12 + 6 = 18 (left: 10 13 18)",
                "6 + 10 = 16 (left: 12 13 16)",
                "10 * 12 = 120 (left: 6 120 13)",
                "6 + 10 = 16 (left: 12 13 16)"
            ],
            "Evaluation": [
                3.0,
                1.002,
                2.0,
                2.001,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.3",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "12 + 13 = 25 (left: 6 10 25)",
                "12 + 1 = 13 (left: 6 10 13)",
                "10 * 12 = 120 (left: 6 120 13) || 120 - 6 = 114 (left: 114 13)",
                "6 + 10 = 16 (left: 12 16 13)",
                "6 + 10 = 16 (left: 12 16 13)"
            ],
            "Evaluation": [
                1.002,
                1.002,
                0.003,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 0.3"
            ]
        },
        "Step 2": {
            "steps": [
                "6 + 10 = 16 (left: 12 16 13) || 16 - 12 = 4 (left: 4 13)",
                "10 + 12 = 22 (left: 6 22 13)",
                "12 + 13 = 25 (left: 6 10 25)",
                "12 * 10 = 120 (left: 13 13 ",
                "10 * 12 = 120 (left: 6 120 13) || 6 * 20 = 120 (left: 120 13)"
            ],
            "Evaluation": [
                0.003,
                22.0,
                2.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- INIT",
                "2 <- 2.1",
                "3 <- INIT",
                "4 <- 2.2"
            ]
        },
        "Step 3": {
            "steps": [
                "10 + 12 = 22 (left: 6 22 13) || 6 - 22 = -16 (left: -16 13)",
                "6 * 10 = 60 (left: 12 60 13)",
                "10 + 12 = 22 (left: 6 22 13) || 13 + 6 = 19 (left: 19 13)",
                "6 + 10 = 16 (left: 12 16 13)",
                "12 + 13 = 25 (left: 6 10 25) || 25 - 6 = 19 (left: 6 19)"
            ],
            "Evaluation": [
                0.003,
                3.0,
                0.003,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 1.1",
                "2 <- 3.1",
                "3 <- 2.1",
                "4 <- 2.1"
            ]
        },
        "Step 4": {
            "steps": [
                "6 + 10 = 16 (left: 12 13 16) || 16 / 13 = 1.23 (",
                "12 + 1 = 13 (left: 6 10 13) || 13 - 10 = 3 (left: 6 3)",
                "6 * 10 = 60 (left: 12 60 13) || 60 / 12 = 5 (left: 5 13)",
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 13 132)",
                "10 + 12 = 22 (left: 6 22 13) || 22 - 6 = 16 (left: 16 13)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.002,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.3",
                "3 <- 0.3",
                "4 <- 2.1"
            ]
        },
        "Step 5": {
            "steps": [
                "13 + 6 = 19 (left: 10 12 ",
                "6 * 10 = 60 (left: 12 60 13)",
                "10 * 12 = 120 (left: 6 120 13) || 20 / 6 = 3.33 (",
                "10 * 12 = 120 (left: 6 120 13) || 13 + 6 = 19 (left: 6 19)",
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 13 132)"
            ],
            "Evaluation": [
                0.002,
                2.0,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 0.2",
                "2 <- 1.3",
                "3 <- 1.1",
                "4 <- 2.2"
            ]
        },
        "Step 6": {
            "steps": [
                "6 * 10 = 60 (left: 12 60 13) || 60 / 12 = 5 (left: 5 13)",
                "6 + 10 = 16 (left: 12 13 16) || 12 + 13 = 25 (left: 16)",
                "6 + 10 = 16 (left: 12 16 13) || 13 - 12 = 1 (left: 1 16)",
                "12 + 1 = 13 (left: 6 10 13) || 6 + 10 = 16 (left: 13 16)",
                "12 + 13 = 25 (left: 6 10 25) || 25 / 6 \u2248 4.17 (left: 4.17 10)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                0.002,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 0.0",
                "2 <- 2.1",
                "3 <- 3.1",
                "4 <- 2.1"
            ]
        },
        "Step 7": {
            "steps": [
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 13 132)",
                "6 * 10 = 60 (left: 12 60 13) || 60 - 12 = 48 (left: 48 13)",
                "10 + 12 = 22 (left: 6 22 13) || 13 + 6 = 19 (left: 19 13)",
                "6 * 10 = 60 (left: 12 60 13) || 60 / 12 = 5 (left: 5 13)",
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 13 132)"
            ],
            "Evaluation": [
                20.001,
                0.003,
                0.003,
                1.002,
                0.002
            ],
            "Resampling": [
                "0 <- 7.0",
                "1 <- 2.1",
                "2 <- 7.0",
                "3 <- 0.2",
                "4 <- 7.0"
            ]
        },
        "Step 8": {
            "steps": [
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 13 132) || 132 - 13 = 119 (left: 119)",
                "10 + 12 = 22 (left: 6 22 13) || 6 / 22 = ",
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 13 132) || 13 * 132 = 1716 (left: 1716)",
                "6 + 10 = 16 (left: 12 13 16) || Possible next steps:",
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 13 132) || 13 + 132 = 145 (left: 145)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 1.3",
                "2 <- 7.0",
                "3 <- 3.3",
                "4 <- 7.0"
            ]
        },
        "Step 9": {
            "steps": [
                "6 * 10 = 60 (left: 12 60 13) || 60 - 12 = 48 (left: 48 13)",
                "6 + 10 = 16 (left: 12 16 13) || 13 - 12 = 1 (left: 1 13)",
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 13 132) || 13 + 132 = 145 (left: 145)",
                "6 + 10 = 16 (left: 12 16 13) || 16 / 12 = 1.33 (left: 1.33 13)",
                "10 + 12 = 22 (left: 6 22 13) || 6 * 22 = 132 (left: 13 132) || 13 * 132 = 1716 (left: 1716)"
            ]
        },
        "Input": "6 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "945": {
        "puzzle": "1 3 9 9",
        "Step 0": {
            "steps": [
                "9 - 3 = 6 (left: 1 6 9)",
                "1 + 3 = 4 (left: 4 9 9)",
                "1 * 3 = 3 (left: 3 9 9)",
                "1 + 3 = 4 (left: 4 9 9)",
                "9 - 1 = 8 (left: 3 8 9)"
            ],
            "Evaluation": [
                2.001,
                1.002,
                20.002,
                2.001,
                60.0
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.4",
                "2 <- 0.4",
                "3 <- 0.4",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "9 - 1 = 8 (left: 3 8 9) || 3 * 8 = 24 (left: 8 9 24)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66667 (left: 2.66667 9)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66666666667 (left: 2.66666666667 9)",
                "9 - 1 = 8 (left: 3 8 9) || 9 + 3 = 12 (left: 8 12 9)",
                "3 * 9 = 27 (left: 1 9 27)"
            ],
            "Evaluation": [
                2.0,
                60.0,
                60.0,
                3.0,
                20.002
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.1",
                "2 <- 0.2",
                "3 <- 0.2",
                "4 <- 0.4"
            ]
        },
        "Step 2": {
            "steps": [
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66666666667 (left: 2.66666666667 9) || 2.66666666667 * 9 = 24 (left: 9 24)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66667 (left: 2.66667 9) || 2.66667 + 9 = 11.66667 (left: 11.66667)",
                "1 * 3 = 3 (left: 3 9 9) || 9 - 3 = 6 (left: 6 9)",
                "1 * 3 = 3 (left: 3 9 9) || 3 + 9 = 12 (left: 9 12)",
                "9 - 1 = 8 (left: 3 8 9) || 3 * 8 = 24 (left: 9 24)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 1.2",
                "2 <- 0.3",
                "3 <- 0.4",
                "4 <- 0.4"
            ]
        },
        "Step 3": {
            "steps": [
                "9 - 1 = 8 (left: 3 8 9) || 3 + 8 = 11 (left: 11 9)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66666666667 (left: 2.66666666667 9) || 9 - 2.66666666667 = 6.33333333333 (left: 6.33333333333 9)",
                "1 + 3 = 4 (left: 4 9 9) || 9 / 4 = 2.25 (left: 2.25 9 9)",
                "9 - 1 = 8 (left: 3 8 9) || 9 / 3 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 3 8 9) || 3 * 8 = 24 (left: 8 9 24)"
            ],
            "Evaluation": [
                0.002,
                2.0,
                2.001,
                60.0,
                2.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 3.3",
                "2 <- 1.1",
                "3 <- 1.2",
                "4 <- 0.4"
            ]
        },
        "Step 4": {
            "steps": [
                "9 / 3 = 3 (left: 1 3 9)",
                "9 - 1 = 8 (left: 3 8 9) || 9 / 3 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66667 (left: 2.66667 9) || 9 / 2.66667 = 3.375 (left: 3.375)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66666666667 (left: 2.66666666667 9) || 9 - 2.66666666667 = 6.33333333333 (left: 6.33333333333)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.67 (left: 2.67 9 8)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.001,
                0.001,
                41.0
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- 1.2",
                "2 <- 0.2",
                "3 <- 1.2",
                "4 <- 1.2"
            ]
        },
        "Step 5": {
            "steps": [
                "1 * 3 = 3 (left: 3 9 9) || 9 - 3 = 6 (left: 6 9)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66666666667 (left: 2.66666666667 9) || 9 - 2.66666666667 = 6.33333333333 (left: 6.33333333333)",
                "1 * 3 = 3 (left: 3 9 9) || Input: 4 16 16",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66666666667 (left: 2.66666666667 9) || Input: 3",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66666666667 (left: 2.66666666667 9) || 9 - 2.66666666667 = 6.33333333333 (left: 6.33333333333)"
            ],
            "Evaluation": [
                0.003,
                20.0,
                0.003,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 4.4",
                "2 <- 5.1",
                "3 <- 0.4",
                "4 <- 3.3"
            ]
        },
        "Step 6": {
            "steps": [
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66667 (left: 2.66667 9) || 9 / 2.66667 = 3.375 (left: 3.375)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.67 (left: 2.67 9 8) || 2.67 + 9 = 11.67 (left: 8 11.67)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66666666667 (left: 2.66666666667 9) || 9 - 2.66666666667 = 6.33333333333 (left: 6.33333333333) || There are no possible next steps as there is only one number provided.",
                "9 - 1 = 8 (left: 3 8 9) || 8 - 3 = 5 (left: 5 9)",
                "9 - 1 = 8 (left: 3 8 9) || 9 / 3 = 3 (left: 3 8) || 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 8)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                0.003,
                0.003,
                2.001
            ],
            "Resampling": [
                "0 <- 3.4",
                "1 <- 3.3",
                "2 <- 1.2",
                "3 <- 4.4",
                "4 <- 1.4"
            ]
        },
        "Step 7": {
            "steps": [
                "9 - 1 = 8 (left: 3 8 9) || 3 * 8 = 24 (left: 8 9 24) || 24 - 9 = 15 (left: 8 15)",
                "9 - 1 = 8 (left: 3 8 9) || 9 / 3 = 3 (left: 3 8) || 8 / 3 = 2.67 (left: 2.67)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66666666667 (left: 2.66666666667 9) || 9 / 2.66666666667 = 3.375 (left: 3.375)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.67 (left: 2.67 9 8) || 8 + 2.67 = 10.67 (left: 10",
                "3 * 9 = 27 (left: 1 9 27) || 1 * 9 = 9 (left: 9 27)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                0.002,
                1.002
            ],
            "Resampling": [
                "0 <- 4.4",
                "1 <- 3.3",
                "2 <- 5.1",
                "3 <- 4.4",
                "4 <- 1.1"
            ]
        },
        "Step 8": {
            "steps": [
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.67 (left: 2.67 9 8) || 9 / 2.67 = 3.36 (left: 3.36 8)",
                "9 - 1 = 8 (left: 3 8 9) || 9 / 3 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66666666667 (left: 2.66666666667 9) || 9 - 2.66666666667 = 6.33333333333 (left: 6.33333333333) || There are no possible next steps with the input of 6.33333333333.",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.67 (left: 2.67 9 8) || 9 - 2.67 = 6.33 (left: 6.33 8)",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66667 (left: 2.66667 9) || 2.66667 * 9 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                3.0,
                60.0
            ],
            "Resampling": [
                "0 <- 5.1",
                "1 <- 8.4",
                "2 <- 8.4",
                "3 <- 8.4",
                "4 <- 8.4"
            ]
        },
        "Step 9": {
            "steps": [
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66666666667 (left: 2.66666666667 9) || 9 - 2.66666666667 = 6.33333333333 (left: 6.33333333333) || 6.33333333333 - 2 = 4.33333333333",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66667 (left: 2.66667 9) || 2.66667 * 9 = 24 (left: 24) || Answer: (9 - 1) / (3 / 9) = 24",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66667 (left: 2.66667 9) || 2.66667 * 9 = 24 (left: 24) || Answer: (9 - 1) / (3 / 9) = 24",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66667 (left: 2.66667 9) || 2.66667 * 9 = 24 (left: 24) || Answer: (9 - 1) / 3 * 9 = 24",
                "9 - 1 = 8 (left: 3 8 9) || 8 / 3 = 2.66667 (left: 2.66667 9) || 2.66667 * 9 = 24 (left: 24) || Answer: (9 - 1) / 3 * 9 = 24"
            ]
        },
        "Input": "1 3 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "946": {
        "puzzle": "1 4 4 11",
        "Step 0": {
            "steps": [
                "1 + 4 = 5 (left: 4 5 11)",
                "11 - 4 = 7 (left: 1 4 ",
                "1 + 4 = 5 (left: 4 5 11)",
                "4 * 1 = 4 (left: 4 11 4)",
                "1 + 4 = 5 (left: 4 5 11)"
            ],
            "Evaluation": [
                2.001,
                0.003,
                2.001,
                3.0,
                2.001
            ],
            "Resampling": [
                "0 <- 0.2",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 0.2",
                "4 <- 0.3"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 4 = 5 (left: 4 5 11) || 11 - 4 = 7 (left: 5 7)",
                "11 - 4 = 7 (left: 4 7 ",
                "11 - 4 = 7 (left: 1 4 ",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55)",
                "4 * 1 = 4 (left: 4 11 4) || 11 - 4 = 7 (left: 7 4)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 1.3",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 55 / 4 = 13.75 (left: 13.75)",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 55 - 4 = 51 (left: 51)",
                "4 * 1 = 4 (left: 4 7 11)",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 4 + 55 = 59 (left: 59)",
                "1 + 4 = 5 (left: 4 5 11)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                2.001,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 1.3",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- 0.3"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 4 - 55 = -51 (left: -51)",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 4 + 55 = 59 (left: 59)",
                "11 - 4 = 7 (left: 1 4 ",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 4 + 55 = 59 (left: 59)",
                "4 * 1 = 4 (left: 4 11 4) || 4 - 11 = -7 (left: -7 4)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                20.0,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 3.2",
                "2 <- 1.3",
                "3 <- 3.2",
                "4 <- 0.4"
            ]
        },
        "Step 4": {
            "steps": [
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 4 + 55 = 59 (left: 59)",
                "11 - 4 = 7 (left: 1 4  || 1 + 4 = 5 (left: 5)",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 55 / 4 = 13.75 (left: 13.75)",
                "11 - 4 = 7 (left: 1 4  || 1 * 4 = 4 (left: 4)",
                "1 + 4 = 5 (left: 4 5 11) || 4 + 5 = 9 (left: 9 11)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                0.002,
                0.001,
                2.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.3",
                "2 <- 3.2",
                "3 <- 1.3",
                "4 <- 2.2"
            ]
        },
        "Step 5": {
            "steps": [
                "4 - 1 = 3 (left: 3 4 11)",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 4 + 55 = 59 (left: 59)",
                "11 - 4 = 7 (left: 1 4  || 4 - 1 = 3 (left: 3)",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 4 / 55 = 0.07272727272727272 (left: 0.07272727272727272)",
                "4 * 1 = 4 (left: 4 7 11) || 7 - 4 = 3 (left: 3 11)"
            ],
            "Evaluation": [
                3.0,
                0.003,
                0.001,
                0.002,
                1.002
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 0.3",
                "2 <- 3.2",
                "3 <- 1.3",
                "4 <- INIT"
            ]
        },
        "Step 6": {
            "steps": [
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 4 + 55 = 59 (left: 59)",
                "4 * 1 = 4 (left: 4 11 4) || 4 + 11 = 15 (left: 4 15)",
                "11 - 4 = 7 (left: 1 4  || 4 - 1 = 3 (left: 3)",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 4 * 55 = 220 (left: 220)",
                "11 - 1 = 10 (left: 4 4 10)"
            ],
            "Evaluation": [
                0.002,
                0.001,
                20.001,
                0.003,
                40.0
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 6.4",
                "2 <- 6.4",
                "3 <- 3.2",
                "4 <- 1.3"
            ]
        },
        "Step 7": {
            "steps": [
                "11 - 4 = 7 (left: 1 4  || 1 + 4 = 5 (left: 5)",
                "11 - 1 = 10 (left: 4 4 10) || 10 + 4 = 14 (left: 4 14)",
                "11 - 1 = 10 (left: 4 4 10) || Input: 3 5",
                "11 - 4 = 7 (left: 1 4  || 4 / 1 = 4 (left: 4)",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 55 - 4 = 51 (left: 51)"
            ],
            "Evaluation": [
                0.003,
                1.002,
                0.003,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 3.2",
                "2 <- 6.4",
                "3 <- 1.3",
                "4 <- 6.2"
            ]
        },
        "Step 8": {
            "steps": [
                "11 - 4 = 7 (left: 1 4  || 4 - 1 = 3 (left: 3)",
                "11 - 4 = 7 (left: 1 4  || 1 + 4 = 5 (left: 5)",
                "11 - 1 = 10 (left: 4 4 10) || 10 / 4 = 2 (left: 4 2)",
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 4 * 55 = 220 (left: 220)",
                "11 - 4 = 7 (left: 1 4  || 4 - 1 = 3 (left: 3) || 3 * 8 = 24 (left: 8 24)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.003,
                0.003,
                40.001
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 8.4",
                "2 <- 5.0",
                "3 <- 6.2",
                "4 <- 6.2"
            ]
        },
        "Step 9": {
            "steps": [
                "1 + 4 = 5 (left: 4 5 11) || 5 * 11 = 55 (left: 4 55) || 55 / 4 = 13.75 (left: 13.75)",
                "11 - 4 = 7 (left: 1 4  || 4 - 1 = 3 (left: 3) || 3 * 8 = 24 (left: 8 24) || 8 * 24 = 192 (left: 192)",
                "4 - 1 = 3 (left: 3 4 11) || 3 + 4 = 7 (left: 7 11)",
                "11 - 4 = 7 (left: 1 4  || 4 - 1 = 3 (left: 3) || 3 + 2 = 5 (left: 5)",
                "11 - 4 = 7 (left: 1 4  || 4 - 1 = 3 (left: 3) || There are no possible next steps with the input of 3."
            ]
        },
        "Input": "1 4 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "947": {
        "puzzle": "2 3 9 10",
        "Step 0": {
            "steps": [
                "2 + 3 = 5 (left: 5 9 10)",
                "9 / 3 = 3 (left: 2 3 ",
                "3 / 9 = 0.3333333333333333 (",
                "9 + 2 = 11 (left: 3 11 10)",
                "2 * 9 = 18 (left: 3 10 18)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                2.001,
                3.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "2 * 9 = 18 (left: 3 18 10)",
                "10 - 2 = 8 (left: 3 9 8)",
                "2 + 3 = 5 (left: 5 9 10)",
                "3 * 9 = 27 (left: 2 27 10)",
                "2 + 3 = 5 (left: 5 9 10)"
            ],
            "Evaluation": [
                2.001,
                3.0,
                41.0,
                3.0,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "9 + 2 = 11 (left: 3 9 11)",
                "10 - 2 = 8 (left: 2 3 8)",
                "2 + 3 = 5 (left: 5 9 10) || 9 + 10 = 19 (left: 5 19)",
                "2 + 3 = 5 (left: 5 9 10) || 9 - 5 = 4 (left: 4 10)",
                "9 + 10 = 19 (left: 2 3 19)"
            ],
            "Evaluation": [
                1.002,
                2.001,
                60.0,
                40.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 2.2",
                "3 <- 2.3",
                "4 <- 1.2"
            ]
        },
        "Step 3": {
            "steps": [
                "2 + 3 = 5 (left: 5 9 10) || 9 - 10 = -1 (left:",
                "2 + 3 = 5 (left: 5 9 10) || 10 - 5 = 5 (left: 5 10)",
                "2 + 3 = 5 (left: 5 9 10) || 9 + 10 = 19 (left: 5 19) || Input: 10 2 6",
                "2 + 3 = 5 (left: 5 9 10) || 9 - 5 = 4 (left: 4 10) || 10 - 4 = 6 (left: 6 10)",
                "2 + 3 = 5 (left: 5 9 10) || 10 / 5 = 2"
            ],
            "Evaluation": [
                1.0,
                0.003,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 2.3",
                "2 <- 1.2",
                "3 <- 2.3",
                "4 <- 1.2"
            ]
        },
        "Step 4": {
            "steps": [
                "2 + 3 = 5 (left: 5 9 10) || 9 + 10 = 19 (left: 5 19)",
                "2 + 3 = 5 (left: 5 9 10) || 9 - 5 = 4 (left: 4 10) || Input: 3 9 27",
                "2 + 3 = 5 (left: 5 9 10) || 9 / 5 = 1.8 (",
                "2 + 3 = 5 (left: 5 9 10) || 9 - 5 = 4 (left: 4 10) || 4 + 10 = 14 (left: 14)",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                0.003,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 4.4",
                "2 <- 4.0",
                "3 <- 4.4",
                "4 <- 4.4"
            ]
        },
        "Step 5": {
            "steps": [
                "2 * 9 = 18 (left: 3 10 18) || 18 - 3 = 15 (left: 3 15)",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14) || 10 * 14 = 140 (left: 14 140)",
                "2 + 3 = 5 (left: 5 9 10) || 9 + 10 = 19 (left: 5 19) || 19 / 5 = 3.8 (left: 3.8)",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14) || 10 + 14 = 24 (left: 24)",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14) || 10 + 14 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.001,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 5.4",
                "2 <- 5.3",
                "3 <- 5.3",
                "4 <- 5.4"
            ]
        },
        "Step 6": {
            "steps": [
                "3 * 2 = 6 (left: 6 9 10)",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14) || 10 + 14 = 24 (left: 24) || Answer: ((2 + 3) + 9) + 10 = 24",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14) || 10 + 14 = 24 (left: 24) || Answer: ((2 + 3) + 9) + 10 = 24",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14) || 10 + 14 = 24 (left: 24) || Answer: ((2 + 3) + 9) + 10 = 24",
                "2 + 3 = 5 (left: 5 9 10) || 5 + 9 = 14 (left: 10 14) || 10 + 14 = 24 (left: 24) || Answer: ((2 + 3) + 9) + 10 = 24"
            ]
        },
        "Input": "2 3 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "948": {
        "puzzle": "1 2 3 13",
        "Step 0": {
            "steps": [
                "13 - 3 = 10 (left: 1 2 10)",
                "13 - 3 = 10 (left: 1 2 10)",
                "1 + 2 = 3 (left: 3 3 13)",
                "3 * 2 = 6 (left: 1 6 13)",
                "3 * 2 = 6 (left: 1 6 13)"
            ],
            "Evaluation": [
                1.002,
                3.0,
                1.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 2 = 3 (left: 3 3 13)",
                "13 - 2 = 11 (left: 1 3 11)",
                "13 - 2 = 11 (left: 1 3 ",
                "1 + 2 = 3 (left: 3 3 13)",
                "2 * 3 = 6 (left: 1 6 13)"
            ],
            "Evaluation": [
                3.0,
                1.002,
                0.002,
                2.001,
                2.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 0.1",
                "2 <- INIT",
                "3 <- 1.4",
                "4 <- 0.1"
            ]
        },
        "Step 2": {
            "steps": [
                "13 - 1 = 12 (left: 2 3 12)",
                "13 - 3 = 10 (left: 1 2 10) || 1 + 2 = 3 (left: 3 10)",
                "3 * 2 = 6 (left: 1 6 13)",
                "2 * 3 = 6 (left: 1 6 13) || 1 + 6 = 7 (left: 7 13)",
                "13 - 3 = 10 (left: 1 2 10) || 1 + 2 = 3 (left: 3 10)"
            ],
            "Evaluation": [
                2.001,
                0.003,
                2.0,
                0.0,
                0.001
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 2.0",
                "4 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "13 - 2 = 11 (left: 1 3 11) || 11 - 1 = 10 (left: 3 10)",
                "2 * 3 = 6 (left: 1 6 13)",
                "1 + 2 = 3 (left: 3 3 13)",
                "13 - 1 = 12 (left: 2 3 12) || 3 + 12 = 15 (left: 2 15)",
                "13 - 1 = 12 (left: 2 3 12)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                1.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.0",
                "3 <- INIT",
                "4 <- 0.2"
            ]
        },
        "Step 4": {
            "steps": [
                "13 - 1 = 12 (left: 2 3 12)",
                "13 - 3 = 10 (left: 1 2 10)",
                "1 + 2 = 3 (left: 3 3 13) || 3 + 3 = 6 (left: 6 13)",
                "13 - 3 = 10 (left: 1 2 10)",
                "1 + 2 = 3 (left: 3 3 13) || Input: 4 4 1 6"
            ],
            "Evaluation": [
                2.001,
                2.001,
                0.001,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 4.1",
                "2 <- 1.0",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 5": {
            "steps": [
                "1 + 2 = 3 (left: 3 3 13) || 13 - 3 = 10 (left: 3 10)",
                "13 - 3 = 10 (left: 1 2 10) || 1 + 2 = 3 (left: 3 10)",
                "1 + 2 = 3 (left: 3 3 13) || 3 * 13 = 39 (left: 3 39)",
                "13 - 2 = 11 (left: 1 3 11)",
                "13 - 1 = 12 (left: 2 3 12)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.001,
                3.0,
                1.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 5.3",
                "2 <- 5.4",
                "3 <- 3.2",
                "4 <- 0.1"
            ]
        },
        "Step 6": {
            "steps": [
                "1 + 2 = 3 (left: 3 3 13)",
                "13 - 2 = 11 (left: 1 3 11) || 1 * 3 = 3 (left: 3 11)",
                "13 - 1 = 12 (left: 2 3 12) || 12 / 3 = 4 (left: 2 4)",
                "1 + 2 = 3 (left: 3 3 13) || 3 + 3 = 6 (left: 6 13)",
                "13 - 3 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8)"
            ],
            "Evaluation": [
                21.001,
                0.002,
                0.003,
                0.003,
                40.0
            ],
            "Resampling": [
                "0 <- 6.4",
                "1 <- 4.1",
                "2 <- 6.0",
                "3 <- 6.4",
                "4 <- 6.0"
            ]
        },
        "Step 7": {
            "steps": [
                "13 - 3 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "13 - 3 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8)",
                "1 + 2 = 3 (left: 3 3 13) || 13 - 3 = 10 (left: 3 10)",
                "13 - 3 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "1 + 2 = 3 (left: 3 3 13) || 3 + 3 = 6 (left: 6 13)"
            ],
            "Evaluation": [
                0.003,
                21.001,
                0.002,
                20.001,
                0.003
            ],
            "Resampling": [
                "0 <- 7.1",
                "1 <- 6.4",
                "2 <- 6.4",
                "3 <- 6.4",
                "4 <- 6.0"
            ]
        },
        "Step 8": {
            "steps": [
                "13 - 3 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 8 - 1 = 7 (left: 7)",
                "13 - 3 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 8 / 1 = 8 (left: 8)",
                "13 - 3 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 8 - 1 = 7 (left: 7)",
                "13 - 3 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "1 + 2 = 3 (left: 3 3 13) || 3 * 3 = 9 (left: 9 13)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                0.002,
                0.0,
                0.003
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 7.1",
                "2 <- 5.4",
                "3 <- 7.1",
                "4 <- 7.3"
            ]
        },
        "Step 9": {
            "steps": [
                "13 - 1 = 12 (left: 2 3 12) || 2 + 3 = 5 (left: 5 12)",
                "13 - 3 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 1 + 8 = 9 (left: 9)",
                "13 - 1 = 12 (left: 2 3 12) || 12 - 3 = 9 (left: 2 9)",
                "13 - 3 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "13 - 3 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 1 * 8 = 8 (left: 8) || 8 / 2 = 4 (left: 4)"
            ]
        },
        "Input": "1 2 3 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "949": {
        "puzzle": "1 6 6 6",
        "Step 0": {
            "steps": [
                "6 - 1 = 5 (left: 5 6 6)",
                "6 / 1 = 6 (left: 6 6 6)",
                "1 + 6 = 7 (left: 6 6 7)",
                "6 - 1 = 5 (left: 5 6 6)",
                "6 + 1 = 7 (left: 6 6 7)"
            ],
            "Evaluation": [
                3.0,
                3.0,
                1.002,
                22.0,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.3",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "6 * 1 = 6 (left: 6 6 6)",
                "1 * 6 = 6 (left: 6 6 6)",
                "6 - 1 = 5 (left: 5 6 6) || 6 / 5 = 1.2 (left: 1.2 6)",
                "6 / 1 = 6 (left: 6 6 6)",
                "6 / 1 = 6 (left: 6 6 6)"
            ],
            "Evaluation": [
                1.001,
                1.002,
                0.002,
                3.0,
                2.0
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.1",
                "3 <- 0.3",
                "4 <- 0.1"
            ]
        },
        "Step 2": {
            "steps": [
                "6 / 1 = 6 (left: 6 6 6)",
                "1 * 6 = 6 (left: 6 6 6)",
                "6 / 1 = 6 (left: 6 6 6) || 6 * 6 = 36 (left: 36)",
                "6 - 1 = 5 (left: 5 6 6) || 5 * 6 = 30 (left: 30)",
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6)"
            ],
            "Evaluation": [
                2.001,
                1.001,
                40.0,
                0.002,
                40.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 1.3",
                "2 <- 2.2",
                "3 <- INIT",
                "4 <- 2.2"
            ]
        },
        "Step 3": {
            "steps": [
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 is undefined (left: 0 6)",
                "6 / 1 = 6 (left: 6 6 6) || Possible next steps:",
                "6 / 1 = 6 (left: 6 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "6 - 1 = 5 (left: 5 6 6)",
                "6 / 1 = 6 (left: 6 6 6) || 6 * 6 = 36 (left: 36) || 36 + 2 = 38"
            ],
            "Evaluation": [
                60.0,
                0.003,
                0.003,
                3.0,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 2.4",
                "2 <- 2.2",
                "3 <- 2.0",
                "4 <- 3.0"
            ]
        },
        "Step 4": {
            "steps": [
                "6 - 1 = 5 (left: 5 6 6)",
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || Possible next steps:",
                "6 / 1 = 6 (left: 6 6 6) || 6 * 6 = 36 (left: 36) || None - 36 is the final result.",
                "6 / 1 = 6 (left: 6 6 6) || 6 / 6 = 1 (left: 1 6)",
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 is undefined (left: 0 6) || 6 - 6 = 0 (left: 0)"
            ],
            "Evaluation": [
                22.0,
                0.003,
                0.003,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 3.0",
                "2 <- 0.3",
                "3 <- 4.4",
                "4 <- 4.4"
            ]
        },
        "Step 5": {
            "steps": [
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 is undefined (left: 0 6) || 6 / 0 is undefined",
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 is undefined (left: 0 6) || 0 + 6 = 6 (left: 6)",
                "6 - 1 = 5 (left: 5 6 6) || 5 + 6 = 11 (left: 6 11)",
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 is undefined (left: 0 6) || 6 - 0 = 6 (left: 6)",
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 is undefined (left: 0 6) || 0 + 6 = 6 (left: 6)"
            ],
            "Evaluation": [
                0.003,
                1.001,
                41.0,
                40.001,
                60.0
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 2.2",
                "2 <- 5.2",
                "3 <- 5.2",
                "4 <- 5.4"
            ]
        },
        "Step 6": {
            "steps": [
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 is undefined (left: 0 6) || 3 + 9 = 12 (left: 12 5)",
                "6 / 1 = 6 (left: 6 6 6) || 6 * 6 = 36 (left: 36) || 36 + 2 = 38",
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 0 + 6 = 6 (left: 6)",
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 - 0 = 6 (left: 6)",
                "6 / 1 = 6 (left: 6 6 6) || 6 / 6 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.001,
                0.003,
                0.0
            ],
            "Resampling": [
                "0 <- 3.0",
                "1 <- 5.3",
                "2 <- 5.4",
                "3 <- 3.0",
                "4 <- 3.0"
            ]
        },
        "Step 7": {
            "steps": [
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 is undefined (left: 0 6) || 0 * 6 = 0 (left: 0)",
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 is undefined (left: 0 6) || 0 * 6 = 0 (left: 6)",
                "6 / 1 = 6 (left: 6 6 6) || 6 / 6 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 is undefined (left: 0 6) || 0 * 6 = 0 (left: 6)",
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 is undefined (left: 0 6) || 4 * 10 = 40 (left:"
            ],
            "Evaluation": [
                0.001,
                0.003,
                40.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 5.4",
                "1 <- 7.3",
                "2 <- 5.4",
                "3 <- 7.2",
                "4 <- 4.3"
            ]
        },
        "Step 8": {
            "steps": [
                "6 / 1 = 6 (left: 6 6 6) || 6 / 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "6 / 1 = 6 (left: 6 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "6 / 1 = 6 (left: 6 6 6) || 6 / 6 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "6 / 1 = 6 (left: 6 6 6) || 6 * 6 = 36 (left: 36) || There are no possible next steps with the input 36.",
                "6 / 1 = 6 (left: 6 6 6) || 6 / 6 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)"
            ],
            "Evaluation": [
                0.001,
                0.003,
                0.003,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 2.2",
                "2 <- 7.2",
                "3 <- 7.4",
                "4 <- 2.4"
            ]
        },
        "Step 9": {
            "steps": [
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 6 / 0 = undefined",
                "6 / 1 = 6 (left: 6 6 6) || 6 * 6 = 36 (left: 36) || 36 / 3 = 12 (left: 12)",
                "6 / 1 = 6 (left: 6 6 6) || 6 * 6 = 36 (left: 36) || 36 cannot be broken down further as it is already a single number.",
                "6 / 1 = 6 (left: 6 6 6) || 6 / 6 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "6 / 1 = 6 (left: 6 6 6) || 6 - 6 = 0 (left: 0 6) || 0 + 6 = 6 (left: 6)"
            ]
        },
        "Input": "1 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    }
}