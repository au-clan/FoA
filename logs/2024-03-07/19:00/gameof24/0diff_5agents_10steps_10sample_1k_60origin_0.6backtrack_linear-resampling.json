{
    "0": {
        "puzzle": "1 1 4 6",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6)",
                "6 - 1 = 5 (left: 1 4 5)",
                "4 + 1 = 5 (left: 1 5 6)",
                "6 - 4 = 2 (left: 1 2 6)",
                "6 - 1 = 5 (left: 1 4 5)"
            ],
            "Evaluation": [
                41.0,
                21.0,
                0.002,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.0",
                "2 <- 0.0",
                "3 <- INIT",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "6 - 1 = 5 (left: 1 4 5) || 5 / 1 = 5 (left: 5 5)",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 4 = 1.5 (left: 1 1.5)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 1 = 4 (left: 4 6)",
                "6 / 4 = 1.5 (left: 1 1.5 6)",
                "6 - 1 = 5 (left: 1 4 5) || 5 - 1 = 4 (left: 4 5)"
            ],
            "Evaluation": [
                0.002,
                2.0,
                60.0,
                41.0,
                3.0
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 1.3",
                "2 <- 1.2",
                "3 <- 0.0",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "6 / 4 = 1.5 (left: 1 1.5 6) || 1.5 * 6 = 9 (left: 1 9)",
                "6 / 4 = 1.5 (left: 1 1.5 6) || 1 * 1.5 = 1.5 (left: 1.5 6)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 1 = 4 (left: 4 6) || 30 - ",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 4 = 1.5 (left: 1 1.5)",
                "6 / 4 = 1.5 (left: 1 1.5 6) || 1.5 * 6 = 9 (left: 1 9)"
            ],
            "Evaluation": [
                60.0,
                1.0,
                0.003,
                1.002,
                60.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 1.2",
                "2 <- 0.0",
                "3 <- 1.2",
                "4 <- 2.0"
            ]
        },
        "Step 3": {
            "steps": [
                "6 / 4 = 1.5 (left: 1 1.5 6) || 1.5 * 6 = 9 (left: 1 9) || 9 / 1 = 9 (left: 9)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 1 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "1 * 1 = 1 (left: 1 4 6) || 1 + 4 = 5 (left: 5 6)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 1 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "6 / 4 = 1.5 (left: 1 1.5 6) || 1.5 * 6 = 9 (left: 1 9) || 1 + 9 = 10 (left: 9 10)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.003,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 2.0",
                "2 <- 2.4",
                "3 <- 3.3",
                "4 <- 2.0"
            ]
        },
        "Step 4": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 4 * 1 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "6 / 4 = 1.5 (left: 1 1.5 6) || 1.5 * 6 = 9 (left: 1 9) || 1 * 9 = 9 (left: 9)",
                "6 / 4 = 1.5 (left: 1 1.5 6) || 1.5 * 6 = 9 (left: 1 9) || 9 - 1 = 8 (left: 8)",
                "1 * 1 = 1 (left: 1 4 6) || 4 * 1 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 1) * (4 * 6) = 24",
                "6 / 4 = 1.5 (left: 1 1.5 6) || 1.5 * 6 = 9 (left: 1 9) || 1 * 9 = 9 (left: 9)"
            ]
        },
        "Input": "1 1 4 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "1": {
        "puzzle": "1 1 11 11",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "11 - 1 = 10 (left: 1 10 11)",
                "11 / 1 = 11 (left: 1 11 ",
                "11 - 1 = 10 (left: 1 11 10)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                0.003,
                0.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11)",
                "11 - 1 = 10 (left: 1 10 11)",
                "11 - 1 = 10 (left: 1 11 10)",
                "1 + 1 = 2 (left: 2 11 11)",
                "1 * 1 = 1 (left: 1 11 11)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                1.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 2": {
            "steps": [
                "11 - 1 = 10 (left: 1 10 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "1 - 1 = 0 (left: 0 11 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "1 + 1 = 2 (left: 2 11 11)"
            ],
            "Evaluation": [
                0.003,
                20.002,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11) || 11 / 1 = 11 (left: 11 11 11)",
                "1 * 1 = 1 (left: 1 11 11) || 1 + 11 = 12 (left: 11 12)",
                "1 * 1 = 1 (left: 1 11 11)",
                "11 + 1 = 12 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 11 11)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                21.001,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- 2.1",
                "3 <- INIT",
                "4 <- 3.3"
            ]
        },
        "Step 4": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 11) || 11 - 1 = 10 (left: 10 11 11)",
                "1 * 1 = 1 (left: 1 11 11) || 11 / 1 = 11 (left: 11 11)",
                "1 * 1 = 1 (left: 1 11 11) || 11 / 1 = 11 (left: 11 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "11 + 1 = 12 (left: 1 11 12) || 11 - 1 = 10 (left: 10 12)"
            ],
            "Evaluation": [
                1.002,
                0.003,
                0.003,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 3.3",
                "2 <- 3.3",
                "3 <- 3.3",
                "4 <- 3.3"
            ]
        },
        "Step 5": {
            "steps": [
                "11 + 1 = 12 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11)",
                "11 + 1 = 12 (left: 1 11 12) || 12 - 11 = 1 (left:",
                "11 + 1 = 12 (left: 1 11 12) || 11 - 1 = 10 (left: 10 12)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12)"
            ],
            "Evaluation": [
                60.0,
                20.0,
                0.0,
                20.002,
                40.001
            ],
            "Resampling": [
                "0 <- 5.1",
                "1 <- 5.3",
                "2 <- 5.4",
                "3 <- 5.0",
                "4 <- 5.4"
            ]
        },
        "Step 6": {
            "steps": [
                "11 + 1 = 12 (left: 1 11 12) || 12 - 11 = 1 (left: || Input: 9 3 7",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)",
                "11 + 1 = 12 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11) || 11 / 1 = 11 (left: 11)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.003,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 5.0",
                "1 <- 5.4",
                "2 <- 5.4",
                "3 <- 5.0",
                "4 <- 6.1"
            ]
        },
        "Step 7": {
            "steps": [
                "11 + 1 = 12 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)",
                "11 + 1 = 12 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11) || 1 + 11 = 12",
                "11 + 1 = 12 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: ((11 + 1) + 1) + 11 = 24"
            ]
        },
        "Input": "1 1 11 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "2": {
        "puzzle": "1 1 3 8",
        "Step 0": {
            "steps": [
                "3 + 1 = 4 (left: 4 3 8)",
                "8 - 3 = 5 (left: 1 1 5)",
                "8 - 3 = 5 (left: 1 3 5)",
                "1 + 1 = 2 (left: 2 3 8)",
                "3 * 1 = 3 (left: 3 1 8)"
            ],
            "Evaluation": [
                2.0,
                2.001,
                1.002,
                2.001,
                60.0
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- INIT",
                "2 <- 0.4",
                "3 <- 0.4",
                "4 <- 0.4"
            ]
        },
        "Step 1": {
            "steps": [
                "3 * 1 = 3 (left: 3 1 8) || 8 / 3 = 2 (left: 2 3)",
                "8 - 3 = 5 (left: 1 1 ",
                "3 * 1 = 3 (left: 3 1 8) || 1 + 8 = 9 (left: 3 9)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8)",
                "3 * 1 = 3 (left: 3 1 8) || 1 + 8 = 9 (left: 3 9)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.4",
                "1 <- 0.4",
                "2 <- 0.4",
                "3 <- 1.3",
                "4 <- 0.4"
            ]
        },
        "Step 2": {
            "steps": [
                "3 * 1 = 3 (left: 3 1 8) || 8 - 1 = 7 (left: 3 7)",
                "3 * 1 = 3 (left: 3 1 8) || 8 - 3 = 5 (left:",
                "3 * 1 = 3 (left: 3 1 8) || 1 + 8 = 9 (left: 3 9)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8)"
            ],
            "Evaluation": [
                0.0,
                0.001,
                0.003,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- INIT",
                "2 <- 0.4",
                "3 <- 1.3",
                "4 <- 0.4"
            ]
        },
        "Step 3": {
            "steps": [
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)",
                "8 - 3 = 5 (left: 1 1 5)",
                "3 * 1 = 3 (left: 3 1 8) || 8 / 1 = 8 (left: 3 8)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8)"
            ],
            "Evaluation": [
                0.002,
                3.0,
                60.0,
                0.001,
                60.0
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 3.2",
                "2 <- 3.4",
                "3 <- 2.3",
                "4 <- 2.4"
            ]
        },
        "Step 4": {
            "steps": [
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (3 * 1) * (3 * 8) = 24",
                "3 * 1 = 3 (left: 3 1 8) || 8 / 1 = 8 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (3 * 1) * (3 * 8) = 24",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || Possible next steps:"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 3.2",
                "2 <- 2.3",
                "3 <- 3.2",
                "4 <- 3.4"
            ]
        },
        "Step 5": {
            "steps": [
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "3 * 1 = 3 (left: 3 1 8) || 8 / 1 = 8 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (3 * 1) * (3 * 1) * 8 = 24",
                "3 * 1 = 3 (left: 3 1 8) || 8 / 1 = 8 (left: 3 8) || 8 * 3 = 24 (left: 24)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 4 + 6 = 10 (left: 10 10 15)"
            ],
            "Evaluation": [
                60.0,
                0.001,
                60.0,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 5.3",
                "1 <- 5.0",
                "2 <- 5.3",
                "3 <- 3.2",
                "4 <- 5.0"
            ]
        },
        "Step 6": {
            "steps": [
                "3 * 1 = 3 (left: 3 1 8) || 8 / 1 = 8 (left: 3 8) || 8 * 3 = 24 (left: 24) || Answer: (3 * 1) + (8 / 1) = 24",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (3 * 1) * (3 * 1) * 8 = 24",
                "3 * 1 = 3 (left: 3 1 8) || 8 / 1 = 8 (left: 3 8) || 8 * 3 = 24 (left: 24) || Answer: (3 * 1) * (8 / 1) = 24",
                "3 * 1 = 3 (left: 3 1 8) || 8 / 1 = 8 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "3 * 1 = 3 (left: 3 1 8) || 3 * 1 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (3 * 1) * (3 * 8) = 24"
            ]
        },
        "Input": "1 1 3 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "3": {
        "puzzle": "1 1 1 8",
        "Step 0": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 ",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 * 1 = 1 (left: 1 1 8)",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 + 8 = 9 (left: 1 1 9)"
            ],
            "Evaluation": [
                0.003,
                22.0,
                1.001,
                60.0,
                0.001
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.3",
                "2 <- 0.3",
                "3 <- INIT",
                "4 <- 0.1"
            ]
        },
        "Step 1": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 8 - 1 = 7 (left:",
                "1 + 1 = 2 (left: 1 2 8) || 1 * 8 = 8 (left: 2 8)",
                "1 + 1 = 2 (left: 1 2 8) || 1 * 2 = 2 (left: 2 8)",
                "8 / 1 = 8 (left: 1 1 8)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8)"
            ],
            "Evaluation": [
                1.0,
                0.003,
                0.002,
                1.002,
                60.0
            ],
            "Resampling": [
                "0 <- 1.4",
                "1 <- 1.4",
                "2 <- 1.4",
                "3 <- 1.4",
                "4 <- 0.1"
            ]
        },
        "Step 2": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 8 / 3 = 2.66667 (left: 2.66667)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8) || Possible next steps:"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 1.3",
                "1 <- 0.3",
                "2 <- 2.3",
                "3 <- 0.1",
                "4 <- 1.4"
            ]
        },
        "Step 3": {
            "steps": [
                "8 / 1 = 8 (left: 1 1 8) || 1 * 8 = 8 (left: 8)",
                "1 + 1 = 2 (left: 1 2 8) || Input: 3 4 9",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (1 + 1) * (1 + 8) = 24",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 8 - 3 = 5 (left: 5)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                60.0,
                60.0,
                0.001
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 2.3",
                "2 <- 3.2",
                "3 <- 2.3",
                "4 <- 3.3"
            ]
        },
        "Step 4": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (1 + 1) * (1 + 8) = 24",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (1 + 1) * (1 + 8) = 24",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (1 + 1) * (1 + 8) = 24 || Input: 3 3 5 5\nSteps:\n3 + 5 = 8 (left: 3 8 5)\n3 * 8 = 24 (left: 24 5)\n24 * 5 = 120 (left: 120)\nAnswer: (3 + 5) * 3 * 5 = 24",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (1 + 1) * (1 + 8) = 24",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)"
            ],
            "Evaluation": [
                60.0,
                60.0,
                60.0,
                40.001,
                0.001
            ],
            "Resampling": [
                "0 <- 4.1",
                "1 <- 4.0",
                "2 <- 1.4",
                "3 <- 2.3",
                "4 <- 3.3"
            ]
        },
        "Step 5": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (1 + 1) * (1 + 8) = 24 || Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 + 3 = 16 (left: 16)\n16 + 16 = 32 (left: 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: (1 + 1) * (1 + 8) = 24 || Input: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n6 * 8 = 48 (left: 48 8)\n48 - 8 = 40 (left: 40)\nAnswer: (3 + 3) * (8 - 8) = 24",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 8 / 3 = 2 (left: 2)",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 * 8 = 24 (left: 24) || Answer: ((1 + 1) + 1) * 8 = 24",
                "1 + 1 = 2 (left: 1 2 8) || 1 + 2 = 3 (left: 3 8) || 3 + 8 = 11 (left: 11)"
            ]
        },
        "Input": "1 1 1 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "4": {
        "puzzle": "6 6 6 6",
        "Step 0": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6)",
                "6 * 6 = 36 (left: 6 6 36 6)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 - 6 = 0 (left: 0 6 6)"
            ],
            "Evaluation": [
                41.0,
                21.0,
                41.0,
                22.0,
                20.002
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.2",
                "2 <- 0.0",
                "3 <- 0.1",
                "4 <- 0.3"
            ]
        },
        "Step 1": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6)",
                "6 / 6 = 1 (left: 1 6 6) || 6 / 1 = 6 (left: 6 6 6)",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 / 6 = 1 (left: 1 36 6)",
                "6 + 6 = 12 (left: 6 12 6) || 12 - 6 = 6 (left: 6 6)"
            ],
            "Evaluation": [
                21.001,
                3.0,
                21.0,
                2.0,
                20.002
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 0.4",
                "2 <- 0.1",
                "3 <- 1.4",
                "4 <- 0.1"
            ]
        },
        "Step 2": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6) || 72 + 6 = 78 (left: 78)",
                "6 - 6 = 0 (left: 0 6 6) || 6 / 0 = undefined",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 + 6 = 12 (left: 12 36 6)",
                "6 + 6 = 12 (left: 6 12 6) || 12 - 6 = 6 (left: 6 6) || 6 + 6 = 12 (left: 12)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                3.0,
                0.003,
                22.0
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 2.4",
                "2 <- 0.3",
                "3 <- 2.2",
                "4 <- 0.4"
            ]
        },
        "Step 3": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 + 6 = 12 (left: 12)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 * 6 = 36 (left: 36 6)",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 + 6 = 12 (left: 12 36 6) || 6 / 12 = 0.5 (left: 0.5 6)",
                "6 - 6 = 0 (left: 0 6 6) || 0 + 6 = 6 (left: 6 6)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                22.0,
                20.002,
                0.003
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 1.2",
                "2 <- 2.4",
                "3 <- 3.1",
                "4 <- 3.1"
            ]
        },
        "Step 4": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 * 6 = 36 (left: 36 6) || 36 / 6 = 6 (left: 6)",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6) || 72 - 6 = 66 (left: 66)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 * 6 = 36 (left: 36 6)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 * 6 = 36 (left: 36 6) || 36 / 6 = 6 (left: 6)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 * 6 = 36 (left: 36 6) || 36 * 6 = 216 (left: 6)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                60.0,
                0.001,
                0.002
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 4.2",
                "2 <- 4.2",
                "3 <- 4.2",
                "4 <- 3.3"
            ]
        },
        "Step 5": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 / 6 = 1 (left: 1 6)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 * 6 = 36 (left: 36 6) || 36 * 6 = 216 (left: 216)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 * 6 = 36 (left: 36 6) || 36 - 6 = 30 (left: 30)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 * 6 = 36 (left: 36 6) || 36 / 6 = 6 (left: 6)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 + 6 = 12 (left: 12 36 6) || 6 / 12 = 0.5 (left: 0.5 6) || 6 - 0.5 = 5.5 (left: 5.5)"
            ],
            "Evaluation": [
                41.0,
                0.002,
                0.003,
                0.003,
                0.001
            ],
            "Resampling": [
                "0 <- 5.0",
                "1 <- 3.2",
                "2 <- 2.4",
                "3 <- 3.1",
                "4 <- 5.0"
            ]
        },
        "Step 6": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 / 6 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 12 = 72 (left: 72 6) || 72 * 6 = 432 (left: 432)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 * 6 = 36 (left: 36 6)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 * 6 = 36 (left: 36 6) || 36 + 6 = 42 (left: 42)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 / 6 = 1 (left: 1 6) || 1 + 6 = 7"
            ],
            "Evaluation": [
                0.002,
                0.003,
                60.0,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 6.2",
                "1 <- 0.2",
                "2 <- 1.4",
                "3 <- 5.0",
                "4 <- 5.0"
            ]
        },
        "Step 7": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 * 6 = 36 (left: 36 6) || 36 + 6 = 42 (left: 42)",
                "6 / 6 = 1 (left: 1 6 6) || 6 - 1 = 5 (left: 5 6)",
                "6 + 6 = 12 (left: 6 12 6) || 12 - 6 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 / 6 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 / 6 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)"
            ],
            "Evaluation": [
                0.001,
                1.001,
                40.0,
                0.001,
                0.001
            ],
            "Resampling": [
                "0 <- 7.2",
                "1 <- 6.2",
                "2 <- 4.2",
                "3 <- 4.2",
                "4 <- 0.0"
            ]
        },
        "Step 8": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6) || 12 - 6 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 * 6 = 36 (left: 36 6) || 36 / 6 = 6 (left: 6)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 * 6 = 36 (left: 36 6) || 36 * 6 = 216 (left: 216)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 * 6 = 36 (left: 36 6) || 36 / 6 = 6 (left: 6)",
                "6 + 6 = 12 (left: 6 12 6) || 6 * 6"
            ],
            "Evaluation": [
                0.003,
                0.001,
                20.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 0.0",
                "2 <- 8.2",
                "3 <- 0.4",
                "4 <- 6.2"
            ]
        },
        "Step 9": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 * 6 = 36 (left: 36 6) || 36 + 6 = 42 (left: 42)",
                "6 + 6 = 12 (left: 6 12 6) || 12 - 6 = 6 (left: 6 6)",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 * 6 = 36 (left: 36 6) || 36 * 6 = 216 (left: 216) || 6 * 6 = 36 (left: 36)",
                "6 - 6 = 0 (left: 0 6 6) || 5 + 7 = 12 (left: 1 12",
                "6 * 6 = 36 (left: 6 6 36 6) || 6 * 6 = 36 (left: 6 36 6) || 6 * 6 = 36 (left: 36 6) || 36 - 6 = 30 (left: 30)"
            ]
        },
        "Input": "6 6 6 6",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "5": {
        "puzzle": "1 1 2 12",
        "Step 0": {
            "steps": [
                "12 / 2 = 6 (left: 1 2 6)",
                "1 + 1 = 2 (left: 2 2 12)",
                "1 + 1 = 2 (left: 2 2 12)",
                "12 - 2 = 10 (left: 1 2 10)",
                "1 + 1 = 2 (left: 2 2 12)"
            ],
            "Evaluation": [
                0.003,
                2.001,
                0.003,
                1.002,
                1.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 0.3",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "12 - 1 = 11 (left: 1 2 ",
                "2 * 1 = 2 (left: 2 2 12)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20)",
                "12 / 2 = 6 (left: 1 2 6)",
                "1 + 1 = 2 (left: 2 2 12)"
            ],
            "Evaluation": [
                0.002,
                21.001,
                60.0,
                1.002,
                0.003
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 * 20 = 20 (left: 20 20)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 + 20 = 21 (left: 21)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 - 1 = 19 (left: 19)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 - 1 = 19 (left: 19)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 * 1 = 20 (left: 20)"
            ],
            "Evaluation": [
                0.002,
                20.0,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 1.1",
                "2 <- 2.1",
                "3 <- 1.2",
                "4 <- 1.2"
            ]
        },
        "Step 3": {
            "steps": [
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 + 20 = 21 (left: 21) || 21 + 2 = 23 (left: 23)",
                "2 * 1 = 2 (left: 2 2 12) || 12 - 2 = 10 (left: 2 10)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 + 20 = 21 (left: 21) || 21 * 2 = 42",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 * 1 = 20 (left: 20)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 + 20 = 21 (left: 20)"
            ],
            "Evaluation": [
                0.003,
                3.0,
                0.003,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- 1.1",
                "3 <- 1.2",
                "4 <- 1.2"
            ]
        },
        "Step 4": {
            "steps": [
                "12 - 2 = 10 (left: 1 2 10)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 - 1 = 19 (left: 19)",
                "2 * 1 = 2 (left: 2 2 12) || 2 + 2 = 4 (left: 4 12)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 - 1 = 19 (left: 19)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 + 20 = 21 (left: 20)"
            ],
            "Evaluation": [
                3.0,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.1",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- 4.0"
            ]
        },
        "Step 5": {
            "steps": [
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 * 20 = 20 (left: 20)",
                "2 * 1 = 2 (left: 2 2 12) || 12 - 2 = 10 (left:",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 20 - 1 = 19 (left: 19)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 * 20 = 20 (left: 20)",
                "12 - 2 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8)"
            ],
            "Evaluation": [
                0.003,
                0.001,
                0.003,
                0.002,
                40.0
            ],
            "Resampling": [
                "0 <- 5.4",
                "1 <- 5.4",
                "2 <- 4.0",
                "3 <- 3.1",
                "4 <- 2.1"
            ]
        },
        "Step 6": {
            "steps": [
                "12 - 2 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 1 + 8 = 9 (left: 8)",
                "12 - 2 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "12 - 2 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8)",
                "2 * 1 = 2 (left: 2 2 12) || 12 - 2 = 10 (left: 2 10) || 2 * 10 = 20 (left: 20)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 + 20 = 21 (left: 21) || 21"
            ],
            "Evaluation": [
                0.003,
                0.003,
                21.001,
                0.002,
                0.003
            ],
            "Resampling": [
                "0 <- 3.1",
                "1 <- 1.2",
                "2 <- 1.1",
                "3 <- 5.4",
                "4 <- 6.2"
            ]
        },
        "Step 7": {
            "steps": [
                "2 * 1 = 2 (left: 2 2 12) || 12 - 2 = 10 (left: 2 10) || 2 + 10 = 12 (left: 12)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 * 20 = 20 (left: 20 20)",
                "2 * 1 = 2 (left: 2 2 12) || 12 / 2 = 6 (left: 2 6)",
                "12 - 2 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 1 + 8 = 9 (left: 9)",
                "12 - 2 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 1 + 8 = 9 (left: 9)"
            ],
            "Evaluation": [
                0.003,
                20.002,
                1.001,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 5.4",
                "1 <- 5.4",
                "2 <- 7.1",
                "3 <- 7.1",
                "4 <- 6.2"
            ]
        },
        "Step 8": {
            "steps": [
                "12 - 2 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 8 / 1 = 8 (left: 8)",
                "12 - 2 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 1 * 8 = 8 (left: 8)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 * 20 = 20 (left: 20 20) || 20 / 20 = 1 (left: 1)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 * 20 = 20 (left: 20 20) || 20 + 20 = 40 (left: 40)",
                "12 - 2 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 1 + 8 = 9 (left: 9)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                0.001,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 7.1",
                "1 <- 7.1",
                "2 <- 7.1",
                "3 <- 6.2",
                "4 <- 6.2"
            ]
        },
        "Step 9": {
            "steps": [
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 * 20 = 20 (left: 20 20) || 20 / 20 = 1 (left: 1)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 * 20 = 20 (left: 20 20) || 20 - 20 = 0 (left: 0)",
                "12 - 2 = 10 (left: 1 2 10) || 2 * 10 = 20 (left: 1 20) || 1 * 20 = 20 (left: 20 20) || 20 * 20 = 400 (left: 400)",
                "12 - 2 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 8 - 1 = 7 (left: 7)",
                "12 - 2 = 10 (left: 1 2 10) || 10 - 2 = 8 (left: 1 8) || 1 + 8 = 9 (left: 9)"
            ]
        },
        "Input": "1 1 2 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "6": {
        "puzzle": "1 2 2 6",
        "Step 0": {
            "steps": [
                "2 / 1 = 2 (left: 2 2 6)",
                "1 * 2 = 2 (left: 2 2 6)",
                "2 * 2 = 4 (left: 4 2 6)",
                "6 / 2 = 3 (left: 2 3 ",
                "2 * 2 = 4 (left: 4 2 6)"
            ],
            "Evaluation": [
                60.0,
                60.0,
                1.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 0.0",
                "2 <- 0.1",
                "3 <- 0.1",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "2 / 1 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6)",
                "2 / 1 = 2 (left: 2 2 6) || Input: 3 3 5",
                "1 * 2 = 2 (left: 2 2 6) || 2 * 2 = 4 (left: 4 4)",
                "1 * 2 = 2 (left: 2 2 6) || 2 - 2 = 0 (left: 0 6)",
                "6 - 2 = 4 (left: 1 2 4)"
            ],
            "Evaluation": [
                40.0,
                0.003,
                0.003,
                40.0,
                2.001
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 1.0",
                "2 <- 1.0",
                "3 <- 0.1",
                "4 <- 1.0"
            ]
        },
        "Step 2": {
            "steps": [
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6)",
                "2 / 1 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "2 / 1 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "1 * 2 = 2 (left: 2 2 6) || 4 + 4 = 8 (left: 4 8)",
                "2 / 1 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5) "
            ],
            "Evaluation": [
                41.0,
                0.003,
                0.002,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 1.0",
                "2 <- 1.0",
                "3 <- 0.1",
                "4 <- 0.0"
            ]
        },
        "Step 3": {
            "steps": [
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 + 6 = 10 (left: 10)",
                "2 / 1 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 6 / 1 = 6 (left: 6)",
                "2 / 1 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 1 * 6 = 6 (left: 6)",
                "1 * 2 = 2 (left: 2 2 6) || Possible next steps:",
                "2 / 1 = 2 (left: 2 2 6) || 6 / 2 = 3 (left: 2 3)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.0",
                "1 <- 1.0",
                "2 <- 1.0",
                "3 <- 1.3",
                "4 <- 1.0"
            ]
        },
        "Step 4": {
            "steps": [
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "2 / 1 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "2 / 1 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "1 * 2 = 2 (left: 2 2 6) || 2 - 2 = 0 (left: 0 6) || 0 + 6 = 6 (left: 6)",
                "2 / 1 = 2 (left: 2 2 6) || 2 / 2 = 1 (left: 1 6) || 1 + 6 = 7 (left: 7)"
            ],
            "Evaluation": [
                60.0,
                0.001,
                0.002,
                0.002,
                0.0
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- 4.0",
                "2 <- 4.0",
                "3 <- 0.0",
                "4 <- 4.0"
            ]
        },
        "Step 5": {
            "steps": [
                "2 / 1 = 2 (left: 2 2 6) || 2 * 2 = 4 (left: 4 6)",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24",
                "2 / 1 = 2 (left: 2 2 6) || Possible",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24"
            ],
            "Evaluation": [
                40.0,
                60.0,
                60.0,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 5.2",
                "1 <- 5.1",
                "2 <- 4.0",
                "3 <- 5.4",
                "4 <- 5.1"
            ]
        },
        "Step 6": {
            "steps": [
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) + (3 + 6) = 24",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\nAnswer: (3 * 4) * (3 + 5) = 24",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 5 9\nSteps:\n3 + 9 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 9) * (5 - 3) = 24",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\nAnswer: (3 * 4) * (3 + 5) = 96"
            ],
            "Evaluation": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 6.4",
                "1 <- 6.1",
                "2 <- 5.2",
                "3 <- 6.3",
                "4 <- 5.0"
            ]
        },
        "Step 7": {
            "steps": [
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\nAnswer: (3 * 4) * (3 + 5) = 96 || There is no way to obtain 24 with the numbers 3, 3, 4, and 5 using the given operations.",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\nAnswer: (3 * 4) * (3 + 5) = 24 || Input: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 - 24 = -11 (left: -11)\nAnswer: (3 * 8) + (6 + 7) = 24",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 4 6\nSteps:\n3 + 4 = 7 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 + 4) * 6 = 24",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 5 9\nSteps:\n3 + 9 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 9) * (5 - 3) = 24 || Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n2 * 10 = 20 (left: 5 20)\n5 * 20 = 100 (left: 100)\n100 / 4 = 24 (left: 24)\nAnswer: ((2 * (3 + 7)) * 5) / 4 = 24",
                "2 / 1 = 2 (left: 2 2 6) || 2 * 2 = 4 (left: 4 6) || 7"
            ],
            "Evaluation": [
                0.003,
                60.0,
                60.0,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 7.1",
                "1 <- 6.3",
                "2 <- 7.3",
                "3 <- 6.2",
                "4 <- 7.3"
            ]
        },
        "Step 8": {
            "steps": [
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\nAnswer: (3 * 4) * (3 + 5) = 24 || Input: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 - 24 = -11 (left: -11)\nAnswer: (3 * 8) + (6 + 7) = 24 || Input: 2 3 7 8\nSteps:\n7 - 3 = 4 (left: 2 4 8)\n4 * 8 = 32 (left: 2 32)\n2 * 32 = 64 (left: 64)\nAnswer: (2 * (7 - 3)) * 8 = 24",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 5 9\nSteps:\n3 + 9 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 9) * (5 - 3) = 24 || Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\nAnswer: (2 * 6) * (3 * 8) = 24",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 5 9\nSteps:\n3 + 9 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 9) * (5 - 3) = 24 || Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n2 * 10 = 20 (left: 5 20)\n5 * 20 = 100 (left: 100)\n100 / 4 = 24 (left: 24)\nAnswer: ((2 * (3 + 7)) * 5) / 4 = 24 || Input: 6 6 7 8\nSteps:\n6 + 8 = 14 (left: 6 7 14)\n7 - 6 = 1 (left: 1 14)\n1 * 14 = 14 (left: 14)\n14 + 14 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((6 + 8) * (7 - 6)) +",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 5 9\nSteps:\n3 + 9 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 9) * (5 - 3) = 24 || Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n2 * 10 = 20 (left: 5 20)\n5 * 20 = 100 (left: 100)\n100 / 4 = 24 (left: 24)\nAnswer: ((2 * (3 + 7)) * 5) / 4 = 24 || Input: 2 4 6 8\nSteps:\n4 + 8 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((4 + 8) * 6) + 2 = 24"
            ],
            "Evaluation": [
                60.0,
                60.0,
                60.0,
                40.0,
                60.0
            ],
            "Resampling": [
                "0 <- 6.4",
                "1 <- 8.1",
                "2 <- 8.1",
                "3 <- 8.4",
                "4 <- 5.1"
            ]
        },
        "Step 9": {
            "steps": [
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\nAnswer: (3 * 4) * (3 + 5) = 96 || There is no way to obtain 24 using the numbers 3, 3, 4, and 5.",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 5 9\nSteps:\n3 + 9 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 9) * (5 - 3) = 24 || Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\nAnswer: (2 * 6) * (3 * 8) = 24 || Input: 1 3 4 8\nSteps:\n3 + 8 = 11 (left: 1 4 11)\n4 * 11 = 44 (left: 44)\n1 * 44 = 44 (left: 44)\nAnswer: 1 * (3 + 4 * 8) = 24",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 5 9\nSteps:\n3 + 9 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 9) * (5 - 3) = 24 || Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\nAnswer: (2 * 6) * (3 * 8) = 24 || Input: 2 4 5 6\n\nSteps:\n2 * 5 = 10 (left: 4 6 10)\n10 - 4 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nAnswer: (2 * 5) - (4 + 6) = 24",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 5 9\nSteps:\n3 + 9 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 9) * (5 - 3) = 24 || Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n2 * 10 = 20 (left: 5 20)\n5 * 20 = 100 (left: 100)\n100 / 4 = 24 (left: 24)\nAnswer: ((2 * (3 + 7)) * 5) / 4 = 24 || Input: 2 4 6 8\nSteps:\n4 + 8 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((4 + 8) * 6) + 2 = 24 || Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 9 8 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * 3) - 8) * 9 =",
                "1 * 2 = 2 (left: 2 2 6) || 2 + 2 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 2) * (2 + 6) = 24 || Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3) * (8 - 6) = 24"
            ]
        },
        "Input": "1 2 2 6",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "7": {
        "puzzle": "1 1 10 12",
        "Step 0": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 10 12)",
                "1 + 1 = 2 (left: 2 10 12)",
                "1 * 10 = 10 (left: 10 1 12)",
                "1 + 1 = 2 (left: 2 10 12)"
            ],
            "Evaluation": [
                20.002,
                1.002,
                0.003,
                1.001,
                0.003
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "1 * 1 = 1 (left: 1 10 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "12 - 10 = 2 (left: 1 2 12)",
                "1 + 1 = 2 (left: 2 10 12)",
                "1 + 1 = 2 (left: 2 10 12)"
            ],
            "Evaluation": [
                1.001,
                21.001,
                60.0,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 1.2",
                "2 <- 1.1",
                "3 <- INIT",
                "4 <- 1.2"
            ]
        },
        "Step 2": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12) || 11 + 1 = 12 (left: 12 12)",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6)",
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11 12)",
                "12 - 1 = 11 (left: 1 10 ",
                "12 - 10 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)"
            ],
            "Evaluation": [
                20.002,
                40.0,
                41.0,
                60.0,
                60.0
            ],
            "Resampling": [
                "0 <- 1.2",
                "1 <- 1.1",
                "2 <- 2.3",
                "3 <- 2.3",
                "4 <- 2.3"
            ]
        },
        "Step 3": {
            "steps": [
                "12 - 10 = 2 (left: 1 2 12) || 12 - 1 = 11 (left: 2 11)",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 10  || 10 * 1 = 10 (left: 10)",
                "12 - 1 = 11 (left: 1 10  || 1 * 10 = 10 (left: 10)",
                "12 - 1 = 11 (left: 1 10  || 10 / 1 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.003,
                60.0,
                0.002,
                0.003,
                0.002
            ],
            "Resampling": [
                "0 <- 2.3",
                "1 <- 3.1",
                "2 <- 3.1",
                "3 <- 2.3",
                "4 <- 2.3"
            ]
        },
        "Step 4": {
            "steps": [
                "12 - 1 = 11 (left: 1 10  || 5 + 5 = 10 (left: 10)",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "12 - 1 = 11 (left: 1 10  || 10 - 1 = 9 (left: 9)",
                "12 - 1 = 11 (left: 1 10  || 10 / 1 = 10 (left: 10)"
            ],
            "Evaluation": [
                0.003,
                0.003,
                0.002,
                0.001,
                0.002
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 2.1",
                "2 <- 3.1",
                "3 <- 2.2",
                "4 <- 3.1"
            ]
        },
        "Step 5": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12)",
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 6 - 1 = 5 (left: 5)",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0)",
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11 12) || Input: 5 5 10",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                20.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 5.0",
                "1 <- 2.3",
                "2 <- 5.0",
                "3 <- 3.1",
                "4 <- 5.2"
            ]
        },
        "Step 6": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 * 12 = 144 (left: 144)",
                "12 - 1 = 11 (left: 1 10  || 10 * 1 = 10 (left: 10)",
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0) || There are no possible next steps as there are no numbers given in the input."
            ],
            "Evaluation": [
                0.003,
                0.001,
                20.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 5.0",
                "2 <- 5.2",
                "3 <- 5.0",
                "4 <- 5.0"
            ]
        },
        "Step 7": {
            "steps": [
                "12 - 10 = 2 (left: 1 2 12) || 12 / 2 = 6 (left: 1 6) || 1 + 6 = 7 (left: 7)",
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "10 + 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 - 12 = 0 (left: 0) || No possible next steps as there is no input given.",
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 / 12 = 1 (left: 1)",
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.001,
                0.002,
                0.003,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 6.2",
                "1 <- 7.4",
                "2 <- 2.3",
                "3 <- 7.4",
                "4 <- 6.2"
            ]
        },
        "Step 8": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 || 24 / 12 = 2 (left: 2)",
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: ((1 + 10) / 1) + 12 = 24",
                "12 - 1 = 11 (left: 1 10  || 10 - 1 = 9 (left: 9)",
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: ((10 + 1) / 1) + (12 + 12) = 24",
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 || 12 / 12 = 1 (left: 1 24)"
            ],
            "Evaluation": [
                0.0,
                60.0,
                0.002,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 8.1",
                "1 <- 8.1",
                "2 <- 8.4",
                "3 <- 7.4",
                "4 <- 6.2"
            ]
        },
        "Step 9": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: ((1 + 10) / 1) + 12 = 24 || Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 3 = 24 (left: 5 24)\nAnswer: (3 * 7) + 3 = 24",
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: ((1 + 10) / 1) + 12 = 24 || Input: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 15 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((4 + 6) - 5) * (3 *",
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 || 12 / 12 = 1 (left: 1 24) || 24 / 1 = 24 (left: 24)",
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 (left: 24) || Answer: ((10 + 1) / 1) + (12 + 12) = 24",
                "10 + 1 = 11 (left: 1 11 12) || 11 / 1 = 11 (left: 1 11 12) || 1 + 11 = 12 (left: 12 12) || 12 + 12 = 24 || 24 - 12 = 12 (left: 12 24)"
            ]
        },
        "Input": "1 1 10 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "8": {
        "puzzle": "2 2 10 10",
        "Step 0": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "10 / 2 = 5 (left: 2 5 10)",
                "10 / 2 = 5 (left: 2 5 10)",
                "10 - 2 = 8 (left: 2 8 10)"
            ],
            "Evaluation": [
                20.002,
                1.002,
                0.003,
                2.001,
                0.003
            ],
            "Resampling": [
                "0 <- 0.0",
                "1 <- INIT",
                "2 <- 0.0",
                "3 <- INIT",
                "4 <- INIT"
            ]
        },
        "Step 1": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10) || 10 / 4 = 2",
                "2 * 2 = 4 (left: 4 10 10)",
                "2 + 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14)",
                "2 + 2 = 4 (left: 4 10 10)",
                "10 / 2 = 5 (left: 2 5 10)"
            ],
            "Evaluation": [
                0.003,
                20.002,
                1.002,
                0.003,
                21.001
            ],
            "Resampling": [
                "0 <- INIT",
                "1 <- 1.4",
                "2 <- 1.1",
                "3 <- 1.1",
                "4 <- 1.4"
            ]
        },
        "Step 2": {
            "steps": [
                "10 / 2 = 5 (left: 2 5 10)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5)",
                "2 * 2 = 4 (left: 4 10 10) || 10 - 4 = 6 (left: 6 10 10)",
                "2 * 2 = 4 (left: 4 10 10) || 4 * 10 = 40 (left: 10 10 40)",
                "10 / 2 = 5 (left: 2 5 10) || 2 + 5 = 7 (left: 7 10)"
            ],
            "Evaluation": [
                2.001,
                60.0,
                2.001,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 2.4",
                "1 <- 2.1",
                "2 <- 1.4",
                "3 <- 2.1",
                "4 <- 2.1"
            ]
        },
        "Step 3": {
            "steps": [
                "10 / 2 = 5 (left: 2 5 10) || 2 + 5 = 7 (left: 7 10) || 10 / 7 = 1.43 (left: 1.43)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 2 + 5 = 7 (left: 7)",
                "10 / 2 = 5 (left: 2 5 10) || 10 / 5 = 2 (left: 2 2)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 5 / 2 = 2.5 (left: 2.5)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 5 - 2 = 3 (left: 3)"
            ],
            "Evaluation": [
                0.002,
                0.0,
                21.0,
                0.002,
                0.0
            ],
            "Resampling": [
                "0 <- 1.1",
                "1 <- 1.1",
                "2 <- 1.1",
                "3 <- 0.0",
                "4 <- 3.2"
            ]
        },
        "Step 4": {
            "steps": [
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 14)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14)",
                "2 + 2 = 4 (left: 4 10 10) || 4 * 10 = 40 (left: 10 10 40)",
                "10 / 2 = 5 (left: 2 5 10) || 10 / 5 = 2 (left: 2 2) || 2 + 2 = 4"
            ],
            "Evaluation": [
                60.0,
                0.003,
                20.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 3.2",
                "1 <- 4.0",
                "2 <- 3.2",
                "3 <- 3.2",
                "4 <- 4.2"
            ]
        },
        "Step 5": {
            "steps": [
                "10 / 2 = 5 (left: 2 5 10) || 10 / 5 = 2 (left: 2 2) || 2 + 2 = 4",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 14) || 10 * 14 = 140 (left: 14 140)",
                "10 / 2 = 5 (left: 2 5 10) || 10 / 5 = 2 (left: 2 2) || 2 + 2 = 4",
                "10 / 2 = 5 (left: 2 5 10) || 10 / 5 = 2 (left: 2 2) || 2 + 2 = 4",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 14 + 10 = 24 (left: 10 24)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- 4.0",
                "3 <- 4.0",
                "4 <- 4.0"
            ]
        },
        "Step 6": {
            "steps": [
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 2 + 5 = 7 (left: 7)",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 2 * 5 = 10 (left: 10)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 14) || 14 / 10 = 1.4 (left: 1.4)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 14) || 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 14) || 10 + 14 = 24 (left: 24)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                0.0,
                0.001,
                60.0
            ],
            "Resampling": [
                "0 <- 4.0",
                "1 <- 6.4",
                "2 <- 4.2",
                "3 <- 6.4",
                "4 <- 2.1"
            ]
        },
        "Step 7": {
            "steps": [
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 14) || 10 - 14 = -4 (left: -4)",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 14) || 10 + 14 = 24 (left: 24) || Answer: ((2 * 2) + 10) + 10 = 24",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 10 14) || 14 / 10 = 1.4 (",
                "2 * 2 = 4 (left: 4 10 10) || 4 + 10 = 14 (left: 10 14) || 10 + 14 = 24 (left: 24) || Answer: (2 * 2) + (10 + 10) = 24",
                "10 / 2 = 5 (left: 2 5 10) || 10 - 5 = 5 (left: 2 5) || 2 - 5 = -3 (left: -3)"
            ]
        },
        "Input": "2 2 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "9": {
        "puzzle": "1 1 1 12",
        "Step 0": {
            "steps": [
                "12 - 1 = 11 (left: 1 1 11)",
                "1 + 1 = 2 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "12 - 1 = 11 (left: 1 1 11)",
                "1 + 1 = 2 (left: 1 2 12)"
            ],
            "Evaluation": [
                1.002,
                60.0,
                60.0,
                1.002,
                60.0
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.2",
                "2 <- 0.2",
                "3 <- 0.4",
                "4 <- 0.2"
            ]
        },
        "Step 1": {
            "steps": [
                "12 - 1 = 11 (left: 1 1 11) || 1 + 1 = 2 (left: 2 11)",
                "1 * 1 = 1 (left: 1 1 12) || 12 / 1 = 12 (left: 1 12)",
                "1 * 1 = 1 (left: 1 1 12) || 12 / 1 = 12 (left: 1 12)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 1 12) || 12 / 1 = 12 (left: 1 12)"
            ],
            "Evaluation": [
                0.003,
                0.002,
                0.003,
                60.0,
                0.002
            ],
            "Resampling": [
                "0 <- 0.1",
                "1 <- 0.1",
                "2 <- 0.4",
                "3 <- 1.3",
                "4 <- 1.3"
            ]
        },
        "Step 2": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12)",
                "1 + 1 = 2 (left: 1 2 12) || 3 + 10 = 13 (left: 13 6)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 10 / 5 = 2 (left: 2)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 24 25)"
            ],
            "Evaluation": [
                20.002,
                0.003,
                60.0,
                0.001,
                0.002
            ],
            "Resampling": [
                "0 <- 2.2",
                "1 <- 2.0",
                "2 <- 1.3",
                "3 <- 0.2",
                "4 <- 2.2"
            ]
        },
        "Step 3": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 12) || 1 + 2 = 3 (left: 3 12) || 4 + 7 = 11 (left: 11 10)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 1 12) || 12 - 1 = 11 (left: 1 11)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 + 24 = 25 (left: 25)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                60.0,
                40.0,
                20.001
            ],
            "Resampling": [
                "0 <- 3.3",
                "1 <- 3.0",
                "2 <- 3.0",
                "3 <- 3.2",
                "4 <- 3.0"
            ]
        },
        "Step 4": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 12) || 12 - 1 = 11 (left: 1 11) || 11 - 1 = 10 (left: 10)",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24) || Answer: (1 + 1) * 12 = 24",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24) || Answer: (1 + 1) * 12 = 24",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 1 * 24 = 24 (left: 24) || Answer: (1 + 1) * (1 * 12) = 24",
                "1 + 1 = 2 (left: 1 2 12) || 2 * 12 = 24 (left: 1 24) || 24 / 1 = 24 (left: 24) || Answer: (1 + 1) * 12 = 24 or 24 / 1 = 24"
            ]
        },
        "Input": "1 1 1 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    }
}