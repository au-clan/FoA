{
    "900": {
        "puzzle": "4 5 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 3 4 6 8\nSteps:\n4 * 6 = 24 (left: 3 8 24)\n8 - 3 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (4 * 6) * (8 - 3) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> I hope this helps! Let me know if you need further assistance.",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (5 - 3) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\nAnswer: (3 * 3) * (8 - 9) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> The final equation is 6 * (10 - 5) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 4 * (6 + (10 - 5)) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 4 8\nSteps:\n3 * 4 = 12 (left: 3 8 12)\n8 - 3 = 5 (left: 5 12)\n5 * 12 = 60 (left: 60)\n60 / 3 = 20 (left: 20)\n20 - 8 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 5) = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 - 4 = 2 (left: 2 6)\n6 * 2 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 3) - 4) * 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 * 2 = 6 (left: 6 24)\n6 * 24 = 144 (left: 144)\nAnswer: 4 * 6 = 24, 3 * 2 = 6, (6 * 24) / 144 = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 / 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n8 - 6 = 2 (left: 3 2)\n3 * 2 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 4) - 6) * 4 = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 6 8 9\nSteps:\n6 * 3 = 18 (left: 8 9 18)\n9 - 8 = 1 (left: 1 18)\n18 * 1 = 18 (left: 18)\nAnswer: (6 * 3) - (9 - 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 10 20)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 5 6 8\nSteps:\n3 * 8 = 24 (left: 5 6 24)\n5 + 6 = 11 (left: 11 24)\n11 + 24 = 35 (left: 35)\nAnswer: (3 * 8) + (5 + 6) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 4 11 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 - 3 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 + 7) - (5 - 3)) * 4 = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 3 = 9 (left: 5 7 9)\n9 - 5 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nAnswer: (3 * 3) - (7 - 5) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 8 18)\n18 - 8 = 10 (left: 10)\n10 * 3 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) - 6 =",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 5 = 30 (left: 4 10 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 4 * 5 = 20 (left: 20 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 4 * (6 + (10 - 5)) = 24 -> Input: 3 3 5 8\nSteps:\n3 * 5 = 15 (left: 3 8 15)\n15 - 3 = 12 (left: 12 8)\n12 + 8 = 20 (left: 20)\n20 + 3 = 24 (left: 24)\nAnswer: ((3 * 5) - 3) + 8 + 3 = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 + 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 7) - 8) + 3 + 8 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "5 6 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 5 6 10) -> 5 + 6 = 11 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n3 + 5 = 8 (left: 8 10)\n8 * 10 = 80 (left: 80)\n80 / 3 = 24 (left: 24)\nAnswer: ((3 + 7) * (3 + 5)) / 3 = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) * 6 = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\nAnswer: (3 * 3) * ((9 - 8) * 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 5 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 26)\n26 - 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 7) + 5) - 3 + 1 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (10 - 5) = 24 -> Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * 4) - 5) + 3 = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - 5) = 24 -> Input: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n15 - 7 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 + 9 - 7) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 3": {
                "Step": "4 + 7 = 11 (left: 1 2 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "2 * 1 = 2 (left: 2 4 7) -> 7 - 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "4"
                }
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 7 - 3 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 2": {
                "Step": "2 * 1 = 2 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 2 "
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 1 2  -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 2 7"
                }
            },
            "Step 4": {
                "Step": "4 - 2 = 2 (left: 1 2 7) -> 2 / 1 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 7 - 3 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "2 * 1 = 2 (left: 2 4 7) -> 7 - 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 * 2 = 40 (left: 40)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 2 "
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 1 2  -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 - 1 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "2 * 1 = 2 (left: 2 4 7) -> 7 - 2 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "5"
                }
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 7 - 3 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 / 1 = 8 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 * 4 = 12 (left: 12 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 2 "
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 1 2  -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "2 * 1 = 2 (left: 2 4 7) -> 7 - 2 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "5"
                }
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 7 - 3 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5) -> 5 * 8 = 40 (left: 40)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 1 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 - 1 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 2 3"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 * 2 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 4": {
                "Step": "2 * 1 = 2 (left: 2 4 7) -> 7 - 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 7 - 3 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "2 * 1 = 2 (left: 2 4 7) -> 7 - 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 + 8 = 28 (left: 8 28)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 2 3"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 1 + 2 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 1 + 8 = 9 (left: 9 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 2 11"
                }
            },
            "Step 4": {
                "Step": "4 + 7 = 11 (left: 1 2 11) -> 2 * 11 = 22 (left: 1 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 7 - 3 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "2 * 1 = 2 (left: 2 4 7) -> 7 - 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 + 8 = 28 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 + 4 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 4 6"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 2 4 6) -> 2 + 4 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 7 / 1 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 7 - 3 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "2 * 1 = 2 (left: 2 4 7) -> 7 - 2 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 3 7"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 7 - 3 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "2 * 1 = 2 (left: 2 4 7) -> 7 - 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 7 - 3 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 8)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 2": {
                "Step": "4 + 2 = 6 (left: 1 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "2"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 1 2  -> 2 / 1 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "2 * 1 = 2 (left: 2 4 7) -> 7 - 2 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 7 - 3 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> 8 / 3 = 2.66666666667 (left: 2.66666666667)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "4 + 2 = 6 (left: 1 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 8 7"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 1 8 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "3 4 7"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 3 / 4 = 0.75 (left: 0.75 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "7 - 4 = 3 (left: 1 3 7) -> 7 - 3 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "2 * 1 = 2 (left: 2 4 7) -> 7 - 2 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 + 8 = 28 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 5 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 5 11"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 * 5 = 30 (left: 30 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * (8 + 11) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 8 = 3 (left: 2 3 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 8 9"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 5 8 9) -> 8 * 5 = 40 (left: 40 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * 8 + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 8 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 + 11 = 19 (left: 7 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * 8 + 11 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * (8 + 11) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 2 40 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 9 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * 8 + 11 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * 8 + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 11 - 7 = 4 (left: 7 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.67 (left: 3.67 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * 8 + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 11"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 8 9"
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 5 8 9) -> 8 - 5 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * 8 + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 2 + 13 = 15 (left: 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 5 11"
                }
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "3 11"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 11) -> 11 / 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * 8 + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 3 * 8 = 24 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 / 3 = 2.67 (left: 2.67 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 8 9"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 5 8 9) -> 8 / 5 = 1.6 (left: 1.6 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * 8 + 11 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * 8 + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 2 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "6 5 11"
                }
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 5 + 11 = 16 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 8 - 3 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * 8 + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 2 3 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 13 11"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 2 13 11) -> 13 - 2 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * (8 + 11) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (5 - 2) * 8 + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 - 4 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 2.5 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 9 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 / 6 = 0.6667 (left: 0.6667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 2.5 4) -> 4 / 2.5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (13 - 3)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 4 - 13 = -9 (left: -9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1.3333 4 13"
                }
            },
            "Step 3": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13) -> 13 - 4 = 9 (left: 1.3333 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 9 4) -> 9 - 4 = 5 (left: 5",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (13 - 3)) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (13 - 3)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "13 + 3 = 16 (left: 4 4 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 13 - 4 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left -> 13 + 4 = 17 (left: 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 - 4 = 5 (left:"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 9 4) -> 9 - 4 = 5 (left: -> 9 + 4 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 3) * (4 - 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 4 16"
                }
            },
            "Step 2": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 * 4 = 16 (left: 16 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 9 4) -> 9 - 4 = 5 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 3) * (4 - 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1.3333 4 13"
                }
            },
            "Step 2": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13) -> 13 - 1.3333 = 11.6667 (left: 4 11.6667)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1.33 4 13"
                }
            },
            "Step 3": {
                "Step": "4 / 3 = 1.33 (left: 1.33 4 13) -> 13 - 1.33 = 11.67 (left: 4 11.67",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (13 - 3)) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 3) * (4 - 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 4 9) -> 9 + 3 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (13 - 3)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 + 3 = 16 (left: 4 4 16)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 12 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 9 52)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 3) * (4 - 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 - 6 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "9 - 4 = 5 (left:"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 3 9 4) -> 9 - 4 = 5 (left: -> 4 - 9 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (13 - 3) - (4 - 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "13 - 4 = 9 (left"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left -> 13 * 4 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (13 - 3)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 2.5 4) -> 2.5 - 4 = -1.5 (left: -1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 3 * 9 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (13 - 3)) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (4 - (13 - 3)) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "8 5"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 6 = 50 (left: 6 50)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 50"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 6 = 50 (left: 6 50) -> 50 / 6 = 8.33 (left: 8.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3) -> 14 - 3 = 11 (left: 8 11 14)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "8 5"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 8 9 42)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "8 5"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 * 5 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 50"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 6 = 50 (left: 6 50) -> 6 * 50 = 300 (left: 300)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3) -> 3 + 14 = 17 (left: 8 8 17)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 / 9 = 6.22 (left: 6.22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "54 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 + 56 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "8 5"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 + 5 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 + 6 = 15 (left: 15 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "8 5"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 + 5 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3) -> There are no possible next steps for the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 50"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 6 = 50 (left: 6 50) -> 6 * 50 = 300 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "8 5"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "8 5"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 / 5 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "8 5"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 50"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 6 = 50 (left: 6 50) -> 6 / 50 = 0.12 (left: 0.12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 9 = 47 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 3": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 6 = 50 (left: 9 50)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "8 5"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 * 5 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3) -> There is only one number provided, so there are no possible next steps for calculation.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3) -> 3 * 3 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 50"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 6 = 50 (left: 6 50) -> 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "6 7 17"
                }
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 7 17) -> 7 * 17 = 119 (left: 6 119)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 9 / 8 = 1.125 (left: 1.125 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 50"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 6 = 50 (left: 6 50) -> 50 - 6 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3) -> There are no possible next steps with just the number 3 given. More numbers are needed to perform mathematical operations.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "8 5"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 * 5 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 50"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 6 = 50 (left: 6 50) -> 6 * 50 = 300 (left: 300)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 7 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 6 + 9 = 15 (left: 15 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 9 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "54 56"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 9 * 6 = 54 (left: 54 56) -> 54 / 56 = 0.9642857142857143 (left: 0.9642857142857143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 50"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 6 9 56) -> 56 - 6 = 50 (left: 6 50) -> 50 / 6 = 8.33 (left: 8.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 13 - 8 = 5 (left: 8 5) -> 8 - 5 = 3 (left: 3) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "3 * 3 ="
                }
            }
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 1": {
                "Step": "13 - 11 = 2 (left: 1 11 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 11 2"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 2 * 1 = 2 (left:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 + 1) * (13 - 11) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 / 11 = 1.181818181",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 12 / 11 = 1.090909 (left: 1.090909 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 11 2"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 2 + 1 = 3 (left: 11 3)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 11 2"
                }
            },
            "Step 1": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11 - 13) * 11 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 1 11 2)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "11 13 11"
                }
            },
            "Step 1": {
                "Step": "11 / 1 = 11 (left: 11 13 11) -> 13 - 11 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 1": {
                "Step": "1 * 11 = 11 (left: 11 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 + 1) * (13 - 11) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11 3"
                }
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 2 + 1 = 3 (left: 11 3) -> 11 * 3 = 33 (left: 33)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((11 + 1) * (13 - 11)) = 24"
            }
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 6": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> No more possible next steps as there are no more numbers to compute with. The final result is 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "18 / 2 = 9"
                }
            },
            "Step 6": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 -> There are no possible next steps as the equation has been solved and simplified to \"9\".",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 1 = 8 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "18"
                }
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to perform operations on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 3": {
                "Step": "1 * 8 = 8 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 6": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "9 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 9 + 10 = 19 (left: 11 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 3": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 - 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> None as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with just the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 6": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> None",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 * 1 = 10 (left: 8 10 11) -> 10 - 11 = -1 (left: 8 -1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 8 9 11) -> 8 * 9 = 72 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 + 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "18 / 2 = 9"
                }
            },
            "Step 6": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 -> 18 * 2 = 36 (left: 36)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "8 / 1 = 8 (left: 8 10  -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 2": {
                "Step": "8 - 1 = 7 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "18 / 2 = 9"
                }
            },
            "Step 6": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 -> 18 * 2 = 36 (left: 36)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 2": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 4": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "18 + 2 = 20"
                }
            },
            "Step 6": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 + 2 = 20 -> 18 / 2 = 9 (left: 9 20)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 1 = 10 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 + 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "No more possible next steps as there are no more numbers to compute with. The final result is 18."
                }
            },
            "Step 6": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> No more possible next steps as there are no more numbers to compute with. The final result is 18. -> No more possible next steps as there are no more numbers to compute with. The final result is 18.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 1 = 9 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 10 "
                }
            },
            "Step 1": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 3": {
                "Step": "8 / 1 = 8 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "18 / 2 = 9"
                }
            },
            "Step 6": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 -> 18 + 2 = 20 (left: 20 9)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 * 1 = 10 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 8 = 8 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "18"
                }
            },
            "Step 2": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 1 8  -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 6": {
                "Step": "10 / 1 = 10 (left: 8 10  -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> None",
                "Pruning": "NA"
            }
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> Input: 3 9 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 3) * (6 + 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 6 - 9 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 3) * (9 - 6) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 3) * (6 - 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 27"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 27 / 9 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 3 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 3) * (6 + 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 2 6 7) -> 7 / 2 = 3.5 (left: 3.5 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 3 9"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 5 + 7 = 12 (left: 10",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 3 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 3) * (6 + 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 6 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "3 3"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 / 3 = 3 (left: 3 3) -> 3 / 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 3) * (6 + 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 2 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 / 5 = 1.8 (left: 1.8 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 3 9"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 4 + 5 = 9 (left: 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 3 3"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 3 * 2 = 6 (left: 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 3) * (6 + 9) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 3) * (6 + 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 2 6 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 3 9"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 - 3 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 27"
                }
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 3 * 9 = 27 (left: 9 27) -> 9 + 27 = 36 (left: 36)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 6 9"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 2 6 9) -> 9 - 6 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 - 6 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 3) * (6 + 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 2 3 9) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 3 9"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 3 9) -> 9 / 3 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 9 - 5 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 3) * (6 + 9) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 1 15 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 1 3 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (3 * 5) + (15 / 1) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 / 9 = 1.67 (left: 1.67)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1.6666666666666667"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 / 9 = 1.6666666666666667 (left: 1.6666666666666667) -> 1.6666666666666667 + 2 = 3.6666666666666665 (left: 3.6666666666666665)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 - 1 = 2 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 3 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 - 9 = 6 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24) -> Answer: (1 * (3 * 5)) + 9 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 * 9 = 135 (left: 135)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 9 - 1 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 9 + 15 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 + 9) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 14"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 1 3 14) -> 14 / 3 = 4.67 (left: 1 4.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 5 9"
                }
            },
            "Step 2": {
                "Step": "3 - 1 = 2 (left: 2 5 9) -> 9 - 5 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 5 9) -> 3 + 5 = 8 (left: 8 9)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "15 9"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 15 / 1 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (3 * 5) + (15 + 9) = 24"
            }
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 7 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 6 6 7 8\nSteps:\n6 + 8 = 14 (left: 6 7 14)\n7 + 14 = 21 (left: 6 21)\n6 * 21 = 126 (left: 126)\n126 / 6 = 21 (left: 21)\n21 - 21 = 0 (left: 0)\n8 + 0 = 8 (left: 8)\n14 - ",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 2 3 5 9\nSteps:\n3 * 9 = 27 (left: 2 5 27)\n27 - 5 = 22 (left: 2 22)\n2 * 22 = 44 (left: 44)\n44 / 2 = 22 (left: 22)\nAnswer: ((3 * 9) - 5) / 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 1": {
                "Step": "3 + 7 = 10 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 6 9\nSteps:\n2 * 3 = 6 (left: 6 9)\n6 + 9 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((2 * 3) + 6) + 9 = 24",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "3 8 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24\nAnswer: (3 * 4) * (6 * 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "21 3 "
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 * 3 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 6 36)\n36 - 12 = 24 (left: 24)\nAnswer: (6 + 6) * (6 - 6) = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 5 6\nSteps:\n2 * 6 = 12 (left: 3 5 12)\n5 + 3 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\nAnswer: (2 * 6) * (5 + 3) = 96",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n36 / 0 = undefined (left: 6 6)\nAnswer: No solution.",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "21 3 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 / 9 = 2 (left: 2 2)\n2 * 2 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((6 * 3) / 9) * 2 * 2 = 24",
                "Pruning": {
                    "Idx": "9.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 6 6 6 4\nSteps:\n6 + 6 = 12 (left: 12 6 4)\n12 + 4 = 16 (left: 16 6)\n16 - 6 = 10 (left: 10)\n10 * 6 = 60 (left: 60)\n60 / 2.5 = 24\nAnswer: ((6 + 6) + 4) * (6 - 6)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 4 4\nSteps:\n2 * 4 = 8 (left: 3 4 8)\n3 + 4 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56)\nAnswer: (4 * 2) * (4 + 3) = 56",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 4 3 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 6 6 6 8\nSteps:\n6 * 6 = 36 (left: 8 36)\n36 / 8 = 4 (left: 4 36)\n4 * 4 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((6 * 6) / 8) * 4 + 8 = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 3 ^ 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 6 7\nSteps:\n2 * 7 = 14 (left: 3 6 14)\n6 - 3 = 3 (left: 3 14)\n14 - 3 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((2 * 7) - (6 - 3)) +",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 3 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 - 21 = -18 (left: -18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 + 1 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (4 * 6) * (3 + 1) = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n9 * 4 = 36 (left: 2 36)\n36 / 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 + 6) * 4) / 2 + 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 3 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + (12 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 4 5\nSteps:\n3 * 4 = 12 (left: 2 5 12)\n2 + 5 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\nAnswer: (2 + 5) * (3 * 4) = 24",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "3 8 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 2 3 5 7\nSteps:\n2 * 7 = 14 (left: 3 5 14)\n14 - 5 = 9 (left: 3 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((2 * 7) - 5) * 3 - 3 = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 1 2 3 4\nSteps:\n1 * 2 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((1 * 2) * 3) * 4 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 7 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 3 7 9) -> 7 / 3 = 2.33 (left: 2.33 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 5 * 5 = 25 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 6 36)\n36 - 12 = 24 (left: 24)\nAnswer: ((6 + 6) * 6) - 12 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((6 + 6) * 6) / 12 +",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 2 6 8\nSteps:\n2 + 8 = 10 (left: 2 6 10)\n2 * 6 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((2 + 8) * 6) + 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 3 + 4 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "4 * 3 = 12 (left:"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 4 * 3 = 12 (left: -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 + 36 = 36 (left: 36)\nAnswer: (6 * 6) - (6 + 6) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 2 4 5 6\nSteps:\n4 * 6 = 24 (left: 2 5 24)\n2 * 5 = 10 (left: 10 24)\n10 + 24 = 34 (left: 34)\nAnswer: (2 * 5) + (4 * 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 3 * 21 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 12"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 3 4 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (7 * 3) + 3 = 24 -> Input: 6 6 7 5\nSteps:\n7 - 5 = 2 (left: 6 6 2)\n6 * 2 = 12 (left: 6 12)\n6 * 12 = 72 (left: 72)\nAnswer: 6 * (6 * (7 - 5)) = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 1 2 3 4\nSteps:\n2 * 4 = 8 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n11 + 1 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 4) + 3) + 1 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 + 3 = 24 (left: 24) -> Answer: (3 * 7) + 3 = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 / 2 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) * (6 / 2) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "910": {
        "puzzle": "4 5 7 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 4 5 63)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 5 = 11 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 16 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 26"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 35 - 9 = 26 (left: 4 26) -> 26 / 4 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "5 12"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 4 = 12 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 2 = 18 (left: 18) -> 18 + 2 = 20",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 4 5 63)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 - 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 26"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 35 - 9 = 26 (left: 4 26) -> 4 * 26 = 104 (left: 104)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> There is only one number given, so there is only one possible next step: 25.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "5 12"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 4 = 12 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 1 = 26",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 5 = -1 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 9 35"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 35 - 9 = 26 (left: 4 26)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 5 + 7 = 12 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 26"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 35 - 9 = 26 (left: 4 26) -> 26 / 4 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> Input: 3 7 2 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 2 = 18 (left: 18) -> 18 + 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 4 = 20 (left: 20 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Input: 3 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 16"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 2 = 18 (left: 18) -> None - 18 is the final result.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 5 * 4 = 20 (left: 20 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 26"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 35 - 9 = 26 (left: 4 26) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 + 25 = 50",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 4 5 63)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 35 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 5 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 4 = 15.75 (left: 5 15.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "25"
                }
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 4 + 5 = 9 (left: 9 16) -> 9 + 16 = 25 (left: 25) -> 25 * 2 = 50 (left: 2)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "18 + 2 = 20"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 26"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 35 - 9 = 26 (left: 4 26) -> 4 * 26 = 104 (left: 104)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "9 36"
                }
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 2 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "5 12"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 4 = 12 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 2 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 4 12 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 5 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "5 12"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 4 = 12 (left: 5 12) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 2 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 4 5 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 16"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 4 = 12 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "5 12"
                }
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 4 5 16) -> 16 - 4 = 12 (left: 5 12) -> 5 + 12 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 26"
                }
            },
            "Step 5": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 35 - 9 = 26 (left: 4 26) -> 26 / 4 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 2 = 18 (left: 18) -> No possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Input": "4 5 7 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "911": {
        "puzzle": "1 2 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 1 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 16 13"
                }
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 1 16 13) -> 16 - 13 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 8 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 / 1 = 13 (left: 2 8 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 10 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 -"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 1 + 8 = 9 (left: 9)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 1 16 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 + 2 = 10 (left: 1 10 13)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.66666666667 (left: 2.66666666667 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((1 + 2) + 8) + 13 = 24"
            }
        },
        "Input": "1 2 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "912": {
        "puzzle": "4 6 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 6 9 24)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3) -> 7 - 5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.4444444444444444 9"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 / 9 = 0.4444444444444444 (left: 0.4444444444444444 9) -> 9 - 0.4444444444444444 = 8.555555555555556",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 6 2.67)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 + 6 = 15 (left: 6 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 6 9 24)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.4444444444444444 9"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 / 9 = 0.4444444444444444 (left: 0.4444444444444444 9) -> 9 / 0.4444444444444444 = 20.25 (left: 0.4444444444444444 20.25)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1.5 6 9"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 6 * 1.5 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.4444444444444444 9"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 / 9 = 0.4444444444444444 (left: 0.4444444444444444 9) -> 0.4444444444444444 / 9 = 0.049",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.4444444444444444 9"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 / 9 = 0.4444444444444444 (left: 0.4444444444444444 9) -> 0.4444444444444444 + 9 = 9.444444444444444 (left: 9.444444444444444)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 9 = 2.67 (left: 2.67 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 3": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 3 - 4 = -1 (left: -1 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 3"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.4444444444444444 9"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 / 9 = 0.4444444444444444 (left: 0.4444444444444444 9) -> 9 - 0.4444444444444444 = 8",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 / 9 = 0.4444444444444444 (left: 0.4444444444444444 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 9"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 6 6 9) -> 9 / 6 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 7 - 3 = 4 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 3"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.4444444444444444 9"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 / 9 = 0.4444444444444444 (left: 0.4444444444444444 9) -> 0.4444444444444444 + 9 = 9.444444444444445 (left: 9.444444444444445)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 4 6 3)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 3"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3) -> 2 + 3 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.4444444444444444 9"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 / 9 = 0.4444444444444444 (left: 0.4444444444444444 9) -> 9 / 0.4444444444444444 = 20.25 (left: 20.25)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> Input: 3 6 9 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.4444444444444444 9"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 / 9 = 0.4444444444444444 (left: 0.4444444444444444 9) -> 0.4444444444444444 + 9 = 9.444444444444444 (left: 9.444444444444444)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 3"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 6 - 4 = 2 (left: 2 3) -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.4444444444444444 9"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 / 9 = 0.4444444444444444 (left: 0.4444444444444444 9) -> 0.4444444444444444 * 9 = 4 (left: 4 9)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 4 = 1.5 (left",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 + 6 = 15 (left: 24 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> Input: 7 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 + 6 = 30 (left: 9 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 4 6 3) -> 4 - 3 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.4444444444444444 9"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 4 / 9 = 0.4444444444444444 (left: 0.4444444444444444 9) -> 0.4444444444444444 + 9 = 9.444444444444443 (left: 9.444444444444443)",
                "Pruning": "NA"
            }
        },
        "Input": "4 6 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "913": {
        "puzzle": "1 4 4 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 8 32"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 8 32) -> 1 * 8 = 8 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 8 32) -> 32 / 8 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 31"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "1 4"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 8 32"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 8 32) -> 32 / 8 = 4 (left: 1 4)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 8 32"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 8 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 8 32"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 8 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 8 32) -> 32 / 8 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1 4"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "16 8"
                }
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 8 32"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 8 32) -> 8 * 1 = 8 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 8 32"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 8 32) -> 32 / 8 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 / 4 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 + 4 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "8 12"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 + 1 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "1 31"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "1 31"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 / 8 = 1 (left: 1 8 32) -> 32 - 1 = 31 (left: 1 31) -> 31 - 1 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1 4"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 8 32"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 8 32) -> 8 * 8 = 64 (left: 64 32)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 - 1 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "16 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "16 8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 + 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> 4 * 1 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "16 8"
                }
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 * 4 = 16 (left: 16 8) -> 16 / 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 8 8",
                "Pruning": null
            }
        },
        "Input": "1 4 4 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "914": {
        "puzzle": "1 5 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 4 - 3 = 1 (left: 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)  -> 1 * 11 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 11 = 0 (left: 5 11 0)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 10 11"
                }
            },
            "Step 3": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 11 - 5 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "16 0"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 11 = 0 (left: 5 11 0) -> 5 + 11 = 16 (left: 16 0) -> 16 - 0 = 16 (left: 16)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 3": {
                "Step": "5 + 1 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)  -> 1 + 11 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> Input: 3 9 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 10 - 5 = 5 (left: 5 11) -> 11 - 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)  -> 11 / 1 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 1 50 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 5 + 10 = 15 (left: 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> Input: 3 4 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)  -> 11 - 1 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 10 11) -> 10 - 5 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 11 - 6 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)  -> 1 + 11 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 11 / 5 = 2.2 (left: 2.2 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)  -> 1 + 11 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 5 * 6 = 30 (left: 30 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)  -> 1 * 11 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 11 - 5 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)  -> 1 * 11 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 * 5 = 55 (left: 11 55)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 5 + 11 = 16 (left: 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "5 11 11"
                }
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> Input: 3 9 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5 11 0"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 11 = 0 (left: 5 11 0) -> 5 + 11 = 16 (left: 16 0)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 11"
                }
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 - 5 = 6 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)  -> 1 * 11 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Input": "1 5 10 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "915": {
        "puzzle": "3 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 / 6 = 1.1666666666666667 (left: 1.1666666666666667 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 11 12"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 11 12) -> 6 * 11 = 66 (left: 12 66)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 6 = 5 (left: 5 11)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 6 12 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 - 6 = 5 (left: 5 7)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 5"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 3 4 5) -> 3 + 5 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 / 7 = 0.8571428571428571 (left: 0.8571428571428571 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((3 + 4) + 6) + 11 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 2": {
                "Step": "4 / 3 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 * 7 = 42 (left: 11 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 11 / "
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 * 7 = 42 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 10 "
                }
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10  -> 10 - 3 = 7 (left: 7 10)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 4 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 - 3 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 - 6 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 7 11"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 + 6 = 13 (left: 11)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 5 + 5 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 4 11) -> 11 - 4 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 + 7 = 13 (left: 11 13) -> 11 + 13 = 24 (left: 24)"
            }
        },
        "Input": "3 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "916": {
        "puzzle": "2 4 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 / 4 = 2.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 8 5"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 8 5) -> 8 - 2 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 4) + (5 + 6)) + 1 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 + 12 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 4) + 7 - 3) + 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 9 8)\n9 - 8 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: (3 * 3) - (8 - 9) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> Input: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n6 - 3 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\nAnswer: (3 * 4) * (6 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> Input: 3 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> Input: 3 3 6 9\nSteps:\n3 * 3 = 9 (left: 6 9)\n6 + 9 = 15 (left: 15)\n15 - 9 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 3) + 6) * 4 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 8 5"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 8 5) -> 8 - 2 = 6 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> Input: 3 3 6 9\nSteps:\n6 * 3 = 18 (left: 3 9 18)\n18 - 9 = 9 (left: 3 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (6 * 3) - (9 + 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> Input: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n15 - 7 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * (6 + 9)) - 7 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> Input: 3 6 7 8\nSteps:\n6 * 3 = 18 (left: 7 8 18)\n8 - 7 = 1 (left: 1 18)\n18 * 1 = 18 (left: 24)\nAnswer: (6 * 3) - (8 - 7) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 8"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 5 * 2 = 10 (left: 10 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 2": {
                "Step": "4 + 2 = 6 (left: 6 8 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 4 6  -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n3 * 1 = 3 (left: 3)\nAnswer: (3 * (3 + 5)) - 7 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n17 - 3 = 14 (left: 14)\nAnswer: (3 * 7) - (17 - 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 8 5"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 8 5) -> 2 + 8 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> The final answer for the input 2 4 8 9 is 4 * (8 - 2) = 24.",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 8 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "5 8 9"
                }
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8 9) -> 8 - 5 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 4 5) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 1 + 3 = 4 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: ((3 * 7) + 5) - 3 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 * 8 = 32 (left: 3 32)\n32 - 3 = 29 (left: 29)\nAnswer: (3 + 5) * (4 * 8) / 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> Input: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\nAnswer: (3 + 3) * 4 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n6 + 3 = 9 (left: 9 21)\n21 + 9 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((3 * 7) + (6 + 3)) - 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 8 5"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 8 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 8 5"
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 2 8 5) -> 8 / 2 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 6 48)\n6 - 6 = 0 (left: 0 48)\n48 / 0 is undefined\nThere is no solution to obtain 24 using the numbers 3, 3, 6, and 8.",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (8 - 2) = 24 -> Input: 3 5 7 8\nSteps:\n3 * 8 = 24 (left: 5 7 24)\n7 - 5 = 2 (left: 2 24)\n2 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (7 - 5) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 8 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "917": {
        "puzzle": "1 4 5 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "20 20"
                }
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 / 20 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 0 - 13 = -13 (left: -13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1"
                }
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 / 20 = 1 (left: 1) -> 1 * 1 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "20 20"
                }
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 - 20 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> None",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 / 1 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 - 1 = 19 (left: 1 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "20 20"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 * 20 = 400 (left: 400)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "20 20"
                }
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 * 20 = 400 (left: 400)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 / 8 = 0.625 (left: 0.625)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "40"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 * 8 = 40 (left: 40) -> 40 / 2 = 20 (left: 20)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 3": {
                "Step": "5 * 1 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "20 20"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 / 20 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "0.7692307692307693"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13) -> 10 / 13 = 0.7692307692307693 (left: 0.7692307692307693) -> 0.7692307692307693 + 2 = 2.769230769230769",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "20 20"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 / 20 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "20 20"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 - 20 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> Possible next steps: -> There are no possible next steps with the current input.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 - 1 = 19 (left: 1 19)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "20 20"
                }
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "400"
                }
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 * 20 = 400 (left: 400) -> 400 * 2 = 800",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 1 20 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 13 = -8 (left: -8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 - 1 = 19 (left: 1 19)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "10 13"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13) -> 10 / 13 = 0.7692307692307693 (left: 0.7692307692307693)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "20 20"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "0"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 - 5 = 0 (left: 0 13) -> 13 * 0 = 0 (left: 0) -> No next steps, please provide a new set of numbers.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 4 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 + 20 = 21 (left: 20 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 9 13"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "20 20"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 - 20 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "13"
                }
            },
            "Step 6": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 + 8 = 13 (left: 13) -> There are no possible next steps with the input of 13.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 * 5 = 25 (left: 25 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 1 * 20 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 13 = 18 (left: 5 18)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1"
                }
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 / 20 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 4 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 20 "
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "20 20"
                }
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 + 20 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 3": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 / 5 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 5 13"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 5 + 5 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 13 - 5 = 8 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0"
                }
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 1 20  -> 20 * 1 = 20 (left: 20 20) -> 20 - 20 = 0 (left: 0) -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Input": "1 4 5 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "918": {
        "puzzle": "2 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "7 + 2 = 9 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 + 2 = 16 (left: 12 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * 7) + (12 - 2) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 2 * 3 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "2 3 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 3 * 2 = 6 (left: 6 10)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 / 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 3 + 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 7 12"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "2 3 10"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 3 + 2 = 5 (left: 5 10)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> Input: 5 8 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 10 + 14 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "14 / 2 = 7 (left:"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 10 - 3 = 7 (left: 7 3)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 2 12 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 7 - 2 = 5 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 7"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 12 / 4 = 3 (left: 3 7) -> Input: 5 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 2 + 3 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 10 + 14 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 + 12 = 14 (left: 14 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "14 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 3.5 12"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 2 * 3.5 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 7 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 / 10 = 1.4 (left: 1.4)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 2 * 12 = 24 (left: 14 24)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 12 14"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 / 2 = 7 (left:",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 3.5 12"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12) -> 3.5 * 2 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 * 7) = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "2 3 10"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10) -> 3 * 2 = 6 (left: 6 10)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 2 3.5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "14 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "14 / 2 = 7 (left:"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 / 2 = 7 (left: -> 7 + 2 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (12 - 2) * (2 + 7) = 24"
            }
        },
        "Input": "2 2 7 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "919": {
        "puzzle": "3 3 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 / 3 = 2 (left: 3 2 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 + 7 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 3": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 7"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 9 - 6 = 3 (left: 3 7) -> 7 / 3 = 2.33333 (left: 2.33333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 * (6 - 3)) * 7 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 7 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 9 7"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 9 - 6 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 6 - 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 * 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 3": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 * 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 7"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 9 - 6 = 3 (left: 3 7) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 * 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 3": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 + 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 * 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 4": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 * 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 7"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 9 - 6 = 3 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 6 4) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 4": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 2 / 3 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 3 2 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 2 7"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 3 2 7) -> 3 * 2 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 3 9 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 7"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 9 - 6 = 3 (left: 3 7) -> 3 * 7 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 7"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 6 9 7) -> 9 - 6 = 3 (left: 3 7) -> 5 + 2 = 7 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 3": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 / 6 = 1.5 (left: 1.5 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> Input: 5 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 2 "
                }
            },
            "Step 3": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 7) -> 9 + 6 = 15 (left: 7 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "920": {
        "puzzle": "1 5 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 9 13) -> 6 + 9 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 - 1 = 12 (left: 12 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 5 - 9 = -4 (left: -4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 32 33)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1 0"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 22"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 1 * 5 = 5 (left: 5 22)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 9 13"
                }
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 9 13) -> 5 + 9 = 14 (left: 13 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 5 * 1 = 5 (left: 5 22) -> 5 * 22 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 32 = 0 (left: 1 0)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1 32"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 5 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "1 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 + 32 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 4 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 2": {
                "Step": "9 / 1 = 9 (left: 5 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 22 / 1 = 22 (left: 5 22)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "1 0"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 / 0.03125 = 1024 (left: 1024)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 22"
                }
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 5 - 1 = 4 (left: 4 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 45 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 31"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 1 31) -> 31 - 1 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "1 32"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "32 0.03125"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 5 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 13"
                }
            },
            "Step 1": {
                "Step": "5 - 1 = 4 (left: 4 9 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 13 46)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 22 - 5 = 17 (left: 1 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 + 0.03125 = 32.03125 (left: 32.03125)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "1 32"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 + 13 = 22 (left: 1 5 22)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 32"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 1 * 32 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "1 32"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1 32"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 - 1 = 4 (left: 4 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 1 = 44 (left: 44 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 32"
                }
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 * 45 = 45 (left: 13 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 / 0.03125 = 1024 (left: 1024)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 32"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 32"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 1 = 31 (left: 31)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "1 32"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 0"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 32 = 0 (left: 1 0) -> 1 + 0 = 1 (left: 0)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "1 32"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 / 1 = 5 (left: 5 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 22"
                }
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 1 5 22) -> 5 * 1 = 5 (left: 5 22)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 3": {
                "Step": "5 / 1 = 5 (left: 5 5 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 1 + 45 = 46 (left: 46 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 0"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 32 / 1 = 32 (left: 1 32) -> 32 - 32 = 0 (left: 1 0) -> There are no possible next steps with the input \"1 0\".",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "32 0.03125"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 - 13 = 32 (left: 1 32) -> 1 / 32 = 0.03125 (left: 32 0.03125) -> 32 * 0.03125 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.5",
                    "Pruned state": "1 32"
                }
            }
        },
        "Input": "1 5 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "921": {
        "puzzle": "5 6 7 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 13 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 7 13 30) -> Input: 4 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 5 13 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 30"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 6 * 5 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 5 13 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 5 7 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 11"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11) -> 6 * 11 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 11"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11) -> 11 - 6 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 5 + 13 = 18 (left: 13 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 5 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 5 7 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 30"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24) -> Answer: ((13 - 7) * 5) - 6 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 3 + 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 11"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11) -> 6 + 11 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 30"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 11"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11) -> 11 - 6 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24) -> Answer: (5 * (13 - 7)) - 6 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 2 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 11 + 13 = 24 (left: 7 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 6 13"
                }
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 2 6 13) -> 13 - 6 = 7 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "7 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> Input: 5 6 7 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> Input: 3 4 7 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 3": {
                "Step": "7 - 6 = 1 (left: 5 1 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 11"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11) -> 11 - 6 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24) -> Answer: ((13 - 7) * 5) - 6 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 + 5 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 7 13 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 30"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 / 6 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)"
            }
        },
        "Input": "5 6 7 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "922": {
        "puzzle": "5 5 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 3 + 6 = 9 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 4": {
                "Step": "8 + 5 = 13 (left: 5 10 13) -> 13 - 10 = 3 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "There are no possible next steps for the number 18."
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps for the number 18. -> There are no possible next steps for the number 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 3": {
                "Step": "8 / 5 = 1.6 (left: 5 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 5 "
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 5  -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps for the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> Input: 3 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 10 25"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 10 25) -> 8 * 10 = 80 (left: 80 25)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 4": {
                "Step": "8 + 5 = 13 (left: 5 10 13) -> 13 / 5 = 2.6 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "8 2.5"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 8 10 25) -> 25 / 10 = 2.5 (left: 8 2.5) -> 8 - 2.5 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9) -> 8 + 9 = 17 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 10 25"
                }
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 8 10 25) -> 10 / 8 = 1.25 (left: 1.25 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 10 25"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 10 25) -> 10 * 25 = 250 (left: 8 250)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "8 10"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 10) -> 10 + 2 = 12",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 10 25"
                }
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 8 10 25) -> 25 - 8 = 17 (left: 8 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 10 25"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 10 25) -> 10 * 25 = 250 (left: 8 250)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 10 25"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 10 25) -> 25 - 8 = 17 (left: 8 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps since there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9 (left: 9) -> 8 + 1 = 9 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 5 8 50)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 10 25"
                }
            },
            "Step 2": {
                "Step": "5 * 5 = 25 (left: 8 10 25) -> 8 + 10 = 18 (left: 18 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 3": {
                "Step": "8 + 5 = 13 (left: 5 10 13) -> 5 * 10 = 50 (left: 13 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 + 8 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 8 10 25)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 2": {
                "Step": "8 + 5 = 13 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 8 - 5 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps as there are no other numbers to perform operations with. The result is 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "There are no possible next steps for the number 18."
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps for the number 18. -> None",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 2": {
                "Step": "8 + 5 = 13 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 10 25"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 10 25) -> 25 - 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 4": {
                "Step": "8 + 5 = 13 (left: 5 10 13) -> 10 / 5 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 10 - 5 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "There are no possible next steps since there is only one number left."
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps since there is only one number left. -> None",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 + 8 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 10 25"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 10 25) -> 25 - 10 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 4": {
                "Step": "8 + 5 = 13 (left: 5 10 13) -> 13 + 5 = 18 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "There are no possible next steps with the input 18."
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 5 8 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 + 8 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 10 25"
                }
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 8 10 25) -> 25 / 10 = 2.5 (left: 8 2.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "There are no possible next steps for the number 18."
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps for the number 18. -> None",
                "Pruning": "NA"
            }
        },
        "Input": "5 5 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "923": {
        "puzzle": "2 4 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 4) * (6 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 ^ 2 = 16 (left: 2 16 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 5 + 7 = 12",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 + 10 = 34 (left: 10 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 4) * (6 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 - 18 = -12 (left: -12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 * 10 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 + 10 = 34 (left: 10 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 4) * (6 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 - 10 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 + 12 = 16 (left: 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 / 4 = 3 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 4) * (6 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> Input: 3 9 5",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 8 + ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 * 10 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 3 "
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 2 3  -> 2 - 3 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 4) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 4) * (6 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 6 6 12) -> 6 - 6 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 - 10 = -7.6 (left: -7.6)",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 6 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "924": {
        "puzzle": "6 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 6 8 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 17 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (8 * (11 + 13)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "8 11 13"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 24 / 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (11 + (6 + 7)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 7 19"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 7 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 7 13"
                }
            },
            "Step 2": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 7 13) -> 6 / 2 = 3 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 / 2 = 3 (left:"
                }
            },
            "Step 3": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 7 13) -> 6 / 2 = 3 (left: -> 6 - 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 24"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 8 / 24 = 0.33333 (left: 0.33333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 7 13"
                }
            },
            "Step 3": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 7 13) -> 7 * 6 = 42 (left: 42 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (8 * (6 + 7)) + 11 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 + 11 = 19 (left: 6 7 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 2": {
                "Step": "8 * 11 = 88 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "5 7 8"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> Input: 3 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 7 13"
                }
            },
            "Step 5": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 7 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (11 + (6 + 7)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 11"
                }
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 7 11) -> 2 * 7 = 14 (left: 14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 7 8"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 7 - 5 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 7 13"
                }
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 7 13) -> 13 / 6 = 2.1666666666666665 (left: 2.166666666666666",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 7 13"
                }
            },
            "Step 3": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 7 13) -> 6 + 7 = 13 (left: 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 7 19"
                }
            },
            "Step 4": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 7 - 6 = 1 (left: 1 19)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (8 * (11 + 13)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 7 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 7 8"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 7 / 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 66 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 8 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 6 1 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 7 13"
                }
            },
            "Step 5": {
                "Step": "8 + 11 = 19 (left: 6 7 19) -> 19 - 6 = 13 (left: 6 7 13) -> 13 / 7 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3) -> 3 * 8 = 24 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 8 11 42)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 7 8"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> 7 - 5 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 11 + 13 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (6 + 7) + (11 + 13) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "6 7 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "925": {
        "puzzle": "7 9 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 4 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11.57 13"
                }
            },
            "Step 4": {
                "Step": "9 * 9 = 81 (left: 7 81 13) -> 81 / 7 = 11.57 (left: 11.57 13) -> 11.57 * 13 = 150.41 (left: 150.41)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((9 - 7) + 9) + 13 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 4 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11.57 13"
                }
            },
            "Step 4": {
                "Step": "9 * 9 = 81 (left: 7 81 13) -> 81 / 7 = 11.57 (left: 11.57 13) -> 13 - 11.57 = 1.43 (left: 1.43 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((9 - 7) + 9) + 13 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 81 13"
                }
            },
            "Step 2": {
                "Step": "9 * 9 = 81 (left: 7 81 13) -> 81 / 7 = 11.57 (left: 11.57 13)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11.57 13"
                }
            },
            "Step 3": {
                "Step": "9 * 9 = 81 (left: 7 81 13) -> 81 / 7 = 11.57 (left: 11.57 13) -> 11.57 * 13 = 150.41 (left: 150.41)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((9 - 7) + 9) + 13 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 4 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 4 9"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 9 + 7 = 16 (left: 4 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "7 4 9"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 7 + 4 = 11 (left: 11 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "9 11"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 - 2 = 11 (left: 9 11) -> 11 - 9 = 2 (left: 2)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 9 "
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9  -> 5 - 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11.57 13"
                }
            },
            "Step 3": {
                "Step": "9 * 9 = 81 (left: 7 81 13) -> 81 / 7 = 11.57 (left: 11.57 13) -> 11.57 - 13 = -1.43 (left: -1.43)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "9 13 63"
                }
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 9 13 63) -> 9 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((9 - 7) + 9) + 13 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 9 13 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 9 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11.57 13"
                }
            },
            "Step 4": {
                "Step": "9 * 9 = 81 (left: 7 81 13) -> 81 / 7 = 11.57 (left: 11.57 13) -> 13 + 11.57 = 24.57 (left: 11.57 24.57)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 9 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 / 7 = 1.2857 (left: 1.2857 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 13"
                }
            },
            "Step 2": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 13 - 1 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1.2857 9 13"
                }
            },
            "Step 3": {
                "Step": "9 / 7 = 1.2857 (left: 1.2857 9 13) -> 13 - 9 = 4 (left: 1.2857 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 + 7 = 20 (left: 7 9 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11.57 13"
                }
            },
            "Step 3": {
                "Step": "9 * 9 = 81 (left: 7 81 13) -> 81 / 7 = 11.57 (left: 11.57 13) -> 11.57 - 13 = -1.43 (left: -1.43)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 - 2 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: (9 - 7 + 9) + 13 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 7 13 27)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 9 13 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 9 13 63)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 9 / 2 = 4.5 (left: 4.5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 + 9 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((9 - 7) + 9) + 13 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 * 9 = 81 (left: 7 81 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 9 13"
                }
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 - 9 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "9 11"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 13 - 2 = 11 (left: 9 11) -> 11 - 9 = 2 (left: 2)"
            }
        },
        "Input": "7 9 9 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "926": {
        "puzzle": "3 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 9 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 - 12 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 18"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18) -> 18 + 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 6) / (9 / 12) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 9 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 12 18"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 12 = 108 (left: 18 108)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 3"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 18 3) -> 18 / 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18 108"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 12 = 108 (left: 18 108) -> 18 * 108 = 1944 (left: 1944)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 12 18"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 9 * 2 = 18 (left: 18 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18 108"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 12 = 108 (left: 18 108) -> 108 / 18 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 6) / (9 - 12) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18 108"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 12 = 108 (left: 18 108) -> 3 + 3 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 18"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 18 - 9 = 9 (left: 9 18) -> 9 - 18 = -9 (left: -9)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 - 6 = 6 (left: 9 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 18 3)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 / 9 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 9) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 / 12 = 1.5 (left: 1.5 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18 108"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 12 = 108 (left: 18 108) -> 108 - 18 = 90 (left: 90)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 6 + 9 = 15 (left: 9 9 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 / 6 = 1.5 (left: 1.5 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 3) * (6 / 2) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 + 9 = 21 (left: 18 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "18 3"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 12 - 9 = 3 (left: 18 3) -> 18 * 3 = 54 (left: 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 9 / 6 = 1.5 (left: 1.5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 / 9 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 12 18"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 9 12 18) -> 9 + 12 = 21 (left: 18 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 18 / 9 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 9 12 18)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 9 9"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 6 9 9) -> 9 / 6 = 1.5 (left: 1.5 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 3": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18 108"
                }
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 12 = 108 (left: 18 108) -> 18 / 108 = 0.16666666666666666 (left: 0.16666666666666666)"
            }
        },
        "Input": "3 6 9 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "927": {
        "puzzle": "6 9 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 + 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n6 - 3 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (3 * 7) - (6 - 3) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 7\nSteps:\n3 * 7 = 21 (left: 4 5 21)\n5 + 4 = 9 (left: 9 21)\n9 + 21 = 30 (left: 30)\nAnswer: (3 * 7) + (5 + 4) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n5 + 7 = 12 (left: 3 3 12)\n3 * 3 = 9 (left: 9 12)\n12 - 9 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 3 = 15 (left: 6 13 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 5 7 8\nSteps:\n7 - 3 = 4 (left: 4 5 8)\n8 - 5 = 3 (left: 4 3)\n4 * 3 = 12 (left: 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((7 - 3) * (8 - 5)) + 12 = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 2 3 5 9\nSteps:\n5 - 3 = 2 (left: 2 9 2)\n2 * 9 = 18 (left: 18 2)\n18 + 2 = 20 (left: 20)\n20 + 4 = 24\nAnswer: ((5 - 3) * 9) + 2 = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 * 2 = 24 (left: 24)\nAnswer: (3 * 4) * ((5 + 6) / 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 2": {
                "Step": "9 + 12 = 21 (left: 6 13 21)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n7 + 8 = 15 (left: 3 3 15)\n3 * 3 = 9 (left: 9 15)\n15 - 9 = 6 (left: 6 24)\n6 * 24 = 24\nAnswer: ((3 * 3) + (7 + 8)) * 24 = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nAnswer: ((3 + 5) * 8) - 3 = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)\n5 * 9 = 45 (left: 45)\nAnswer: (3 * 3) * (8 - 5) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 6 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 / 4 = 1.5 (left: 1.5 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48 6)\n48 / 6 = 24 (left: 24)\nAnswer: (3 + 3) * (6 * 8) = 24",
                "Pruning": {
                    "Idx": "8.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n3 + 9 = 12 (left: 12 24)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 9 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 * 13 = 156 (left: 15 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 13 15"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 15 - 12 = 3 (left: 3 13 15) -> 3 * 13 = 39 (left: 15 39)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n8 + 10 = 18 (left: 3 18)\n18 - 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 7) + 8) + 9 = 24",
                "Pruning": {
                    "Idx": "8.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) / 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 13 / 12 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: ((3 * 7) + 5) - 3 = 24",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "6 4 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 4 9\nSteps:\n3 * 4 = 12 (left: 3 9 12)\n9 - 3 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)\nAnswer: (3 * 4) * (9 - 3) = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "3 13 15"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 * 3 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (8 - 3) * (3 + 9) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> The answer is 6 * (13 - 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (5 + 7 - 8) * 3 = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n27 - 6 = 21 (left: 3 21)\n21 - 3 = 18 (left: 18)\nAnswer: (3 * 9) - (6 + 3) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (3 + 5) * (4 * 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 13"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 12 13) -> 12 - 3 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 2": {
                "Step": "12 + 6 = 18 (left: 9 13 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 * 2 = 24 (left: 24)\nAnswer: (3 * 4) * (5 + 6) = 24",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 8 = 1 (left: 1 9)\n1 * 24 = 24 (left: 24)\nAnswer: (3 * 3) + (8 - 1) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 6 7\nSteps:\n3 * 7 = 21 (left: 3 6 21)\n21 - 6 = 15 (left: 3 15)\n15 + 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 7) - 6) + 3 + 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (5 - 3) = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n8 - 3 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)\n50 / 2 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((3 + 7) * 10) / 2)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 12 13) -> 12 / 6 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 15 - 12 = 3 (left: 3 13 15)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (3 * (5 + 7)) - 8 = 24",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 3 9\nSteps:\n3 * 3 = 9 (left: 9 3)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (3 * 3) * (9 - 3) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 6 4  -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (13 - 9) = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 9 8)\n9 - 8 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: (3 * 3 - 8) * 24 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "928": {
        "puzzle": "4 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 + 7 = 14 (left: 3 14)\n14 - 3 = 11 (left: 11)\n11 * 2 = 24 (left: 24)\nAnswer: ((3 + 4) + (7 + 7)) * 2 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 + 3 = 16 (left: 16)\n16 + 16 = 32 (left: 32)\n32 - 8 = 24 (left: 24)\nAnswer: (((",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 5 6\nSteps:\n3 * 5 = 15 (left: 3 6 15)\n15 - 6 = 9 (left: 3 9)\n9 * 3 = 27 (left: 27)\nAnswer: (3 * 5) - (6 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n17 - 3 = 14 (left: 14)\nAnswer: ((3 * 7) - 4) - 3 = 24",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\nAnswer: ((3 * 3) - 8) * 9 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 15 10)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 + 7) * 3) - 10 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 2": {
                "Step": "4 * 7 = 28 (left: 9 28 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 5 5 7\nSteps:\n5 * 5 = 25 (left: 3 7 25)\n25 - 7 = 18 (left: 3 18)\n18 - 3 = 15 (left: 15)\nAnswer: (5 * 5) - (7 - 3) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n6 - 3 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\nAnswer: ((3 * 4) - 6) * 3 = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 * 3 + 8) * 6 = 24",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 4 6 8\nSteps:\n4 * 6 = 24 (left: 3 8 24)\n8 - 3 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (4 * 6) * (8 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 13 / 4 = 3.25 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 4 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - (13 - 9)) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 + 8 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((7 - 3) + 6) + 8 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n6 - 9 = -3 (left: -3 24)\n-3 + 24 = 21 (left: 21)\nAnswer: (3 * 8) - (6 + 9) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 + 12 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\n16 + 3 = 19 (left: 19)\n19 + 19 = 38 (left: 38)\n38 - 14 = 24 (left: 24)\nAnswer: ((",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n17 + 3 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 * 7) - 4) + 3 + 4 = 24",
                "Pruning": {
                    "Idx": "0.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - (13 - 9)) = 24 -> Input: 3 3 5 6\nSteps:\n3 * 5 = 15 (left: 3 6 15)\n6 - 3 = 3 (left: 3 15)\n3 * 15 = 45 (left: 45)\n45 / 3 = 15 (left: 15)\nAnswer: ((3 * 5) - 3) * (6 / 3) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9 9)\n1 * 9 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 8\nSteps:\n3 * 8 = 24 (left: 3 4 24)\n4 - 3 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (4 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - (13 - 9)) = 24 -> Input: 3 5 6 7\nSteps:\n3 + 7 = 10 (left: 5 6 10)\n6 - 5 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 * 2 = 24 (left: 24)\nAnswer: ((3 + 7) * (6 - 5)) * 2 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n3 * 4 = 12 (left: 12 10)\n12 + 10 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((3 + 7) * 4) + 2 = 24",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 5 6 7\nSteps:\n3 + 7 = 10 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n30 / 10 = 3 (left: 3 30)\n3 * 3 = 9 (left: 9 30)\n30 - 9 = 21 (left: 21)\n21 + 9 = 30 (left: 30",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n8 - 3 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)\n50 / 2 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 + 7) * (8 - 3) /",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 + 12 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 4) + 7) + (16 - 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 7) + 5) - 3 + 1 = 24",
                "Pruning": {
                    "Idx": "8.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 5 6 9\nSteps:\n5 + 9 = 14 (left: 3 6 14)\n14 - 6 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (5 + 9)) - 6 = 24",
                "Pruning": {
                    "Idx": "8.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\nAnswer: (3 + 5) * (8 - 3) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n1 * 3 = 3 (left: 3)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (3 + 5)) * 7 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24\nAnswer: (3 * 8) * (3 + 6) = 24",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 "
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) / (6 - 3) = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n6 - 3 = 3 (left: 3 27)\n27 / 3 = 9 (left: 9 9)\n9 - 9 = 0 (left: 0)\nAnswer: ((3 * 9) - 6) / 9 = 24",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 + 15 = 24 (left: 24)\nAnswer: (3 * 8) + (6 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 6 8 9\nSteps:\n6 * 3 = 18 (left: 8 9 18)\n9 - 8 = 1 (left: 1 18)\n1 * 18 = 18 (left: 18)\nAnswer: (6 * 3) * (9 - 8) = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (7 - (13 - 9)) = 24 -> All possible solutions have been provided for the given inputs.",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 7) = 24 -> Input: 3 5 6 7\nSteps:\n3 + 7 = 10 (left: 5 6 10)\n5 * 6 = 30 (left: 10 30)\n30 / 10 = 3 (left: 3 30)\n3 * 30 = 90 (left: 90)\n90 / 3 = 24 (left: 24)\nAnswer: ((3 + 7) * 6) / ",
                "Pruning": "NA"
            }
        },
        "Input": "4 7 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "929": {
        "puzzle": "5 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "24 12"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((12 - 8) - (6 - 4)) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "5 6 4"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 * 6 = 30 (left: 30 4)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "30 4"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 * 6 = 30 (left: 30 4) -> 30 + 4 = 34 (left: 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "30 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 * 6 = 30 (left: 30 4) -> 30 / 4 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "12 / 6 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 12 / 6 = 2 (left: -> 4 + 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 12 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 12 / 6 = 2 (left:",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 12 - 6 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "60 12"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 5 48 12) -> 12 * 5 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 30 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 6 - 4 = 2 (left: 5 2) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "30 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 * 6 = 30 (left: 30 4) -> 30 / 4 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 6 - 4 = 2 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "12 / 6 = 2 (left:"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 12 / 6 = 2 (left: -> 6 + 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 12 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 / 8 = 1.5 (left: 1.5 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 5 48 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 6 - 4 = 2 (left: 5 2) -> 5 + 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - 4) * (8 + 12) = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (6 - (12 - 8)) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 5 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 30 12"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 8 30 12) -> 12 * 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 / 4 = 1.5 (left: 1.5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "5 48 12"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 5 48 12) -> 12 * 5 = 60 (left: 60 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 5 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "30 4"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 5 * 6 = 30 (left: 30 4) -> 30 * 4 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24 12"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (12 - 8) * (6 - 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "5 48 12"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 5 48 12) -> 48 - 5 = 43 (left: 43 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((12 - 8) - (6 - 4)) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 5 6 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "5 6 4"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 6 - 4 = 2 (left: 5 2)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 2"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 5 6 4) -> 6 - 4 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 6 12) -> 6 - 4 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 - (12 - 8)) * 5 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "5 6 8 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "930": {
        "puzzle": "2 4 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 24"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 + 5 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 8 + 6 = 14 (left: 14 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 3 * 9 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 * 4) * (6 + 7) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 24"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 5 * 24 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 * (4 + 6)) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 * 7) / (2 + 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 4 6 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 2 * (4 + (6 * 7)) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 2 * (4 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 * 4) * (6 + 7) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 12 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 7 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 4) * (6 * 7) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: ((2 + 4) * 7) - 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 9 - 3 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (2 + 6) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 * 7) / (2 + 4) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 1": {
                "Step": "4 - 2 = 2 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 4) * (6 * 7) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 4) * (6 * 7) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 / 4 = 1.5 (left: 1.5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 3 + 9 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 * 7) / (2 + 4) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 4) * (6 * 7) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 8 6 7) -> 6 * 7 = 42 (left: 8 42)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 9 - 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 6 + 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 4) * (6 * 7) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 4) * (6 * 7) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 + 4) * 6 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 2 4  -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (2 * (4 + 6)) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 6 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "931": {
        "puzzle": "2 5 10 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 / 10 = 0.1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "11"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "90"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 90) -> 90 - 2 = 88",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 3": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 1 + 5 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 10 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> Input: 1 3 4 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "90"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 90) -> 90 is already a single number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "10 + 2 = 12 (left: 5 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 2 = 12 (left: 5 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 4": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 * 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 2 10 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 - 8 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 10 "
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 2 10  -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "11"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 / 10 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with just the number 11.",
                "Pruning": null
            }
        },
        "Input": "2 5 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "932": {
        "puzzle": "6 6 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "48"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> 48 - 4 = 44 (left: 44)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 3": {
                "Step": "6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": ""
                }
            },
            "Step 5": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> It seems like you did not provide an input to work with. Please provide the numbers for which you want to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> There are no more possible next steps as all the numbers have been used. -> There are no more possible next steps as all the numbers have been used.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": ""
                }
            },
            "Step 4": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> There are no more possible next steps as all the numbers have been used.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": ""
                }
            },
            "Step 5": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> Since you did not provide an input, I am unable to generate possible next steps. Please input a set of numbers to continue the calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> There are no more possible next steps as all the numbers have been used. -> No more possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 42 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 2": {
                "Step": "7 + 6 = 13 (left: 6 13 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 1 7 12) -> 7 - 1 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": ""
                }
            },
            "Step 5": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> Please provide a sequence of numbers to continue the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> There are no more possible next steps as all the numbers have been used. -> N/A",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 6 7 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": ""
                }
            },
            "Step 5": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> It looks like you did not provide any input for the next steps. Please provide the numbers you want to work with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> There are no more possible next steps as all the numbers have been used. -> None",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 /",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 8 12 42)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 9 * 3 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 * 2 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> There are no more possible next steps as all the numbers have been used. -> There are no more possible next steps as all the numbers have been used.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 6 = 13 (left: 6 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 6 7 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": ""
                }
            },
            "Step 4": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> It appears that you did not provide any input. Please provide numbers to continue with the calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> There are no more possible next steps as all the numbers have been used. -> None",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 6 / 42 = 0.142",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 13 12"
                }
            },
            "Step 3": {
                "Step": "7 + 6 = 13 (left: 6 13 12) -> ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 / 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "48"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There are no possible next steps as the input is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> There are no more possible next steps as all the numbers have been used. -> There are no more possible next steps as all the numbers have been used.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 1 7 12) -> 12 / 1 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 3": {
                "Step": "7 + 6 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 / 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> There are no more possible next steps as all the numbers have been used. -> None",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 / 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> None - only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 5": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> There are no more possible next steps as all the numbers have been used. -> None",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no more possible next steps as all the numbers have been used."
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> There are no more possible next steps as all the numbers have been used. -> N/A",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> Input: 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 6 7 12"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 - 6 = 36 (left: 36) -> 36 + 2 = 38 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": ""
                }
            },
            "Step 4": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> There are no possible next steps as the input is already in its simplest form.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": ""
                }
            },
            "Step 5": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> It appears that the input is missing. Could you please provide the numbers for the next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "There are no more possible next steps as all the numbers have been used."
                }
            },
            "Step 6": {
                "Step": "7 + 6 = 13 (left: 6 13 12) ->  -> There are no more possible next steps as all the numbers have been used. -> No more possible next steps.",
                "Pruning": null
            }
        },
        "Input": "6 6 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "933": {
        "puzzle": "6 9 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 / 9 = 1.22 (left: 1.22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "13"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13) -> 13 * 2 = 26 (left: 8 8 26)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 5 * 9 = 45 (left: 9 45)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 1 / 9 = 0.1111111111111111 (left: 0.1111111111111111)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 2": {
                "Step": "11 + 6 = 17 (left: 6 9 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "13"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 / 6 = 1.5 (left: 1.5 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 - 2 = 8 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 + 9 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "11 12"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 11 12) -> 11 / 12 = 0.9167 (left: 0.9167)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11) -> 11 - 6 = 5 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 * 9 = 81 (left: 11 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 3": {
                "Step": "11 + 6 = 17 (left: 9 9 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 5 + 9 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "Input: 3 7 7"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> Input: 3 7 7 -> 7 - 3 = 4 (left: 4 7 7)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 5 * 9 = 45 (left: 9 45)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8) -> There are no possible next steps with just one number input.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 9 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> Input: 3 7 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "9 9"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 + 9 = 12 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 9 9"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 5 + 9 = 14 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "3 9 11"
                }
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 + 9 = 12 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "13"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13) -> 13 - 8 = 5 (left: ",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 - 5 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 5 9 9) -> 9 / 5 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 2 = 12",
                "Pruning": null
            }
        },
        "Input": "6 9 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "934": {
        "puzzle": "5 8 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 11 = 1 (left: 5 1 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1.6 11 12"
                }
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 11 12) -> 12 - 1.6 = 10.4 (left: 10"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 40"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 11 12 40) -> 11 + 12 = 23 (left: 23 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 12 * 11 = 132 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 16 - 8 = 8 (left: 8 16) -> 8 - 16 = -8 (left: -8)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.5 16"
                }
            },
            "Step 3": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 / 8 = 1.5 (left: 1.5 16) -> 16 / 1.5 = 10.67 (left: 1.5 10.67)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24 12"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 * 13 = 143 (left: 12 143)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 3": {
                "Step": "12 - 11 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.5 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 / 8 = 1.5 (left: 1.5 16) -> 1.5 + 16 = 17.5 (left: 17.5)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 * 13 = 156 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 11 12 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24 12"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 * 12 = 288 (left: 288)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 13 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 2": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 / 8 = 1.5 (left: 1.5 16)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.5 16"
                }
            },
            "Step 3": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 / 8 = 1.5 (left: 1.5 16) -> 16 - 1.5 = 14.5 (left: 14.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.5 16"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 / 8 = 1.5 (left: 1.5 16) -> 16 / 1.5 = 10.666666666666666 (left: 10.666666666666666)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 11 12 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "8 + 11 = 19 (left: 5 12 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 12 16"
                }
            },
            "Step 2": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 16 - 8 = 8 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.5 16"
                }
            },
            "Step 3": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 / 8 = 1.5 (left: 1.5 16) -> 1.5 * 16 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 / 8 = 1.5 (left: 1.5 16) -> 1.5 * 16 = 24 (left: 24) -> Answer: 11 + (5 * (12 / 8)) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "8 / 5 = 1.6 (left: 1.6 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 / 11 = 1.181818181",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 / 8 = 1.5 (left: 1.5 16) -> 1.5 * 16 = 24 (left: 24) -> Answer: (11 + 5) * (12 / 8) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 13 12"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 - 13 = -2 (left: -2 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 40"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 11 12 40) -> 11 * 12 = 132 (left: 132 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 / 8 = 1.5 (left: 1.5 16) -> 1.5 * 16 = 24 (left: 24) -> Answer: (11 + 5) * (12 / 8) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 2": {
                "Step": "12 - 11 = 1 (left: 5 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.5 16"
                }
            },
            "Step 3": {
                "Step": "11 + 5 = 16 (left: 8 12 16) -> 12 / 8 = 1.5 (left: 1.5 16) -> 16 - 1.5 = 14.5 (left: 14.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24 12"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 13 12) -> 11 + 13 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)"
            }
        },
        "Input": "5 8 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "935": {
        "puzzle": "5 6 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "2400"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 8 * 10 = 80 (left: 80 30) -> 80 * 30 = 2400 (left: 2400) -> 2400 * 2 = 4800",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 * 2 = 8 (left: 8 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 5 + 2 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "8 10 30"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 10 - 8 = 2 (left: 2 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 / 5 = 0.4 (left: 0.4 10) -> 10 - 0.4 = 9.6 (left: 9.6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "2400"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 8 * 10 = 80 (left: 80 30) -> 80 * 30 = 2400 (left: 2400) -> 2 * 400 = 800 (left: 800 2400)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 + 11 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 8 + 10 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 / 5 = 0.4 (left: 0.4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 / 5 = 0.4 (left: 0.4 10) -> 0.4 * 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "2400"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 8 * 10 = 80 (left: 80 30) -> 80 * 30 = 2400 (left: 2400) -> 400 / 2 = 200 (left: 200 400)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 + 2 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 4 + 8 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 / 5 = 0.4 (left: 0.4 10) -> 10 * 0.4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "2400"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 8 * 10 = 80 (left: 80 30) -> 80 * 30 = 2400 (left: 2400) -> 2 + 4 + 0 + 0 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 - 8 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "8 10 30"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 30 - 8 = 22 (left: 8 10 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "48 50"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 10 * 5 = 50 (left: 48 50) -> 48 - 50 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "2400"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 8 * 10 = 80 (left: 80 30) -> 80 * 30 = 2400 (left: 2400) -> 2400 - 2 = 2398 (left: 2 2398)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 10 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 5 + 10 = 15 (left: 15 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> 7 + 3 = 10 (left: 10 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "80 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 8 * 10 = 80 (left: 80 30) -> 80 / 30 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 / 5 = 0.4 (left: 0.4 10) -> 10 - 0.4 = 9.6 (left: 9.6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "2400"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 8 * 10 = 80 (left: 80 30) -> 80 * 30 = 2400 (left: 2400) -> 2400 * 2 = 4800",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 / 4 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 18 "
                }
            },
            "Step 2": {
                "Step": "8 + 10 = 18 (left: 5 18  -> 5 + 18 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "8 10 30"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 8 * 10 = 80 (left: 80 30)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 10 - 4 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "48 50"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 10 * 5 = 50 (left: 48 50) -> 48 + 50 = 98 (left: 98)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "2400"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 8 * 10 = 80 (left: 80 30) -> 80 * 30 = 2400 (left: 2400) -> 24 * 100 = 2400",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 10 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 11 - 8 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 10 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 5 * 10 = 50 (left: 10 48 50)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 10 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 10 * 5 = 50 (left: 48 50)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "80 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 8 * 10 = 80 (left: 80 30) -> 80 * 30 = 2400 (left: 2400)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "2400"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 8 * 10 = 80 (left: 80 30) -> 80 * 30 = 2400 (left: 2400) -> 2400 / 2 = 1200",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 10 = 18 (left: 5 18 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 5 10 48)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 8 10 30)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "8 10 30"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 8 + 10 = 18 (left: 18 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> 8 - 4 = 4 (left: 4 10) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "2400"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 8 * 10 = 80 (left: 80 30) -> 80 * 30 = 2400 (left: 2400) -> 2400 / 2 = 1200 (left: 1200)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 10 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 5 10 48) -> 5 + 10 = 15 (left: 15 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 2 6 10) -> 6 / 2 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 8 10) -> Input: 6 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0.4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 2 / 5 = 0.4 (left: 0.4 10) -> 0.4 + 10 = 10.4 (left: 10.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "2400"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 8 * 10 = 80 (left: 80 30) -> 80 * 30 = 2400 (left: 2400) -> 400 * 6 = 2400 (left: 2400)",
                "Pruning": "NA"
            }
        },
        "Input": "5 6 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "936": {
        "puzzle": "6 11 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 77 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 13 17"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 13 + 17 = 30 (left: 12 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 - 12 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 13 17"
                }
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> Input: 5 7 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 3": {
                "Step": "11 + 12 = 23 (left: 6 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 \u2248 4.17 (left: 4.17 11 25)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13) -> 9 / 3 = 3 (left: 3 9 27 -> 3 * 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 12 13 66)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 12 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 12 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 - 12 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.17 11 25"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 \u2248 4.17 (left: 4.17 11 25) -> 11 - 4.17 = 6.83 (left: 6.83 25)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13) -> 9 / 3 = 3 (left: 3 9 27 -> Possible next steps",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 11 12 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 13 17"
                }
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "0.545 12 13"
                }
            },
            "Step 3": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 + 12 = 12.545 (left: 12.545 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 11 * 6 = 66 (left: 66 25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6.54 13"
                }
            },
            "Step 5": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13) -> 6.54 + 13 = 19.54 (left: 19.54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13) -> 9 / 3 = 3 (left: 3 9 27 -> 27 - 9 = 18 (left: 3 18)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 * 11 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "0.545 12 13"
                }
            },
            "Step 2": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13) -> 0.545 * 12 = 6.54 (left: 6.54 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> 18 - 8 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "18"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13) -> 9 / 3 = 3 (left: 3 9 27 -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 2": {
                "Step": "12 * 13 = 156 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 12 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.17 11 25"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 \u2248 4.17 (left: 4.17 11 25) -> 11 / 4.17 \u2248 2.64 (left: 2.64 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 11 = 0.545 (left: 0.545 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 11 = 2 (left: 6 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 11 + 7 = 18 (left: 18 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 13 17"
                }
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 13 * 17 = 221 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 12 13 17)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 13 23"
                }
            },
            "Step 2": {
                "Step": "11 + 12 = 23 (left: 6 13 23) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 13"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 + 12 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 13"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13) -> 9 / 3 = 3 (left: 3 9 27",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> 18 * 8 = 144 (left: 8)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 * 13 = 156 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 11 25"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 6 + 11 = 17 (left: 17 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 12 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 "
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 13 17"
                }
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 12 * 13 = 156 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> 18 - 8 = 10 (left: 8)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "18"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13) -> 5 + 13 = 18 (left: 18) -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 12 13 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "12 13 66"
                }
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 66 / 12 = 5.5 (left",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 3": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 11 12  -> 11 / 12 = 0.9166666666666666 (left: 0.9166666666666666)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4.17 11 25"
                }
            },
            "Step 5": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 / 6 \u2248 4.17 (left: 4.17 11 25) -> 11 / 4.17 = 2.64 (left: 2",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 12 13 17) -> 17 - 12 = 5 (left: 5 13) -> 9 / 3 = 3 (left: 3 9 27 -> 3 * 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Input": "6 11 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "937": {
        "puzzle": "2 2 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 * 2) * 8) - 8 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 8"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "4 8"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: ((2 * 2) * 8) - 8 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "8 32"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 * 4 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 32"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 + 8) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 - 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 2 + 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 32"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 32"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24) -> Answer: (2 * 2) * (8 - 8) = 24"
            }
        },
        "Input": "2 2 8 8",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "938": {
        "puzzle": "2 7 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 12 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 / 7 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 12 20"
                }
            },
            "Step 4": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 - 2 = 10 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 23"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3.42857142857 9.57142857143"
                }
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.42857142857 (left: 3.42857142857 13) -> 13 - 3.42857142857 = 9.57142857143 (left: 3.42857142857 9.57142857143) -> 9.571428",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 13 - 3.5 = 9.5 (left: 3.5 9.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 14 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5 12"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 5 12) -> 12 - 5 = 7 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3.42857142857 13"
                }
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.42857142857 (left: 3.42857142857 13) -> 13 / 3.42857142857 = 3.78571428571 (left: 3.78571428571)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3.78571428571 13"
                }
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.42857142857 (left: 3.42857142857 13) -> 13 / 3.42857142857 = 3.78571428571 (left: 3.78571428571 13) -> 13 - 3.78571428571 = 9.21428571429 (left: 9.21428571429)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 12 = 14 (left: 7 14 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 13 + 7 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 * 12 = 42 (left: 13 42)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3.42857142857 13"
                }
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.42857142857 (left: 3.42857142857 13) -> 13 / 3.42857142857 = 3.78571428571 (left: 3.78571428571 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3.42857142857 9.57142857143"
                }
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.42857142857 (left: 3.42857142857 13) -> 13 - 3.42857142857 = 9.57142857143 (left: 3.42857142857 9.57142857143) -> 3.42857142857 * 9.57142857143 = 32.8571428572 (left: 32.857142",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 12 = 19 (left: 2 19 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 2": {
                "Step": "7 * 2 = 14 (left: 14 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 13 = 1 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.33 13"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 / 9 = 1.33 (left: 1.33 13) -> 13 - 1.33 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3.42857142857 9.57142857143"
                }
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.42857142857 (left: 3.42857142857 13) -> 13 - 3.42857142857 = 9.57142857143 (left: 3.42857142857 9.57142857143) -> 3.42857142857 * 9.57142857143 = 32.857142857 (left: 32.857142857)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 14 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 14 - 7 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "7 12 15"
                }
            },
            "Step 3": {
                "Step": "13 + 2 = 15 (left: 7 12 15) -> 7 * 12 = 84 (left: 84 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 12 20"
                }
            },
            "Step 4": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 + 2 = 14 (left: 14 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3.42857142857 13"
                }
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.42857142857 (left: 3.42857142857 13) -> 3.42857142857 + 13 = 16.42857142857 (left: 16.42857142857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3.78571428571 13"
                }
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.42857142857 (left: 3.42857142857 13) -> 13 / 3.42857142857 = 3.78571428571 (left: 3.78571428571 13) -> 13 / 3.78571428571 = 3.4347826087 (left: 3.4347826087 3.78571428571)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "13 + 2 = 15 (left: 7 12 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "9 12 13"
                }
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 / 9 = 1.33 (left: 1.33 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.42857142857 (left: 3.42857142857 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 12 20"
                }
            },
            "Step 4": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 - 2 = 10 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.33 13"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 / 9 = 1.33 (left: 1.33 13) -> 1.33 * 13 = 17.29 (left: 17.29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3.42857142857 9.57142857143"
                }
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.42857142857 (left: 3.42857142857 13) -> 13 - 3.42857142857 = 9.57142857143 (left: 3.42857142857 9.57142857143) -> 9.57142857143 / 3.42857142857 = 2.8 (left: 2.8 9.57142857143)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 12 14 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5 12"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 5 12) -> 2 + 5 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 12 13"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 - 5 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3.5 12 13"
                }
            },
            "Step 4": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 3.5 + 12 = 15.5 (left: 13 15.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3.42857142857 13"
                }
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.42857142857 (left: 3.42857142857 13) -> 13 - 3.42857142857 = 9.57142857143 (left: 3.42857142857 9.57142857143)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3.78571428571 13"
                }
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.42857142857 (left: 3.42857142857 13) -> 13 / 3.42857142857 = 3.78571428571 (left: 3.78571428571 13) -> 13 + 3.78571428571 = 16.78571428571 (left: 16.78571428571)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 14 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 12 13 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 12 13"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 12 / 5 = 2.4 (left: 2.4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "7 14 13"
                }
            },
            "Step 3": {
                "Step": "12 + 2 = 14 (left: 7 14 13) -> 7 + 14 = 21 (left: 13 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 12 20"
                }
            },
            "Step 4": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 12 + 2 = 14 (left: 14 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3.42857142857 13"
                }
            },
            "Step 5": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.42857142857 (left: 3.42857142857 13) -> 13 / 3.42857142857 = 3.785714285",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3.78571428571 13"
                }
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.42857142857 (left: 3.42857142857 13) -> 13 / 3.42857142857 = 3.78571428571 (left: 3.78571428571 13) -> 3.78571428571 * 13 = 49.28571428583 (left: 49.28571428583)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 + 1 = 13 (left: 2 7 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 13 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 12 13"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 12 13) -> 5 + 12 = 17 (left: 17 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 5 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "2 12 20"
                }
            },
            "Step 4": {
                "Step": "7 + 13 = 20 (left: 2 12 20)  -> 20 - 2 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 23"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3.78571428571 13"
                }
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.42857142857 (left: 3.42857142857 13) -> 13 / 3.42857142857 = 3.78571428571 (left: 3.78571428571 13) -> 3.78571428571 * 13 = 49.28571428583 (left: 49.28571428583)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "7 + 12 = 19 (left: 2 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "7 + 13 = 20 (left: 2 12 20) ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 5 12 13"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 5 12 13) -> 12 + 2 = 14 (left: 5 12 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 23"
                }
            },
            "Step 5": {
                "Step": "13 - 2 = 11 (left: 7 11 12) -> 11 + 12 = 23 (left: 7 23) -> 23 / 7 = 3.2857142857142856 (left: 3.2857142857142856)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "3.78571428571 13"
                }
            },
            "Step 6": {
                "Step": "7 / 2 = 3.5 (left: 3.5 12 13) -> 12 / 3.5 = 3.42857142857 (left: 3.42857142857 13) -> 13 / 3.42857142857 = 3.78571428571 (left: 3.78571428571 13) -> 13 - 3.78571428571 = 9.21428571429 (left: 3.78571428571 9.21428571429)",
                "Pruning": null
            }
        },
        "Input": "2 7 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "939": {
        "puzzle": "2 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 12 * 8 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "9.1",
                    "Pruned state": "12 48"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (6 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 * 8 = 48 (left: 10 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "12 48"
                }
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 12 48) -> 48 / 12 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (6 / 12) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "8 8 12"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (8 - 6) * 12 = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 8 12) -> 8 / 12 = 0.6667 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "12 48"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 12 48) -> 48 / 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (8 - 6) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33 (left: 1.33 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((8 - 2) - 6) * 12 = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (6 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 + 8 = 14 (left: 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (8 - 6) * 12 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (8 - 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 12 48 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 / 6 = 1.33333 (left: 1.33333 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (8 - 6) * 12 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (8 - 6) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (6 / 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 6 8 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (8 - 6) * 12 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: 2 * (8 - (8 - 6)) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 6 * 8 = 48 (left: 12 48)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 8 - 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (8 - 2) * (12 / 6) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 6 8 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "940": {
        "puzzle": "3 4 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 + 6 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 + 13 = 19 (left: 4 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> 5 * 10 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "There are no possible next steps with the input of 3."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 - 4 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "9.3",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 + 6 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> 3 - 8 = -5 (left: -5 8)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 * 13 = 78 (left: 4 78)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 / 4 = 1.5 (left: 1.5 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 4 12 13) -> 4 / 12 = 0.33 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> 3 / 8 = 0.375 (left: 0.375)",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "There are no possible next steps with the input of 3."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 3 13 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 + 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 12 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 + 6 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 + 13 = 19 (left: 4 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 + 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 13 - 6 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 * 3 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 + 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 * 4 = 16 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 12 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 + 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 / 13 = 0.46153846153846156 (left: 4 0.46153846153846156)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 4 = 1 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 4"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 6 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 6 - 4 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "3"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 - 3 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null
            }
        },
        "Input": "3 4 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "941": {
        "puzzle": "4 5 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 2 12"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 + 2 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 8 10 12) -> 8 + 10 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 8 10 12) -> Input: 18 22",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 5 + 8 = 13 (left: 8 10 13) -> 8 * 10 = 80 (left: 80 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "8 0.7692307692307693"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 5 + 8 = 13 (left: 8 10 13) -> 10 / 13 = 0.7692307692307693 (left: 8 0.7692307692307693) -> 8 * 0.7692307692307693 = 6.153846153846154 (left: 6.153846153846154)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 2": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "8 0.7692307692307693"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 5 + 8 = 13 (left: 8 10 13) -> 10 / 13 = 0.7692307692307693 (left: 8 0.7692307692307693) -> 8 * 0.7692307692307693 = 6.153846153846154 (left: 6.153846153846154)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 4 5 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 5 22"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 4 + 5 = 9 (left: 9 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 50 12"
                }
            },
            "Step 2": {
                "Step": "5 * 10 = 50 (left: 4 50 12) -> 50 / 4 = 12.5 (left: 12 12.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 - 10 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "12.5 12"
                }
            },
            "Step 4": {
                "Step": "5 * 10 = 50 (left: 4 50 12) -> 50 / 4 = 12.5 (left: 12.5 12) -> 12.5 - 12 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "8 0.7692307692307693"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 5 + 8 = 13 (left: 8 10 13) -> 10 / 13 = 0.7692307692307693 (left: 8 0.7692307692307693) -> 8 + 0.7692307692307693 = 8.769230769230769 (left: 8.769230769230769)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 1": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 5 22"
                }
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 4 5 22) -> 5 * 4 = 20 (left: 20 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 3": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 / 0.8 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "0.8 10 12"
                }
            },
            "Step 4": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12) -> 12 - 10 = 2 (left: 0.8 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "8 0.7692307692307693"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 5 + 8 = 13 (left: 8 10 13) -> 10 / 13 = 0.7692307692307693 (left: 8 0.7692307692307693) -> 8 / 0.7692307692307693 = 10.4 (left: 10.4)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 2 4 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 2": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 + 10 = 30 (left: 30 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 5 + 8 = 13 (left: 8 10 13) -> 13 + 8 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "8 0.7692307692307693"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 5 + 8 = 13 (left: 8 10 13) -> 10 / 13 = 0.7692307692307693 (left: 8 0.7692307692307693) -> 8 * 0.7692307692307693 = 6.153846153846154 (left: 6.153846153846154)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 4 5 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 8 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 50 12"
                }
            },
            "Step 3": {
                "Step": "5 * 10 = 50 (left: 4 50 12) -> 50 / 4 = 12.5 (left: 12.5 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 8 10 12) -> 12 - 8 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "12 18"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 8 10 12) -> 8 + 10 = 18 (left: 12 18) -> 12 + 18 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "8 0.7692307692307693"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 5 + 8 = 13 (left: 8 10 13) -> 10 / 13 = 0.7692307692307693 (left: 8 0.7692307692307693) -> 8 + 0.7692307692307693 = 8.769230769230769 (left: 8.769230769230769)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 4 5 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "9 10 12"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 9 10 12) -> 10 - 9 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 3": {
                "Step": "4 / 5 = 0.8 (left: 0.8 10 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "8 0.7692307692307693"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 5 + 8 = 13 (left: 8 10 13) -> 10 / 13 = 0.7692307692307693 (left: 8 0.7692307692307693) -> 8 * 0.7692307692307693 = 6.153846153846154 (left: 6.153846153846154)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 5 = 2 (left: 4 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 4 2 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 10 12) -> 10 + 12 = 22 (left: 6 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 5 + 8 = 13 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 5 + 8 = 13 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "8 0.7692307692307693"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 5 + 8 = 13 (left: 8 10 13) -> 10 / 13 = 0.7692307692307693 (left: 8 0.7692307692307693) -> 8 + 0.7692307692307693 = 8.76923076923077 (left: 8.76923076923077)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 5 10 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "9 10 12"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 9 10 12) -> 9 + 10 = 19 (left: 12 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 8 10 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "8 10 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 8 10 12) -> 10 + 12 = 22 (left: 8 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 10 - 8 = 2 (left: 2 10) -> Input: 5 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "8 0.7692307692307693"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 5 + 8 = 13 (left: 8 10 13) -> 10 / 13 = 0.7692307692307693 (left: 8 0.7692307692307693) -> 8 / 0.7692307692307693 = 10.416666666666666 (left: 8 10.416666666666666)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 4 50 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "20 10 12"
                }
            },
            "Step 1": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 12 - 10 = 2 (left: 20 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 4 5 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 2 12"
                }
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 4 2 12) -> 4 + 2 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 5 + 8 = 13 (left: 8 10 13) -> 10 / 13 = 0.7692307692307693 (left: 8 0.7692307692307693)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "8 0.7692307692307693"
                }
            },
            "Step 6": {
                "Step": "12 - 4 = 8 (left: 5 8 10) -> 5 + 8 = 13 (left: 8 10 13) -> 10 / 13 = 0.7692307692307693 (left: 8 0.7692307692307693) -> 8 * 0.7692307692307693 = 6.153846153846154 (left: 6",
                "Pruning": "NA"
            }
        },
        "Input": "4 5 10 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "942": {
        "puzzle": "1 2 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 1 + 2 = 3 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 16"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 - 2 = 16 (left: 1 16) -> 16 / 1 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There is only one number, so no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 + 8 = 44 (left: 8)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "There are no possible next steps for the number 36 as it is already a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 - 2 = 16 (left: 1 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 2"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 18 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "7 / 1 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 1 + 2 = 3 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 - 2 = 34 (left: 2 34)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There is only one number provided, so there are no possible next steps. The input is already a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 2 4"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 / 2 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 2"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 / 2 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 + 36 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 2"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 / 2 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> None - there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "36"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There is only one number, so no possible next step.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 is already a single number, so no further steps can be taken.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 1 2 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 - 1 = 17 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 / 2 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 36"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 + 36 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "1 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> There are no possible next steps with the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 - 8 = 28 (left: 8) ",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "2 34"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 18 - 2 = 16 (left: 1 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 2"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 / 2 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 2"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 1 2 4) -> 4 / 2 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "There are no possible next steps with the number 36."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 2 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 1 * 36 = 36 (left: 36) -> 36 * 2 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 1 2 18) -> 2 * 18 = 36 (left: 1 36) -> 36 / 1 = 36 (left: 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "2 34"
                }
            }
        },
        "Input": "1 2 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "943": {
        "puzzle": "4 5 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 + 5 = 9 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 27 - 9 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "15 20"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 - 5 = 15 (left: 15 20) -> 15 / 20 = 0.75 (left: 0.75)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 - 5 = 15 (left: 15 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 * 8 = 48 (left: 48 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 20"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 5 * 20 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "100"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 5 * 20 = 100 (left: 100) -> 100 / 2 = 50 (left: 50)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 8 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 6 8 20) -> 20 - 8 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 - 6 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 4": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 6 / 8 = 0.75 (left: 0.75 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 20"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 5 * 20 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 20 * 20 = 400 (left: 20 400)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.33 (left: 1.33 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 8 - 4 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6.5"
                }
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5) -> 6.5 / 2 = 3.25 (left: 3.25)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "2 + 12 = 14"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 / 6 = 1.3333 (left: 1.3333 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 30"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 + 4 = 12 (left: 12 30)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 4 5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1.5 8"
                }
            },
            "Step 3": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 + 8 = 9.5 (left: 9.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 20"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 * 5 = 20 (left: 5 20) -> 20 - 5 = 15 (left: 15 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 6 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 4 5  -> Input: 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 / 2 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "10"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 / 10 = 1 (left: 1 10)",
                "Pruning": null
            }
        },
        "Input": "4 5 6 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "944": {
        "puzzle": "6 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 10 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 2": {
                "Step": "12 - 10 = 2 (left: 2 12 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> There are no possible next steps with the input of 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "12 60 13"
                }
            },
            "Step 4": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 60 - 12 = 48 (left: 48 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16 156"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> Input: 4 5 6 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "16 / 2 = 8"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> 16 / 2 = 8 -> 16 - 2 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 + 10 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 13 120"
                }
            },
            "Step 1": {
                "Step": "10 * 12 = 120 (left: 6 13 120) -> 13 - 6 = 7 (left: 7 120)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 2": {
                "Step": "6 * 10 = 60 (left: 12 60 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 12 13"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 2 12 13) -> 13 - 2 = 11 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16 156"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 * 2 = 32 (left: 32 156)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> 16 / 8 = 2 (left: 2) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "16 + 16 = 32"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> 16 + 16 = 32 -> 16 * 16 = 256 (left: 256)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 10 = 60 (left: 12 60 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "16"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16 156"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 156 - 16 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "There are no possible next steps with only one number."
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> There are no possible next steps with only one number. -> Input: 5 3 7",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 120 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 25 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "12 60 13"
                }
            },
            "Step 2": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 12 * 60 = 720 (left: 13 720)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 3": {
                "Step": "12 + 6 = 18 (left: 18 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16 156"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 * 156 = 2496",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "16 / 2 = 8"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> 16 / 2 = 8 -> Input: 16 - 8 = 8",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 10 25"
                }
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 25 - 6 = 19 (left: 10 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 12 13"
                }
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 2 12 13) -> 12 - 2 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "2496"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 * 156 = 2496 (left: 2496) -> 4 * 9 = 36 (left: 36 6)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 10 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 10 "
                }
            },
            "Step 2": {
                "Step": "12 * 13 = 156 (left: 6 10  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16 156"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 * 156 = 2496 (left: 2496)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 10 25"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 6 * 10 = 60 (left: 60 25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16 156"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 + 156 = 172 (left: 172)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "32 156"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 * 2 = 32 (left: 32 156) -> 32 / 156 = 0.205128 (left: 0.205128)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 10 25)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 12 13"
                }
            },
            "Step 3": {
                "Step": "12 - 10 = 2 (left: 2 12 13) -> 2 * 12 = 24 (left: 13 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "16 156"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 25 + 5 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1.33 13"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 / 12 = 1.33 (left: 1.33 13) -> 1.33 + 13 = 14.33 (left: 14.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "There are no possible next steps with just one number provided."
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> There are no possible next steps with just one number provided. -> Please provide at least two numbers to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 13 120)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 10 = 60 (left: 12 13 60)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 2": {
                "Step": "12 + 10 = 22 (left: 6 22 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 22 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 10 25"
                }
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 10 25) -> 25 - 10 = 15 (left: 6 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> 16 + 16 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "30"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 25 + 5 = 30 (left: 30) -> There is only one possible next step: 30 / 2 = 15",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 * 13 = 156 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 10 25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "16"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> No further steps can be taken with the input 16.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> 16 / 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "No possible next steps."
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 / 12 = 1.33 (left: 1.33 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 16 / 12 = 1.33 (left: 1.33 16)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "16"
                }
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16) -> There are no possible next steps with the number 16 as it is a final result.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "16 * 156 = 2496"
                }
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 16 156) -> 16 * 156 = 2496 -> 16 - 156 = -140 (left: -140 = 2496)",
                "Pruning": null
            }
        },
        "Input": "6 10 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "945": {
        "puzzle": "1 3 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left:",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 9"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 9 - 1 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 + 2 = 26.03",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.36 (left: 3.36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 9"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 9 - 1 = 8 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 / 9 = 0.297 (left: 0.297)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 - 2 = 22.03",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 + 8 = 17 (left: 8 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9 13"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 + 4 = 13 (left: 4 9 13) -> 9 - 4 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "9 - 3 = 6 (left:"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: -> 9 + 3 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 27"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27) -> 27 - 1 = 26 (left: 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "1 3"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 / 3 = 3 (left: 1 3) -> 3 - 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 / 8 = 3.00375",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.36 (left: 3.36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 3 * 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.36 (left: 3.36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> There are no possible next steps with the input 24.03.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.37 (left: 3.37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 3": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> Possible",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "9 - 1 = 8 (left:"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 1 = 8 (left: -> 9 * 1 = 9 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> There are no further possible next steps using basic arithmetic operations on the given numbers.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 * 9 = 27 (left: 1 9 27)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 + 3 = 11 (left: 11 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 9"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 1 * 9 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24 + 0.03 = 24.03",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 1 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 1 + 9 = 10 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 9 9"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 9 9) -> 1 * 9 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 9 - 3 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> There are no possible next steps for the input 24.03 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 3 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 9 - 3 = 6 (left: 8 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 * 9 = 27 (left: 1 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9 13"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 + 4 = 13 (left: 4 9 13) -> 4 / 9 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> There are no possible next steps for the number 24.03 as it is already a decimal number and cannot be combined with the other numbers in the input.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 1 3 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 9 9"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 / 4 = 2.25 (left: 2.25 9 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.37 (left: 2.67 3.37)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9 9"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 + 4 = 13 (left: 4 9 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 9 13"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 9 9) -> 9 + 4 = 13 (left: 4 9 13) -> 9 / 4 = 2.25 (left: 2.25 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 3 9"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 1 3 9) -> 3 * 1 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 4": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 0.03 = 0.7209 (left: 0.7209)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "2.67 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 5": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.36 (left: 3.36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24.03"
                }
            },
            "Step 6": {
                "Step": "9 - 1 = 8 (left: 8 3 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03) -> 24.03 * 2 = 48.06",
                "Pruning": null
            }
        },
        "Input": "1 3 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "946": {
        "puzzle": "1 4 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 / 4 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 4 + 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 2.5 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 2.5 4) -> 2.5 + 4 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 1) * (4 - 4) = 24",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "4 * 1 = 4 (left: 4 4 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 2.5 4) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 1 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 11"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> Input: 3 9 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 2.5 4) -> 2.5 + 4 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "0.8 11"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11) -> 0.8 * 11 = 8.8 (left: 8.8)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 2.5 4) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 4": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> Input: 10 3"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 4 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 11"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 4 / 5 = 0.8 (left: 0.8 11)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 3": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 - 6 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 11"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 11 - 4 = 7 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (11 - 1 - 4) * 4 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 2": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> 4 * 4 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.5 4"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 / 4 = 2.5 (left: 2.5 4) -> 2.5 * 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 1 = 12 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 2": {
                "Step": "1 * 4 = 4 (left: 4 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 11"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 4 11) -> 5 * 4 = 20 (left: 20 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> Input: 5 7 9"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 4 12"
                }
            },
            "Step 1": {
                "Step": "11 + 1 = 12 (left: 4 4 12) -> Input: 8 3 4 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (11 - 1)) = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "4 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)"
            }
        },
        "Input": "1 4 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "947": {
        "puzzle": "2 3 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 * 5 = 45 (left: 10 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 5 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 19"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 5 * 19 = 95 (left: 95)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((2 + 3) + 9) + 10 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 19"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 5 * 19 = 95 (left: 95)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 19"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 19 / 5 = 3.8 (left: 3.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24) -> Answer: ((2 + 3) + (9 + 10)) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 19"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 5 - 19 = -14 (left: -14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24) -> Answer: ((2 + 3) + 9) + 10 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 8 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 19"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24) -> Answer: ((2 + 3) + 9) + 10 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 * 5 = 45 (left: 10 45)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((2 + 3) + 9) + 10 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 2 = 11 (left: 3 11 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "5 19"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((2 + 3) + 9) + 10 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 + 2 = 11 (left: 3 11 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 - 5 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "5 19"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 5 * 19 = 95 (left: 95)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24) -> Answer: ((2 + 3) + 9) + 10 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Input: 3 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5 19"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 19 - 5 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "5 19"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24) -> Answer: (2 + 3) + (9 + 10) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "10 14"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 24 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 9 / 3 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 9 + 10 = 19 (left: 5 19) -> 5 + 19 = 24 (left: 24) -> Answer: ((2 + 3) + 9) + 10 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 3 5 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "5 9 10"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 7 / 4 = 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24 9"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8 9) -> 3 * 8 = 24 (left: 24 9) -> 24 * 9 = 216 (left: 216)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 5 + 9 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((2 + 3) + 9) + 10 = 24"
            }
        },
        "Input": "2 3 9 10",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "948": {
        "puzzle": "1 2 3 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "1 2 10"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 1 + 2 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 / 2 = 5 (left:"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 10 / 2 = 5 (left: -> 2 + 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 13 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 3 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 "
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 3 11"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 1 + 3 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 2 10"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 / 2 = 5 (left:"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 10 / 2 = 5 (left: -> 2 + 8 = 10 (left",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 3 11"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 3 * 11 = 33 (left: 1 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 / 2 = 5 (left:"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 10 / 2 = 5 (left: -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "1 * 2 = 2 (left: 2 3 13) -> 13 - 3 = 10 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "2 3 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 2 3 12) -> 12 / 2 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 / 2 = 5 (left:"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 10 / 2 = 5 (left: -> 10 + 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 "
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 2 10"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 10 / 2 = 5 (left:",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 3 13"
                }
            },
            "Step 4": {
                "Step": "1 * 2 = 2 (left: 2 3 13) -> 13 - 3 = 10 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 / 2 = 5 (left:"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 10 / 2 = 5 (left: -> 10 * 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 3 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 3 11"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 1 * 3 = 3 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 "
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 "
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 3 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 1 3 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 3": {
                "Step": "3 + 1 = 4 (left: 2 3 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 / 2 = 5 (left:"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 10 / 2 = 5 (left: -> 10 - 2 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "13 - 2 = 11 (left: 1 3 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 "
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 / 2 = 5 (left:"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 10 / 2 = 5 (left: -> 5 / 2 = 2.5 (left: 2.5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "10 / 2 = 5 (left:"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 10 / 2 = 5 (left: -> 5 * 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 1 6 13) -> 6 * 1 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 3 11"
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "1 2 "
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "12 12"
                }
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 1 2 10) -> 2 + 10 = 12 (left: 1 12) -> 1 * 12 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null
            }
        },
        "Input": "1 2 3 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "949": {
        "puzzle": "1 6 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "6 6 "
                }
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "6 6 "
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 6 "
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> 36 + 8 = 44",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "No possible next steps as there is only one number provided."
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> No possible next steps as there is only one number provided. -> Provide more numbers to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 6 "
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> 36 * 8 = 288 (left: 8) -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "6 6 "
                }
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "No possible next steps as there is only one number provided."
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> No possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "No possible next steps as there is only one number provided."
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> No possible next steps as there is only one number provided. -> No possible next steps as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 1 = 7 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "6 6 "
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> 36 * 8 = 288 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 * 2 = 36 (left: 18 36)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "6 6 "
                }
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 * 6 = 36 (left: 6 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> 36 + 8 = 44",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> 36 / 2 = 18 -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "6 6 "
                }
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> 36 + 8 = 44 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "There are no possible next steps with the input of 36."
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> There are no possible next steps with the input of 36.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 5 6 6) -> 4 + 7 = 11 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "6 6 "
                }
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 6 "
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> 36 / 2 = 18 -> 2 * 18 = 36 (left: 36)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 6"
                }
            },
            "Step 2": {
                "Step": "6 / 1 = 6 (left: 6 6 6) -> 6 + 6 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "6 6 "
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "36 + 8 = 44"
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> 36 + 8 = 44 -> 36 - 8 = 28 (left: 28 8)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "1 + 6 = 7 (left: 6 6 7) -> Input: 1 42 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 6 "
                }
            },
            "Step 3": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36)  -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "36 / 2 = 18"
                }
            },
            "Step 6": {
                "Step": "6 / 1 = 6 (left: 6 6  -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 2 = 16 (left: 2 16)",
                "Pruning": null
            }
        },
        "Input": "1 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "950": {
        "puzzle": "1 2 2 9",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 5 * 8 = 40 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 36"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "9 36"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 8"
                }
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 2 2 8) -> 2 + 2 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 3": {
                "Step": "Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 - 4 =",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 4.5 9"
                }
            },
            "Step 3": {
                "Step": "9 / 2 = 4.5 (left: 1 4.5 9) -> 1 + 4.5 = 5.5 (left: 5.5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 3 + 5 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "9 36"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 - 2.25 = 6.75 (left: 6.75)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 2": {
                "Step": "2 / 1 = 2 (left: 2 2 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 4.5 9"
                }
            },
            "Step 3": {
                "Step": "9 / 2 = 4.5 (left: 1 4.5 9) -> 4.5 * 9 = 40.5 (left: 1 40.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "9 - 2 = 7 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> Input: 3 6 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 36"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "8.3",
                    "Pruned state": "2.25 9"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 / 36 = 0.25 (left: 0.25)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 2 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "9 / 2 = 4.5 (left: 1 4.5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 + 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 - 9 = 27 (left: 27)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> Input: 3 7 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "5.5 9"
                }
            },
            "Step 4": {
                "Step": "9 / 2 = 4.5 (left: 1 4.5 9) -> 1 + 4.5 = 5.5 (left: 5.5 9) -> 5.5 / 9 = 0.6111111111111112 (left: 0.6111111111111112)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 * 36 = 324 (left: 324)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 3": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2.25 9"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9) -> 9 - 2.25 = 6.75 (left: 6.75)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 5"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 36"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "5 5"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 + 4 = 13 (left: 13)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 2 2 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 + 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 4.5 9"
                }
            },
            "Step 4": {
                "Step": "9 / 2 = 4.5 (left: 1 4.5 9) -> 4.5 * 1 = 4.5 (left: 4.5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "9 36"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 1 * 4 = 4 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": "NA"
            }
        },
        "Input": "1 2 2 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "951": {
        "puzzle": "1 3 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 5"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "Input: 10 2"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> Input: 12 6",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 1 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 5"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "5.5"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5) -> 5.5 - 2 = 3.5 (left: 3.5)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 1 18 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 1 3 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 10 + ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8 9"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 5"
                }
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 1 + 3 = 4 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 + 4 = 9 (left: 9) -> 9 + 5 = 14 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 + 4 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 1 3 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 * 6 = 24 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 2": {
                "Step": "11 - 1 = 10 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 9 - 3 = 6 (left: 6 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 + 4 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 9"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 8 + 9 = 17 (left: 17)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 5"
                }
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 5 - 3 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8 9"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 8 * 9 = 72 (left: 72)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "8 9"
                }
            },
            "Step 6": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 8 * 9 = 72 (left: 72)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 3 + 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "Input: 10 2"
                }
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> Input: 10 2 -> 10 + 2 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Input": "1 3 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "952": {
        "puzzle": "5 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 / 10 = 1.7 (left: 1.7 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 3": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 + 13 = 23 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441) -> 5 + 1 + 3 + 4 + 4 + 1 = 18 (left: 18) -> There are no possible next steps as there are no more numbers to operate with. The final result is 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441) -> 5 + 1 + 3 + 4 + 4 + 1 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441) -> 5 + 1 + 3 + 4 + 4 + 1 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 12 13 50)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps for the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441) -> 5 + 1 + 3 + 4 + 4 + 1 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 + 17 = 30 (left: 10 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 is already a single number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441) -> 5 + 1 + 3 + 4 + 4 + 1 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441) -> 5 + 1 + 3 + 4 + 4 + 1 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 12 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> None. Since there is only one number, there are no possible operations that can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441) -> 5 + 1 + 3 + 4 + 4 + 1 = 18 (left: 18) -> 18 * 8 = 144 (left: 8)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "18"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441) -> 5 + 1 + 3 + 4 + 4 + 1 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps with input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441) -> 5 + 1 + 3 + 4 + 4 + 1 = 18 (left: 18) -> There is only one possible next step:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps as there is only one number in the input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441) -> 5 + 1 + 3 + 4 + 4 + 1 = 18 (left: 18) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 13 + 5 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441) -> 5 + 1 + 3 + 4 + 4 + 1 = 18 (left: 18) -> 18 + 8 = 26 (left: 8)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There is only one possible next step:"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 13 / 10 = 1.3 (left: 1.3 17)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "531441"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441) -> 5 + 1 + 3 + 4 + 4 + 1 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 4": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 * 13 = 130 (left: 17 130)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441) -> 5 + 1 + 3 + 4 + 4 + 1 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441) -> 5 + 1 + 3 + 4 + 4 + 1 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 10 + 13 = 23 (left: 23 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps for 36 as it is a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441) -> 5 + 1 + 3 + 4 + 4 + 1 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441) -> 5 + 1 + 3 + 4 + 4 + 1 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> None.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 3 12  -> 3 ^ 12 = 531441 (left: 531441) -> 5 + 1 + 3 + 4 + 4 + 1 = 18 (left: 18) -> There are no possible next steps with the input of 18.",
                "Pruning": null
            }
        },
        "Input": "5 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "953": {
        "puzzle": "2 3 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 24"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 18"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> 24 - 6 = 18 (left: 6 18) -> 18 * 6 = 108 (left: 6 108)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 24 6"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 108"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "4.1",
                    "Pruned state": "6 24"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 24"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4 24) -> 4 * 24 = 96 (left: 96)",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 18"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> 24 - 6 = 18 (left: 6 18) -> Input: 3 12 5",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 24"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 * 2) / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 108"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input:",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((6 * 6) - 12) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "4 24"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 / 2) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 108"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 3 * 2 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "Input:"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> 24 - 6 = 18 (left: 6 18) -> 18 - 6 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> 6 / 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 108"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 24 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> 6 / 6 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide the numbers for which you want to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 * 2) / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "1 6"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 108"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 24"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "30"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 6 + 24 = 30 (left: 30) -> 30 / 2 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 3 6"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 5": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 24"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4 24) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "30 / 2 = 15"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 2 3 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 24 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> 24 - 6 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (6 * 2) * (6 + 6) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "30"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> 6 / 6 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 108"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: ((6 * 2) / 6) * 12 = 24",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "1 6"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide a set of numbers to continue the sequence.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "30 / 2 = 15"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "36 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 * 12 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Input: -> Please provide a set of numbers to continue the sequence.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 24"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 - 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 6"
                }
            },
            "Step 6": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "6 108"
                }
            }
        },
        "Input": "2 3 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "954": {
        "puzzle": "6 7 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10 12"
                }
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 10 12) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 3": {
                "Step": "7 / 6 = 1.17 (left: 1.",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 + 10 = 23 (left: 12 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: -> There is no input provided. Please provide input to continue.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.17 5.83"
                }
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 12 = 5.83 (left: 6 5.83) -> 6 - 5.83 = 0.17 (left: 0.17 5.83) -> 0.17 * 5.83 = 0.994 (left: 0.994)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1."
                }
            },
            "Step 4": {
                "Step": "7 / 6 = 1.17 (left: 1. -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: -> Please provide a set of numbers for me to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "There seems to be a mistake in the input provided. Could you please clarify the numbers you would like to use for the next steps?"
                }
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: -> There seems to be a mistake in the input provided. Could you please clarify the numbers you would like to use for the next steps? -> I'm sorry for the confusion. Please provide the correct numbers you would like to use for the next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 12 70"
                }
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 6 * 12 = 72 (left: 70 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: -> There seems to be an error in the input provided. Please enter a valid set of numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.17 5.83"
                }
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 12 = 5.83 (left: 6 5.83) -> 6 - 5.83 = 0.17 (left: 0.17 5.83) -> 5.83 - 0.17 = 5.66 (left: 5.66)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: -> Input is missing. Please provide a set of numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 5.83"
                }
            },
            "Step 5": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 12 = 5.83 (left: 6 5.83) -> 6 - 5.83 = 0.17 (left: 0.17 5.83)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.17 5.83"
                }
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 12 = 5.83 (left: 6 5.83) -> 6 - 5.83 = 0.17 (left: 0.17 5.83) -> 5.83 / 0.17 = 34.2941 (left: 34.2941)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 6 2 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: -> Please provide an input for me to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1."
                }
            },
            "Step 4": {
                "Step": "7 / 6 = 1.17 (left: 1. -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: -> There seems to be an error in the input provided. Please provide a valid input for me to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.17 5.83"
                }
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 12 = 5.83 (left: 6 5.83) -> 6 - 5.83 = 0.17 (left: 0.17 5.83) -> Input: 3 5 7",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: -> Please provide a set of numbers to continue with the calculation.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.17 5.83"
                }
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 12 = 5.83 (left: 6 5.83) -> 6 - 5.83 = 0.17 (left: 0.17 5.83) -> 5.83 / 0.17 = 34.2941 (left: 34.2941)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 6 7 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: -> Please provide the input numbers for me to suggest possible next steps.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: -> It seems like the input is missing. Could you please provide the input so I can generate the possible next steps for you?",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.17 5.83"
                }
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 12 = 5.83 (left: 6 5.83) -> 6 - 5.83 = 0.17 (left: 0.17 5.83) -> -3 + 7 = ",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10 12"
                }
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 10 12) -> 10 - 1 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 * 12 = 120 (left: 120 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "6 12 70"
                }
            },
            "Step 4": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 12 = 5.83 (left: 6 5.83)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: -> Please provide the numbers for the input.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.17 5.83"
                }
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 12 = 5.83 (left: 6 5.83) -> 6 - 5.83 = 0.17 (left: 0.17 5.83) -> 5.83 - 0.17 = 5.66 (left: 5.66)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 1": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 12 + 6 = 18 (left: 18 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 3": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 / 10 = 1.3 (left: 1.3 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: -> There seems to be a mistake in the input provided. Could you please clarify the numbers you would like to use for the next steps?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.17 5.83"
                }
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 12 = 5.83 (left: 6 5.83) -> 6 - 5.83 = 0.17 (left: 0.17 5.83) -> 5.83 / 0.17 = 34.2941176471 (left: 34.2941176471)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 6 = 16 (left: 7 12 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 12 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 3": {
                "Step": "7 * 10 = 70 (left: 6 12 70)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> Input: -> There is no input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0.17 5.83"
                }
            },
            "Step 6": {
                "Step": "7 * 10 = 70 (left: 6 12 70) -> 70 / 12 = 5.83 (left: 6 5.83) -> 6 - 5.83 = 0.17 (left: 0.17 5.83) -> 2 + ",
                "Pruning": null
            }
        },
        "Input": "6 7 10 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "955": {
        "puzzle": "7 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 / 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 4"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 12 - 8 = 4 (left: 5 4) -> 5 * 4 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> No valid calculation can be made with the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "No valid calculation can be made with the input 0."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 8 / 5 = 1.6 (left: 1.6 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5 8"
                }
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "No valid calculation can be made with the input 0."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 56 8"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 12 56 8) -> 56 - 12 = 44 (left: 44 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 4"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 12 - 8 = 4 (left: 5 4) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "0"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 56 8"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 12 56 8) -> 56 / 12 = 4.67 (left: 4.67 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 8 12"
                }
            },
            "Step 4": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 1 + 8 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> Input: -> Please provide a list of numbers to continue the sequence.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "0"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> No possible next steps as there is no input given.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 - 8 = -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1.1428571428571428 8 12"
                }
            },
            "Step 3": {
                "Step": "8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 8 12) -> 8 + 12 = 20 (left: 1.1428571428571428 20)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "44 8"
                }
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 12 56 8) -> 56 - 12 = 44 (left: 44 8) -> 44 * 8 = 352 (left: 352)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "No valid calculation can be made with the input 0."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 8 12 56)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 40 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 12 - 8 = 4 (left: 5 4)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 4"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 12 - 8 = 4 (left: 5 4) -> 10 - 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 4"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 12 - 8 = 4 (left: 5 4) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "No valid calculation can be made with the input 0."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 * 8 = 40 (left: 12 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "56 8 12"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 56 - 8 = 48 (left: 12 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1.1428571428571428 8 12"
                }
            },
            "Step 3": {
                "Step": "8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 8 12) -> 1.1428571428571428 + 8 = 9.142857142857142 (left: 9.142857142857142 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "5 4"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 12 - 8 = 4 (left: 5 4) -> 10 * 2 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "No valid calculation can be made with the input 0."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 12 56 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "56 8 12"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 56 8 12) -> 8 * 12 = 96 (left: 56 96)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> Input:",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "No valid calculation can be made with the input 0."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 5 + 8 = 13 (left: 8 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "5 8"
                }
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 10 * 5 = 50",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 2": {
                "Step": "8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 8 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 8 12) -> 12 / 5 = 2.4 (left: 5 2.4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.1428571428571428 20"
                }
            },
            "Step 5": {
                "Step": "8 / 7 = 1.1428571428571428 (left: 1.1428571428571428 8 12) -> 8 + 12 = 20 (left: 1.1428571428571428 20) -> 1.1428571428571428 + 20 = 21.1428571428571428 (left: 21.1428571428571428)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "0"
                }
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Input": "7 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "956": {
        "puzzle": "3 4 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 8"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> Input: 5 9 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: ((3 * 4) / 6) * 8 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 24"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 24 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "3 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 * 24 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) + (3 * 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / 3 * 8 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "8 24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / (3 + 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 8"
                }
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> Input: 3 9 12",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 3 * 24 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24) -> Answer: (4 * 6) / 3 * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 4 2)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 24"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "8 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 3 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 4 2"
                }
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 4 2) -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / 8 * 3 = 24",
                "Pruning": {
                    "Idx": "2.1",
                    "Pruned state": "3 24"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 24 24) -> 24 * 24 = 576 (left: 576)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 3 8"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 3 8) -> 2 + 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24 24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 * ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 + 3 = 11 (left: 11 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 24 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 3 * 8 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 * 6) / (8 / 3) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 4 6 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "957": {
        "puzzle": "1 7 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 + 11 = 21 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 2": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 + 9 = 17 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "14"
                }
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 1 7 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "4 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10 11) -> 11 - 4 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 / 8 = 0.75 (left: 0.75)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 7 2"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 7 - 1 = 6 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 / 10 = 1.1 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "1 * 7 = 7 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 * 9 = 54 (left: 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "14"
                }
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 / 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 / 7 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7 10"
                }
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10 11) -> 11 - 4 = 7 (left: 7 10) -> 7 * 10 = 70 (left: 70) ",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 8 * 9 = 72 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 - 7 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "11 70"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70) -> 70 - 11 = 59 (left: 59)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 3": {
                "Step": "7 / 1 = 7 (left: 7 9 11) -> 9 * 11 = 99 (left: 7 99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> 7 * 9 = 63 (left: 63 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "14"
                }
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "8 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11) -> 9 + 11 = 20 (left: 8 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 7 2"
                }
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 1 7 2) -> 1 * 7 = 7 (left: 7 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 9 = 2 (left: 1 7 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 15 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> Possible next steps: -> There are no possible next steps for the input provided.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 7 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 + 10 = 17 (left: 10 11 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "40"
                }
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 40) -> There are no possible next steps for the input 40.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 2": {
                "Step": "7 / 1 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "7 9 11"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 9 11) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> Possible next steps: -> There are no more possible next steps as all combinations have been exhausted.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 1 7 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 - 6 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 * 10 = 70 (left: 11 70)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 10 11"
                }
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 10 + 11 = 21 (left: 7 21)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "40"
                }
            },
            "Step 6": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 11 - 7 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 40) -> There are no possible next steps with just the number 40.",
                "Pruning": null
            }
        },
        "Input": "1 7 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "958": {
        "puzzle": "2 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 6 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5 6 13"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 * 6 = 30 (left: 30 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 + 2) + 3) + 13 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 3 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 3 11"
                }
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 6 3 11) -> Input: 4 2 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "5 6 13"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 13) -> 5 + 6 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 2 6 7) -> Input: 1 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 + 2) + 3) + 13 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.84615384615 (left: 0.84615384615)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 / 3 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 + 2) + (3 + 8)) + 13 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 8 / 3 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 2 6 10) -> 6 + 10 = 16 (left: 2 16)"
            }
        },
        "Input": "2 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "959": {
        "puzzle": "2 2 5 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 10) * (2 * 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 2": {
                "Step": "5 + 2 = 7 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 5 + 2) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 * 2 = 20 (left: 2 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 2 * 5) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 5 12"
                }
            },
            "Step 2": {
                "Step": "2 / 2 = 1 (left: 1 5 12) -> 1 + 5 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 5) + (2 * 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 4 - 5 = -1 (left: -1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 5 + 2) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "5 + 2 = 7 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 5 + 2) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 10 2 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "5 + 2 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 2": {
                "Step": "Input: 3 6 6 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 3 * 9 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 10) * (5 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 10 2 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12) -> 12 / 4 = 3 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 2 "
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + (2 * 5)) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 5 * 2 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 5 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> Input: 3 9 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 3 * 9 = 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 10) * (5 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 - 2 = 0 (left: 0 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 5 12"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 2  -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 + 2 * 5) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 2 5 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "960": {
        "puzzle": "2 6 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 13 / 11 = 1.18181818182 (left: 1.18181818182)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846153846 (left: 0.846153846)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 11 8"
                }
            },
            "Step 2": {
                "Step": "13 - 2 = 11 (left: 6 11 8) -> 6 / 11 = 0.55 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 * 3 = 24 (left: 13 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 2 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "6 8 7"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 8 7) -> 7 + 6 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 2 6 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 2 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "2 7 8"
                }
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 2 7 8) -> 8 / 2 = 4 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24) -> Answer: ((6 / 2) + 8) + 13 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 2 6 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 6 8 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "8 10"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)"
            }
        },
        "Input": "2 6 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "961": {
        "puzzle": "8 8 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 * 8 = 80 (left: 12 80)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 8 4 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 6 + 6 = 12 (left: 0 12) -> 12 - 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "80 960"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "0 24"
                }
            },
            "Step 5": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 2 * 12 = 24 (left: 0 24) -> 24 / 24 = 1 (left: 0)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "0 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "80 960"
                }
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 * 12 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "12 / 0 = undefined"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 8 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "10 12 64"
                }
            },
            "Step 2": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 + 10 = 74 (left: 12 74)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 - 12 = 68 (left: 12 68)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0 2"
                }
            },
            "Step 4": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2) -> 2 - 0 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "0 24"
                }
            },
            "Step 5": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 2 * 12 = 24 (left: 0 24) -> 24 - 0 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "0 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 6 + 6 = 12 (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "10 12 64"
                }
            },
            "Step 1": {
                "Step": "8 * 8 = 64 (left: 10 12 64) -> 64 / 10 = 6.4 (left: 6.4 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 8 10 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 0 12"
                }
            },
            "Step 3": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> Input: 0 1.2 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 6 + 6 = 12 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "0 2"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "0 24"
                }
            },
            "Step 5": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 2 * 12 = 24 (left: 0 24) -> 0 / 24 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "0 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "12 80"
                }
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12 80) -> 12 * 80 = 960 (left: 960)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "12 / 0 = undefined"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "0 10 12"
                }
            },
            "Step 2": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 3": {
                "Step": "10 / 12 = 0.83333333 (left: 8 0.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 4 "
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 + 4 = 12 (left: 12) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "0 24"
                }
            },
            "Step 5": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 2 * 12 = 24 (left: 0 24) -> 24 - 0 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "0 12"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 6 + 6 = 12 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "12 / 0 = undefined"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 + 8 = 16 (left: 10 16 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 2": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 + 12 = 20 (left: 20 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "0 10 12"
                }
            },
            "Step 3": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 0 + 10 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0 2"
                }
            },
            "Step 4": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2) -> 0 + 2 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "80 960"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 6 + 6 = 12 (left: 0 12) -> 0 * 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "12 / 0 = undefined"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 10 8 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 1": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 * 12 = 960 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 3": {
                "Step": "10 + 12 = 22 (left: 8 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 6 + 6 = 12 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "80 960"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 * 12 = 960 (left: 80 960)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "12 80"
                }
            },
            "Step 6": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12 80) -> 80 - 12 = 68 (left: 68)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "12 / 0 = undefined"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 8 = 16 (left: 10 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 0 10 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "0 10 12"
                }
            },
            "Step 2": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 10 / 12 = 0.8333333333333334 (left: 0 0.8333333333333334)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "0 2"
                }
            },
            "Step 3": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2) -> 0 + 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 2 12"
                }
            },
            "Step 4": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 2 * 12 = 24 (left: 0 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "80 960"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 / 960 = 0.0833 (left: 0.0833 960)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0 24"
                }
            },
            "Step 6": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 2 * 12 = 24 (left: 0 24) -> 0 + 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "12 / 0 = undefined"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "0 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "0 2 12"
                }
            },
            "Step 3": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 6 + 6 = 12 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 6 + 6 = 12 (left: 0 12) -> 0 * 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "5.1",
                    "Pruned state": "80 960"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "80 960"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 40 = 24 (left: 80 24",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0 24"
                }
            },
            "Step 6": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 2 * 12 = 24 (left: 0 24) -> 24 - 0 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "12 / 0 = undefined"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 * 8 = 64 (left: 10 12 64)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 1": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 8 * 12 = 96 (left: 18 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 2": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 80 / 12 = 6.666666666666667 (left: 6.666666666666667 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "80 960"
                }
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "80 960"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 960 / 80 = 12 (left: 12 80)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "0 12"
                }
            },
            "Step 6": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 6 + 6 = 12 (left: 0 12) -> There are no possible next steps with the inputs 0 and 12.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 4 "
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 + 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 4 "
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 + 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "0 12"
                }
            },
            "Step 4": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 6 + 6 = 12 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "80 960"
                }
            },
            "Step 5": {
                "Step": "10 * 8 = 80 (left: 12 80) -> 12 * 80 = 960 (left: 80 960) -> 80 + 960 = 1040 (left: 1040)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "0 24"
                }
            },
            "Step 6": {
                "Step": "8 - 8 = 0 (left: 0 10 12) -> 12 - 10 = 2 (left: 0 2 12) -> 2 * 12 = 24 (left: 0 24) -> 0 + 24 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "12 / 0 = undefined"
                }
            }
        },
        "Input": "8 8 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "962": {
        "puzzle": "1 3 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 8 - 3 = 5 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (13 / 1) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "18"
                }
            },
            "Step 6": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 8 13"
                }
            },
            "Step 1": {
                "Step": "13 + 1 = 14 (left: 3 8 14)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 4 / 3 = 1.33333333333 (left: 1.33333333333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 + 13 / 1) = 24 -> Input: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 3 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (13 / 1) = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n9 * 2 = 18 (left: 4 18)\n4 * 18 = 24 (left: 24)\nAnswer: 4 * (3 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 - 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 8 13"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (13 / 1) = 24 -> Input: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n3 * 5 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 15)\n5 * 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 + 7) * 5) - ",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 8 / 3 = 2.67 (left: 2.67 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 13 / 1 * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (13 / 1) = 24 -> Input: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n15 - 6 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 5) - 6) + 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 13 * (3 * 8) = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 13 / 1 * 8 = 24 -> Input: 2 3 4 6\nSteps:\n2 + 4 = 6 (left: 3 6 6)\n6 * 3 = 18 (left: 18 6)\n18 / 6 = 3 (left: 3 3)\n3 * 3 = 9\nAnswer: (2 + 4) * (6/3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 2": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 - 3 = 11 (left: 8 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 3 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "24 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (13 / 1) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: (2 * 3) * 4 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 - 4 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 + 13 / 1) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (13 / 1) = 24 -> Input: 2 3 4 5\nSteps:\n2 * 4 = 8 (left: 3 5 8)\n8 + 5 = 13 (left: 3 13)\n13 * 3 = 39 (left: 39)\nAnswer: ((2 * 4) + 5) * 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8 14"
                }
            },
            "Step 2": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 3 + 8 = 11 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 / 1 = 13 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (8 + 13 / 1) = 24 -> Input: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 + 36 = 36 (left: 36)\nAnswer: 6 * (6 + 6 + 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 / 1 = 13 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 * 3 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "3 4"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 - 8 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 12 / 3 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "3 * 1 = 3 (left: 3 8 13) -> 13 - 3 = 10 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 (left: 18) ",
                "Pruning": "NA"
            }
        },
        "Input": "1 3 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "963": {
        "puzzle": "4 4 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 7 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 4 4 3)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 16"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 * 4 = 16 (left: 3 16) -> 16 - 3 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 + 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 4 3"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 * 4 = 16 (left: 3 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 + 4 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 8 / 1 = 8 (left: 8 10) -> 10 - 8 = 2 (left: 2)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 4 3"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 + 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There is only one number, so there are no possible next steps."
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 4 3"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 / 3 = 1.33333333333 (left: 1.33333333333 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4 10) -> 10 / 3 = 3.33 (left: 3.33 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 + 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (4 + 4) * (10 - 7) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 4 3"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 / 4 = 1 (left: 1 3)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1 3"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 / 4 = 1 (left: 1 3) -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 + 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 5 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 4 3"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 + 4 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 + 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 + 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> 2.6666666666666665 * 2 = 5.333333333333333 (left: 5.333333333333333)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "10 56"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 * 56 = 560 (left: 560)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 5 = 25 (left: 25) -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 + 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 + 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24) -> 24 / 3 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 + 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There are no possible next steps for the input 2.6666666666666665."
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 7 10"
                }
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 7 10) -> 1 + 7 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 + 4 = 8 (left: 3 8) -> 8 / 3 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 + 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((4 + 4) - 7) * 10 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 16 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 4 3"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 3 + 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 + 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "2.6666666666666665"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 + 4 = 8 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665) -> There is only one possible next step for this input:"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 16"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 4 * 4 = 16 (left: 3 16) -> 16 - 3 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "25"
                }
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 4  -> 5 * 5 = 25 (left: 25) -> 25 / 25 = 1 (left: )",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "1 8 10"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 8 / 1 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "8 10"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 8 10) -> 8 / 1 = 8 (left: 8 10) -> 8 / 4 = 2 (left: 2 14)"
            }
        },
        "Input": "4 4 7 10",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "964": {
        "puzzle": "1 7 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 12 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 130"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130) -> 130 - 6 = 124 (left: 124)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 130"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130) -> Input: 20 4 2",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "6 21.666666666666668"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130) -> 130 / 6 = 21.666666666666668 (left: 6 21.666666666666668) -> 6 * 3.611111111111111 = 21.666666666666668 (left: 6 21.666666666666668)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 8 - 10 = -2 (left: -2 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "6 21.666666666666668"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130) -> 130 / 6 = 21.666666666666668 (left: 6 21.666666666666668) -> 6 * 3.611111111111111 = 21.666666666666668 (left: 3.611111111111111)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 / 6 = 0.16666666666666666 (left: 0.16666666666666666)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "7 10 13"
                }
            },
            "Step 4": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 7 + 10 = 17 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 130"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130) -> 6 + 130 = 136 (left: 136)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "6 21.666666666666668"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130) -> 130 / 6 = 21.666666666666668 (left: 6 21.666666666666668) -> 6 * 3.611111111111111 = 21.666666666666668 (left: 6 21.666666666666668)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "6 21.666666666666668"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130) -> 130 / 6 = 21.666666666666668 (left: 6 21.666666666666668) -> 6 * 3.611111111111111 = 21.666666666666668 (left: 6 21.666666666666668)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 + 10 = 16 (left: 16 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 6 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 10 + 13 = 23 (left: 8 23)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "6 21.666666666666668"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130) -> 130 / 6 = 21.666666666666668 (left: 6 21.666666666666668) -> 21.666666666666668 / 6 = 3.611111111111111 (left: 3.611111111111111 6)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "1 * 7 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 - 6 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "6 21.666666666666668"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130) -> 130 / 6 = 21.666666666666668 (left: 6 21.666666666666668) -> 21.666666666666668 / 6 = 3.611111111111111 (left: 3.611111111111111 6)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "1 * 7 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 10 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 7 * 10 = 70 (left: 12 70)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "6 21.666666666666668"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130) -> 130 / 6 = 21.666666666666668 (left: 6 21.666666666666668) -> 21.666666666666668 * 0.2777777777777778 = 6 (left: 21.666666666666668 6",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "1 + 7 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 130"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130) -> 6 + 130 = 136 (left: 130 136)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 130"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130) -> 130 / 6 = 21.666666666666668 (left: 6 21.666666666666668)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "6 21.666666666666668"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130) -> 130 / 6 = 21.666666666666668 (left: 6 21.666666666666668) -> 6 * 3.611111111111111 = 21.666666666666668 (left: 6 21.666666666666668)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "6 21.666666666666668"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130) -> 130 / 6 = 21.666666666666668 (left: 6 21.666666666666668) -> 6 / 0.2777777777777778 = 21.666666666666668 (left: 21.666666666666668)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 6 * 10 = 60 (left: 60 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 4": {
                "Step": "1 + 7 = 8 (left: 8 10 13) -> 8 / 10 = 0.8 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 130"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130) -> 6 + 130 = 136 (left: 136)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "6 21.666666666666668"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 6 10 13) -> 10 * 13 = 130 (left: 6 130) -> 130 / 6 = 21.666666666666668 (left: 6 21.666666666666668) -> 6 * 3.611111111111111 = 21.666666666666668 (left: 6 21.666666666666668)",
                "Pruning": null
            }
        },
        "Input": "1 7 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "965": {
        "puzzle": "1 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 10 12"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 9 10 12) -> 12 - 9 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "9 4"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: 0 13)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "10 10 13"
                }
            },
            "Step 3": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 10 / 10 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 10 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0 13"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 - 9 = 0 (left: 0 13) -> 0 + 13 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "9 4"
                }
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "10 10 13"
                }
            },
            "Step 3": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 13 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps with just the number 36.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "9 4"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 1 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 1 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 8 = 44",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 9 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 10 12"
                }
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 9 10 12) -> 12 / 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 3": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 9"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 1 9) -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 * 2 = 72 ",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "10 10 13"
                }
            },
            "Step 2": {
                "Step": "1 + 9 = 10 (left: 10 10 13) -> 13 - 10 = 3 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 9 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 - 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "36 / 2 = 18"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 9 / 9 = 1 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "9 4"
                }
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 9 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 1 = 37",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 8 = 44 (left: 8)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "36 + 1 = 37"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 1 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 + 9 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 2": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "9 4"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 9  -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 1": {
                "Step": "1 + 9 = 10 (left: 10 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "9 4"
                }
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 + 4 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "9 4"
                }
            },
            "Step 3": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 10 13"
                }
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 10 10 13) -> 10 + 10 = 20 (left: 20 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "9 4"
                }
            },
            "Step 5": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "36"
                }
            },
            "Step 6": {
                "Step": "10 - 1 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 * 4 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Input": "1 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "966": {
        "puzzle": "3 3 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1.75 7"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75 7) -> 1.75 * 7 = 12.25 (left: 7 12.25)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 / 12 = 0.25 (left: 0.25 12)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps - the number is already provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.25 12"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 / 12 = 0.25 (left: 0.25 12) -> 0.25 * 12 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "-3"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 - 7 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "-3"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 - 7 = -3 (left: -3) -> There are no possible next steps as the input is invalid. Please provide a valid input.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 1": {
                "Step": "11 / 3 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0.25 12"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 / 12 = 0.25 (left: 0.25 12) -> 0.25 * 12 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "-3"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 - 7 = -3 (left: -3) -> -3 * 2 = -6 (left: 2 8 14)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 11 / 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "11 / 3 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps for the number 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "-3"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 - 7 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "11 / 3 = 3 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 7"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 - 7 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 * 2 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "1.75 7"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75 7) -> 1.75 - 7 = -5",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 1": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 7 11"
                }
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 7 11) -> 7 + 11 = 18 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps, as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> No possible next steps as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "-3"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 - 7 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 / 4 = 1.5 (left: 1.5 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 "
                }
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 7"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 7 / 4 = 1.75 (left: 1.75 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "-3"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 - 7 = -3 (left: -3) -> There are no possible next steps with the input -3.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 3 12 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "11 / 3 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 10 - 3 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "-3"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 - 7 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 4  -> 5 + 9 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "36"
                }
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 / 4 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "11 / 3 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 3 = 12 (left: 3 12  -> 3 * 12 = 36 (left: 36) -> 36 - 8 = 28 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "-3"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7) -> 4 - 7 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null
            }
        },
        "Input": "3 3 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "967": {
        "puzzle": "2 5 7 7",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 * 7 = 49 (left: 10 49)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 / 2 = 5 (left: 5 14)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 7 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 7 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 5) + (7 + 7) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 5) + (7 + 7) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 + 7 = 10.5 (left: 7 10.5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 5 7"
                }
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 2 5 7) -> 7 - 5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 / 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 3": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 * 7 = 24.5 (left: 7 24.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 5) + (7 + 7) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 2": {
                "Step": "7 / 2 = 3.5 (left: 3.5 7 7) -> 7 * 3.5 = 24.5 (left: 7 24.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 7 7 10) -> 7 + 7 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: (2 * 5) + (7 + 7) = 24"
            }
        },
        "Input": "2 5 7 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "968": {
        "puzzle": "3 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 + 12 = 22 (left: 13 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 25"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 + 13 = 25 (left: 10 25) -> 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input of 22.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 10 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 / 3 = 3.33 (left: 3.33 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "12 / 10 = 1.2 (left:"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: -> 12 - 10 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: -> 12 + 10 = 22 (left: 22) -> There is only one possible next step: 22 divided by 2 = 11",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 * 3 = 12 (left: 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 25"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 + 13 = 25 (left: 10 25) -> 10 + 25 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: -> Input: 22 + 2 = 24 (left: 24) -> Answer: (3 + 9) * (10 + 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 25"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 + 13 = 25 (left: 10 25) -> 10 - 25 = -15 (left: -15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: -> 12 + 10 = 22 (left: 22) -> 22 / 8 = 2.75 (left: )",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 3": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 + 13 = 25 (left: 10 25)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "12 / 10 = 1.2 (left:"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: -> Input: 22 + 2 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: -> 12 + 10 = 22 (left: 22) -> None",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 13 - 10 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 5 * 9 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 10 = 3 (left: 3 3 13) -> 13 - 3 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: -> Input: 22 + 2 = 24 (left: 24) -> Answer: 22 + 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Input: 5 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 10 / 3 = 3.33 (left: 3.33 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 * 10 = 30 (left: 30 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "10 25"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 + 13 = 25 (left: 10 25) -> 10 * 25 = 250 (left: 250)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input of 22.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 9 10 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 10 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 * 10 = 30 (left: 30 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 5 + 9 = 14 (left: 14 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "12 / 10 = 1.2 (left:"
                }
            },
            "Step 5": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: -> 12 + 10 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: -> Input: 22 + 2 = 24 (left: 24) -> Answer: 22 + 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 9 = 12 (left: 10 12 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 10 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: -> 12 + 10 = 22 (left: 22) -> None, since there is only one number in the input.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 2": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 * 13 = 156 (left: 10 156)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "10 12 13"
                }
            },
            "Step 4": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 3 13"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 13 - 10 = 3 (left: 3 3 13) -> 3 * 3 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 9 = 12 (left: 10 12 13) -> 12 / 10 = 1.2 (left: -> Input: 22 + 2 = 24 (left: 24) -> Answer: 22 + 2 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "969": {
        "puzzle": "2 3 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 2": {
                "Step": "4 + 3 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 9"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 + 5 = 9 (left: 7 9) -> 9 / 7 = 1.28571428571 (left: 1.28571428571)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 3"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 2 / 3 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 8 - 6 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 3"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 3": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 7 - 2 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 3"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 4": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 7 - 2 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 3"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1.2857142857142858"
                }
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 + 5 = 9 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858) -> 1.2857142857142858 * 2 = 2.5714285714285716",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 5 7"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 9"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 + 5 = 9 (left: 7 9) -> 9 / 7 = 1.28571428571 (left: 1.28571428571",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 3"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 2": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 7 * 2 = 14 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 6 - 4 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2 3"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 3 - 2 = 1 (left: 1) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 2": {
                "Step": "4 + 3 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "2 4 4"
                }
            },
            "Step 3": {
                "Step": "7 - 3 = 4 (left: 2 4 4) -> 4 * 2 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 3"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "2 7 7"
                }
            },
            "Step 4": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 7 - 2 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 3"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 7) -> 4 / 6 = 0.666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 9"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 + 5 = 9 (left: 7 9) -> 9 / 7 = 1.2857 (left: 1.2857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 3"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> Input: 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "1"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 3 - 2 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 2 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 2 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "7 9"
                }
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 + 5 = 9 (left: 7 9) -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 3"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "7 - 3 = 4 (left: 2 4 7) -> 7 - 4 = 3 (left: 2 3) -> 2 * 3 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": "NA"
            }
        },
        "Input": "2 3 4 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "970": {
        "puzzle": "4 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 3": {
                "Step": "8 + 4 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 8 / 2 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12 24"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 24 - 12 = 12 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24 24"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 12 * 2 = 24 (left: 24 24) -> 24 / 24 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24 + 24 = 48"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 16 = -8 (left: 12 -8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 32 "
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32  -> 32 / 4 = 8 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "8 12"
                }
            },
            "Step 4": {
                "Step": "8 + 4 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 12 24"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 12 + 2 = 14 (left: 2 14 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24 24"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 12 * 2 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 2": {
                "Step": "8 + 4 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "16 32"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 4 = 16 (left: 16 32) -> 32 / 16 = 2 (left: 2 32)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 3"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 4 8 3) -> 8 - 4 = 4 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 4 = 16 (left: 16 32)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 - 8 = 8 (left: 8 12 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24 24"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 12 * 2 = 24 (left: 24 24) -> 24 * 24 = 576 (left: 576)",
                "Pruning": {
                    "Idx": "6.1",
                    "Pruned state": "2 12 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "16 32"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 4 = 16 (left: 16 32) -> Possible",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "24 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "16 32"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 4 = 16 (left: 16 32) -> 16 + 32 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24 + 24 = 48"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 8 16 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 3": {
                "Step": "8 + 4 = 12 (left: 4 12 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "128 4"
                }
            },
            "Step 5": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 32 = 128 (left: 128 4) -> 128 - 4 = 124 (left: 124)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "128 4"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "128 4"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 32 = 128 (left: 128 4) -> 128 - 4 = 124 (left: 124)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24 + 24 = 48"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 32 / 4 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 12 24"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 12 * 2 = 24 (left: 24 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 * 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 24 - 12 = 12 (left: 2 12 12) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 8 16 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 8 16 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "16 32"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 4 = 16 (left: 16 32) -> 16 * 32 = 512 (left: 512)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 8 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24 24"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 12 * 2 = 24 (left: 24 24) -> 24 + 24 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "16 32"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "24 24"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 12 * 2 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "16 32"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 4 = 16 (left: 16 32) -> 16 + 32 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24 + 24 = 48"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 4 8 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 4"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 12 24"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 12 + 2 = 14 (left: 14 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "16 32"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 4 = 16 (left: 16 32) -> 32 - 16 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "6.5",
                    "Pruned state": "24 + 24 = 48"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 4 4 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 32 4"
                }
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 32 = 128 (left: 128 4)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> 2 * 8 = 16 (left: 8 16) -> 16 * 8 = 128 (left: 128)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "16 32"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "16 32"
                }
            },
            "Step 6": {
                "Step": "12 - 8 = 4 (left: 4 8 4) -> 4 * 8 = 32 (left: 4 32 4) -> 4 * 4 = 16 (left: 16 32) -> 32 / 16 = 2 (left: 2 32)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 4 8 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 12"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 8 12) -> 12 - 8 = 4 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 12 24"
                }
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 12 / 2 = 6 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 12 24"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 12 / 2 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24 24"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 / 8 = 2 (left: 2 12 24) -> 12 * 2 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null
            }
        },
        "Input": "4 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "971": {
        "puzzle": "1 2 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 2 = 8 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 2 4"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 1 2 4) -> 4 / 2 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 - 2 = 18 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 1 8 10) -> 1 + 8 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "0.8"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> There is only one possible next step: 0.8 * 2 = 1.6",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 1 12 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 8 10"
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 1 8 10) -> 10 - 1 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "0.8"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> 0.8 + 2 = 2.8",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 8 10"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 1 8 10) -> 8 - 1 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> Possible next steps: -> There seems to be no input provided. Please enter a set of numbers for me to generate possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 1 12 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 * 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 - 2 = 18 (left: 2 18)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 1 12 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> Possible next steps: -> It seems like there was a mistake in the input as it is incomplete. Can you provide the complete input so I can generate possible next steps for you?",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 1 12 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 1 12 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "9"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9) -> 8 + 1 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 1 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 3": {
                "Step": "1 * 2 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 + 8 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "0.8"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8) -> There are no possible next steps with the input of 0.8.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 4 4"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 4 / 1 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 1 4 4) -> 1 + 4 = 5 (left: 4 5) -> 4 * 5 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null
            }
        },
        "Input": "1 2 6 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "972": {
        "puzzle": "1 5 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 2 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "60 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 24 1)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 1 + 7 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 7 + 1 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 1 = 12 (left: 5 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 - 5 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 + 1 = 13 (left: 13 60)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 1 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "60 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 * 12 = 720 (left: 720)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((1 + 5) * 2) + 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 59 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "13 60"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 + 1 = 13 (left: 13 60) -> 5 * 25 = 125 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0 24)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 5 = 2 (left: 1 2 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "1 + 5 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 1 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 1 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 12"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 - 12 = 0 (left: 0) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 5"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 12 = 5 (left: 1 5) -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 + 1 = 13 (left: 13 60)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 2": {
                "Step": "12 / 5 = 2.4 (left: 1 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "13 60"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 + 1 = 13 (left: 13 60) -> 13 / 60 = 0.21666666666666667 (left: 0.21666666666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 - 12 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 1 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 2": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 61 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: (1 + 5) * (12 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 1": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 1 + 60 = 61 (left: 12 61)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 12 - 1 = 11 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "60 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 / 12 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((1 + 5) * 12) + 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 5 = 2.4 (left: 1 2.4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 2": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 + 12 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((1 + 5) * 2) + 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 12 = 60 (left: 1 60 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 1 7 12) -> 12 - 1 = 11 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 3": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 - 1 = 59 (left: 12 59)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 60 12"
                }
            },
            "Step 4": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 12 + 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "60 12"
                }
            },
            "Step 5": {
                "Step": "5 * 12 = 60 (left: 1 60 12) -> 60 / 1 = 60 (left: 60 12) -> 60 - 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 12 12) -> 6 * 2 = 12 (left: 12 12) -> 12 + 12 = 24 (left: 24) -> Answer: ((1 + 5) * 2) + 12 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "1 5 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "973": {
        "puzzle": "5 6 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 5 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 1 * 6 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 5 2 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 + 8 = 38 (left: 6 38)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.2 2 8"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 6 = 2 (left: 1.2 2 8) -> 1.2 + 2 = 3.2 (left: 3.2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 - 6 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 / 6 = 1.33 (left: 1.33 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 / 1 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "2 11"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 5 1 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 11 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 - 1.2 = 4.8 (left: 4.8 8",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "8 36"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 + 6 = 36 (left: 8 36) -> 8 * 4 = 32 (left: 32 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> There are no possible next steps with the input of 22 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 30 6 8)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 1.2 * 8 = 9.6 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.2 2 8"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 6 = 2 (left: 1.2 2 8) -> 8 / 1.2 = 6.66666666667 (left: 2 6.66666666667)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 - 2 = 20 (left: 20)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 8 - 1 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 1.2 + 6 = 7.2 (left: 7.2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 / 6 = 1.33 (left: 1.33 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 38"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 + 8 = 38 (left: 6 38) -> 38 - 6 = 32 (left: 32) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 30 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 2 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 / 6 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 6 = 2 (left: 1.2 2 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.2 2 8"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 6 = 2 (left: 1.2 2 8) -> 1.2 * 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> 22 - 2 = 20 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 5 14 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 1 8"
                }
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 5 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 + 6 = 36 (left: 8 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.2 2 8"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 6 = 2 (left: 1.2 2 8) -> 8 / 1.2 = 6.67 (left: 2 6.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1.2 6 8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 1.2 * 6 = 7.2 (left: 7.2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 6 - 30 = -24 (left: -24 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1.2 * 8 = 9.6 (left:"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 1.2 * 8 = 9.6 (left: -> 1.2 * 8 = 9.6 (left: 9.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> There are no possible next steps with the input of 22.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 + 8 = 38 (left: 6 38)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "30 6 8"
                }
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 * 6 = 180 (left: 8 180)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1.2 2 8"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 6 = 2 (left: 1.2 2 8) -> 1.2 + 2 = 3.2 (left: 3.2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "2 6.66666666667"
                }
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 6 = 2 (left: 1.2 2 8) -> 8 / 1.2 = 6.66666666667 (left: 2 6.66666666667) -> 2 - 6.66666666667 = -4.66666666667 (left: -4",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 2 + 5 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "6 8 11"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 6 * 8 = 48 (left: 11 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 3": {
                "Step": "5 / 6 = 0.8333333333333334 (left: 0.8333333333333334 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 5 + 6 = 11 (left: 2 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 38"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 30 6 8) -> 30 + 8 = 38 (left: 6 38) -> 38 - 6 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "22"
                }
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 6 8 11) -> 8 - 6 = 2 (left: 2 11) -> 2 * 11 = 22 (left: 22) -> None. There is only one number and no operations to perform.",
                "Pruning": null
            }
        },
        "Input": "5 6 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "974": {
        "puzzle": "7 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 + 14 = 22 (left: 11 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 3 2.67)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 14 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 7 8"
                }
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 / 8 = 1.75 (left: 1.75 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 11 - 8 = 3 (left: 3 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 7 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "8 11 14"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 + 11 = 19 (left: 14 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 5 / 4 = 1.25 (left: 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (7 - (11 - 7)) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 4 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 8 * 14 = 112 (left: 11 112)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 - 7 = 0 (left: 0 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 7 11 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 / 8 = 1.75 (left: 1.75 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 11 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 4 7 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 11"
                }
            },
            "Step 3": {
                "Step": "8 - 7 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 / 3 = 2.6667 (left: 2.6667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 - 7 = 1 (left: 1 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 2": {
                "Step": "11 - 8 = 3 (left: 7 3 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 14 11"
                }
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 14 11) -> 14 / 8 = 1.75 (left: 1.75 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 4 7 8) -> 7 - 4 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 7) * (7 - 4) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "7 7 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "975": {
        "puzzle": "1 3 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 2": {
                "Step": "7 * 3 = 21 (left: 1 21 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "1 21 10"
                }
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 1 21 10) -> 1 + 21 = 22 (left: 10 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5 10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 - 2.5 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "2.5 12.5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 - 1 = 9 (left: 9 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 4 "
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 1 + 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 10 "
                }
            },
            "Step 3": {
                "Step": "7 + 3 = 10 (left: 1 10  -> 10 + 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 - 1 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 2.5 + 10 = 12.5 (left: 2.5 12.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5 10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 2.5 * 10 = 25 (left: 10 25)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "2.5 7"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 / 4 = 2.5 (left: 2.5 7) -> 2.5 + 7 = 9.5 (left: 9.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 4 * 10 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5 10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 3 + 1 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 10 "
                }
            },
            "Step 2": {
                "Step": "7 + 3 = 10 (left: 1 10  -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 21 10"
                }
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 1 21 10) -> 21 - 1 = 20 (left: 20",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5 10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 - 2.5 = 7.5 (left: 7.5 10) ",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 4 "
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 10 "
                }
            },
            "Step 3": {
                "Step": "7 + 3 = 10 (left: 1 10  -> 5 + 6 = 11 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 / 1 = 10 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "10 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 + 7 = 11 (left: 10 11) -> 10 - 11 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5 10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 2.5 * 10 = 25 (left: 10 25)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 10 "
                }
            },
            "Step 2": {
                "Step": "7 + 3 = 10 (left: 1 10  -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 21 10"
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 1 21 10) -> 1 * 21 = 21 (left: 10 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 10 "
                }
            },
            "Step 4": {
                "Step": "7 + 3 = 10 (left: 1 10  -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 / 1 = 10 (left: 4 10) -> 6 + 12 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5 10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 2.5 + 10 = 12.5 (left: 2.5 12.5)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.33 (left: 1 3.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 6 * 12 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5 10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 2.5 + 10 = 12.5 (left: 10 12.5)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 3 = 3.3333333333333335 (left: 1 3.333333333",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 / 4 = 2.5 (left: 2.5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 1 21 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 10"
                }
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 / 1 = 10 (left: 4 10) -> 6 * 12 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5 10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 2.5 * 10 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "2.5 12.5"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 7 = 10 (left: 1 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 7 10"
                }
            },
            "Step 2": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 4 + 7 = 11 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 7 10"
                }
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 7 - 4 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5 10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 / 2.5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "2.5 12.5"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "7 + 3 = 10 (left: 1 10 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 10 / 1 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "1 10 "
                }
            },
            "Step 3": {
                "Step": "7 + 3 = 10 (left: 1 10  -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "1 4 "
                }
            },
            "Step 4": {
                "Step": "7 - 3 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 / 1 = 10 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2.5 10"
                }
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 + 3 = 4 (left: 4 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 / 2.5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.5",
                    "Pruned state": "2.5 12.5"
                }
            }
        },
        "Input": "1 3 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "976": {
        "puzzle": "3 3 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 12 = 1 (left: 3 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 27"
                }
            },
            "Step 5": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 12 / 3 = 4 (left: 4 27) -> 27 / 4 = 6.75 (left: 6.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (9 - 3) * (3 / 3) * 12 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 3 12 27)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 12"
                }
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 12 27"
                }
            },
            "Step 3": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 27 - 12 = 15 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 27"
                }
            },
            "Step 4": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 12 / 3 = 4 (left: 4 27) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 12"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 9 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (9 - 3) * (3 / 3 * 12) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 12 27"
                }
            },
            "Step 3": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 12 / 3 = 4 (left: 4 27)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "3 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (9 - 3) * (3 / 3) * 12 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 3 12 27)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 12"
                }
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 27"
                }
            },
            "Step 4": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 12 / 3 = 4 (left: 4 27) -> 4 + 27 = 31 (left: 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (9 - 3) / (3 / 12) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 3 12 27)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "4 27"
                }
            },
            "Step 5": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 12 / 3 = 4 (left: 4 27) -> 27 - 4 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (9 - 3) * (3 / 3) * 12 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 3 12 27)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (9 - 3) * (3 / 3 + 12) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 12"
                }
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 12"
                }
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 / 4 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)"
            }
        },
        "Input": "3 3 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "977": {
        "puzzle": "3 5 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 4 5 10) -> 4 + 5 = 9 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 3": {
                "Step": "7 + 3 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 / 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 56"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 - 56 = -46 (left: -46)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 3 + 5 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 8 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 3 5 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "3 -2 10"
                }
            },
            "Step 4": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> 3 - (-2) = 5 (left: -2 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "10 56"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56) -> 10 / 56 = 0.17857142857 (left: 0.17857142857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 11 / 8 = 1.375 (left: 1.375)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 5 * 5 = 25 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 11 / 8 = 1.375 (left: 1.375)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 5 = 12 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "5 - 7 = -2 (left: 3 -2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "3 -2 10"
                }
            },
            "Step 2": {
                "Step": "5 - 7 = -2 (left: 3 -2 10) -> -2 / 10 = -0.2 (left: -0.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 + 8 = 15 (left: 15 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 3 7 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 7 * 8 = 56 (left: 10 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 11 - 8 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 5 = 8 (left: 7 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 8 10"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 / 7 = 1.14 (left: 1.14 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1 10"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 8 - 7 = 1 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 7 8 10) -> 10 - 7 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": "NA"
            }
        },
        "Input": "3 5 7 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "978": {
        "puzzle": "4 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 + 12 = 14.5 (left: 13 14.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "13 52"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 12 + 40 = 52 (left: 13 52) -> 52 / 13 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 + 5 = 10 (left"
                }
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> 5 + 5 = 10 (left -> 5 / 5 = 1 (left: 1 5 5)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 12 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 9 - 10 = -1 (left: -1 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "12 14 13"
                }
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 12 14 13) -> 12 * 14 = 168 (left: 13 168)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 * 12 = 30 (left: 13 30)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 1"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left: 6 1) -> 6 * 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "13 26"
                }
            },
            "Step 5": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> 13 + 26 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 + 5 = 10 (left"
                }
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> 5 + 5 = 10 (left -> 5 - 5 = 0 (left: 0 10)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "12 40 13"
                }
            },
            "Step 2": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 12 * 40 = 480 (left: 480 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "13 26"
                }
            },
            "Step 3": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> 13 / 26 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 1"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left: 6 1) -> 6 + 1 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "13 26"
                }
            },
            "Step 5": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> 5 + 5 = 10 (left",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 + 5 = 10 (left"
                }
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> 5 + 5 = 10 (left -> 5 / 5 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 2": {
                "Step": "12 + 10 = 22 (left: 4 22 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 1"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left: 6 1) -> 6 * 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "13 52"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 12 + 40 = 52 (left: 13 52) -> 13 * 52 = 676 (left: 676)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 + 5 = 10 (left"
                }
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> 5 + 5 = 10 (left -> 5 - 5 = 0 (left: 0 5)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 4 = 16 (left: 10 13 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 8 10 13) -> 8 / 10 = 0.8 (left: 0.8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "13 26"
                }
            },
            "Step 3": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> 13 + 26 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 1"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left: 6 1) -> 6 * 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "13 52"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 12 + 40 = 52 (left: 13 52) -> 13 + 52 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 + 5 = 10 (left"
                }
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> 5 + 5 = 10 (left -> 5 - 5 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 12 14 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 6 + 12 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left: 6 1)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 1"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left: 6 1) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "13 52"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 12 + 40 = 52 (left: 13 52) -> 13 + 52 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 + 5 = 10 (left"
                }
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> 5 + 5 = 10 (left -> 5 + 5 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 12 13 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "13 26"
                }
            },
            "Step 2": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 12 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 10 12 9) -> 10 + 9 = 19 (left: 12 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 1"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left: 6 1) -> 6 * 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "13 52"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 12 + 40 = 52 (left: 13 52) -> 13 + 52 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 + 5 = 10 (left"
                }
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> 5 + 5 = 10 (left -> 5 + 5 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 10 12 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 16 13"
                }
            },
            "Step 1": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 12 13 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "12 40 13"
                }
            },
            "Step 4": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 12 + 40 = 52 (left: 13 52)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left: 6 1) -> 6 + 1 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 + 5 = 10 (left"
                }
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> 5 + 5 = 10 (left -> 5 * 5 = 25 (left: 25 10)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "6 10 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 10 13) -> 10 - 6 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 12 13"
                }
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "13 26"
                }
            },
            "Step 5": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> 13 + 26 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 + 5 = 10 (left"
                }
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> 5 + 5 = 10 (left -> 5 + 5 = 10 (left",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 + 4 = 16 (left: 10 16 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 12 40 13)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "12 40 13"
                }
            },
            "Step 3": {
                "Step": "4 * 10 = 40 (left: 12 40 13) -> 12 + 40 = 52 (left: 13 52)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "13 26"
                }
            },
            "Step 4": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> Input: 5 10 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 13 - 12 = 1 (left: 6 1) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "5 + 5 = 10 (left"
                }
            },
            "Step 6": {
                "Step": "12 + 4 = 16 (left: 10 16 13) -> 10 + 16 = 26 (left: 13 26) -> 5 + 5 = 10 (left -> 5 * 5 = 25 (left: 25)",
                "Pruning": "NA"
            }
        },
        "Input": "4 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "979": {
        "puzzle": "2 3 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 10 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 2": {
                "Step": "10 + 2 = 12 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 3) * (10 / 2) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 3) * (10 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 / 5 = 2.4 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 2": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "3 0"
                }
            },
            "Step 4": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 - 12 = 0 (left: 3 0) -> 3 + 0 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * (3 * 10)) / 12 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * (2 * 3)) * 12 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 2": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 - 12 = 0 (left: 3 0)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 2 5  -> 9 - 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 3) * (10 / 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 2": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "8 12"
                }
            },
            "Step 5": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 3) * (10 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 + 6 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 12"
                }
            },
            "Step 5": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 3) * (10 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 2 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 / 6 = 1.66666666667 (left: 1.66666666667 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 3) * (10 / 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 3) * (10 / 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 2": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 4": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 3) * (10 + 12) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 3) * (10 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 6 10 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 - 6 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 2": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5 "
                }
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 3) * (10 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 10 12"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 12"
                }
            },
            "Step 4": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "2 * 3 = 6 (left: 6 10 12) -> 12 / 6 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (2 * 3) * (10 + 12) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 3 10 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "980": {
        "puzzle": "3 4 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1.5 6 6"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6) -> 6 - 1.5 = 4.5 (left: 4.5 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 / 6 = 2 (left: 6 2)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 5 6"
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 - 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 12"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 + 6 = 12 (left: 1 12) -> 12 * 1 = 12 (left: 12)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 6 7) -> 7 + 6 = 13 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 - 1 = 5 (left: 1 5 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 * 2 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: (3 * 4) + (6 + 6) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 4 9 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 6 / 3 = 2 (left: 4 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 9 / 3 = 3 (left: 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 18"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 5 6"
                }
            },
            "Step 5": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 - 1 = 5 (left: 1 5 6) -> 5 / 1 = 5 (left: 5 6)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 6"
                }
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 18"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 5 6"
                }
            },
            "Step 4": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 - 1 = 5 (left: 1 5 6) -> 1 * 5 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 4 6 3)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> Input: 3 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 3": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 + 1 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 3"
                }
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 4 6 3) -> 4 * 6 = 24 (left: 3 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "0.6666666666666666 6 6"
                }
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6 6) -> 6 / 6 = 1 (left",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "0.6666666666666666 6 6"
                }
            },
            "Step 5": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6 6) -> 6 - 0.6666666666666666 = 5.333333333333333 (left"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 4 6 6) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 * 1 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 6 6"
                }
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 6 6) -> 6 + 6 = 12 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "6 18"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 18 - 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 6 6 12) -> 12 + 6 = 18 (left: 6 18) -> 6 + 18 = 24 (left: 24) -> Answer: (3 * 4) + (6 + 6) = 24"
            }
        },
        "Input": "3 4 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "981": {
        "puzzle": "5 8 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 8 8 40)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 16"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 8 8 8) -> 8 + 8 = 16 (left: 8 16) -> 16 - 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 8 8 8) -> 8 + 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24) -> Answer: ((5 + 8) + 8) + 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.6667 (left: 2.6667 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 8 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 8 8"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 8 8 8) -> 8 * 8 = 64 (left: 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8 8) -> 5 / 8 = 0.625 (left: 0.625 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24 8"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 40 - 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24 8) -> 5 - 5 = 0 (left: 0 1)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 2": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 - 8 = 0 (left: 0 8 40)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "0 40"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 - 8 = 0 (left: 0 8 40) -> 8 * 5 = 40 (left: 0 40) -> 0 + 40 = 40 (left: 40)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 5 3 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 8 8 8 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "8 11"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 * 11 = 88 (left: 88)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 32"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 40 - 8 = 32 (left: 8 32) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 8 8 8) -> 8 + 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24) -> Answer: ((5 + 8) + 8) + 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0 8 40"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 - 8 = 0 (left: 0 8 40) -> 8 * 5 = 40 (left: 0 40)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24 8"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 40 - 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24 8) -> 24 + 8 = 32 (left: 32)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "8 8 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 40 - 8 = 32 (left: 8 32)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 32"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 40 - 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24 8)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 8 8 40)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 32"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 40 - 8 = 32 (left: 8 32) -> 8 * 32 = 256 (left: 256)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 + 5 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 * 8 = 24 (left: 8 8 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 8 8"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 8 8 8) -> 8 + 8 = 16 (left: 8 16)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.67 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.67 (left: 2.67 8) -> 8 / 2.67 = 2.99 (left: 2.99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 8 8 8) -> 8 + 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24) -> Answer: ((5 + 8) + 8) + 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 8 8 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 8 8 8 13) -> 8 - 8 = 0 (left: 0 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "8 16"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 8 8 8) -> 8 + 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24 8"
                }
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 40 - 8 = 32 (left: 8 32) -> 32 - 8 = 24 (left: 24 8) -> 24 / 8 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 2": {
                "Step": "5 - 8 = -3 (left: -3 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "8 8 8 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 8 8 8 13) -> 13 + 8 = 21 (left: 8 8 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8 8) -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 8 8 8) -> 8 + 8 = 16 (left: 8 16) -> 8 + 16 = 24 (left: 24) -> Answer: ((5 + 8) + 8) + 8 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "5 8 8 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "982": {
        "puzzle": "6 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 - 12 = 36 (left: 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 4"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 4"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 * 48 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 * 48 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 / 8 = 1.5 (left: 1.5 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 4"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 576"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576) -> 8 * 8 = 64 (left: 64 576)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "72 8"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576) -> 576 / 8 = 72 (left: 72 8) -> 72 / 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "72 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "72 8"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576) -> 576 / 8 = 72 (left: 72 8) -> 72 - 8 = 64 (left: 64)",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "2 0 7"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 + 8 = 20 (left: 20 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 576"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576) -> 8 / 576 = 0.013888888888889 (left: 0.013888888888889)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 4"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "48 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 * 48 = 2304 (left: 2304)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "72 8"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576) -> 576 / 8 = 72 (left: 72 8) -> 72 / 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "2 0 7"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "8 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 8 / 1 = 8 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 + 8 = 16 (left: 16 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 576"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576) -> 576 - 8 = 568 (left: 568)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 * 48 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 576"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "48 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 * 48 = 2304 (left: 2304)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "72 8"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576) -> 576 / 8 = 72 (left: 72 8) -> 72 * 8 = 576 (left: 576)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "72 8"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "72 8"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576) -> 576 / 8 = 72 (left: 72 8) -> 72 * 8 = 576 (left: 8 576)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 8 * 12 = 96 (left: 48 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "8 48"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48) -> 8 * 6 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 4"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "48 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 + 48 = 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "72 8"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576) -> 576 / 8 = 72 (left: 72 8) -> 72 / 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "2 0 7"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 8 = 6 (left: 6 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 576"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576) -> 576 - 8 = 568 (left: 568)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 4"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4) -> 8 - 4 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 * 48 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "72 8"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576) -> 576 / 8 = 72 (left: 72 8) -> 72 - 8 = 64 (left: 64) ",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "2 0 7"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 + 6 = 18 (left: 8 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 8 8 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 8 * 8 = 64 (left: 64 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 576"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576) -> 576 - 8 = 568 (left: 8 568)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 - 12 = 36 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 * 48 = 2304 (left: 2304) -> 2 + 3 + 0 + 4 = 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "72 8"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576) -> 576 / 8 = 72 (left: 72 8) -> 72 + 8 = 80 (left: 80)",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "2 0 7"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 8 48)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 8 2)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 4"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 / 12 = 4 (left: 8 4) -> 8 * 4 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 48 - 12 = 36 (left: 8 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "2304"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 * 48 = 2304 (left: 2304) -> 3 + 4 = 7 (left: 2 0 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "72 8"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576) -> 576 / 8 = 72 (left: 72 8) -> 72 / 8 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "8.5",
                    "Pruned state": "2 0 7"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "8 12 48"
                }
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 576"
                }
            },
            "Step 4": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576) -> 576 / 8 = 72 (left: 72 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "48 48"
                }
            },
            "Step 5": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 4 = 48 (left: 48 48) -> 48 + 48 = 96",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "72 8"
                }
            },
            "Step 6": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 * 48 = 576 (left: 8 576) -> 576 / 8 = 72 (left: 72 8) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Input": "6 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "983": {
        "puzzle": "2 3 4 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 2 12 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "9 24"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 2 12 9) -> 2 * 12 = 24 (left: 9 24) -> 24 + 9 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 9 + 11 = 20 (left: 20) -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 2": {
                "Step": "4 + 2 = 6 (left: 3 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 * 6 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 / 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 11"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 9 - 11 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "11 + 9 = 20"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 11 + 9 = 20 -> 9 - 11 = -2 (left: -2 + 9 = 7)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 11"
                }
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "9 11"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 11 / 9 = 1.2222 (left: 1.2222)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "9 14"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 * 14 = 126 (left: 126)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12 9"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 2 12 9) -> 12 - 2 = 10 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "11 + 9 = 20"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 11 + 9 = 20 -> 11 / 9 = 1.22 (left: 1.22 20)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 11 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 11"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 9 - 11 = -2 (left: -2 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "-2"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 9 - 11 = -2 (left: -2) -> The input is invalid as it is not a valid arithmetic operation.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 / 4 = 2.25 (left: 2.25 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 2 3 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "2 12 9"
                }
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 2 12 9) -> 2 * 12 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 11"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 9 - 11 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "-2"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 9 - 11 = -2 (left: -2) -> There are no possible next steps with the input of -2.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 11"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 9 - 11 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 + 4 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 11"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 11 + 9 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "-2 11"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 9 - 11 = -2 (left: -2 11) -> 11 + (-2) = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 / 4 = 1.5 (left: 1.5 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 11"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "33"
                }
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 2 12 9) -> 2 * 12 = 24 (left: 9 24) -> 24 + 9 = 33 (left: 33) -> 33 + 2 = 35",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 11"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "11 + 9 = 20"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 11 + 9 = 20 -> 11 - 9 = 2 (left: 2 20)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 2 = 7 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5 9"
                }
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 11"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 3 + 8 = 11 (left: 9 11) -> 9 - 11 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "9 14"
                }
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 9 - 3 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 + 14 = 23 (left: 23)",
                "Pruning": "NA"
            }
        },
        "Input": "2 3 4 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "984": {
        "puzzle": "2 6 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "139"
                }
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 * 12 = 132 (left: 7 132) -> 132 + 7 = 139 (left: 139) -> 1 + 3 + 9 = 13 (left: 13)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 42 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 2 = 12 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 2": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 + 18 = 24 (left: 2 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9 132"
                }
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 * 12 = 132 (left: 7 132) -> 7 + 2 = 9 (left: 9 132) -> 9 * 132 = 1188 (left: 1188)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 * 18 = 108 (left: 2 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 2": {
                "Step": "7 * 11 = 77 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "7 132"
                }
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 * 12 = 132 (left: 7 132) -> 7 + 2 = 9 (left: 9 132)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "139"
                }
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 * 12 = 132 (left: 7 132) -> 132 + 7 = 139 (left: 139) -> 139 - 1 = 138 (left: 138)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 7 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 6 = 3 (left: 2 3 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "7 132"
                }
            },
            "Step 5": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 * 12 = 132 (left: 7 132) -> 132 + 7 = 139 (left: 139)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9 132"
                }
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 * 12 = 132 (left: 7 132) -> 7 + 2 = 9 (left: 9 132) -> 9 + 132 = 141 (left: 141)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "9 9"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 18 - 9 = 9 (left: 9 9) -> 9 * 9 = 81 (left: 81)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left:",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 3": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 2 + 6 = 8 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 10 - 6 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "18 / 2 = 9 (left:"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 18 - 9 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9 132"
                }
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 * 12 = 132 (left: 7 132) -> 7 + 2 = 9 (left: 9 132) -> 9 - 132 = -123 (left: -123)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 6 18)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 11 12"
                }
            },
            "Step 3": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 * 12 = 132 (left: 7 132)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 6 / 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "9 9"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 18 - 9 = 9 (left: 9 9) -> 9 + 9 = 18 (left: 18)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 6 11 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 1": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "9 9"
                }
            },
            "Step 6": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 18 - 9 = 9 (left: 9 9) -> 9 / 9 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 2 + 6 = 8 (left: 8 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 9 - 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "7 132"
                }
            },
            "Step 4": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 * 12 = 132 (left: 7 132) -> 132 - 7 = 125 (left: 7 125)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9 132"
                }
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 * 12 = 132 (left: 7 132) -> 7 + 2 = 9 (left: 9 132) -> 9 - 132 = -123 (left: -123)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "2 6 18"
                }
            },
            "Step 2": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 2 * 6 = 12 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 - 6 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "18 / 2 = 9 (left:"
                }
            },
            "Step 5": {
                "Step": "7 + 11 = 18 (left: 2 6 18) -> 18 / 2 = 9 (left: -> 18 - 2 = 16 (left: 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "9 132"
                }
            },
            "Step 6": {
                "Step": "2 * 6 = 12 (left: 7 11 12) -> 11 * 12 = 132 (left: 7 132) -> 7 + 2 = 9 (left: 9 132) -> 132 / 9 = 14.67 (left: 14.67)",
                "Pruning": "NA"
            }
        },
        "Input": "2 6 7 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "985": {
        "puzzle": "5 9 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "9 / 5 = 1 (left: 1 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 14 + 12 = 26 (left: 12 26)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 12 12"
                }
            },
            "Step 3": {
                "Step": "9 / 5 = 1 (left: 1 12 12) -> 12 / 12 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 / 12 = 1.1666666666666667 (left: 1.1666666666666667 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 - 9 = -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 9 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 84"
                }
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 7 * 12 = 84 (left: 12 84) -> 84 - 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "12 + 12 = 24 (left: 5 9 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 / 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 - 12 = 0 (left: 0 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 12 12 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 12 - 4 = 8 (left: 9 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 7 * 12 = 84 (left: 12 84)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "12 12 14"
                }
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 12 14) -> 12 * 12 = 144 (left: 14 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "9 / 5 = 1.8 (left: 1.8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 2": {
                "Step": "12 - 5 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "12 84"
                }
            },
            "Step 3": {
                "Step": "12 - 5 = 7 (left: 7 12 12) -> 7 * 12 = 84 (left: 12 84) -> 12 + 84 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": {
                    "Idx": "4.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) + (12 - 12) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "1 12 12"
                }
            },
            "Step 2": {
                "Step": "9 / 5 = 1 (left: 1 12 12) -> 12 / 12 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "12 14 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 + 14 = 26 (left: 26 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 14 - 12 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (5 + 9) * (12 - 12) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "5 9 12 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "986": {
        "puzzle": "1 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 2": {
                "Step": "12 + 1 = 13 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 3": {
                "Step": "7 + 2 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 1 * 3 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 3 12"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 3 * 1 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "1 9 12"
                }
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 3 12"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1 14 12"
                }
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "1 4"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 2 19"
                }
            },
            "Step 2": {
                "Step": "7 + 12 = 19 (left: 1 2 19) -> 2 * 19 = 38 (left: 1 38)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 3 * 1 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "3 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 3 * 1 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 3 12"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 1 * 3 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "1 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 2 = 14 (left: 1 12 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 3 * 1 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "1 4"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "4 12"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 3 12"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 3 * 1 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "1 9 "
                }
            },
            "Step 4": {
                "Step": "7 + 2 = 9 (left: 1 9  -> 9 * 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "1 4"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 + 12 = 19 (left: 1 2 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 3 12"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 3 * 12 = 36 (left: 1 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 + 2 = 9 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1 3 12"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.3",
                    "Pruned state": "1 4"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 4 / 1 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 12"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 + 12 = 19 (left: 1 2 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 2": {
                "Step": "7 + 12 = 19 (left: 1 2 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 3 12"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 4"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.3",
                    "Pruned state": "3 12"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "1 4"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "1 4"
                }
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 1 + 4 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "4 12"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 5 "
                }
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5  -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 3 * 1 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 12 / 3 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "5.3",
                    "Pruned state": "3 12"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 12"
                }
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 1 9 12) -> 12 - 9 = 3 (left: 1 3 12) -> 3 * 1 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "9 12"
                }
            }
        },
        "Input": "1 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "987": {
        "puzzle": "2 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> Input: 10 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 + 14 = 20 (left: 20)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 - 8 = -2 (left: 8) ",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 * 5 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 8 / 6 = 1.3333333333333333 (left: 1.3333333333333333 8)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> Possible next steps",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> Input: 3 9 4 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 8"
                }
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 6 8) -> 5 + 6 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 2 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 20 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "1 6"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "6"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 6 = 36 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 5 6",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "988": {
        "puzzle": "5 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 / 3 = 4 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 3 + 5 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (5 + (13 - 10)) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (8 - 5) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (5 + (13 - 10)) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 3"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (5 + (13 - 10)) = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (8 - 5) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 3 = 15 (left: 15 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 / 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 5 * 13 = 65 (left: 3 65)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (5 + (5 - 13)) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "8 3"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (8 - 5) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "13 / 5 = 2 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 * 5 = 25 (left: 8 13 25)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.1",
                    "Resampled state": "5 13 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 5 13 13) -> 13 - 5 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> Input: 4 7 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (8 - 5) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 13"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 13 / 5 = 2.6 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 + 10 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (5 + (13 - 10)) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 5 = 0 (left: 0 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24) -> Answer: 8 * (5 + (13 - 10)) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 * 10 = 80 (left: 80 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 * 3 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (5 - 8) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (8 - 5) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 + 5 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 10 13"
                }
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 8 * 10 = 80 (left: 80 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "8 13 25"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 8 13 25) -> 25 - 13 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 13"
                }
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 5 13) -> 3 + 5 = 8 (left: 8 13) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (5 - 8) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (8 - 5) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 2": {
                "Step": "13 / 5 = 2 (left: 2 5  -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 3"
                }
            },
            "Step 5": {
                "Step": "5 + 5 = 10 (left: 8 10 13) -> 13 - 10 = 3 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (8 - 5) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "13 / 5 = 2 (left: 2 5  -> 2 * 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (13 - 5) * (8 - 5) = 24"
            }
        },
        "Input": "5 5 8 13",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "989": {
        "puzzle": "2 3 3 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 3 3 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 3 + 9 = 12 (left: 12 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (10 - 3) * 2 + 14 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Input: 3 6 9"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 + 2 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 3 * 9 = 27 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Input: 3 6 9"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 + 10 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> 10 / 2 = 5 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Input: 3 6 9"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "9 3 10"
                }
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 3 10) -> 9 + 3 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 9 10"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 10 - 9 = 1 (left: 2 1)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10) -> Input: 3 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: ((2 * (10 - 3)) + 3) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Input: 3 6 9"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 10 - 2 = 8 (left: 2 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Input: 3 6 9"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 3 3 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 + 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Input: 3 6 9"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 2 6 10) -> Input: 4 8 12 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (10 - 3) * 2 + 10 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Input: 3 6 9"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 3 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (10 - 3) * (2 + 3) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Input: 3 6 9"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 2 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 3 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 5 * 10 = 50 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "14 10"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (10 - 3) * 2 + 10 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Input: 3 6 9"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 3 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 3 7) -> 7 / 2 = 3.5 (left: 3.5 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "14 10"
                }
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 * 2 = 14 (left: 14 10) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "5 10"
                }
            },
            "Step 5": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 7 - 2 = 5 (left: 5 10) -> 10 / 5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 3 = 7 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (2 * (10 - 3)) + 3 = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "Input: 3 6 9"
                }
            }
        },
        "Input": "2 3 3 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "990": {
        "puzzle": "3 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 4 8 12) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 6 6 6 4\nSteps:\n6 + 6 = 12 (left: 6 4 12)\n6 * 4 = 24 (left: 24)\nAnswer: (6 + 6) * 4 = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 10\nSteps:\n3 + 5 = 8 (left: 2 8 10)\n8 - 2 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((3 + 5) - 2) * 10 / 2.5 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps for the number 36 as it is already a single number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "24 12"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 8\nSteps:\n4 * 8 = 32 (left: 2 3 32)\n3 + 2 = 5 (left: 5 32)\n5 * 32 = 160 (left: 160)\nAnswer: (3 + 2) * (4 * 8) = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 8\nSteps:\n6 * 3 = 18 (left: 2 8 18)\n18 - 8 = 10 (left: 2 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((6 * 3) - 8) * 2 + 4 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps for the number 36 as it is already a single number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 6\nSteps:\n5 - 3 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((5 - 3) * 6) * 2 = 24",
                "Pruning": {
                    "Idx": "0.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All of the given inputs can be simplified using the basic arithmetic operations to obtain the final result of 24.",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) * 8 = 24 -> All possible combinations have been explored with the given inputs.",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps for the number 36 as it is already a single number."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "24 12"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All possible solutions have been provided.",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All given inputs have been used to obtain the number 24 using basic arithmetic operations.",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "No calculations can be done with only one number."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 3 = 5 (left: 5 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "24"
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 - 1 = 35 (left: 35)\n35 - 11 = 24 (left: 24)\nAnswer: ((6 * 6) / 6) + (36 - 11) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "3 8 "
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 10 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 24 (left: 24)\nAnswer: ((3 + 7) * 2) * 10 / 4 = 24",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All given sequences have been used to obtain the desired result of 24.",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\nAnswer: (2 * 6) * (3 + 4) = 24",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "No calculations can be done with only one number."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 8 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 8 = 1.5 (left: 3 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: (2 + (3 + 3)) * 4 = 24",
                "Pruning": {
                    "Idx": "2.3",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 6\nSteps:\n2 * 6 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\nAnswer: (2 * 6) * (3 + 5) = 96",
                "Pruning": {
                    "Idx": "7.3",
                    "Pruned state": "No calculations can be done with only one number."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n21 - 5 = 16 (left: 2 16)\n16 - 2 = 14 (left: 14)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) - 2 + 10 = 24",
                "Pruning": {
                    "Idx": "3.1",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: 2 * 3 * 4 = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 / 2 = 4.5 (left: 4.5)\n4.5 * 2 = 9 (left: 9)\nAnswer: ((6 * 3) - 9) / 2 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps for the number 36 as it is already a single number."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 12 / 3 = 4 (left: 8 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> No calculations can be done with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All possible solutions have been provided.",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n9 - 2 = 7 (left: 7 18)\n7 + 18 = 25 (left: 25)\nAnswer: (2 * 3) + (6 * 9) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps for the number 36 as it is already a single number."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 4 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 / 3 = 2.66666666667 (left: 2.66666666667 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 3": {
                "Step": "8 / 3 = 2.67 (left: 3 2.67 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "24 12"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 3 * 8 = 24 (left: 24 12) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 * 6 = 36 (left: 6 36)\n36 - 12 = 24 (left: 24)\nAnswer: (6 + 6) * (6 - 6) = 24",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> Input: 5 6 7 8\nSteps:\n7 - 5 = 2 (left: 2 6 8)\n2 * 6 = 12 (left: 12 8)\n12 + 8 = 20 (left: 20)\n20 + 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((7 - 5) * 6) + 8 +",
                "Pruning": {
                    "Idx": "6.3",
                    "Pruned state": "There are no possible next steps as the input is already a single number."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 3 8 12) -> 8 / 3 = 2.67 (left: 2.67 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (12 / 4) * 8 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (12 / 4) * 8 = 24 -> All possible solutions have been provided.",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There are no possible next steps for the number 36 as it is already a single number."
                }
            }
        },
        "Input": "3 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "991": {
        "puzzle": "2 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 4 8 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "2 10 11"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 2 * 10 = 20 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 - 2 = 4 (left:"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 - 2 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 4"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 4 8) -> 8 - 4 = 4 (left: 3 4) -> 6 / 5 = 1",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 12 11"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 - 2 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 4 * 2 = 8 (left: ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "3 4"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 4  -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 3 + 4 = 7 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 - 2 = 4 (left:"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 - 2 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 4"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 4 8) -> 8 - 4 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "3 4"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "6 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 * 6 = 36 (left: 11 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 - 2 = 4 (left:"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 - 2 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3 4"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "3 4"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 6 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "4 12 11"
                }
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 12 11) -> 12 - 4 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 - 2 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "3 8"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "3 4"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 6 11"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left:",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "2 6 11"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 * 2 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 - 2 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 + 2 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 4"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 4 8) -> 8 - 4 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "3 4"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 4 9"
                }
            },
            "Step 1": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 4 * 9 = 36 (left: 2 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 12 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 - 2 = 4 (left:"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 4 + 8 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 - 2 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 4"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 4 8) -> 8 - 4 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "3 4"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 - 2 = 4 (left:"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 2 / 6 = 0.333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 4 8"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 4 8) -> 8 - 4 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.5",
                    "Resampled state": "3 4"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "3 4"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 2 = 9 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "11 - 2 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 - 2 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 4"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 4 8) -> 8 - 4 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "3 4"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 "
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 2 + 4 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 4 9"
                }
            },
            "Step 2": {
                "Step": "11 - 2 = 9 (left: 2 4 9) -> 9 - 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 6 7"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 2 6 7) -> 2 + 6 = 8 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 - 2 = 4 (left:"
                }
            },
            "Step 4": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 + 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 - 2 = 4 (left:"
                }
            },
            "Step 5": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "3 4"
                }
            },
            "Step 6": {
                "Step": "6 - 4 = 2 (left: 2 6 11) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 4 8) -> 8 - 4 = 4 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": {
                    "Idx": "7.5",
                    "Pruned state": "3 4"
                }
            }
        },
        "Input": "2 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "992": {
        "puzzle": "2 2 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "There are no possible next steps with the input 0 as there are no other numbers to perform operations with."
                }
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> None",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 8 9 32)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 2 8 9"
                }
            },
            "Step 4": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 9 - 2 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 5": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 1 + 2 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 1 + 2 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 8 1"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 8 - 2 = 6 (left: 6 1)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "16 72"
                }
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 + 72 = 88 (left: 88)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 5": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 1 + 2 = 3 (left: 3 8 9) -> 9 - 3 = 6 (left: 8 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 1 + 2 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 - 2.67 = 6.33 (left: 6.33)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 2 8 9"
                }
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 8 / 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "16 72"
                }
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 72 - 16 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 5": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 1 + 2 = 3 (left: 3 8 9) -> 3 * 8 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 1 + 2 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 2 8 1)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 2": {
                "Step": "9 - 2 = 7 (left: 2 8 ",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9) -> 3 * 6 = 18 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 1 + 2 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.36 (left: 3.36)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "0."
                }
            },
            "Step 1": {
                "Step": "2 / 8 = 0.25 (left: 0. -> 0 + 0 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 / 16 = 0.5 (left: 0.5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 2 8 9"
                }
            },
            "Step 3": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 8 - 2 = 6 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 2 8 9"
                }
            },
            "Step 4": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 1 + 2 = 3 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "1 16 9"
                }
            },
            "Step 5": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 2 * 8 = 16 (left: 1 16 9) -> 1 + 16 = 17 (left: 9 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 1 + 2 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 9 32)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "There are no possible next steps with the input 0 as there are no other numbers to perform operations with."
                }
            },
            "Step 2": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> N/A",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "There are no possible next steps with the input 0 as there are no other numbers to perform operations with."
                }
            },
            "Step 3": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 8 9 32)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 9 32"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 8 9 32) -> 8 + 9 = 17 (left: 17 32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 1 + 2 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 16 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 9 - 4 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "16 72"
                }
            },
            "Step 2": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 8 * 9 = 72 (left: 16 72) -> 16 + 72 = 88 (left: 88)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "0."
                }
            },
            "Step 4": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input of 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 5": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 1 + 2 = 3 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 1 + 2 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 + 9 = 11.67 (left: 11.67)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 8 = 16 (left: 16 8 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 2": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "1 2 8 9"
                }
            },
            "Step 4": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 2 * 8 = 16 (left: 1 16 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 5": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 1 + 2 = 3 (left: 3 8 9) -> 8 - 3 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 1 + 2 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 2.67 * 9 = 24.03 (left: 24.03)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "0."
                }
            },
            "Step 1": {
                "Step": "2 / 8 = 0.25 (left: 0. -> There are no possible next steps with the input 0 as there are no other numbers to perform operations with.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "2 8 1"
                }
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 8 - 2 = 6 (left: 6 1)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 1"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 2 8 1) -> 8 - 2 = 6 (left: 6 1) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "16 8 9"
                }
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 / 8 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "8 9 32"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 4 * 8 = 32 (left: 8 9 32) -> 32 - 9 = 23 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 1 + 2 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.36 (left: 3.36)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 / 8 = 0.25 (left: 0.",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 9) -> 8 / 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 2 4 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 8 9"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 8 - 4 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 5": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 1 + 2 = 3 (left: 3 8 9) -> 3 + 8 = 11 (left: 11 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "2.67 9"
                }
            },
            "Step 6": {
                "Step": "2 / 2 = 1 (left: 1 2 8 9) -> 1 + 2 = 3 (left: 3 8 9) -> 8 / 3 = 2.67 (left: 2.67 9) -> 9 / 2.67 = 3.36 (left: 3.36)",
                "Pruning": "NA"
            }
        },
        "Input": "2 2 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "993": {
        "puzzle": "1 5 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 1 = 5 (left: 5 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 4": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 7 - 5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "7"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "5 / 1 = 5 (left: 5 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "7"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 7 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 1 11 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 7"
                }
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 5 6 7) -> 5 * 6 = 30 (left: 30 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 3": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 5 + 7 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.5",
                    "Resampled state": "7"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 2": {
                "Step": "5 / 1 = 5 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 6 7"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 5 6 7) -> 7 - 5 = 2 (left: 2 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1.4 6"
                }
            },
            "Step 5": {
                "Step": "1 * 5 = 5 (left: 5 6 7) -> 7 / 5 = 1.4 (left: 1.4 6) -> 1.4 * 6 = 8.4 (left: 8.4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "7"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 + 2 = 9 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "5 + 1 = 6 (left: 6 6 7) -> 6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 1 11 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 2": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 + 6 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> There are no possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 1 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 5 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 6 7"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 5 6 7) -> 7 - 5 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "1 * 5 = 5 (left: 5 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "5 6 7"
                }
            },
            "Step 4": {
                "Step": "5 / 1 = 5 (left: 5 6 7) -> 6 + 7 = 13 (left: 5 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "8.4"
                }
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 5 6 7) -> 7 / 5 = 1.4 (left: 1.4 6) -> 1.4 * 6 = 8.4 (left: 8.4) -> 8 - 4 = 4.4 (left: 4.4)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 1": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 2": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "7"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 6 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 5 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "5 6 7"
                }
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 5 6 7) -> 7 / 5 = 1.4 (left: 1.4 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.5",
                    "Resampled state": "7"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 2": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 1 30 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 4": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "7"
                }
            },
            "Step 6": {
                "Step": "1 + 5 = 6 (left: 6 6 7) -> 6 / 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Input": "1 5 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "994": {
        "puzzle": "5 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 2": {
                "Step": "10 + 5 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "10 2"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "3 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11 13) -> 11 / 3 = 3.6666666666666665 (left: 3.6666666666666665 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "40 / 10 = "
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 / 10 =  -> 40 / 10 = 4"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Resampled state": "10 2"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "13 - 11 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 5 11"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 8 5 11) -> 8 + 5 = 13 (left: 13 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "13 11"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 8 5 11) -> 8 + 5 = 13 (left: 13 11) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 8 5 11) -> 8 + 5 = 13 (left: 13 11) -> 11 + 13 = 24 (left: 24) -> Answer: (10 - 5) * (8 + 11) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 2": {
                "Step": "8 * 10 = 80 (left: 5 11 80)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "5 11 80"
                }
            },
            "Step 3": {
                "Step": "8 * 10 = 80 (left: 5 11 80) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "10 11 40"
                }
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 / 10 = ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "13 - 11 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: -> 13 * 11 = 143 (left: 143)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left:",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 8 5 11) -> 8 + 5 = 13 (left: 13 11) -> 11 + 13 = 24 (left: 24) -> Answer: (10 - 5) + (8 + 5) + 11 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 8 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> Input: 20 5 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 10 * 11 = 110 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "13 11"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 8 5 11) -> 8 + 5 = 13 (left: 13 11) -> 13 * 11 = 143 (left: 143)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "40 / 10 = "
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 40 / 10 =  -> 40 / 10 = 4"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 * 13 = 143 (left: 10 143)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "13 11"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 8 5 11) -> 8 + 5 = 13 (left: 13 11) -> 11 + 13 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 8 5 11) -> 8 + 5 = 13 (left: 13 11) -> 11 + 13 = 24 (left: 24) -> Answer: (8 + (10 - 5)) + 11 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 11 + 13 = 24 (left: 10 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "13 11"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 8 5 11) -> 8 + 5 = 13 (left: 13 11) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 8 5 11) -> 8 + 5 = 13 (left: 13 11) -> 11 + 13 = 24 (left: 24) -> Answer: (10 - 5) + (8 + 5) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 5 8 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 11 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 5 11"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 8 5 11) -> 8 / 5 = 1.6 (left: 1.6 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 5 11"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 8 5 11) -> 8 - 5 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 8 5 11) -> 8 + 5 = 13 (left: 13 11) -> 11 + 13 = 24 (left: 24) -> Answer: (10 - 5) * (8 + 5) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 8 5 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "10 + 8 = 18 (left: 5 11 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "13 11"
                }
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 8 5 11) -> 8 + 5 = 13 (left: 13 11) -> 13 / 11 = 1.18181818182 (left: 1.18181818182)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 8 5 11) -> 8 + 5 = 13 (left: 13 11) -> 11 + 13 = 24 (left: 24) -> Answer: (8 + (10 - 5)) + 11 = 24"
            }
        },
        "Input": "5 8 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            }
        ]
    },
    "995": {
        "puzzle": "4 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "32 12"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 / 12 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "20"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> There are no possible next steps for the number 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> 20 + 2 = 22 (left: 2)",
                "Pruning": {
                    "Idx": "2.5",
                    "Pruned state": "There are no possible next steps with the input of 20."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 9 8"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 9 - 4 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 9 12"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 13 12"
                }
            },
            "Step 4": {
                "Step": "9 + 4 = 13 (left: 4 13 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> 20 + 2 = 22",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 12 * 4 = 48 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 9 8"
                }
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 8 + 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "4 9 8"
                }
            },
            "Step 4": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 4 + 9 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "20"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "There are no possible next steps for the number 20."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 12 = 24 (left: 4 24)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 + 9 = 25 (left: 12 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "Input:"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> Input: -> There seems to be an error in the input provided. Please provide a valid input for me to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 2)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "There are no possible next steps for the number 20."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 5 * 9 = 45 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "20"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "32 12"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 / 12 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> 20 / 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "None, as there is only one number given."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 36 4 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 - 4 = 0 (left: 0 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 + 12 = 48 (left: 4 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 9 8"
                }
            },
            "Step 3": {
                "Step": "12 - 4 = 8 (left: 4 9 8) -> 4 + 9 = 13 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "1 12"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 - 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> There are no possible next steps with the input of 20.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 4 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "8 9 12"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 / 8 = 1.125 (left: 1.125 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "4 5 "
                }
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> 20 * 8 = 160 (left: 8 160)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 13 12"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "36 4 12"
                }
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "20"
                }
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "1.125 12"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> 9 / 8 = 1.125 (left: 1.125 12) -> 12 - 1.125 = 10.875 (left: 10.875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> 20 - 2 = 18 (left: 2)",
                "Pruning": {
                    "Idx": "0.5",
                    "Pruned state": "There are no possible next steps for the number 20."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "32 12"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "4 13 12"
                }
            },
            "Step 4": {
                "Step": "9 + 4 = 13 (left: 4 13 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "32 12"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 * 12 = 384 (left: 384)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> 20 * 2 = 40 (left: 40)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "None, as there is only one number given."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 4 9 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "16 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 9 12) -> 16 / 9 = 1.7777777777777777 (left: 1.7777777777777777 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 / 12 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "8 9 12"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 8 9 12) -> Input:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "32 12"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "20"
                }
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 36 4 12) -> 36 - 4 = 32 (left: 32 12) -> 32 - 12 = 20 (left: 20) -> 20 - 2 = 18 (left: 2 18)",
                "Pruning": null
            }
        },
        "Input": "4 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "996": {
        "puzzle": "2 5 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 * 4 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 * 3 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "9 27"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 15 - 5 =",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 * 3 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 24 + 30 = 54 (left: 54 10)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "9 27"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 9 + 27 = 36 (left: 36)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 6 = 0 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "9 27"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 9 / 3 = 3 (left: 3 27) -> 3 * 3 = 9 (left: 9 27) -> 9 * 27 = 243 (left: 243)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 * 3 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 11 6"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 11 + 6 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 18"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 * 3 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 9 / 3 = 3 (left: 3 27) -> 3 * 3 = 9 (left: 9 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 * 3 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 5 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 6 6"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "9 27"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 27 / 9 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 11 6"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 6) -> 11 - 6 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 6 6 10) -> 6 * 6 = 36 (left: 10 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 3 * 6 = 18 (left: 6 18) -> 18 / 6 = 3 (left: 3 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "24"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 * 3 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24) -> Answer: (6 * (6 / 2)) + 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 + 6 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 * 3 = 18 (left: 6 18) -> 18 - 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "9 27"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 27 - 9 = 18 (left: 9 18)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 6 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 6 "
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 6 6  -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 / 3 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Resampled state": "6 18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 * 3 = 18 (left: 6 18) -> 18 + 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.5",
                    "Resampled state": "9 27"
                }
            },
            "Step 6": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 9 / 3 = 3 (left: 3 27) -> 3 * 3 = 9 (left: 9 27) -> Input: 4 16 64",
                "Pruning": null
            }
        },
        "Input": "2 5 6 6",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "997": {
        "puzzle": "2 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 9)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 - 2 = 3 (left: 3) ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 9 / 6 = 1.5 (left: 1.5 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 2 * 4 * (12 - 9) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 8 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 - 2 = 1 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 10 + 2 = 12 (left: 12)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 / 3 = 2.66667 (left: 2.66667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((2 * 4) - (12 - 9)) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 9 12) -> 6 * 9 = 54 (left: 54 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 7 - 4 = 3 (left:",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> Input: 5 6 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 2 * (4 + (9 - 12)) * 8 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 2 8 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 + 4 = 6 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "4 5"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 4 5) -> 5 + 4 = 9 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (12 - 9) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 2 * (4 + (12 - 9)) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "3 8"
                }
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "4 6"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 3 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 8"
                }
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (2 * 4) * (12 - 9) = 24"
            }
        },
        "Input": "2 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            }
        ]
    },
    "998": {
        "puzzle": "4 8 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 13 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 8 13 15) -> 8 / 13 = 0.6153846153846154 (left: 0.6153846153846154 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 / 11 = 1.1818181818182",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "11 - 8 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 8) * 4 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 7 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Resampled state": "1 13"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.84615384615 (left: 0.84615384615)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 8 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "11 - 8 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 8) * 13 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 8 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 + 13 = 25 (left: 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "8 13 15"
                }
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 8 13 15) -> 8 + 13 = 21 (left: 15 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "11 - 8 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.3",
                    "Resampled state": "24"
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 8) * 4 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (13 - 11) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 / 12 = 0.9166666666666666 (left: 0.916666666666666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 2": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Resampled state": "3 5"
                }
            },
            "Step 4": {
                "Step": "11 - 8 = 3 (left: 3 8 13) -> 13 - 8 = 5 (left: 3 5) -> 3 * 5 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 + 13 = 24 (left: 24)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 4 8 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 / 11 = 1.181818181",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Resampled state": "2 12"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "11 - 8 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24) -> Answer: (11 - 8) * 4 = 24 -> Input: 3 6 7 9\nSteps:\n3 * 7 = 21 (left: 6 9 21)\n9 - 6 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\n63 / 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 6) / 3 = 21"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 7 8 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 12 / 11 = 1.0909 (left: 1.0909 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 2": {
                "Step": "11 - 8 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "11 - 8 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 12 = 1 (left: 11 1)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24"
            }
        },
        "Input": "4 8 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "999": {
        "puzzle": "4 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 3 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 * 3 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9 10"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36 3"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 + 3 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Resampled state": "1.67"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67) -> 1.67 + 2 = 3.67",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "5 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 + 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 13 - 10 = 3 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "5 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 / 3 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36 3"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 - 3 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.5",
                    "Resampled state": "33"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 - 3 = 33 (left: 33) -> 33 / 2 = 16.5 (left: 16.5)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 / 5 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 / 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "5 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 + 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36 3"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 * 3 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Resampled state": "-33"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 3 - 36 = -33 (left: -33) -> -33 + 2 = -31",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> Input: 3 6 9 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 3 - 36 = -33 (left: -33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "5 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 + 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36 3"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 - 3 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Resampled state": "12"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 / 3 = 12 (left: 12) -> 12 * 2 = 24",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 + 9 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "5 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 / 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36 3"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 - 3 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "33"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 - 3 = 33 (left: 33) -> 20 / 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "5 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 + 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9 10"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 + 10 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "5 3"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.5",
                    "Resampled state": "33"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 - 3 = 33 (left: 33) -> 33 - 2 = 31",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "5 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 * 3 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 3 - 36 = -33 (left: -33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9 10"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "36 3"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 + 3 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.5",
                    "Resampled state": "33"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 - 3 = 33 (left: 33) -> There are no possible next steps with the input 33.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 4 9 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> Input: 6 2 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36 3"
                }
            },
            "Step 3": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 / 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 + 3 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "36 3"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 - 3 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1.67"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67) -> There are no possible next steps for the input 1.67.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 4 9 3)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 10 13"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 5 10 13) -> 10 / 5 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "5 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 + 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9 10"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "36 3"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 - 3 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.5",
                    "Resampled state": "108"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 4 * 9 = 36 (left: 36 3) -> 36 * 3 = 108 (left: 108) -> 10 + 8 = 18 (left: 18)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 3"
                }
            },
            "Step 1": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "5 3"
                }
            },
            "Step 2": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 / 3 = 1.67 (left: 1.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.3",
                    "Resampled state": "9 10"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.1",
                    "Resampled state": "5 3"
                }
            },
            "Step 5": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 + 3 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.5",
                    "Resampled state": "8"
                }
            },
            "Step 6": {
                "Step": "13 - 10 = 3 (left: 4 9 3) -> 9 - 4 = 5 (left: 5 3) -> 5 + 3 = 8 (left: 8) -> There are no possible next steps as there are not enough numbers provided to perform any arithmetic operations.",
                "Pruning": null
            }
        },
        "Input": "4 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 2053574,
        "output_tokens": 854610.3123015844,
        "total_cost": 2.3087024684523767
    }
}