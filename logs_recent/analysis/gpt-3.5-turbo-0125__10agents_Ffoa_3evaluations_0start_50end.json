{
    "0": {
        "input": "1 1 4 6",
        "step_1": {
            "steps": [
                "3 + 9 = 12 (left: 1 2 12)",
                "Possible next steps:",
                "1 + 1 = 2 (left: 2 4 6)",
                "3 + 5 = 8 (left: 2 7 8)",
                "1 * 4 = 4 (left: 4 4 6)",
                "4 + 1 = 5 (left: 1 5 6)",
                "6 - 4 = 2 (left: 1 2 6)",
                "9 / 3 = 3 (left: 3 6 4)",
                "1 + 1 = 2 (left: 2 4 6)",
                "1 * 4 = 4 (left: 4 4 6)"
            ],
            "values": [
                40.001,
                0.003,
                0.003,
                3.0,
                2.001,
                22.0,
                1.002,
                2.001,
                1.002,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.5",
                "3 <- INIT",
                "4 <- 1.5",
                "5 <- 1.0",
                "6 <- 1.0",
                "7 <- INIT",
                "8 <- 1.5",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "4 + 1 = 5 (left: 1 5 6)",
                "",
                "4 + 1 = 5 (left: 1 5 6)",
                "3 + 9 = 12 (left: 1 2 12)",
                "3 + 9 = 12 (left: 1 2 12)",
                "",
                "4 + 1 = 5 (left: 1 5 6)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6)",
                "6 - 4 = 2 (left: 1 2 6)",
                "4 + 1 = 5 (left: 1 5 6)\n3 + 9 = 12 (left: 12 12)",
                "Possible next steps:",
                "4 + 1 = 5 (left: 1 5 6)\n5 / 1 = 5 (left: 5 6)",
                "3 + 9 = 12 (left: 1 2 12)\n2 + 12 = 14 (left: 1 14)",
                "3 + 9 = 12 (left: 1 2 12)\n2 + 12 = 14 (left: 1 14)",
                "6 - 4 = 2 (left: 1 2 6)",
                "4 + 1 = 5 (left: 1 5 6)\n6 - 1 = 5 (left: 5 6)",
                "Possible next steps:"
            ],
            "values": [
                40.001,
                0.003,
                20.002,
                0.003,
                1.001,
                1.0,
                0.002,
                2.001,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 2.2",
                "2 <- INIT",
                "3 <- 1.5",
                "4 <- 2.0",
                "5 <- 1.5",
                "6 <- 1.6",
                "7 <- 1.5",
                "8 <- 2.0",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 4 6)",
                "4 + 1 = 5 (left: 1 5 6)\n3 + 9 = 12 (left: 12 12)",
                "",
                "4 + 1 = 5 (left: 1 5 6)",
                "1 * 1 = 1 (left: 1 4 6)",
                "4 + 1 = 5 (left: 1 5 6)",
                "6 - 4 = 2 (left: 1 2 6)",
                "4 + 1 = 5 (left: 1 5 6)",
                "1 * 1 = 1 (left: 1 4 6)",
                "4 + 1 = 5 (left: 1 5 6)\n3 + 9 = 12 (left: 12 12)"
            ]
        },
        "step_3": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6)\nInput: 3 7 9 12",
                "4 + 1 = 5 (left: 1 5 6)\n3 + 9 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "9 - 3 = 6 (left: 6 7 5)",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "1 * 1 = 1 (left: 1 4 6)\n12 - 3 = 9 (left: 9 12)",
                "4 + 1 = 5 (left: 1 5 6)\n5 + 1 = 6 (left: 6 6)",
                "6 - 4 = 2 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)",
                "4 + 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)",
                "1 * 1 = 1 (left: 1 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "4 + 1 = 5 (left: 1 5 6)\n3 + 9 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1) "
            ],
            "values": [
                0.003,
                0.003,
                3.0,
                0.003,
                0.003,
                0.003,
                20.001,
                41.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 2.0",
                "2 <- INIT",
                "3 <- 3.7",
                "4 <- 1.5",
                "5 <- INIT",
                "6 <- 2.2",
                "7 <- 2.0",
                "8 <- INIT",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "4 + 1 = 5 (left: 1 5 6)\n3 + 9 = 12 (left: 12 12)",
                "1 * 1 = 1 (left: 1 4 6)",
                "",
                "4 + 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)",
                "4 + 1 = 5 (left: 1 5 6)",
                "",
                "4 + 1 = 5 (left: 1 5 6)\n3 + 9 = 12 (left: 12 12)",
                "1 * 1 = 1 (left: 1 4 6)",
                "",
                "1 * 1 = 1 (left: 1 4 6)"
            ]
        },
        "step_4": {
            "steps": [
                "4 + 1 = 5 (left: 1 5 6)\n3 + 9 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 1 5)",
                "6 / 1 = 6 (left: 1 4 6)",
                "4 + 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "9 - 6 = 3 (left: 3 3 2)",
                "4 + 1 = 5 (left: 1 5 6)\n3 + 9 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 4 5)",
                "5 - 3 = 2 (left: 2 7 9)",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 4 5)"
            ],
            "values": [
                0.003,
                60.0,
                60.0,
                0.003,
                40.001,
                3.0,
                0.001,
                22.0,
                1.002,
                2.001
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 4.1",
                "2 <- 4.7",
                "3 <- 4.1",
                "4 <- 4.7",
                "5 <- 2.0",
                "6 <- 4.2",
                "7 <- 4.2",
                "8 <- 1.0",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "6 / 1 = 6 (left: 1 4 6)",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 1 5)",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 4 5)",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 1 5)",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 4 5)",
                "1 * 1 = 1 (left: 1 4 6)",
                "6 / 1 = 6 (left: 1 4 6)",
                "6 / 1 = 6 (left: 1 4 6)",
                "3 + 9 = 12 (left: 1 2 12)",
                "3 + 9 = 12 (left: 1 2 12)"
            ]
        },
        "step_5": {
            "steps": [
                "6 / 1 = 6 (left: 1 4 6)\n12 - 3 = 9 (left: 9 12)",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 1 5)\n5 / 1 = 5 (left: 5)",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 4 5)\n4 + 5 = 9 (left: 5)",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4)",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 4 5)\n4 / 5 = 0.8 (left: 0.8)",
                "1 * 1 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)",
                "6 / 1 = 6 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)",
                "6 / 1 = 6 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)",
                "3 + 9 = 12 (left: 1 2 12)\n12 - 1 = 11 (left: 2 11)",
                "3 + 9 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)"
            ],
            "values": [
                0.003,
                0.001,
                0.003,
                0.002,
                0.002,
                0.001,
                0.003,
                0.003,
                2.001,
                60.0
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 4.2",
                "2 <- 3.7",
                "3 <- 4.2",
                "4 <- 4.7",
                "5 <- 4.4",
                "6 <- 4.4",
                "7 <- 4.2",
                "8 <- 4.4",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "6 / 1 = 6 (left: 1 4 6)",
                "4 + 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)",
                "6 / 1 = 6 (left: 1 4 6)",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 4 5)",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "6 / 1 = 6 (left: 1 4 6)",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                ""
            ]
        },
        "step_6": {
            "steps": [
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)",
                "4 + 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "6 / 1 = 6 (left: 1 4 6)\nPossible next steps:",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1) ",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "7 + 7 = 14 (left: 14 21)"
            ],
            "values": [
                0.003,
                60.0,
                0.001,
                0.003,
                0.003,
                60.0,
                0.003,
                60.0,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 6.7",
                "2 <- 6.7",
                "3 <- 6.5",
                "4 <- 4.4",
                "5 <- 6.7",
                "6 <- 4.1",
                "7 <- 6.1",
                "8 <- 4.2",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 1 5)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)",
                "6 / 1 = 6 (left: 1 4 6)",
                "3 + 9 = 12 (left: 1 2 12)"
            ]
        },
        "step_7": {
            "steps": [
                "9 - 3 = 6 (left: 3 6 6)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10) ",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 1 5)\n5 / 1 = 5 (left: 5)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "6 / 1 = 6 (left: 1 4 6)\n3 - 5 = -2 (left: -2 7 9)",
                "3 + 9 = 12 (left: 1 2 12)\n12 / 3 = 4 (left: 2 4 14)"
            ],
            "values": [
                3.0,
                0.002,
                0.002,
                0.003,
                0.003,
                0.0,
                0.001,
                0.002,
                21.001,
                0.002
            ],
            "resampled": [
                "0 <- 6.1",
                "1 <- 5.9",
                "2 <- 5.9",
                "3 <- 4.1",
                "4 <- 6.1",
                "5 <- 6.1",
                "6 <- 6.5",
                "7 <- 1.0",
                "8 <- 5.9",
                "9 <- 6.7"
            ],
            "resampled_steps": [
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)",
                "3 + 9 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "3 + 9 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 1 5)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "3 + 9 = 12 (left: 1 2 12)",
                "3 + 9 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)"
            ]
        },
        "step_8": {
            "steps": [
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "3 + 9 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7",
                "3 + 9 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 1 5)\n1 * 5 = 5 (left: 5)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n1 + 10 = 11 (left: 10)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)\n1 + 6 = 7",
                "3 + 9 = 12 (left: 1 2 12)\nPossible next steps:",
                "3 + 9 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.001,
                0.002,
                0.002,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.7",
                "1 <- 4.1",
                "2 <- 7.8",
                "3 <- 6.1",
                "4 <- 5.9",
                "5 <- 6.5",
                "6 <- 5.9",
                "7 <- 6.7",
                "8 <- 5.9",
                "9 <- 6.1"
            ],
            "resampled_steps": [
                "4 + 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 1 5)",
                "6 / 1 = 6 (left: 1 4 6)\n3 - 5 = -2 (left: -2 7 9)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)",
                "3 + 9 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)",
                "3 + 9 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)",
                "3 + 9 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)"
            ]
        },
        "step_9": {
            "steps": [
                "4 + 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 4 6)\n6 - 1 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4)",
                "6 / 1 = 6 (left: 1 4 6)\n3 - 5 = -2 (left: -2 7 9)\n-2 + 7 = 5 (left: 5 9)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "3 + 9 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "3 + 9 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n27 / 9 = 3 (left: 3 3 27)",
                "3 + 9 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)"
            ],
            "values": [
                60.0,
                0.0,
                0.001,
                0.002,
                0.003,
                0.001,
                0.003,
                40.001,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 9.0",
                "1 <- 6.1",
                "2 <- 5.9",
                "3 <- 2.0",
                "4 <- 4.5",
                "5 <- 9.7",
                "6 <- 5.8",
                "7 <- 4.4",
                "8 <- 4.2",
                "9 <- 6.1"
            ],
            "resampled_steps": [
                "4 + 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)",
                "3 + 9 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 * 1 = 1 (left: 1 4 6)",
                "9 - 6 = 3 (left: 3 3 2)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n27 / 9 = 3 (left: 3 3 27)",
                "3 + 9 = 12 (left: 1 2 12)\n12 - 1 = 11 (left: 2 11)",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "6 / 1 = 6 (left: 1 4 6)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)"
            ]
        },
        "step_10": {
            "steps": [
                "4 + 1 = 5 (left: 1 5 6)\n5 - 1 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 + 1) * (6) = 24",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "3 + 9 = 12 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "1 * 1 = 1 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)",
                "9 - 6 = 3 (left: 3 3 2)\n3 - 2 = 1 (left: 1 3)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n27 / 9 = 3 (left: 3 3 27)\n27 / 3 = 9 (left: 3 9)",
                "3 + 9 = 12 (left: 1 2 12)\n12 - 1 = 11 (left: 2 11)\n11 / 2 = 5.5 (left: 5.5)",
                "4 + 1 = 5 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "6 / 1 = 6 (left: 1 4 6)\n6 - 1 = 5 (left: 4 5)",
                "6 / 1 = 6 (left: 1 4 6)\n4 + 6 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)"
            ],
            "values": [
                60.0,
                0.001,
                0.001,
                0.002,
                0.001,
                0.003,
                0.0,
                0.003,
                22.0,
                0.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.049248
    },
    "1": {
        "input": "1 1 11 11",
        "step_1": {
            "steps": [
                "11 / 1 = 11 (left: 1 11 11)",
                "1 + 1 = 2 (left: 2 11 11)",
                "11 * 1 = 11 (left: 1 11 11)",
                "1 + 1 = 2 (left: 2 11 11)",
                "11 + 1 = 12 (left: 1 11 12)",
                "1 - 1 = 0 (left: 0 11 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "11 - 1 = 10 (left: 1 10 11)",
                "11 - 1 = 10 (left: 1 11 10)",
                "5 + 2 = 7 (left: 7 4)"
            ],
            "values": [
                1.002,
                0.003,
                0.002,
                0.003,
                20.002,
                0.003,
                0.003,
                1.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 1.4",
                "8 <- 1.4",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "11 + 1 = 12 (left: 1 11 12)",
                "11 + 1 = 12 (left: 1 11 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "11 - 1 = 10 (left: 1 11 10)",
                "11 / 1 = 11 (left: 1 11 11)",
                "1 * 1 = 1 (left: 1 11 11)",
                "11 - 1 = 10 (left: 1 11 10)",
                "4 + 6 = 10 (left: 8 10)",
                "Input: 3 5 5 10",
                "11 / 1 = 11 (left: 1 11 11)",
                "11 + 1 = 12 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)",
                "11 + 1 = 12 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "11 - 1 = 10 (left: 1 10 11)"
            ],
            "values": [
                2.001,
                0.003,
                0.003,
                1.002,
                41.0,
                0.003,
                0.002,
                1.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 2.4",
                "2 <- 2.7",
                "3 <- 1.4",
                "4 <- INIT",
                "5 <- 2.4",
                "6 <- 2.4",
                "7 <- 1.4",
                "8 <- 1.4",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "4 + 6 = 10 (left: 8 10)",
                "4 + 6 = 10 (left: 8 10)",
                "11 + 1 = 12 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)",
                "11 + 1 = 12 (left: 1 11 12)",
                "",
                "4 + 6 = 10 (left: 8 10)",
                "4 + 6 = 10 (left: 8 10)",
                "11 + 1 = 12 (left: 1 11 12)",
                "11 + 1 = 12 (left: 1 11 12)",
                "11 + 1 = 12 (left: 1 11 12)"
            ]
        },
        "step_3": {
            "steps": [
                "4 + 6 = 10 (left: 8 10)\n10 - 2 = 8 (left: 8 6 8)",
                "4 + 6 = 10 (left: 8 10)\n8 / 10 = 0.8",
                "11 + 1 = 12 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n10 * 12 = 120 (left: 120)",
                "11 + 1 = 12 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)",
                "1 * 1 = 1 (left: 1 11 11)",
                "4 + 6 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)",
                "4 + 6 = 10 (left: 8 10)\n8 - 10 = -2 (left: -2)",
                "11 + 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "11 + 1 = 12 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "11 + 1 = 12 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)"
            ],
            "values": [
                21.001,
                0.003,
                0.003,
                0.003,
                0.001,
                0.002,
                0.003,
                60.0,
                0.001,
                21.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 3.0",
                "2 <- 3.7",
                "3 <- 1.4",
                "4 <- 3.0",
                "5 <- 3.0",
                "6 <- 3.7",
                "7 <- 3.0",
                "8 <- 2.4",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "",
                "4 + 6 = 10 (left: 8 10)\n10 - 2 = 8 (left: 8 6 8)",
                "11 + 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "11 + 1 = 12 (left: 1 11 12)",
                "4 + 6 = 10 (left: 8 10)\n10 - 2 = 8 (left: 8 6 8)",
                "4 + 6 = 10 (left: 8 10)\n10 - 2 = 8 (left: 8 6 8)",
                "11 + 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "4 + 6 = 10 (left: 8 10)\n10 - 2 = 8 (left: 8 6 8)",
                "4 + 6 = 10 (left: 8 10)",
                "11 + 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)"
            ]
        },
        "step_4": {
            "steps": [
                "5 + 3 = 8 (left: 6 8 10)",
                "4 + 6 = 10 (left: 8 10)\n10 - 2 = 8 (left: 8 6 8)\n8 / 6 = 1.33 (left: 1.33 8)",
                "11 + 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "11 + 1 = 12 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "4 + 6 = 10 (left: 8 10)\n10 - 2 = 8 (left: 8 6 8)\n6 / 8 = 0.75 (left: 0.75 8)",
                "4 + 6 = 10 (left: 8 10)\n10 - 2 = 8 (left: 8 6 8)\n8 * 6 = 48 (left: 48 8)",
                "11 + 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "4 + 6 = 10 (left: 8 10)\n10 - 2 = 8 (left: 8 6 8)\n6 / 8 = 0.75 (left: 0.75 8)",
                "4 + 6 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)",
                "11 + 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)"
            ],
            "values": [
                2.001,
                0.002,
                0.003,
                0.003,
                0.002,
                22.0,
                0.003,
                0.003,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 4.8",
                "2 <- 2.4",
                "3 <- 4.9",
                "4 <- 4.9",
                "5 <- 4.9",
                "6 <- INIT",
                "7 <- 4.5",
                "8 <- 1.4",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "4 + 6 = 10 (left: 8 10)",
                "4 + 6 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)",
                "4 + 6 = 10 (left: 8 10)",
                "11 + 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "11 + 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "11 + 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "",
                "4 + 6 = 10 (left: 8 10)\n10 - 2 = 8 (left: 8 6 8)\n8 * 6 = 48 (left: 48 8)",
                "11 + 1 = 12 (left: 1 11 12)",
                "4 + 6 = 10 (left: 8 10)\n10 - 2 = 8 (left: 8 6 8)"
            ]
        },
        "step_5": {
            "steps": [
                "4 + 6 = 10 (left: 8 10)\n8 - 10 = -2 (left: -2) ",
                "4 + 6 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\nThere are no possible next steps with the input 18.",
                "4 + 6 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)",
                "11 + 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 11) + 11 = 24",
                "11 + 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (11 + 1) + (1 + 11) = 24",
                "11 + 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((11 + 1) + 1) + 11 = 24",
                "11 - 1 = 10 (left: 1 11 10)",
                "4 + 6 = 10 (left: 8 10)\n10 - 2 = 8 (left: 8 6 8)\n8 * 6 = 48 (left: 48 8)\n48 / 8 = 6 (left: 6)",
                "11 + 1 = 12 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)",
                "4 + 6 = 10 (left: 8 10)\n10 - 2 = 8 (left: 8 6 8)\n6 / 8 = 0.75 (left: 0.75 8)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.0761005
    },
    "2": {
        "input": "1 1 3 8",
        "step_1": {
            "steps": [
                "8 / 3 = 2 (left: 1 1 2)",
                "2 * 10 = 20 (left: 4 6 20)",
                "4 / 5 = 0.8 (left: 0.8 2 7)",
                "8 - 1 = 7 (left: 1 3 7)",
                "Input: 5 7 2 9",
                "4 + 2 = 6 (left: 6 6 12)",
                "8 / 1 = 8 (left: 1 3 8)",
                "3 * 1 = 3 (left: 3 3 8)",
                "8 - 3 = 5 (left: 1 3 5)",
                "1 + 1 = 2 (left: 2 3 8)"
            ],
            "values": [
                2.001,
                60.0,
                3.0,
                2.0,
                0.003,
                60.0,
                40.001,
                3.0,
                20.002,
                0.003
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 1.5",
                "2 <- 1.1",
                "3 <- 1.2",
                "4 <- 1.5",
                "5 <- 1.1",
                "6 <- 1.8",
                "7 <- 1.1",
                "8 <- 1.1",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "8 / 1 = 8 (left: 1 3 8)",
                "4 + 2 = 6 (left: 6 6 12)",
                "2 * 10 = 20 (left: 4 6 20)",
                "4 / 5 = 0.8 (left: 0.8 2 7)",
                "4 + 2 = 6 (left: 6 6 12)",
                "2 * 10 = 20 (left: 4 6 20)",
                "8 - 3 = 5 (left: 1 3 5)",
                "2 * 10 = 20 (left: 4 6 20)",
                "2 * 10 = 20 (left: 4 6 20)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "8 / 1 = 8 (left: 1 3 8)\n10 - 6 = 4 (left: 4 10)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "2 * 10 = 20 (left: 4 6 20)\n6 / 4 = 1.5 (left: 1.5 20)",
                "4 / 5 = 0.8 (left: 0.8 2 7)\n7 / 0.8 = 8.75 (left: 2 8.75)",
                "4 + 2 = 6 (left: 6 6 12)\n12 / 0 = undefined (left: 12 18)",
                "2 * 10 = 20 (left: 4 6 20)\n20 - 6 = 14 (left: 4 14)",
                "8 - 3 = 5 (left: 1 3 5)\n3 * 5 = 15 (left: 1 15)",
                "2 * 10 = 20 (left: 4 6 20)\n20 - 4 = 16 (left: 4 16)",
                "2 * 10 = 20 (left: 4 6 20)\n3 + 7 = 10 (left: 10 11)",
                "1 * 1 = 1 (left: 1 3 8)"
            ],
            "values": [
                1.0,
                60.0,
                20.0,
                1.002,
                0.003,
                0.003,
                1.002,
                0.003,
                1.002,
                60.0
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 1.5",
                "2 <- 2.1",
                "3 <- 1.1",
                "4 <- 1.6",
                "5 <- INIT",
                "6 <- 2.9",
                "7 <- 2.1",
                "8 <- INIT",
                "9 <- 2.9"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 3 8)",
                "4 + 2 = 6 (left: 6 6 12)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "2 * 10 = 20 (left: 4 6 20)",
                "8 / 1 = 8 (left: 1 3 8)",
                "",
                "1 * 1 = 1 (left: 1 3 8)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "",
                "1 * 1 = 1 (left: 1 3 8)"
            ]
        },
        "step_3": {
            "steps": [
                "1 * 1 = 1 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "4 + 2 = 6 (left: 6 6 12)\n6 / 6 = 1 (left: 1 12)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "2 * 10 = 20 (left: 4 6 20)\n20 / 4 = 5 (left: 6 5)",
                "8 / 1 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "7 - 5 = 2 (left: 5 2 1)",
                "1 * 1 = 1 (left: 1 3 8)\n2 / 6 = 0.3333333333333333 (left: 4 0.3333333333333333)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 * 12 = 432 (left: 432)",
                "8 - 3 = 5 (left: 1 5 8)",
                "1 * 1 = 1 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)"
            ],
            "values": [
                0.003,
                1.002,
                60.0,
                0.003,
                0.003,
                3.0,
                21.001,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- 1.1",
                "3 <- 1.1",
                "4 <- 2.2",
                "5 <- 1.1",
                "6 <- 1.5",
                "7 <- 2.9",
                "8 <- 2.1",
                "9 <- 2.9"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "2 * 10 = 20 (left: 4 6 20)",
                "2 * 10 = 20 (left: 4 6 20)",
                "2 * 10 = 20 (left: 4 6 20)\n6 / 4 = 1.5 (left: 1.5 20)",
                "2 * 10 = 20 (left: 4 6 20)",
                "4 + 2 = 6 (left: 6 6 12)",
                "1 * 1 = 1 (left: 1 3 8)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "1 * 1 = 1 (left: 1 3 8)"
            ]
        },
        "step_4": {
            "steps": [
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)",
                "2 * 10 = 20 (left: 4 6 20)\n4 + 6 = 10 (left: 10 20)",
                "2 * 10 = 20 (left: 4 6 20)\n20 / 4 = 5 (left: 5 6)",
                "2 * 10 = 20 (left: 4 6 20)\n6 / 4 = 1.5 (left: 1.5 20)\n20 - 1.5 = 18.5 (left: 18.5)",
                "2 * 10 = 20 (left: 4 6 20)\n6 + 4 = 10 (left: 10 20)",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "1 * 1 = 1 (left: 1 3 8)\n5 - 5 = 0 (left: 0 5)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.0,
                0.003,
                0.003,
                40.001,
                20.0,
                60.0,
                1.002
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 4.8",
                "2 <- 4.8",
                "3 <- INIT",
                "4 <- 1.1",
                "5 <- 4.6",
                "6 <- 4.8",
                "7 <- 4.8",
                "8 <- 1.8",
                "9 <- 2.1"
            ],
            "resampled_steps": [
                "3 * 1 = 3 (left: 3 3 8)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "",
                "2 * 10 = 20 (left: 4 6 20)",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "8 - 3 = 5 (left: 1 3 5)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)"
            ]
        },
        "step_5": {
            "steps": [
                "3 * 1 = 3 (left: 3 3 8)\n3 * 3 = 9 (left: 9 8)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: (4 + 2) * (6 * 6) = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24",
                "8 - 1 = 7 (left: 1 3 7)",
                "2 * 10 = 20 (left: 4 6 20)\n4 * 6 = 24 (left: 24 20)",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: (4 + 2) * (6 * 6) = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24",
                "8 - 3 = 5 (left: 1 3 5)\nInput: 2 4 6 8",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)"
            ],
            "values": [
                0.003,
                0.003,
                60.0,
                2.0,
                20.001,
                60.0,
                0.003,
                60.0,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 4.6",
                "1 <- 5.5",
                "2 <- 5.2",
                "3 <- 5.4",
                "4 <- 5.3",
                "5 <- 4.8",
                "6 <- 5.5",
                "7 <- 5.2",
                "8 <- 5.5",
                "9 <- 4.6"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24",
                "2 * 10 = 20 (left: 4 6 20)\n4 * 6 = 24 (left: 24 20)",
                "8 - 1 = 7 (left: 1 3 7)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)"
            ]
        },
        "step_6": {
            "steps": [
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24\nInput: 5 6 7 8\nSteps:\n5 * 6 = 30 (left: 7 8 30)\n8 - 7 = 1 (left: 1 30)\n30 - 1 = 29 (left: 29)\n29 + 1 = 30 (left: 30)\n30 - 30 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: (((5 * 6) - (8 - 7)) + 1) - 30 + 24 = 24",
                "2 * 10 = 20 (left: 4 6 20)\n4 * 6 = 24 (left: 24 20)\n24 / 20 = 1.2 (left: 1.2)",
                "8 - 1 = 7 (left: 1 3 7)\n3 - 1 = 2 (left: 2 7)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) * 8 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24\nInput: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 18 12)\n18 - 12 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 4) * (6 - 12)) * 4 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)"
            ],
            "values": [
                0.002,
                60.0,
                60.0,
                0.001,
                0.002,
                60.0,
                60.0,
                60.0,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 6.1",
                "1 <- 2.1",
                "2 <- 5.4",
                "3 <- 1.5",
                "4 <- 6.7",
                "5 <- 4.6",
                "6 <- 6.1",
                "7 <- 4.8",
                "8 <- 5.2",
                "9 <- 4.8"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "2 * 10 = 20 (left: 4 6 20)\n4 * 6 = 24 (left: 24 20)",
                "4 + 2 = 6 (left: 6 6 12)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24\nInput: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 18 12)\n18 - 12 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 4) * (6 - 12)) * 4 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)"
            ]
        },
        "step_7": {
            "steps": [
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: ((2 * 3) * 4) * 6 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 * 12 = 432 (left: 432)",
                "2 * 10 = 20 (left: 4 6 20)\n4 * 6 = 24 (left: 24 20)\n24 / 20 = 1.2 (left: 1.2)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24\nInput: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 18 12)\n18 - 12 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 4) * (6 - 12)) * 4 = 24\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n4 - 2 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 + 4 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((2 * 3) + (3 * 3)) + 4 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 1 2 3 9\nSteps:\n1 * 3 = 3 (left: 2 9 3)\n2 + 9 = 11 (left: 11 3)\n11 - 3 = 8 (left: 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * 3) * ((2 + 9) - 3) = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 8 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24\nInput: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n3 + 4 = 7 (left: 7 21)\n7 * 3 = 21 (left: 21)\nAnswer: (3 * 7) - (4 - 3) = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24"
            ],
            "values": [
                60.0,
                0.002,
                0.001,
                0.003,
                60.0,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 7.4",
                "1 <- 6.6",
                "2 <- 2.9",
                "3 <- 1.5",
                "4 <- 7.7",
                "5 <- 6.8",
                "6 <- 6.5",
                "7 <- 5.5",
                "8 <- 7.6",
                "9 <- 3.2"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24\nInput: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 18 12)\n18 - 12 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 4) * (6 - 12)) * 4 = 24\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n4 - 2 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 + 4 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((2 * 3) + (3 * 3)) + 4 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24",
                "1 * 1 = 1 (left: 1 3 8)",
                "4 + 2 = 6 (left: 6 6 12)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 8 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) * 8 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 1 2 3 9\nSteps:\n1 * 3 = 3 (left: 2 9 3)\n2 + 9 = 11 (left: 11 3)\n11 - 3 = 8 (left: 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * 3) * ((2 + 9) - 3) = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)"
            ]
        },
        "step_8": {
            "steps": [
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24\nInput: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 18 12)\n18 - 12 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 4) * (6 - 12)) * 4 = 24\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n4 - 2 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 + 4 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((2 * 3) + (3 * 3)) + 4 = 24\nInput: 5 5 6 7\nSteps:\n5 * 6 = 30 (left: 5 7 30)\n7 - 5 = 2 (left: 2 30)\n2 * 30 = 60 (left: 60)\n60 / 5 = 12 (left: 12)\n12 * 7 = 84 (left: 84)\n84 - 60 = 24 (left: 24)\nAnswer: ((5 * 6) / (7 - 5)) * (12 * 7) = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 3 3 4 5\nSteps:\n3 * 5 = 15 (left: 3 4 15)\n15 - 4 = 11 (left: 3 11)\n11 - 3 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 * 5) - 4) - 3 = 24",
                "1 * 1 = 1 (left: 1 3 8)\n8 / 3 = 2.67 (left: 1 2.67)",
                "4 + 2 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 12)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 8 = 24\nInput: 3 3 8 9\nSteps:\n3 + 3 = 6 (left: 6 8 9)\n6 * 8 = 48 (left: 48 9)\n48 - 9 = 39 (left: 39)\nAnswer: (3 + 3) * (8 - 9) = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n7 - 3 = 4 (left: 4 14)\n4 * 14 = 56 (left: 56)\nAnswer: (3 + 6) * (7 - 8) = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) * 8 = 24\nInput: 3 3 4 4\nSteps:\n3 * 4 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\nAnswer: (3 * 4) + (4 - 3) = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + 3) * (8 + 1) = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 1 2 3 9\nSteps:\n1 * 3 = 3 (left: 2 9 3)\n2 + 9 = 11 (left: 11 3)\n11 - 3 = 8 (left: 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * 3) * ((2 + 9) - 3) = 24\nInput: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n5 * 4 = 20 (left: 20)\nAnswer: ((3 * 4) + (3 + 5)) * 5 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: (4 + 2) * (6 * 6) = 24"
            ],
            "values": [
                60.0,
                40.0,
                3.0,
                1.001,
                60.0,
                60.0,
                40.0,
                40.001,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 5.5",
                "1 <- 6.5",
                "2 <- 3.6",
                "3 <- 6.1",
                "4 <- 8.8",
                "5 <- 6.2",
                "6 <- 8.8",
                "7 <- 8.6",
                "8 <- 7.7",
                "9 <- 7.9"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) * 8 = 24",
                "1 * 1 = 1 (left: 1 3 8)\n2 / 6 = 0.3333333333333333 (left: 4 0.3333333333333333)",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 1 2 3 9\nSteps:\n1 * 3 = 3 (left: 2 9 3)\n2 + 9 = 11 (left: 11 3)\n11 - 3 = 8 (left: 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * 3) * ((2 + 9) - 3) = 24\nInput: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n5 * 4 = 20 (left: 20)\nAnswer: ((3 * 4) + (3 + 5)) * 5 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24\nInput: 5 6 7 8\nSteps:\n5 * 6 = 30 (left: 7 8 30)\n8 - 7 = 1 (left: 1 30)\n30 - 1 = 29 (left: 29)\n29 + 1 = 30 (left: 30)\n30 - 30 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: (((5 * 6) - (8 - 7)) + 1) - 30 + 24 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 1 2 3 9\nSteps:\n1 * 3 = 3 (left: 2 9 3)\n2 + 9 = 11 (left: 11 3)\n11 - 3 = 8 (left: 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * 3) * ((2 + 9) - 3) = 24\nInput: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n5 * 4 = 20 (left: 20)\nAnswer: ((3 * 4) + (3 + 5)) * 5 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) * 8 = 24\nInput: 3 3 4 4\nSteps:\n3 * 4 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\nAnswer: (3 * 4) + (4 - 3) = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 8 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24"
            ]
        },
        "step_9": {
            "steps": [
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) * 8 = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 7) - 5) * 3 = 24",
                "1 * 1 = 1 (left: 1 3 8)\n2 / 6 = 0.3333333333333333 (left: 4 0.3333333333333333)\n4 - 0.3333333333333333 = 3.6666666666666665 (left: 0.3333333333333333 3.6666666666666665)",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 1 2 3 6\nSteps:\n2 * 3 = 6 (left: 1 6 6)\n1 + 6 = 7 (left: 7 6)\n7 * 6 = 42 (left: 42)\nAnswer: (1 + 2 * 3) * 6 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 1 2 3 9\nSteps:\n1 * 3 = 3 (left: 2 9 3)\n2 + 9 = 11 (left: 11 3)\n11 - 3 = 8 (left: 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * 3) * ((2 + 9) - 3) = 24\nInput: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n5 * 4 = 20 (left: 20)\nAnswer: ((3 * 4) + (3 + 5)) * 5 = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 * 2) = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24\nInput: 5 6 7 8\nSteps:\n5 * 6 = 30 (left: 7 8 30)\n8 - 7 = 1 (left: 1 30)\n30 - 1 = 29 (left: 29)\n29 + 1 = 30 (left: 30)\n30 - 30 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: (((5 * 6) - (8 - 7)) + 1) - 30 + 24 = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 4)\n4 * 4 = 16 (left: 16)\n16 - 12 = 4 (left: 4)\n4 * 4 = 16 (left: 16)\n16 - 16 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: ((((3 + 5) * 4) - 8) * 4) - 16 + 24 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 1 2 3 9\nSteps:\n1 * 3 = 3 (left: 2 9 3)\n2 + 9 = 11 (left: 11 3)\n11 - 3 = 8 (left: 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * 3) * ((2 + 9) - 3) = 24\nInput: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n5 * 4 = 20 (left: 20)\nAnswer: ((3 * 4) + (3 + 5)) * 5 = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\n84 / 4 = 21 (left: 21)\n21 - 3 = 18 (left: 18)\n18 - 12 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: (((2 * 6) + (3 + 4)) * 12 / 4) - 3 - 12 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) * 8 = 24\nInput: 3 3 4 4\nSteps:\n3 * 4 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\nAnswer: (3 * 4) + (4 - 3) = 24\nInput: 2 3 8 9\nSteps:\n3 + 9 = 12 (left: 2 8 12)\n12 - 8 = 4 (left: 2 4)\n2 * 4 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((2 + 3) + 9) * (8 / 4) = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 8 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 / 3 = 5.33 (left: 5.33)\n5.33 * 3 = 16 (left: 16)\nAnswer: ((3 * 7) - 5) / 3 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n6 - 3 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\nAnswer: ((3 * 4) - 3) * 6 = 24"
            ],
            "values": [
                60.0,
                60.0,
                2.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                40.0,
                60.0
            ],
            "resampled": [
                "0 <- 9.4",
                "1 <- 6.8",
                "2 <- 6.2",
                "3 <- 4.8",
                "4 <- 3.6",
                "5 <- 9.8",
                "6 <- 8.8",
                "7 <- 7.4",
                "8 <- 9.1",
                "9 <- 6.8"
            ],
            "resampled_steps": [
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 1 2 3 9\nSteps:\n1 * 3 = 3 (left: 2 9 3)\n2 + 9 = 11 (left: 11 3)\n11 - 3 = 8 (left: 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * 3) * ((2 + 9) - 3) = 24\nInput: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n5 * 4 = 20 (left: 20)\nAnswer: ((3 * 4) + (3 + 5)) * 5 = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 * 2) = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24\nInput: 5 6 7 8\nSteps:\n5 * 6 = 30 (left: 7 8 30)\n8 - 7 = 1 (left: 1 30)\n30 - 1 = 29 (left: 29)\n29 + 1 = 30 (left: 30)\n30 - 30 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: (((5 * 6) - (8 - 7)) + 1) - 30 + 24 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 3 8)\n2 / 6 = 0.3333333333333333 (left: 4 0.3333333333333333)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 8 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 / 3 = 5.33 (left: 5.33)\n5.33 * 3 = 16 (left: 16)\nAnswer: ((3 * 7) - 5) / 3 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 1 2 3 9\nSteps:\n1 * 3 = 3 (left: 2 9 3)\n2 + 9 = 11 (left: 11 3)\n11 - 3 = 8 (left: 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * 3) * ((2 + 9) - 3) = 24\nInput: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n5 * 4 = 20 (left: 20)\nAnswer: ((3 * 4) + (3 + 5)) * 5 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24\nInput: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 18 12)\n18 - 12 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 4) * (6 - 12)) * 4 = 24\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n4 - 2 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 + 4 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((2 * 3) + (3 * 3)) + 4 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) * 8 = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 7) - 5) * 3 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 1 2 3 9\nSteps:\n1 * 3 = 3 (left: 2 9 3)\n2 + 9 = 11 (left: 11 3)\n11 - 3 = 8 (left: 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * 3) * ((2 + 9) - 3) = 24\nInput: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n5 * 4 = 20 (left: 20)\nAnswer: ((3 * 4) + (3 + 5)) * 5 = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 * 2) = 24\nInput: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n5 * 10 = 50 (left: 2 50)\n50 / 2 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((2 + (3 + 7)) * 5) - 1 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n5 * 4 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 + 4) - 3) * 5 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24\nInput: 5 6 7 8\nSteps:\n5 * 6 = 30 (left: 7 8 30)\n8 - 7 = 1 (left: 1 30)\n30 - 1 = 29 (left: 29)\n29 + 1 = 30 (left: 30)\n30 - 30 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: (((5 * 6) - (8 - 7)) + 1) - 30 + 24 = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 4)\n4 * 4 = 16 (left: 16)\n16 - 12 = 4 (left: 4)\n4 * 4 = 16 (left: 16)\n16 - 16 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: (((3 + 5) * 4) - 8) * 4 + 24 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) * 8 = 24",
                "1 * 1 = 1 (left: 1 3 8)\n2 / 6 = 0.3333333333333333 (left: 4 0.3333333333333333)\n4 + 0.3333333333333333 = 4.333333333333333 (left: 0.3333333333333333 4.333333333333333)",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) + 8 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 / 3 = 5.33 (left: 5.33)\n5.33 * 3 = 16 (left: 16)\nAnswer: ((3 * 7) - 5) / 3 = 24\nInput: 2 3 4 8\nSteps:\n3 * 8 = 24 (left: 2 4 24)\n2 * 4 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 8) + (2 * 4) = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 1 2 3 9\nSteps:\n1 * 3 = 3 (left: 2 9 3)\n2 + 9 = 11 (left: 11 3)\n11 - 3 = 8 (left: 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * 3) * ((2 + 9) - 3) = 24\nInput: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n5 * 4 = 20 (left: 20)\nAnswer: ((3 * 4) + (3 + 5)) * 5 = 24\nInput: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n6 / 2 = 3 (left: 3 15)\n3 * 15 = 45 (left: 45)\n45 - 21 = 24 (left: 24)\nAnswer: (3 * 5) * ((6 / 2) - 3) = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * (3 + 8)) - 8 = 24\nInput: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 18 12)\n18 - 12 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 4) * (6 - 12)) * 4 = 24\nInput: 2 3 3 4\nSteps:\n3 * 3 = 9 (left: 2 4 9)\n4 - 2 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 + 4 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((2 * 3) + (3 * 3)) + 4 = 24\nInput: 2 2 6 8\nSteps:\n2 + 8 = 10 (left: 2 6 10)\n6 - 2 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n40 / 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: (((2 + 8) - 2) * 10) / 2 + 4 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((1 + 1) * 3) * 8 = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n5 * 3 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((3 + 7) - 5) * 3 = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((3 * 4) - 6) / 2 = 24",
                "4 + 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 1) + 3) * 8 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + (3 + 5) = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                3.0,
                60.0,
                60.0,
                60.0,
                60.0,
                40.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.1319365
    },
    "3": {
        "input": "1 1 1 8",
        "step_1": {
            "steps": [
                "8 - 1 = 7 (left: 1 1 7)",
                "8 - 1 = 7 (left: 1 1 7)",
                "1 * 1 = 1 (left: 1 1 8)",
                "1 * 1 = 1 (left: 1 1 8)",
                "8 / 1 = 8 (left: 1 1 8)",
                "8 - 1 = 7 (left: 1 1 7)",
                "8 - 1 = 7 (left: 1 1 7)",
                "1 * 1 = 1 (left: 1 1 8)",
                "1 + 1 = 2 (left: 1 2 8)",
                "8 - 1 = 7 (left: 1 1 7)"
            ],
            "values": [
                3.0,
                2.001,
                3.0,
                1.001,
                1.002,
                1.002,
                1.002,
                0.002,
                22.0,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.8",
                "2 <- INIT",
                "3 <- 1.8",
                "4 <- 1.8",
                "5 <- 1.8",
                "6 <- 1.8",
                "7 <- 1.5",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "1 + 1 = 2 (left: 1 2 8)",
                "",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 + 1 = 2 (left: 1 2 8)",
                "8 - 1 = 7 (left: 1 1 7)",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "8 - 1 = 7 (left: 1 1 7)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 2 = 2 (left: 2 8)",
                "1 / 1 = 1 (left: 1 1 8)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)",
                "1 + 1 = 2 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)",
                "8 - 1 = 7 (left: 1 1 7)",
                "8 - 1 = 7 (left: 1 1 7)"
            ],
            "values": [
                3.0,
                0.003,
                2.0,
                60.0,
                0.001,
                41.0,
                40.0,
                60.0,
                2.001,
                2.001
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 1.8",
                "2 <- 2.5",
                "3 <- 2.3",
                "4 <- 2.7",
                "5 <- 1.8",
                "6 <- 2.3",
                "7 <- 1.8",
                "8 <- 2.5",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)"
            ]
        },
        "step_3": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n3 * 6 = 18 (left: 12)",
                "1 + 1 = 2 (left: 1 2 8)\n10 + 15 = 25 (left: 5 25)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n10 / 5 = 2 (left: 2 10)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 4 8)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)",
                "1 + 1 = 2 (left: 1 2 8)\nInput: 4 9 2",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                2.0,
                0.003,
                0.003,
                20.0,
                0.003,
                0.003,
                0.0
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 2.5",
                "2 <- 2.3",
                "3 <- 2.7",
                "4 <- 2.7",
                "5 <- 3.6",
                "6 <- 2.7",
                "7 <- 2.5",
                "8 <- 2.7",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)"
            ]
        },
        "step_4": {
            "steps": [
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n9 / 3 = 3 (left: 3 9)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)"
            ],
            "values": [
                0.002,
                0.002,
                60.0,
                0.003,
                0.002,
                0.003,
                0.002,
                0.001,
                0.001,
                0.0
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 4.2",
                "2 <- 3.6",
                "3 <- 2.3",
                "4 <- 4.2",
                "5 <- 2.5",
                "6 <- 2.6",
                "7 <- 2.5",
                "8 <- 2.3",
                "9 <- 2.6"
            ],
            "resampled_steps": [
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)"
            ]
        },
        "step_5": {
            "steps": [
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n4 + 10 = 14 (left: 14)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n10 - 5 = 5 (left: 5 10)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n10 - 5 = 5 (left: 5 9)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n5 / 10 = 0.5 (left: 0.5)"
            ],
            "values": [
                0.003,
                60.0,
                0.001,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.002,
                0.001
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 1.8",
                "2 <- 2.3",
                "3 <- 2.6",
                "4 <- 5.1",
                "5 <- 2.7",
                "6 <- 2.5",
                "7 <- 4.2",
                "8 <- 5.1",
                "9 <- 5.1"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)"
            ]
        },
        "step_6": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 - 14 = -4 (left: -4)",
                "1 + 1 = 2 (left: 1 2 8)\n7 / 3 = 2 (left: 2 5)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 10 = 19 (left: 5)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((1 + 1) * 5) + (9 + 10) = 24",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((1 + 1) * 5) + (9 + 5) = 24",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((1 + 1) * 5) + (9 + 10) = 24"
            ],
            "values": [
                0.0,
                60.0,
                0.001,
                0.002,
                0.003,
                0.003,
                0.001,
                60.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 6.7",
                "1 <- 5.1",
                "2 <- 6.1",
                "3 <- 4.2",
                "4 <- 5.1",
                "5 <- 6.1",
                "6 <- 2.7",
                "7 <- 6.1",
                "8 <- 2.7",
                "9 <- 6.7"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8)\n7 / 3 = 2 (left: 2 5)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8)\n7 / 3 = 2 (left: 2 5)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 8)\n7 / 3 = 2 (left: 2 5)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)"
            ]
        },
        "step_7": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (1 + 1) * ((1 * 5) + (9 + 5)) = 24",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((1 + 1) * 5) + (9 + 10) = 24",
                "1 + 1 = 2 (left: 1 2 8)\n7 / 3 = 2 (left: 2 5)\n2 * 5 = 10 (left: 10)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4 14)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((1 + 1) * 5) + (9 + 10) = 24",
                "1 + 1 = 2 (left: 1 2 8)\n7 / 3 = 2 (left: 2 5)\n5 / 2 = 2.5 (left: 2.5)",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "1 + 1 = 2 (left: 1 2 8)\n7 / 3 = 2 (left: 2 5)\n2 + 5 = 7",
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((1 + 1) * 5) + (9 + 10) = 24"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                1.001,
                0.003,
                0.001,
                0.002,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 3.6",
                "2 <- 6.1",
                "3 <- 4.2",
                "4 <- 2.3",
                "5 <- 6.7",
                "6 <- 5.1",
                "7 <- 4.2",
                "8 <- 5.1",
                "9 <- 6.7"
            ],
            "resampled_steps": [
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)",
                "1 + 1 = 2 (left: 1 2 8)\n7 / 3 = 2 (left: 2 5)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)"
            ]
        },
        "step_8": {
            "steps": [
                "8 - 1 = 7 (left: 1 1 7)\n7 - 1 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n4 / 10 = 0.4 (left: 0.4 10)",
                "1 + 1 = 2 (left: 1 2 8)\n7 / 3 = 2 (left: 2 5)\n3 * 9 = 27 (left: 27)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n10 - 5 = 5 (left: 5 5)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((1 + 1) * 5) + (9 + 14) = 24",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((1 + 1) * 5) + (9 + 10) = 24",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n14 / 2 = 7 (left: 10 7)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((1 + 1) * 5) + (9 + 5) = 24",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((1 + 1) * 5) + (9 + 10) = 24"
            ],
            "values": [
                0.001,
                41.0,
                0.003,
                60.0,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 5.1",
                "1 <- 4.2",
                "2 <- 8.1",
                "3 <- 2.3",
                "4 <- 2.3",
                "5 <- 2.3",
                "6 <- 6.1",
                "7 <- 6.7",
                "8 <- 8.1",
                "9 <- 6.1"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n4 / 10 = 0.4 (left: 0.4 10)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)",
                "1 + 1 = 2 (left: 1 2 8)\n7 / 3 = 2 (left: 2 5)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n4 / 10 = 0.4 (left: 0.4 10)",
                "1 + 1 = 2 (left: 1 2 8)\n7 / 3 = 2 (left: 2 5)"
            ]
        },
        "step_9": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((1 + 1) * 5) + (9 + 5) = 24",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n4 / 10 = 0.4 (left: 0.4 10)\n0.4 * 10 = 4 (left: 4)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n10 / 9 = 1.11 (left: 1.11 10)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n6 - 3 = 3 (left: 3 9)",
                "1 + 1 = 2 (left: 1 2 8)\n7 / 3 = 2 (left: 2 5)\n2 + 5 = 7 (left: 7)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((1 + 1) * 5) + (9 + 5) = 24",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n4 / 10 = 0.4 (left: 0.4 10)\n7 - 5 = 2 (left: 2 5 7)",
                "1 + 1 = 2 (left: 1 2 8)\n7 / 3 = 2 (left: 2 5)\n5 / 2 = 2.5 (left: 2.5)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                0.001,
                40.0,
                0.003,
                0.002,
                0.003,
                2.001,
                0.002
            ],
            "resampled": [
                "0 <- 2.5",
                "1 <- 4.2",
                "2 <- 8.1",
                "3 <- 8.3",
                "4 <- 6.1",
                "5 <- 1.8",
                "6 <- 9.4",
                "7 <- 4.2",
                "8 <- 6.7",
                "9 <- 8.3"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n4 / 10 = 0.4 (left: 0.4 10)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8)\n7 / 3 = 2 (left: 2 5)",
                "1 + 1 = 2 (left: 1 2 8)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)"
            ]
        },
        "step_10": {
            "steps": [
                "1 + 1 = 2 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)\n4 / 10 = 0.4 (left: 0.4 10)\n10 / 0.4 = 25 (left: 25)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((1 + 1) * 5) + (10 + 14) = 24",
                "1 + 1 = 2 (left: 1 2 8)\n7 / 3 = 2 (left: 2 5)\n5 / 2 = 2.5 (left: 2.5)",
                "1 + 1 = 2 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n10 / 1.8 = 5.555555555555556 (left: 5.555555555555556)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((1 + 1) * 5) + (9 + 14) = 24",
                "1 + 1 = 2 (left: 1 2 8)\n1 * 5 = 5 (left: 5 9 10)\n9 + 5 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((1 + 1) * 5) + (9 + 10) = 24"
            ],
            "values": [
                0.002,
                0.003,
                40.001,
                0.003,
                0.003,
                60.0,
                1.0,
                20.0,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.1809805
    },
    "4": {
        "input": "6 6 6 6",
        "step_1": {
            "steps": [
                "6 - 6 = 0 (left: 6 6 0)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 / 6 = 1 (left: 6 1 6 6)",
                "5 / 3 = 1 (left: 1 7 9)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 / 6 = 1 (left: 6 1 6)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 - 6 = 0 (left: 0 6 6)"
            ],
            "values": [
                22.0,
                60.0,
                40.001,
                22.0,
                1.001,
                41.0,
                2.0,
                41.0,
                2.001,
                60.0
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 1.3",
                "2 <- 1.9",
                "3 <- 1.5",
                "4 <- 1.0",
                "5 <- 1.1",
                "6 <- 1.9",
                "7 <- 1.7",
                "8 <- 1.0",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "6 * 6 = 36 (left: 6 6 36)",
                "6 / 6 = 1 (left: 6 1 6 6)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 - 6 = 0 (left: 6 6 0)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 - 6 = 0 (left: 6 6 0)",
                "6 - 6 = 0 (left: 0 6 6)"
            ]
        },
        "step_2": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36)\nPossible next steps:",
                "6 / 6 = 1 (left: 6 1 6 6)\n6 + 1 = 7 (left: 7 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n5 - 3 = 2 (left: 2 7 1)",
                "6 * 6 = 36 (left: 6 6 36)\n3 + 5 = 8 (left: 8 10)",
                "6 - 6 = 0 (left: 6 6 0)\n6 + 6 = 12 (left: 0 12)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)",
                "6 - 6 = 0 (left: 0 6 6)\n4 - 4 = 0 (left: 0 8)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)",
                "6 - 6 = 0 (left: 6 6 0)\n6 / 6 = 1 (left: 1 0)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)"
            ],
            "values": [
                0.003,
                3.0,
                3.0,
                0.003,
                0.002,
                40.0,
                0.0,
                3.0,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.5",
                "2 <- 1.7",
                "3 <- 2.7",
                "4 <- 1.9",
                "5 <- 2.9",
                "6 <- 2.5",
                "7 <- 2.9",
                "8 <- 1.1",
                "9 <- 2.9"
            ],
            "resampled_steps": [
                "6 + 6 = 12 (left: 6 12 6)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 / 6 = 1 (left: 1 6 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)"
            ]
        },
        "step_3": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6)\n12 / 6 = 2 (left: 2 6)",
                "6 * 6 = 36 (left: 6 6 36)\n36 - 6 = 30 (left: 6 30)",
                "6 / 6 = 1 (left: 1 6 6)\n1 + 6 = 7 (left: 6 6 7)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)\n6 - 6 = 0 (left: 0 6)",
                "6 - 6 = 0 (left: 0 6 6)\n3 / 10 = 0.3 (left: 0.3 5)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n8 / 3 = 2.6667 (left: 2.6667)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 6 18)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)"
            ],
            "values": [
                0.002,
                0.002,
                2.001,
                60.0,
                1.001,
                0.001,
                21.001,
                0.002,
                60.0,
                20.0
            ],
            "resampled": [
                "0 <- 3.6",
                "1 <- 1.2",
                "2 <- 2.5",
                "3 <- 1.2",
                "4 <- 3.8",
                "5 <- 3.8",
                "6 <- 3.2",
                "7 <- 3.3",
                "8 <- 1.1",
                "9 <- 3.3"
            ],
            "resampled_steps": [
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 6 18)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)",
                "6 / 6 = 1 (left: 1 6 6)\n1 + 6 = 7 (left: 6 6 7)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)\n6 - 6 = 0 (left: 0 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)\n6 - 6 = 0 (left: 0 6)"
            ]
        },
        "step_4": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\nInput: 3 9 9",
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)",
                "6 * 6 = 36 (left: 6 6 36)\n6 * 6 = 36 (left: 36 36)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)\n72 - 6 = 66 (left: 66)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)\n72 + 6 = 78 (left: 78)",
                "6 / 6 = 1 (left: 1 6 6)\n1 + 6 = 7 (left: 6 6 7)\n6 + 6 = 12 (left: 12 7)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)\n6 - 6 = 0 (left: 0 6)\n6 / 0 is undefined",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)\n6 - 6 = 0 (left: 0 6)\n0 + 6 = 6 (left: 6)"
            ],
            "values": [
                0.003,
                20.002,
                60.0,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                41.0,
                0.002
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 1.1",
                "2 <- 2.9",
                "3 <- 4.1",
                "4 <- 4.2",
                "5 <- 4.1",
                "6 <- 1.5",
                "7 <- 1.1",
                "8 <- 3.8",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)\n6 - 6 = 0 (left: 0 6)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)",
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)",
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 + 6 = 12 (left: 6 12 6)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)",
                "6 * 6 = 36 (left: 6 6 36)"
            ]
        },
        "step_5": {
            "steps": [
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)\n6 - 6 = 0 (left: 0 6)\n6 / 0 = undefined",
                "6 + 6 = 12 (left: 6 12 6)\nInput: 0.5 6 -6",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 / 36 = 0 (left: 0 36)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 8 = 26",
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 * 36 = 0 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 * 6 = 36 (left: 6 36)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 6 = 1 (left: 1 6 6)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)\n72 / 6 = 12 (left: 12)",
                "6 * 6 = 36 (left: 6 6 36)\n6 * 6 = 36 (left: 6 36)"
            ],
            "values": [
                0.003,
                40.001,
                0.003,
                40.0,
                0.003,
                40.0,
                0.003,
                3.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 3.8",
                "1 <- 3.6",
                "2 <- 3.9",
                "3 <- 2.5",
                "4 <- 3.9",
                "5 <- 4.8",
                "6 <- 5.3",
                "7 <- 1.9",
                "8 <- 4.2",
                "9 <- 2.9"
            ],
            "resampled_steps": [
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 6 18)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)",
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 / 36 = 0 (left: 0 36)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)"
            ]
        },
        "step_6": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)\n72 * 6 = 432 (left: 432)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 6 18)\n6 * 18 = 108 (left: 108)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n24 - 8 = 16 (left: 16 8)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)\n6 - 3 = 3 (left: 3)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n24 - 8 = 16 (left: 16)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)\n72 + 6 = 78 (left: 78)",
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 / 36 = 0 (left: 0 36)\n36 + 0 = 36 (left: 36)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\nThere are no possible next steps with the input 18.",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)"
            ],
            "values": [
                0.001,
                0.002,
                40.001,
                0.001,
                0.0,
                0.003,
                40.0,
                60.0,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 2.5",
                "1 <- 3.8",
                "2 <- 3.8",
                "3 <- 6.6",
                "4 <- 2.9",
                "5 <- 4.8",
                "6 <- 2.5",
                "7 <- 5.3",
                "8 <- 6.7",
                "9 <- 4.8"
            ],
            "resampled_steps": [
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)",
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 / 36 = 0 (left: 0 36)\n36 + 0 = 36 (left: 36)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)",
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 / 36 = 0 (left: 0 36)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)"
            ]
        },
        "step_7": {
            "steps": [
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)\n72 / 6 = 12 (left: 12)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)\n72 - 6 = 66 (left: 66)",
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 / 36 = 0 (left: 0 36)\n36 + 0 = 36 (left: 36)\n36 + 2 = 38",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)\n72 * 6 = 432 (left: 432)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)\n6 / 3 = 2 (left: 2)",
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 / 36 = 0 (left: 0 36)\n0 * 36 = 0 (left: 0 36)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)\n72 - 6 = 66 (left: 66)"
            ],
            "values": [
                0.0,
                0.001,
                0.002,
                0.003,
                60.0,
                0.003,
                0.001,
                40.001,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 6.7",
                "1 <- 3.3",
                "2 <- 5.1",
                "3 <- 3.3",
                "4 <- 3.3",
                "5 <- 6.6",
                "6 <- 6.7",
                "7 <- 6.2",
                "8 <- 4.2",
                "9 <- 6.7"
            ],
            "resampled_steps": [
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)\n6 - 6 = 0 (left: 0 6)",
                "6 + 6 = 12 (left: 6 12 6)\nInput: 0.5 6 -6",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)\n6 - 6 = 0 (left: 0 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)\n6 - 6 = 0 (left: 0 6)",
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 / 36 = 0 (left: 0 36)\n36 + 0 = 36 (left: 36)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n24 - 8 = 16 (left: 16 8)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)"
            ]
        },
        "step_8": {
            "steps": [
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)\n6 - 6 = 0 (left: 0 6)\n6 * 0 = 0 (left: 0)",
                "6 + 6 = 12 (left: 6 12 6)\nInput: 0.5 6 -6\n0.5 + 6 = 6.5 (left: -6 6.5)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)\n6 - 6 = 0 (left: 0 6)\n6 - 0 = 6 (left: 6)",
                "6 / 6 = 1 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)\n6 - 6 = 0 (left: 0 6)\n6 / 0 = Undefined",
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 / 36 = 0 (left: 0 36)\n36 + 0 = 36 (left: 36)\nThere are no possible next steps for the number 36 as it is a prime number.",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 8 24)\n24 - 8 = 16 (left: 16 8)\n16 - 8 = 8 (left: 8 8)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 / 8 = 2.25 (left: 8)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                1.002,
                0.002,
                0.001
            ],
            "resampled": [
                "0 <- 7.7",
                "1 <- 7.4",
                "2 <- 6.6",
                "3 <- 1.9",
                "4 <- 7.4",
                "5 <- 6.7",
                "6 <- 6.7",
                "7 <- 4.8",
                "8 <- 6.7",
                "9 <- 4.8"
            ],
            "resampled_steps": [
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 / 36 = 0 (left: 0 36)\n0 * 36 = 0 (left: 0 36)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 / 36 = 0 (left: 0 36)\n36 + 0 = 36 (left: 36)",
                "6 - 6 = 0 (left: 0 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)"
            ]
        },
        "step_9": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 / 36 = 0 (left: 0 36)\n0 * 36 = 0 (left: 0 36)\n36 / 0 = undefined",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 - 6) * (6 * 6) = 24",
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 / 36 = 0 (left: 0 36)\n36 + 0 = 36 (left: 36)\n36 - 8 = 28 (left: 8)",
                "6 - 6 = 0 (left: 0 6 6)\n11 - 7 = 4 (left: 3 4)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 - 6) * (6 + 6) = 24",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)\n72 + 6 = 78 (left: 6 78)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "6 + 6 = 12 (left: 6 12 6)\n6 * 12 = 72 (left: 72 6)\n72 * 6 = 432 (left: 432)"
            ],
            "values": [
                0.003,
                60.0,
                0.003,
                41.0,
                60.0,
                0.002,
                0.002,
                0.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 7.4",
                "2 <- 6.6",
                "3 <- 5.1",
                "4 <- 6.7",
                "5 <- 4.2",
                "6 <- 9.4",
                "7 <- 6.7",
                "8 <- 9.3",
                "9 <- 7.4"
            ],
            "resampled_steps": [
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 / 36 = 0 (left: 0 36)\n36 + 0 = 36 (left: 36)",
                "6 + 6 = 12 (left: 6 12 6)\nInput: 0.5 6 -6",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 - 6) * (6 + 6) = 24",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)",
                "6 - 6 = 0 (left: 0 6 6)\n11 - 7 = 4 (left: 3 4)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)"
            ]
        },
        "step_10": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 + 36 = 36 (left: 36)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 - 6) * (6 + 6) = 24",
                "6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 / 36 = 0 (left: 0 36)\n36 + 0 = 36 (left: 36)\n36 / 2 = 18",
                "6 + 6 = 12 (left: 6 12 6)\nInput: 0.5 6 -6\n0.5 + 6 = 6.5 (left: -6 6.5)",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 + 6 = 12 (left: 6 12 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 - 6) * (6 + 6) = 24\n\nCorrect! That's another way to obtain 24 using the numbers 6, 6, 6, and 6. Well done!",
                "6 - 6 = 0 (left: 0 6 6)\n0 + 6 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "6 - 6 = 0 (left: 0 6 6)\n11 - 7 = 4 (left: 3 4)\n4 - 3 = 1 (left: 1)",
                "6 - 6 = 0 (left: 0 6 6)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 - 6) * (6 + 6) = 24"
            ],
            "values": [
                60.0,
                60.0,
                0.003,
                0.002,
                0.002,
                20.001,
                60.0,
                0.002,
                0.003,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.22659
    },
    "5": {
        "input": "1 1 2 12",
        "step_1": {
            "steps": [
                "2 + 1 = 3 (left: 3 2 12)",
                "1 + 1 = 2 (left: 2 2 12)",
                "12 - 2 = 10 (left: 1 2 10)",
                "1 + 1 = 2 (left: 2 2 12)",
                "1 * 1 = 1 (left: 2 2 12)",
                "12 + 1 = 13 (left: 1 2 13)",
                "12 / 2 = 6 (left: 1 2 6)",
                "3 + 5 = 8 (left: 5 8 15)",
                "12 / 2 = 6 (left: 1 2 6)",
                "12 / 2 = 6 (left: 1 6 12)"
            ],
            "values": [
                0.003,
                41.0,
                1.002,
                0.003,
                1.002,
                3.0,
                1.002,
                0.003,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.1",
                "3 <- 1.1",
                "4 <- 1.1",
                "5 <- 1.1",
                "6 <- 1.5",
                "7 <- 1.1",
                "8 <- INIT",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "",
                "",
                "1 + 1 = 2 (left: 2 2 12)",
                "1 + 1 = 2 (left: 2 2 12)",
                "1 + 1 = 2 (left: 2 2 12)",
                "1 + 1 = 2 (left: 2 2 12)",
                "12 + 1 = 13 (left: 1 2 13)",
                "1 + 1 = 2 (left: 2 2 12)",
                "",
                "1 + 1 = 2 (left: 2 2 12)"
            ]
        },
        "step_2": {
            "steps": [
                "12 - 1 = 11 (left: 1 2 11)",
                "10 - 3 = 7 (left: 7 2 24)",
                "1 + 1 = 2 (left: 2 2 12)\n6 * 12 = 72 (left: 1 72)",
                "1 + 1 = 2 (left: 2 2 12)\nInput: 1 4 8 12",
                "1 + 1 = 2 (left: 2 2 12)\n12 / 2 = 6 (left: 2 6)",
                "1 + 1 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)",
                "12 + 1 = 13 (left: 1 2 13)\n10 - 4 = 6 (left: 6 10)",
                "1 + 1 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)",
                "12 - 1 = 11 (left: 1 2 11)",
                "1 + 1 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)"
            ],
            "values": [
                0.003,
                2.001,
                0.003,
                0.003,
                0.002,
                0.002,
                1.002,
                1.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.1",
                "2 <- 1.1",
                "3 <- INIT",
                "4 <- 2.1",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "",
                "1 + 1 = 2 (left: 2 2 12)",
                "1 + 1 = 2 (left: 2 2 12)",
                "",
                "10 - 3 = 7 (left: 7 2 24)",
                "",
                "",
                "",
                "",
                "1 + 1 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)"
            ]
        },
        "step_3": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 12)",
                "1 + 1 = 2 (left: 2 2 12)\n10 / 4 = 2 (left: 4 2)",
                "1 + 1 = 2 (left: 2 2 12)\n10 * 2 = 20 (left: 2 20)",
                "12 / 2 = 6 (left: 1 2 6)",
                "10 - 3 = 7 (left: 7 2 24)\n7 + 2 = 9 (left: 9 24)",
                "2 * 1 = 2 (left: 2 2 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "2 + 1 = 3 (left: 3 2 12)",
                "1 + 1 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)"
            ],
            "values": [
                60.0,
                0.003,
                0.003,
                1.002,
                0.003,
                0.003,
                41.0,
                60.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 3.6",
                "1 <- 3.0",
                "2 <- 3.7",
                "3 <- 3.0",
                "4 <- 1.1",
                "5 <- 3.7",
                "6 <- INIT",
                "7 <- 3.6",
                "8 <- 3.0",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 + 1 = 2 (left: 2 2 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 2 12)"
            ]
        },
        "step_4": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 12)\n2 - 1 = 1 (left: 1 12)",
                "1 * 1 = 1 (left: 1 2 12)\n3 * 8 = 24 (left: 8 14 24)",
                "1 * 1 = 1 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "1 * 1 = 1 (left: 1 2 12)\n3 * 4 = 12 (left: 12 8 8)",
                "1 + 1 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 2 = 2 (left: 2 2 12)",
                "1 * 1 = 1 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)"
            ],
            "values": [
                1.0,
                2.001,
                0.003,
                2.001,
                1.001,
                60.0,
                1.002,
                60.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 4.8",
                "1 <- 3.7",
                "2 <- 4.9",
                "3 <- 4.5",
                "4 <- 4.5",
                "5 <- 4.8",
                "6 <- 4.8",
                "7 <- 4.7",
                "8 <- 3.0",
                "9 <- 4.9"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)"
            ]
        },
        "step_5": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 * 1 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 2 12)\nInput: 3 10 2",
                "1 * 1 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 * 1 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)"
            ],
            "values": [
                60.0,
                0.003,
                0.002,
                40.0,
                0.0,
                60.0,
                60.0,
                0.003,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 5.5",
                "1 <- 5.0",
                "2 <- 4.5",
                "3 <- 1.1",
                "4 <- 4.8",
                "5 <- 4.9",
                "6 <- 3.0",
                "7 <- 4.9",
                "8 <- 1.1",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 * 1 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 + 1 = 2 (left: 2 2 12)",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "1 * 1 = 1 (left: 1 2 12)",
                "1 * 1 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "1 + 1 = 2 (left: 2 2 12)",
                "1 * 1 = 1 (left: 1 2 12)"
            ]
        },
        "step_6": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (1 * 1) * (2 * 12) = 24",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 * 1 = 24 (left: 24)\nAnswer: (1 * 1) * (2 * 12) = 24",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24 24)",
                "1 + 1 = 2 (left: 2 2 12)\nInput: 4 10",
                "1 * 1 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24 24)",
                "1 * 1 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 2 12)\nPossible next steps:",
                "1 * 1 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "1 + 1 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)",
                "1 * 1 = 1 (left: 1 2 12)\n12 - 1 = 11 (left: 2 11)"
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.26203699999999996
    },
    "6": {
        "input": "1 2 2 6",
        "step_1": {
            "steps": [
                "3 * 3 = 9 (left: 9 4 12)",
                "6 - 2 = 4 (left: 4 4)",
                "1 * 2 = 2 (left: 2 2 6)",
                "6 / 2 = 3 (left: 2 3 6)",
                "6 - 2 = 4 (left: 2 4 6)",
                "6 - 2 = 4 (left: 4 6)",
                "2 * 2 = 4 (left: 4 2 6)",
                "2 + 2 = 4 (left: 1 4 6)",
                "2 * 2 = 4 (left: 4 6)",
                "6 - 2 = 4 (left: 1 4 6)"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                22.0,
                0.003,
                60.0,
                1.002,
                60.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 1.9",
                "2 <- 1.5",
                "3 <- 1.9",
                "4 <- 1.8",
                "5 <- 1.2",
                "6 <- 1.5",
                "7 <- 1.5",
                "8 <- 1.2",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "2 * 2 = 4 (left: 4 6)",
                "6 - 2 = 4 (left: 1 4 6)",
                "6 - 2 = 4 (left: 4 6)",
                "6 - 2 = 4 (left: 1 4 6)",
                "2 * 2 = 4 (left: 4 6)",
                "1 * 2 = 2 (left: 2 2 6)",
                "6 - 2 = 4 (left: 4 6)",
                "6 - 2 = 4 (left: 4 6)",
                "1 * 2 = 2 (left: 2 2 6)",
                "1 * 2 = 2 (left: 2 2 6)"
            ]
        },
        "step_2": {
            "steps": [
                "2 * 2 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "6 - 2 = 4 (left: 1 4 6)\n7 - 3 = 4 (left: 4 5 9)",
                "6 - 2 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "6 - 2 = 4 (left: 1 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "2 * 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "1 * 2 = 2 (left: 2 2 6)\n6 / 2 = 3 (left: 2 3)",
                "6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "6 - 2 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "1 * 2 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)"
            ],
            "values": [
                0.0,
                1.0,
                0.001,
                0.0,
                0.003,
                0.003,
                0.002,
                0.002,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- INIT",
                "2 <- 1.7",
                "3 <- 1.0",
                "4 <- 2.8",
                "5 <- 1.2",
                "6 <- 1.8",
                "7 <- 1.7",
                "8 <- 1.8",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "2 + 2 = 4 (left: 1 4 6)",
                "",
                "2 + 2 = 4 (left: 1 4 6)",
                "3 * 3 = 9 (left: 9 4 12)",
                "1 * 2 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)",
                "1 * 2 = 2 (left: 2 2 6)",
                "2 * 2 = 4 (left: 4 6)",
                "2 + 2 = 4 (left: 1 4 6)",
                "2 * 2 = 4 (left: 4 6)",
                "6 - 2 = 4 (left: 4 6)"
            ]
        },
        "step_3": {
            "steps": [
                "2 + 2 = 4 (left: 1 4 6)\nPossible next steps:",
                "1 + 2 = 3 (left: 2 3 6)",
                "2 + 2 = 4 (left: 1 4 6)\n8 - 2 = 6 (left: 10 6)",
                "3 * 3 = 9 (left: 9 4 12)\n9 / 4 = 2.25 (left: 2.25 12)",
                "1 * 2 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "1 * 2 = 2 (left: 2 2 6)\n4 + 4 = 8 (left: 6 8)",
                "2 * 2 = 4 (left: 4 6)\n27 / 3 = 9 (left: 9 27)",
                "2 + 2 = 4 (left: 1 4 6)\n6 / 4 = 1.5 (left: 1 1.5)",
                "2 * 2 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "6 - 2 = 4 (left: 4 6)\n9 - 3 = 6 (left: 6 9)"
            ],
            "values": [
                0.003,
                22.0,
                1.002,
                0.003,
                0.001,
                0.003,
                20.002,
                0.003,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 1.5",
                "2 <- INIT",
                "3 <- 1.9",
                "4 <- 1.0",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 1.9",
                "8 <- 1.8",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "6 / 2 = 3 (left: 2 3 6)",
                "6 - 2 = 4 (left: 4 6)",
                "",
                "6 - 2 = 4 (left: 1 4 6)",
                "3 * 3 = 9 (left: 9 4 12)",
                "",
                "",
                "6 - 2 = 4 (left: 1 4 6)",
                "2 * 2 = 4 (left: 4 6)",
                "2 * 2 = 4 (left: 4 6)"
            ]
        },
        "step_4": {
            "steps": [
                "6 / 2 = 3 (left: 2 3 6)\n5 - 1 = 4 (left: 1 4)",
                "6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "1 + 2 = 3 (left: 2 3 6)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)",
                "3 * 3 = 9 (left: 9 4 12)\n12 - 9 = 3 (left: 3 12)",
                "Possible next steps:",
                "6 / 2 = 3 (left: 2 3 6)",
                "6 - 2 = 4 (left: 1 4 6)\n6 - 1 = 5 (left: 1 5)",
                "2 * 2 = 4 (left: 4 6)\n7 / 2 = 3.5 (left: 10 3.5)",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ],
            "values": [
                60.0,
                40.0,
                2.001,
                60.0,
                0.003,
                0.003,
                3.0,
                21.0,
                0.001,
                60.0
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 1.0",
                "2 <- 1.7",
                "3 <- INIT",
                "4 <- 2.8",
                "5 <- 2.8",
                "6 <- 4.1",
                "7 <- 4.1",
                "8 <- 2.9",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 2 3 6)",
                "3 * 3 = 9 (left: 9 4 12)",
                "2 + 2 = 4 (left: 1 4 6)",
                "",
                "1 * 2 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)",
                "6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)"
            ]
        },
        "step_5": {
            "steps": [
                "1 + 2 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)",
                "3 * 3 = 9 (left: 9 4 12)\n5 - 2 = 3 (left: 3 5 2)",
                "2 + 2 = 4 (left: 1 4 6)\n3 * 9 = 27 (left: 27 27)",
                "6 - 2 = 4 (left: 2 4 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 2) * (2 * 1) = 24",
                "6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 2) * 4 = 24",
                "1 * 2 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "1 * 2 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)"
            ],
            "values": [
                40.0,
                3.0,
                0.003,
                1.002,
                0.003,
                0.002,
                60.0,
                0.003,
                0.002,
                0.0
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 4.9",
                "2 <- 1.8",
                "3 <- 1.7",
                "4 <- 4.0",
                "5 <- 4.3",
                "6 <- 1.0",
                "7 <- 1.8",
                "8 <- INIT",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "1 * 2 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 6)",
                "2 + 2 = 4 (left: 1 4 6)",
                "6 / 2 = 3 (left: 2 3 6)\n5 - 1 = 4 (left: 1 4)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)",
                "3 * 3 = 9 (left: 9 4 12)",
                "2 * 2 = 4 (left: 4 6)",
                "",
                "3 * 3 = 9 (left: 9 4 12)"
            ]
        },
        "step_6": {
            "steps": [
                "1 * 2 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "2 + 2 = 4 (left: 1 4 6)\nInput: 3 5 7",
                "6 / 2 = 3 (left: 2 3 6)\n5 - 1 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "3 * 3 = 9 (left: 9 4 12)\n9 - 4 = 5 (left: 5 12)",
                "2 * 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "2 + 2 = 4 (left: 4 6)",
                "3 * 3 = 9 (left: 9 4 12)\n9 / 4 = 2.25 (left: 2.25 12)"
            ],
            "values": [
                0.002,
                60.0,
                60.0,
                0.003,
                0.0,
                60.0,
                0.002,
                0.002,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 1.0",
                "2 <- 1.0",
                "3 <- 1.3",
                "4 <- 1.9",
                "5 <- 2.8",
                "6 <- 6.8",
                "7 <- 1.9",
                "8 <- 6.5",
                "9 <- 4.0"
            ],
            "resampled_steps": [
                "6 - 2 = 4 (left: 4 6)",
                "3 * 3 = 9 (left: 9 4 12)",
                "3 * 3 = 9 (left: 9 4 12)",
                "6 / 2 = 3 (left: 2 3 6)",
                "6 - 2 = 4 (left: 1 4 6)",
                "1 * 2 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)",
                "2 + 2 = 4 (left: 4 6)",
                "6 - 2 = 4 (left: 1 4 6)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 / 2 = 3 (left: 2 3 6)\n5 - 1 = 4 (left: 1 4)"
            ]
        },
        "step_7": {
            "steps": [
                "6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "3 * 3 = 9 (left: 9 4 12)\n9 * 4 = 36 (left: 12 36)",
                "3 * 3 = 9 (left: 9 4 12)\n12 - 4 = 8 (left: 9 8)",
                "6 / 2 = 3 (left: 2 3 6)\n3 * 2 = 6 (left: 3 6)",
                "6 - 2 = 4 (left: 1 4 6)\n7 - 3 = 4 (left: 4 9 2)",
                "1 * 2 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "2 + 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "6 - 2 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24",
                "6 / 2 = 3 (left: 2 3 6)\n5 - 1 = 4 (left: 1 4)\n1 + 4 = 5"
            ],
            "values": [
                40.0,
                0.003,
                0.002,
                1.0,
                2.001,
                0.002,
                0.002,
                60.0,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 7.7",
                "1 <- 7.8",
                "2 <- 6.2",
                "3 <- 6.2",
                "4 <- 7.8",
                "5 <- 4.3",
                "6 <- 6.2",
                "7 <- 5.0",
                "8 <- 4.7",
                "9 <- 6.5"
            ],
            "resampled_steps": [
                "6 - 2 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "1 + 2 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)",
                "6 - 2 = 4 (left: 1 4 6)\n6 - 1 = 5 (left: 1 5)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ]
        },
        "step_8": {
            "steps": [
                "6 - 2 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24\nInput: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 6 48)\n48 / 6 = 8 (left: 8 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) / 3 = 24",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24\nInput: 3 3 8 8\nSteps:\n8 - 3 = 5 (left: 3 5 8)\n5 * 3 = 15 (left: 15 8)\n15 + 8 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 5) + 8) + 1 = 24",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24",
                "1 + 2 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "6 - 2 = 4 (left: 1 4 6)\n6 - 1 = 5 (left: 1 5)\n5 / 1 = 5 (left: 5)",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 4 = 24"
            ],
            "values": [
                0.003,
                60.0,
                60.0,
                40.001,
                60.0,
                0.0,
                60.0,
                0.003,
                0.003,
                20.002
            ],
            "resampled": [
                "0 <- 7.8",
                "1 <- 6.1",
                "2 <- 8.4",
                "3 <- 2.8",
                "4 <- 7.7",
                "5 <- 8.3",
                "6 <- 5.6",
                "7 <- 8.1",
                "8 <- 7.0",
                "9 <- 7.7"
            ],
            "resampled_steps": [
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24\nInput: 3 3 8 8\nSteps:\n8 - 3 = 5 (left: 3 5 8)\n5 * 3 = 15 (left: 15 8)\n15 + 8 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 5) + 8) + 1 = 24",
                "1 * 2 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)",
                "6 - 2 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24",
                "6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 2) * (2 * 1) = 24",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24\nInput: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 6 48)\n48 / 6 = 8 (left: 8 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) / 3 = 24",
                "6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 - 2 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)"
            ]
        },
        "step_9": {
            "steps": [
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + 9 = 28 (left: 28)\n28 - 8 = 20 (left: 20)\n20 + 9 = 29 (left: 29)\n29 - 5 = 24 (left: 24)\nAnswer: (((((3 * 3) - 8) * 9) / 3 - 8) + 9 - 5) = 24",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: ((3 + 5) * (3 * 4)) - 8 = 24",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24\nInput: 3 3 8 8\nSteps:\n8 - 3 = 5 (left: 3 5 8)\n5 * 3 = 15 (left: 15 8)\n15 + 8 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 5) + 8) + 1 = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (2 * 6) * (12 - 4) = 24",
                "1 * 2 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "6 - 2 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24\nInput: 3 3 4 5\nSteps:\n4 + 5 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\nAnswer: (3 * 3) * (4 + 5) = 24",
                "6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 2) * (2 * 1) = 24\nInput: 3 4 5 7\nSteps:\n3 * 7 = 21 (left: 4 5 21)\n5 - 4 = 1 (left: 1 21)\n21 + 1 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((3 * 7) + (5 - 4)) + 2 = 24",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24\nInput: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 6 48)\n48 / 6 = 8 (left: 8 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) / 3 = 24\nInput: 2 3 4 8\nSteps:\n2 * 4 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n40 / 2 = 20 (left: 20)\n20 + 8 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: (((2 * 4) - 3) * 8) + 4 = 24",
                "6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 2) * (1 + 2) = 24",
                "6 - 2 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                0.003,
                0.002,
                60.0,
                40.0,
                60.0,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 8.1",
                "1 <- 6.5",
                "2 <- 9.5",
                "3 <- 9.5",
                "4 <- 9.5",
                "5 <- 8.1",
                "6 <- 8.6",
                "7 <- 9.0",
                "8 <- 9.2",
                "9 <- 6.1"
            ],
            "resampled_steps": [
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24\nInput: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 6 48)\n48 / 6 = 8 (left: 8 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) / 3 = 24",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24\nInput: 3 3 4 5\nSteps:\n4 + 5 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\nAnswer: (3 * 3) * (4 + 5) = 24",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24\nInput: 3 3 4 5\nSteps:\n4 + 5 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\nAnswer: (3 * 3) * (4 + 5) = 24",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24\nInput: 3 3 4 5\nSteps:\n4 + 5 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\nAnswer: (3 * 3) * (4 + 5) = 24",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24\nInput: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 6 48)\n48 / 6 = 8 (left: 8 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) / 3 = 24",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + 9 = 28 (left: 28)\n28 - 8 = 20 (left: 20)\n20 + 9 = 29 (left: 29)\n29 - 5 = 24 (left: 24)\nAnswer: (((((3 * 3) - 8) * 9) / 3 - 8) + 9 - 5) = 24",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24\nInput: 3 3 8 8\nSteps:\n8 - 3 = 5 (left: 3 5 8)\n5 * 3 = 15 (left: 15 8)\n15 + 8 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 5) + 8) + 1 = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (2 * 6) * (12 - 4) = 24",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24"
            ]
        },
        "step_10": {
            "steps": [
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24\nInput: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 6 48)\n48 / 6 = 8 (left: 8 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) / 3 = 24\nInput: 2 3 5 8\nSteps:\n5 * 3 = 15 (left: 2 8 15)\n8 - 2 = 6 (left: 6 15)\n6 + 15 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((5 * 3) + 8 - 2) + 3 = 24",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 4 = 24",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24\nInput: 3 3 4 5\nSteps:\n4 + 5 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\nAnswer: (3 * 3) * (4 + 5) = 24\nInput: 2 3 5 7\nSteps:\n2 * 3 = 6 (left: 5 6 7)\n5 + 7 = 12 (left: 6 12)\n6 * 12 = 72 (left: 72)\nAnswer: (2 * 3) * (5 + 7) = 24",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24\nInput: 3 3 4 5\nSteps:\n4 + 5 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\nAnswer: (3 * 3) * (4 + 5) = 24\nInput: 2 3 5 9\nSteps:\n3 * 5 = 15 (left: 2 9 15)\n9 - 2 = 7 (left: 7 15)\n7 + 15 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((3 * 5) + 2) + (9 - 2) = 24",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24\nInput: 3 3 4 5\nSteps:\n4 + 5 = 9 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\nAnswer: (3 * 3) * (4 + 5) = 24\nInput: 2 3 5 6\nSteps:\n3 + 5 = 8 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\nAnswer: (2 * 3) * (5 + 6) = 24",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24\nInput: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 6 48)\n48 / 6 = 8 (left: 8 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 + 3) * 8) / 3 = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 6 = 24 (left: 24)\nAnswer: ((2 * 6) * (3 * 4)) / 12 = 24",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 + 7) * 2) + 4 = 24",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + 9 = 28 (left: 28)\n28 - 8 = 20 (left: 20)\n20 + 9 = 29 (left: 29)\n29 - 5 = 24 (left: 24)\nAnswer: (((((3 * 3) - 8) * 9) / 3 - 8) + 9 - 5) = 24\nInput: 2 2 3 8\n\n2 + 2 = 4 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n8 * 12 = 96 (left: 96)\n96 / 4 = 24 (left: 24)\nAnswer: ((2 + 2) * 3) * 8 = 24",
                "6 - 2 = 4 (left: 1 4 6)\n1 * 4 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 * (6 - 2)) * 6 = 24\nInput: 3 3 8 8\nSteps:\n8 - 3 = 5 (left: 3 5 8)\n5 * 3 = 15 (left: 15 8)\n15 + 8 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 5) + 8) + 1 = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (2 * 6) * (12 - 4) = 24\nInput: 2 5 5 6\nSteps:\n5 * 5 = 25 (left: 2 6 25)\n25 - 2 = 23 (left: 6 23)\n6 - 23 = 17 (left: 17)\n17 + 7 = 24 (left: 24)\nAnswer: ((5 * 5) - 2) + 7 = 24",
                "2 * 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (1 + 2) * (2 * 6) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 + 21 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\nAnswer: ((3 * 7) + 5) - 3 = 24"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.31359950000000003
    },
    "7": {
        "input": "1 1 10 12",
        "step_1": {
            "steps": [
                "1 + 1 = 2 (left: 2 10 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "10 - 1 = 9 (left: 1 9 12)",
                "12 - 1 = 11 (left: 1 10 11)",
                "1 + 1 = 2 (left: 2 10 12)",
                "Input: 3 5 7 10",
                "12 / 1 = 12 (left: 1 10 12)",
                "1 * 1 = 1 (left: 1 10 12)",
                "1 * 1 = 1 (left: 1 10 12)",
                "10 + 1 = 11 (left: 1 11 12)"
            ],
            "values": [
                20.002,
                21.001,
                2.001,
                0.003,
                0.003,
                0.003,
                1.002,
                2.001,
                2.001,
                40.001
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.6",
                "2 <- 1.9",
                "3 <- 1.1",
                "4 <- 1.1",
                "5 <- 1.0",
                "6 <- 1.9",
                "7 <- 1.9",
                "8 <- 1.1",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "10 + 1 = 11 (left: 1 11 12)",
                "12 / 1 = 12 (left: 1 10 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "1 + 1 = 2 (left: 2 10 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12)\n12 / 1 = 12 (left: 11 12)",
                "12 / 1 = 12 (left: 1 10 12)\n10 / 1 = 10 (left: 10 12)",
                "10 + 1 = 11 (left: 1 11 12)\n7.5 * 3 = 22.5 (left: 1.5 5 22.5)",
                "10 + 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "10 + 1 = 11 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)",
                "1 + 1 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 2 5 12)",
                "10 + 1 = 11 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)",
                "10 + 1 = 11 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)",
                "10 + 1 = 11 (left: 1 11 12)\n12 / 1 = 12 (left: 11 12)",
                "1 + 1 = 2 (left: 2 10 12)"
            ],
            "values": [
                0.003,
                0.003,
                2.001,
                60.0,
                40.001,
                2.001,
                0.001,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.0",
                "2 <- INIT",
                "3 <- 2.3",
                "4 <- 1.0",
                "5 <- 1.9",
                "6 <- 2.4",
                "7 <- 1.0",
                "8 <- 1.9",
                "9 <- 2.4"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 10 12)",
                "1 + 1 = 2 (left: 2 10 12)",
                "",
                "10 + 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "1 + 1 = 2 (left: 2 10 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "10 + 1 = 11 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)",
                "1 + 1 = 2 (left: 2 10 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "10 + 1 = 11 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)"
            ]
        },
        "step_3": {
            "steps": [
                "1 + 1 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)",
                "1 + 1 = 2 (left: 2 10 12)\n12 - 10 = 2 (left: 2 2 12)",
                "1 * 1 = 1 (left: 1 10 12)",
                "10 + 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "1 + 1 = 2 (left: 2 10 12)\nInput: 20 12 2",
                "10 + 1 = 11 (left: 1 11 12)\n11 + 12 = 23 (left: 1 23)",
                "10 + 1 = 11 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)\n11 / 1 = 11 (left: 11)",
                "1 + 1 = 2 (left: 2 10 12)\n10 / 2 = 5 (left: 5 12)",
                "10 + 1 = 11 (left: 1 11 12)\n1 * 11 = 11 (left: 11)",
                "10 + 1 = 11 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)\n11 - 1 = 10 (left: 10)"
            ],
            "values": [
                0.003,
                20.002,
                0.003,
                0.003,
                0.003,
                20.0,
                0.001,
                0.002,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 2.4",
                "2 <- 3.5",
                "3 <- 1.0",
                "4 <- 3.1",
                "5 <- 1.1",
                "6 <- 2.3",
                "7 <- 1.1",
                "8 <- 2.3",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 2 10 12)\n12 - 10 = 2 (left: 2 2 12)",
                "10 + 1 = 11 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)",
                "10 + 1 = 11 (left: 1 11 12)\n11 + 12 = 23 (left: 1 23)",
                "1 + 1 = 2 (left: 2 10 12)",
                "1 + 1 = 2 (left: 2 10 12)\n12 - 10 = 2 (left: 2 2 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "10 + 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "10 + 1 = 11 (left: 1 11 12)",
                "10 + 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "10 + 1 = 11 (left: 1 11 12)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 1 = 2 (left: 2 10 12)\n12 - 10 = 2 (left: 2 2 12)\nInput: 4 12",
                "10 + 1 = 11 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)\n11 / 1 = 11 (left: 11)",
                "10 + 1 = 11 (left: 1 11 12)\n11 + 12 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 10 12)\n10 + 2 = 12 (left: 2 12 12)",
                "1 + 1 = 2 (left: 2 10 12)\n12 - 10 = 2 (left: 2 2 12)\n2 / 2 = 1 (left: 1 12)",
                "10 + 1 = 11 (left: 1 11 12)\n11 + 1 = 12 (left: 12)",
                "10 + 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "10 + 1 = 11 (left: 1 11 12)\n1 / 11 = 0.09090909090909091 (left: 0.09090909090909091)",
                "10 + 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24",
                "10 + 1 = 11 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)"
            ],
            "values": [
                0.003,
                0.001,
                60.0,
                0.002,
                1.001,
                0.002,
                0.002,
                0.002,
                0.003,
                1.001
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 3.5",
                "2 <- 1.0",
                "3 <- 4.2",
                "4 <- 4.2",
                "5 <- 3.5",
                "6 <- 1.9",
                "7 <- 2.3",
                "8 <- 3.5",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "10 + 1 = 11 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)",
                "10 + 1 = 11 (left: 1 11 12)\n11 + 12 = 23 (left: 1 23)",
                "1 + 1 = 2 (left: 2 10 12)",
                "10 + 1 = 11 (left: 1 11 12)\n11 + 12 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)",
                "10 + 1 = 11 (left: 1 11 12)\n11 + 12 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)",
                "10 + 1 = 11 (left: 1 11 12)\n11 + 12 = 23 (left: 1 23)",
                "10 + 1 = 11 (left: 1 11 12)",
                "10 + 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "10 + 1 = 11 (left: 1 11 12)\n11 + 12 = 23 (left: 1 23)",
                "10 + 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)"
            ]
        },
        "step_5": {
            "steps": [
                "10 + 1 = 11 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)\n1 * 11 = 11 (left: 11)",
                "10 + 1 = 11 (left: 1 11 12)\n11 + 12 = 23 (left: 1 23)\n23 - 1 = 22 (left: 22)",
                "1 + 1 = 2 (left: 2 10 12)\n2 * 10 = 20 (left: 20 12)",
                "10 + 1 = 11 (left: 1 11 12)\n11 + 12 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)\nAnswer: (10 + 1) + (12 - 1) = 24",
                "10 + 1 = 11 (left: 1 11 12)\n11 + 12 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)\nAnswer: ((1 + 1) + 10) + 12 = 24",
                "10 + 1 = 11 (left: 1 11 12)\n11 + 12 = 23 (left: 1 23)\n6 - 7 = -1 (left: 5 -1)",
                "10 + 1 = 11 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11 12)",
                "10 + 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "10 + 1 = 11 (left: 1 11 12)\n11 + 12 = 23 (left: 1 23)\n23 / 1 = 23 (left: 23)",
                "10 + 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.339205
    },
    "8": {
        "input": "2 2 10 10",
        "step_1": {
            "steps": [
                "2 * 2 = 4 (left: 4 10 10)",
                "10 - 2 = 8 (left: 2 10 8)",
                "10 - 2 = 8 (left: 2 10 8)",
                "10 - 2 = 8 (left: 2 10 8)",
                "10 - 2 = 8 (left: 2 8 10)",
                "2 + 2 = 4 (left: 4 10 10)",
                "Input: 3 1 5 7",
                "10 - 2 = 8 (left: 2 8 10)",
                "2 + 2 = 4 (left: 4 10 10)",
                "10 - 2 = 8 (left: 2 8 10)"
            ],
            "values": [
                1.001,
                2.001,
                1.002,
                0.003,
                0.003,
                20.002,
                0.003,
                1.002,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.5",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 1.5",
                "7 <- 1.0",
                "8 <- INIT",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "",
                "2 + 2 = 4 (left: 4 10 10)",
                "",
                "",
                "",
                "",
                "2 + 2 = 4 (left: 4 10 10)",
                "2 * 2 = 4 (left: 4 10 10)",
                "",
                "2 + 2 = 4 (left: 4 10 10)"
            ]
        },
        "step_2": {
            "steps": [
                "10 / 2 = 5 (left: 2 10 5)",
                "2 + 2 = 4 (left: 4 10 10)\n10 / 4 = 2.5 (left: 2.5 10 10)",
                "2 * 2 = 4 (left: 4 10 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "10 - 2 = 8 (left: 2 10 8)",
                "10 / 2 = 5 (left: 2 5 10)",
                "2 + 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 10 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)",
                "10 - 2 = 8 (left: 2 8 10)",
                "2 + 2 = 4 (left: 4 10 10)\n10 / 4 = 2.5 (left: 2.5 10 10)"
            ],
            "values": [
                2.001,
                1.001,
                0.003,
                1.002,
                0.003,
                2.001,
                0.002,
                60.0,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.7",
                "2 <- 2.7",
                "3 <- 2.7",
                "4 <- 2.7",
                "5 <- 1.5",
                "6 <- 2.7",
                "7 <- 2.7",
                "8 <- INIT",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)",
                "2 + 2 = 4 (left: 4 10 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)",
                "",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)"
            ]
        },
        "step_3": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)",
                "2 + 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 10 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n6 + 6 = 12 (left: 10 12)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n10 + 6 = 16 (left: 6 16)",
                "10 / 2 = 5 (left: 2 5 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10)"
            ],
            "values": [
                0.003,
                60.0,
                0.003,
                0.003,
                0.003,
                3.0,
                0.001,
                0.003,
                3.0,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 3.1",
                "2 <- 2.7",
                "3 <- 3.1",
                "4 <- 2.7",
                "5 <- 3.1",
                "6 <- 3.1",
                "7 <- 3.1",
                "8 <- 3.1",
                "9 <- 3.1"
            ],
            "resampled_steps": [
                "",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)"
            ]
        },
        "step_4": {
            "steps": [
                "2 + 2 = 4 (left: 4 10 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 / 4 = 1.5 (left: 1.5)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n16 / 16 = 1 (left: 1 4 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 - 4 = 2 (left: 2)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 / 4 = 1.5 (left: 1.5)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 - 4 = 2 (left: 2)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n10 - 3 = 7 (left: 5 7)"
            ],
            "values": [
                21.001,
                60.0,
                60.0,
                0.001,
                41.0,
                0.002,
                0.002,
                60.0,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 4.2",
                "2 <- 4.1",
                "3 <- 2.7",
                "4 <- 4.1",
                "5 <- 4.4",
                "6 <- 4.7",
                "7 <- 4.4",
                "8 <- 2.7",
                "9 <- 3.1"
            ],
            "resampled_steps": [
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n16 / 16 = 1 (left: 1 4 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n16 / 16 = 1 (left: 1 4 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n16 / 16 = 1 (left: 1 4 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)"
            ]
        },
        "step_5": {
            "steps": [
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n16 / 16 = 1 (left: 1 4 10)\nPossible next steps:",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n3 - 1 = 2 (left: 1 2 5)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n16 / 16 = 1 (left: 1 4 10)\n15 - 5 = 10 (left: 10 15)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (2 * 2) * ((10 - 4) * 10) = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n16 / 16 = 1 (left: 1 4 10)\n10 / 1 = 10 (left: 4 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n4 / 5 = 0.8 (left: 1 2 3 0.8)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 / 4 = 1.5 (left: 1.5)"
            ],
            "values": [
                0.003,
                0.002,
                60.0,
                0.003,
                40.001,
                0.003,
                40.001,
                0.001,
                3.0,
                0.0
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 5.2",
                "2 <- 5.2",
                "3 <- 3.1",
                "4 <- 4.2",
                "5 <- 5.4",
                "6 <- 5.4",
                "7 <- INIT",
                "8 <- 3.1",
                "9 <- 5.2"
            ],
            "resampled_steps": [
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24",
                "",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24"
            ]
        },
        "step_6": {
            "steps": [
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: (((3 * 7) - 5) * 3) / 2 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 3 8\n\n3 * 3 = 9 (left: 9 3 8)\n9 - 3 = 6 (left: 6 8)\n6 * 4 = 24 (left: 24)\nAnswer: (3 * 3 - 3) * 8 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 - 4 = 2 (left: 2)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\n\nInput: 3 3 3 9\n\n3 * 3 = 9 (left: 9 3 9)\n9 + 9 = 18 (left: 3 18)\n3 * 6 = 18 (left: 18)\n18 - 18 = 0 (left: 0)\n9 + 0 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\n\nAnswer: ((3 * 3) + 9) * ((9 + 0) - 3) = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (5 - 3) = 24",
                "10 - 2 = 8 (left: 2 8 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 + 4 = 10 (left: 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (9 - 6) = 24"
            ],
            "values": [
                0.003,
                40.0,
                40.0,
                0.001,
                0.002,
                40.0,
                60.0,
                1.002,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 5.4",
                "2 <- 6.5",
                "3 <- INIT",
                "4 <- 5.2",
                "5 <- 4.1",
                "6 <- 3.1",
                "7 <- 6.1",
                "8 <- 4.7",
                "9 <- 4.7"
            ],
            "resampled_steps": [
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\n\nInput: 3 3 3 9\n\n3 * 3 = 9 (left: 9 3 9)\n9 + 9 = 18 (left: 3 18)\n3 * 6 = 18 (left: 18)\n18 - 18 = 0 (left: 0)\n9 + 0 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\n\nAnswer: ((3 * 3) + 9) * ((9 + 0) - 3) = 24",
                "",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: (((3 * 7) - 5) * 3) / 2 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)"
            ]
        },
        "step_7": {
            "steps": [
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * 3) * (8 - 7)) - 3 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 / 8 = 2.25 (left: 2.25)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\n\nInput: 3 3 3 9\n\n3 * 3 = 9 (left: 9 3 9)\n9 + 9 = 18 (left: 3 18)\n3 * 6 = 18 (left: 18)\n18 - 18 = 0 (left: 0)\n9 + 0 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\n\nAnswer: ((3 * 3) + 9) * ((9 + 0) - 3) = 24\nInput: 7 7 3 4\n\n7 + 7 = 14 (left: 14 3 4)\n14 - 4 = 10 (left: 10 3)\n10 * 3 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\n\nAnswer: ((7 + 7) - 4) * 3 = 24",
                "10 - 2 = 8 (left: 2 10 8)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 5 6\nSteps:\n3 + 5 = 8 (left: 3 6 8)\n8 - 6 = 2 (left: 2 3 8)\n2 * 3 = 6 (left: 6 8)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 5) - 6) * 4 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (2 * 2) * ((10 - 4) * 10) = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n20 / 10 = 2 (left: 2)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: (((3 * 7) - 5) * 3) / 2 = 24\nInput: 2 3 5 6\nSteps:\n2 * 3 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n5 * 12 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((2 * 3) + 6) * 5 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (2 * 2) * ((10 - 4) * 10) = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 4 = 24"
            ],
            "values": [
                40.0,
                60.0,
                60.0,
                1.002,
                60.0,
                40.001,
                0.0,
                60.0,
                20.002,
                0.003
            ],
            "resampled": [
                "0 <- 6.9",
                "1 <- 4.7",
                "2 <- 4.2",
                "3 <- 7.0",
                "4 <- 7.1",
                "5 <- 5.2",
                "6 <- 2.7",
                "7 <- 4.7",
                "8 <- 6.6",
                "9 <- 6.1"
            ],
            "resampled_steps": [
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (9 - 6) = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * 3) * (8 - 7)) - 3 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 / 8 = 2.25 (left: 2.25)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (5 - 3) = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: (((3 * 7) - 5) * 3) / 2 = 24"
            ]
        },
        "step_8": {
            "steps": [
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (9 - 6) = 24\nInput: 1 3 7 8\nSteps:\n7 + 8 = 15 (left: 1 3 15)\n1 * 3 = 3 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((1 * 3) + (7 + 8)) * 2 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n6 / 6 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * 3) * (8 - 7)) - 3 = 24\nInput: 1 3 4 7\nSteps:\n3 + 7 = 10 (left: 1 4 10)\n4 * 10 = 40 (left: 1 40)\n40 / 1 = 40 (left: 40)\n40 - 16 = 24 (left: 24)\nAnswer: ((4 * 10) / 1) - 16 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 / 8 = 2.25 (left: 2.25)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24\nInput: 1 3 5 7\nSteps:\n5 - 3 = 2 (left: 1 2 7)\n2 * 7 = 14 (left: 1 14)\n14 * 1 = 14 (left: 14)\n14 * 1 = 24 (left: 24)\nAnswer: ((5 - 3) * 7) * 1 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 4 8\nSteps:\n3 + 3 = 6 (left: 4 6 8)\n6 * 4 = 24 (left: 24 8)\n24 / 8 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 216 (left: 216)\nAnswer: (3 + 3) * 4 * 8 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n6 * 10 = 60 (left: 6 60)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (2 * 2) * ((10 - 4) * 10) = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (5 - 3) = 24\nInput: 2 3 4 5\nSteps:\n2 * 4 = 8 (left: 3 5 8)\n8 * 3 = 24 (left: 5 24)\n5 - 24 = -19 (left: -19)\nAnswer: (2 * 4) * (8 * 3) = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: (((3 * 7) - 5) * 3) / 2 = 24\nInput: 1 3 5 7\nSteps:\n1 * 7 = 7 (left: 3 5 7)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: (((1 * 7) + (3 + 5)) * 8) / 2 - 4 = 24"
            ],
            "values": [
                60.0,
                40.001,
                0.001,
                60.0,
                60.0,
                60.0,
                0.002,
                40.001,
                40.0,
                60.0
            ],
            "resampled": [
                "0 <- 8.9",
                "1 <- 8.4",
                "2 <- 8.7",
                "3 <- 8.1",
                "4 <- 3.1",
                "5 <- 7.7",
                "6 <- 8.3",
                "7 <- 8.5",
                "8 <- 7.1",
                "9 <- 6.9"
            ],
            "resampled_steps": [
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: (((3 * 7) - 5) * 3) / 2 = 24\nInput: 1 3 5 7\nSteps:\n1 * 7 = 7 (left: 3 5 7)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: (((1 * 7) + (3 + 5)) * 8) / 2 - 4 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 / 8 = 2.25 (left: 2.25)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24\nInput: 1 3 5 7\nSteps:\n5 - 3 = 2 (left: 1 2 7)\n2 * 7 = 14 (left: 1 14)\n14 * 1 = 14 (left: 14)\n14 * 1 = 24 (left: 24)\nAnswer: ((5 - 3) * 7) * 1 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (2 * 2) * ((10 - 4) * 10) = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: (((3 * 7) - 5) * 3) / 2 = 24\nInput: 2 3 5 6\nSteps:\n2 * 3 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n5 * 12 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((2 * 3) + 6) * 5 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * 3) * (8 - 7)) - 3 = 24\nInput: 1 3 4 7\nSteps:\n3 + 7 = 10 (left: 1 4 10)\n4 * 10 = 40 (left: 1 40)\n40 / 1 = 40 (left: 40)\n40 - 16 = 24 (left: 24)\nAnswer: ((4 * 10) / 1) - 16 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 4 8\nSteps:\n3 + 3 = 6 (left: 4 6 8)\n6 * 4 = 24 (left: 24 8)\n24 / 8 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 216 (left: 216)\nAnswer: (3 + 3) * 4 * 8 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 / 8 = 2.25 (left: 2.25)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (9 - 6) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: (((3 * 7) - 5) * 3) / 2 = 24\nInput: 1 3 5 7\nSteps:\n1 * 7 = 7 (left: 3 5 7)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: (((1 * 7) + (3 + 5)) * 8) / 2 - 4 = 24\nInput: 2 3 4 6\nSteps:\n3 * 6 = 18 (left: 2 4 18)\n18 - 4 = 14 (left: 2 14)\n14 * 2 = 28 (left: 28)\n28 / 4 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: (((3 * 6) - 4) * 2) + 3 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 / 8 = 2.25 (left: 2.25)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24\nInput: 1 3 5 7\nSteps:\n5 - 3 = 2 (left: 1 2 7)\n2 * 7 = 14 (left: 1 14)\n14 * 1 = 14 (left: 14)\n14 * 1 = 24 (left: 24)\nAnswer: ((5 - 3) * 7) * 1 = 24\nInput: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n10 - 2 = 8 (left: 5 8)\n8 * 5 = 40 (left: 40)\n40 / 10 = 4 (left: 4)\n4 * 10 = 24 (left: 24)\nAnswer: ((3 + 7) - 2) * 5 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (2 * 2) * ((10 - 4) * 10) = 24\nInput: 3 3 4 8\nSteps:\n3 * 4 = 12 (left: 3 8 12)\n8 - 3 = 5 (left: 5 12)\n5 * 12 = 60 (left: 60)\nAnswer: (3 * 4) * (8 - 3) = 60",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nHope this helps! Let me know if you need more examples.",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: (((3 * 7) - 5) * 3) / 2 = 24\nInput: 2 3 5 6\nSteps:\n2 * 3 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n5 * 12 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((2 * 3) + 6) * 5 = 24\nInput: 1 1 6 8\nSteps:\n1 + 8 = 9 (left: 1 6 9)\n6 - 1 = 5 (left: 5 9)\n5 * 9 = 45 (left: 45)\n45 / 1.875 = 24 (left: 24)\nAnswer: ((1 + 8) * (6 - 1)) / 1 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * 3) * (8 - 7)) - 3 = 24\nInput: 1 3 4 7\nSteps:\n3 + 7 = 10 (left: 1 4 10)\n4 * 10 = 40 (left: 1 40)\n40 / 1 = 40 (left: 40)\n40 - 16 = 24 (left: 24)\nAnswer: ((4 * 10) / 1) - 16 = 24\nInput: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 + 12 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n18 / 6 = 3 (left: 3 18)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (((6 + 6) + 12) / 6) * (6 + 6) = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 4 8\nSteps:\n3 + 3 = 6 (left: 4 6 8)\n6 * 4 = 24 (left: 24 8)\n24 / 8 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 216 (left: 216)\nAnswer: (3 + 3) * 4 * 8 = 24\nInput: 1 2 7 8\nSteps:\n1 * 2 = 2 (left: 2 7 8)\n7 + 8 = 15 (left: 2 15)\n15 - 2 = 13 (left: 13)\n13 * 2 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: ((1 * 2) + (7 + 8)) - 2 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 / 8 = 2.25 (left: 2.25)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24\nInput: 1 3 6 8\nSteps:\n6 - 3 = 3 (left: 1 3 8)\n3 + 1 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((6 - 3) + 1) * 8 - 8 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (9 - 6) = 24\nInput: 1 3 5 8\nSteps:\n5 - 3 = 2 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n16 - 1 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((5 - 3) * 8) + (16 - 1) = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                0.003,
                40.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 9.8",
                "1 <- 9.5",
                "2 <- 9.1",
                "3 <- 8.0",
                "4 <- 9.9",
                "5 <- 9.4",
                "6 <- 6.9",
                "7 <- 9.6",
                "8 <- 8.0",
                "9 <- 7.1"
            ],
            "resampled_steps": [
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 / 8 = 2.25 (left: 2.25)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24\nInput: 1 3 6 8\nSteps:\n6 - 3 = 3 (left: 1 3 8)\n3 + 1 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((6 - 3) + 1) * 8 - 8 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: (((3 * 7) - 5) * 3) / 2 = 24\nInput: 2 3 5 6\nSteps:\n2 * 3 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n5 * 12 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((2 * 3) + 6) * 5 = 24\nInput: 1 1 6 8\nSteps:\n1 + 8 = 9 (left: 1 6 9)\n6 - 1 = 5 (left: 5 9)\n5 * 9 = 45 (left: 45)\n45 / 1.875 = 24 (left: 24)\nAnswer: ((1 + 8) * (6 - 1)) / 1 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 / 8 = 2.25 (left: 2.25)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24\nInput: 1 3 5 7\nSteps:\n5 - 3 = 2 (left: 1 2 7)\n2 * 7 = 14 (left: 1 14)\n14 * 1 = 14 (left: 14)\n14 * 1 = 24 (left: 24)\nAnswer: ((5 - 3) * 7) * 1 = 24\nInput: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n10 - 2 = 8 (left: 5 8)\n8 * 5 = 40 (left: 40)\n40 / 10 = 4 (left: 4)\n4 * 10 = 24 (left: 24)\nAnswer: ((3 + 7) - 2) * 5 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (9 - 6) = 24\nInput: 1 3 7 8\nSteps:\n7 + 8 = 15 (left: 1 3 15)\n1 * 3 = 3 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((1 * 3) + (7 + 8)) * 2 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (9 - 6) = 24\nInput: 1 3 5 8\nSteps:\n5 - 3 = 2 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n16 - 1 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((5 - 3) * 8) + (16 - 1) = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (9 - 6) = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * 3) * (8 - 7)) - 3 = 24\nInput: 1 3 4 7\nSteps:\n3 + 7 = 10 (left: 1 4 10)\n4 * 10 = 40 (left: 1 40)\n40 / 1 = 40 (left: 40)\n40 - 16 = 24 (left: 24)\nAnswer: ((4 * 10) / 1) - 16 = 24\nInput: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 + 12 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n18 / 6 = 3 (left: 3 18)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (((6 + 6) + 12) / 6) * (6 + 6) = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (9 - 6) = 24\nInput: 1 3 7 8\nSteps:\n7 + 8 = 15 (left: 1 3 15)\n1 * 3 = 3 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((1 * 3) + (7 + 8)) * 2 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 / 8 = 2.25 (left: 2.25)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 / 8 = 2.25 (left: 2.25)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24\nInput: 1 3 6 8\nSteps:\n6 - 3 = 3 (left: 1 3 8)\n3 + 1 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((6 - 3) + 1) * 8 - 8 = 24\nInput: 2 3 5 7\nSteps:\n5 + 7 = 12 (left: 2 3 12)\n2 * 3 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((2 * 3) * (5 + 7)) / 3 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: (((3 * 7) - 5) * 3) / 2 = 24\nInput: 2 3 5 6\nSteps:\n2 * 3 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n5 * 12 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((2 * 3) + 6) * 5 = 24\nInput: 1 1 6 8\nSteps:\n1 + 8 = 9 (left: 1 6 9)\n6 - 1 = 5 (left: 5 9)\n5 * 9 = 45 (left: 45)\n45 / 1.875 = 24 (left: 24)\nAnswer: ((1 + 8) * (6 - 1)) / 1 = 24\nInput: 2 4 5 6\nSteps:\n4 + 6 = 10 (left: 2 5 10)\n10 / 5 = 2 (left: 2 2)\n2 * 2 * 12 = 24 (left: 24)\nAnswer: ((4 + 6) / 5) * 12 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 / 8 = 2.25 (left: 2.25)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24\nInput: 1 3 5 7\nSteps:\n5 - 3 = 2 (left: 1 2 7)\n2 * 7 = 14 (left: 1 14)\n14 * 1 = 14 (left: 14)\n14 * 1 = 24 (left: 24)\nAnswer: ((5 - 3) * 7) * 1 = 24\nInput: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n10 - 2 = 8 (left: 5 8)\n8 * 5 = 40 (left: 40)\n40 / 10 = 4 (left: 4)\n4 * 10 = 24 (left: 24)\nAnswer: ((3 + 7) - 2) * 5 = 24\nInput: 2 4 6 8\nSteps:\n4 + 6 = 10 (left: 2 8 10)\n10 - 8 = 2 (left: 2 2)\n2 * 2 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((4 + 6) - 8) * 2 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (9 - 6) = 24\nInput: 1 3 7 8\nSteps:\n7 + 8 = 15 (left: 1 3 15)\n1 * 3 = 3 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((1 * 3) + (7 + 8)) * 2 = 24\nInput: 2 3 5 6\nSteps:\n3 + 5 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 12 8)\n12 * 2 = 24 (left: 24)\nAnswer: (6 * 2) * (3 + 5) = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (9 - 6) = 24\nInput: 1 3 5 8\nSteps:\n5 - 3 = 2 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n16 - 1 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((5 - 3) * 8) + (16 - 1) = 24\nInput: 2 4 6 9\nSteps:\n4 + 6 = 10 (left: 2 9 10)\n10 - 2 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\nAnswer: (4 + 6) * (10 - 2) = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (2 * 2) * (10 - 10) = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (9 - 6) = 24\nInput: 1 3 5 7\nSteps:\n3 + 7 = 10 (left: 1 5 10)\n5 * 10 = 50 (left: 1 50)\n50 / 1 = 50 (left: 50)\nAnswer: (1 + (3 + 7)) * 5 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * 3) * (8 - 7)) - 3 = 24\nInput: 1 3 4 7\nSteps:\n3 + 7 = 10 (left: 1 4 10)\n4 * 10 = 40 (left: 1 40)\n40 / 1 = 40 (left: 40)\n40 - 16 = 24 (left: 24)\nAnswer: ((4 * 10) / 1) - 16 = 24\nInput: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 + 12 = 18 (left: 6 18)\n6 * 3 = 18 (left: 18)\n18 / 6 = 3 (left: 3 18)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (((6 + 6) + 12) / 6) * (6 + 6) = 24\nInput: 1 2 3 4\nSteps:\n2 * 4 = 8 (left: 1 3 8)\n3 + 1 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((2 * 4) + (3 + 1)) - 8 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) + (10 - 4)) * 10 = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (9 - 6) = 24\nInput: 1 3 7 8\nSteps:\n7 + 8 = 15 (left: 1 3 15)\n1 * 3 = 3 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((1 * 3) + (7 + 8)) * 2 = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n6 + 5 = 11 (left: 11 11)\n11 * 11 = 121 (left: 121)\n121 - 97 = 24 (left: 24)\nAnswer: ((4 + 7) + (6 + 5)) - 97 = 24",
                "2 * 2 = 4 (left: 4 10 10)\n10 - 4 = 6 (left: 6 6 10)\n2 * 3 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 2) * (10 - 4)) * 10 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 / 8 = 2.25 (left: 2.25)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24\nInput: 1 3 4 6\nSteps:\n1 + 3 = 4 (left: 4 6 4)\n4 * 6 = 24 (left: 24 4)\nAnswer: (1 + 3) * (4 * 6) = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                40.001,
                60.0,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.39509000000000005
    },
    "9": {
        "input": "1 1 1 12",
        "step_1": {
            "steps": [
                "12 - 1 = 11 (left: 1 1 11)",
                "7 - 3 = 4 (left: 4 5 2)",
                "1 - 1 = 0 (left: 0 1 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "12 - 1 = 11 (left: 1 1 11)",
                "1 - 1 = 0 (left: 0 1 12)",
                "1 * 12 = 12 (left: 1 1 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "1 + 1 = 2 (left: 1 1 12)",
                "12 - 1 = 11 (left: 1 1 11)"
            ],
            "values": [
                0.002,
                1.001,
                0.003,
                40.001,
                0.003,
                2.001,
                40.001,
                40.001,
                21.0,
                0.003
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.6",
                "2 <- 1.8",
                "3 <- 1.3",
                "4 <- INIT",
                "5 <- 1.7",
                "6 <- 1.7",
                "7 <- 1.8",
                "8 <- 1.7",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 4 5 2)",
                "1 * 12 = 12 (left: 1 1 12)",
                "1 + 1 = 2 (left: 1 1 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "",
                "1 * 1 = 1 (left: 1 1 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "1 + 1 = 2 (left: 1 1 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "7 - 3 = 4 (left: 4 5 2)\n7 / 10 = 0.7 (left: 0.7 7)",
                "1 * 12 = 12 (left: 1 1 12)\n3 + 4 = 7 (left: 6 6 7)",
                "1 + 1 = 2 (left: 1 1 12)\n12 / 1 = 12 (left: 1 12)",
                "1 * 1 = 1 (left: 1 1 12)\n1 - 1 = 0 (left: 0 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)",
                "1 * 1 = 1 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)",
                "1 * 1 = 1 (left: 1 1 12)\n5 / 3 = 1.66667 (left: 1.66667 7 9)",
                "1 + 1 = 2 (left: 2 1 12)"
            ],
            "values": [
                3.0,
                3.0,
                0.002,
                40.0,
                40.001,
                20.002,
                60.0,
                60.0,
                2.001,
                40.001
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.7",
                "2 <- INIT",
                "3 <- 2.6",
                "4 <- INIT",
                "5 <- 2.5",
                "6 <- 2.7",
                "7 <- 2.9",
                "8 <- 2.5",
                "9 <- 2.9"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 1 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "",
                "1 * 1 = 1 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)",
                "",
                "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)",
                "1 + 1 = 2 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)",
                "1 + 1 = 2 (left: 2 1 12)",
                "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)",
                "1 + 1 = 2 (left: 2 1 12)"
            ]
        },
        "step_3": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)",
                "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)",
                "12 - 1 = 11 (left: 1 1 11)",
                "1 * 1 = 1 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\nInput: 6 10",
                "1 * 1 = 1 (left: 1 1 12)",
                "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)\n12 * 1 = 12 (left: 12)",
                "1 + 1 = 2 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)\n11 / 1 = 11 (left: 11)",
                "1 + 1 = 2 (left: 2 1 12)\n2 + 1 = 3 (left: 3 12)",
                "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)"
            ],
            "values": [
                60.0,
                20.002,
                0.003,
                0.003,
                3.0,
                0.003,
                0.003,
                0.003,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.3",
                "2 <- 2.5",
                "3 <- 1.8",
                "4 <- 1.3",
                "5 <- 1.3",
                "6 <- 2.6",
                "7 <- 3.9",
                "8 <- 2.6",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "",
                "1 * 1 = 1 (left: 1 1 12)\n1 - 1 = 0 (left: 0 12)",
                "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)",
                "1 + 1 = 2 (left: 1 1 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "1 * 1 = 1 (left: 1 1 12)",
                "1 * 1 = 1 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 1 12)\n1 - 1 = 0 (left: 0 12)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 1 = 2 (left: 2 1 12)",
                "1 * 1 = 1 (left: 1 1 12)\n1 - 1 = 0 (left: 0 12)\n0 * 12 = 0 (left: 0)",
                "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 1 12)\n12 / 1 = 12 (left: 1 12)",
                "1 * 1 = 1 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 1 12)\n1 - 1 = 0 (left: 0 12)\nPossible next steps:"
            ],
            "values": [
                40.001,
                0.002,
                0.001,
                60.0,
                60.0,
                1.001,
                0.003,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.5",
                "1 <- 3.9",
                "2 <- 4.0",
                "3 <- 4.3",
                "4 <- 4.3",
                "5 <- 4.3",
                "6 <- 3.9",
                "7 <- 3.0",
                "8 <- 4.4",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 2 1 12)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)",
                "1 * 1 = 1 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)"
            ]
        },
        "step_5": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 1 12)\n2 - 1 = 1 (left: 1 12)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "1 * 1 = 1 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)\n1 * 11 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "1 + 1 = 2 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)\n11 - 1 = 10 (left: 10)"
            ],
            "values": [
                0.002,
                60.0,
                2.001,
                60.0,
                0.001,
                0.002,
                0.002,
                0.003,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 3.0",
                "2 <- 4.0",
                "3 <- 5.1",
                "4 <- 4.3",
                "5 <- 4.0",
                "6 <- 5.3",
                "7 <- 5.3",
                "8 <- 5.1",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)",
                "1 * 1 = 1 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)",
                "1 + 1 = 2 (left: 2 1 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 2 1 12)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)"
            ]
        },
        "step_6": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)",
                "1 * 1 = 1 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)\n11 / 1 = 11 (left: 11)",
                "1 + 1 = 2 (left: 2 1 12)\n2 - 1 = 1 (left: 1 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 12) = 24",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "1 + 1 = 2 (left: 2 1 12)\n2 + 1 = 3 (left: 3 12)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((1 + 1) + (1 + 1)) * 12 = 24",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 1) * 12 = 24",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 12) = 24",
                "1 * 1 = 1 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)\n1 + 11 = 12 (left: 12)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                60.0,
                0.001,
                0.003,
                60.0,
                60.0,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 2.5",
                "1 <- 5.3",
                "2 <- 2.3",
                "3 <- 6.3",
                "4 <- 2.3",
                "5 <- 4.0",
                "6 <- 3.0",
                "7 <- 2.6",
                "8 <- 2.3",
                "9 <- 6.3"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 1 12)\n1 - 1 = 0 (left: 0 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 12) = 24",
                "1 * 1 = 1 (left: 1 1 12)\n1 - 1 = 0 (left: 0 12)",
                "1 + 1 = 2 (left: 2 1 12)",
                "1 * 1 = 1 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)",
                "1 * 1 = 1 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 1 12)\n1 - 1 = 0 (left: 0 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 12) = 24"
            ]
        },
        "step_7": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 12)\n1 * 1 = 1 (left: 1 12)\n12 - 1 = 11 (left: 11)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 1) * 12 = 24",
                "1 * 1 = 1 (left: 1 1 12)\n1 - 1 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 12) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 5) - 7) * (3 * 8) = 24",
                "1 * 1 = 1 (left: 1 1 12)\n1 - 1 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)",
                "1 + 1 = 2 (left: 2 1 12)\n12 - 2 = 10 (left: 2 10)",
                "1 * 1 = 1 (left: 1 1 12)\n12 - 1 = 11 (left: 1 11)\n1 + 11 = 12 (left: 12)",
                "1 * 1 = 1 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 1 12)\n1 - 1 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24"
            ],
            "values": [
                0.003,
                60.0,
                0.002,
                40.0,
                0.002,
                3.0,
                0.002,
                0.001,
                0.001,
                60.0
            ],
            "resampled": [
                "0 <- 7.1",
                "1 <- 7.1",
                "2 <- 7.9",
                "3 <- 1.3",
                "4 <- 2.9",
                "5 <- 4.3",
                "6 <- 4.3",
                "7 <- 6.8",
                "8 <- 5.1",
                "9 <- 4.3"
            ],
            "resampled_steps": [
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 1) * 12 = 24",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 1) * 12 = 24",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "1 * 1 = 1 (left: 1 1 12)",
                "1 + 1 = 2 (left: 2 1 12)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 12) = 24",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)"
            ]
        },
        "step_8": {
            "steps": [
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 1) * 12 = 24\nInput: 3 3 3 6\nSteps:\n3 + 3 = 6 (left: 6 3 6)\n6 * 3 = 18 (left: 3 18)\n18 - 3 = 15 (left: 15)\n15 + 6 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: (((3 + 3) * 3) - 3) + 6 + 3 = 24",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 1) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((2 * 4) * (6 - 3)) = 24",
                "1 * 1 = 1 (left: 1 1 12)\n5 / 5 = 1 (left: 1 5 5)",
                "1 + 1 = 2 (left: 2 1 12)\n2 + 1 = 3 (left: 3 12)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 + 12) = 24\nInput: 3 3 6 7\nSteps:\n6 - 3 = 3 (left: 3 3 7)\n3 * 3 = 9 (left: 9 7)\n9 - 7 = 2 (left: 2)\n2 * 3 * 3 = 24\nAnswer: (6 - 3) * (3 * 3 + 7) = 24",
                "1 + 1 = 2 (left: 2 1 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 1) * (1 * 12) = 24",
                "1 + 1 = 2 (left: 1 1 12)\n1 + 1 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "cost": 0.4347365
    },
    "10": {
        "input": "1 1 2 8",
        "step_1": {
            "steps": [
                "Possible next steps:",
                "1 * 1 = 1 (left: 1 2 8)",
                "8 - 2 = 6 (left: 1 2 6)",
                "1 + 1 = 2 (left: 2 2 8)",
                "1 * 1 = 1 (left: 1 2 8)",
                "2 + 1 = 3 (left: 1 3 8)",
                "2 * 8 = 16 (left: 1 1 16)",
                "3 * 3 = 9 (left: 9 2 1)",
                "1 + 1 = 2 (left: 2 2 8)",
                "8 - 2 = 6 (left: 1 6 8)"
            ],
            "values": [
                0.003,
                60.0,
                2.001,
                0.003,
                41.0,
                60.0,
                3.0,
                2.001,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.5",
                "4 <- 1.5",
                "5 <- 1.1",
                "6 <- 1.1",
                "7 <- 1.1",
                "8 <- 1.5",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "2 + 1 = 3 (left: 1 3 8)",
                "2 + 1 = 3 (left: 1 3 8)",
                "1 * 1 = 1 (left: 1 2 8)",
                "1 * 1 = 1 (left: 1 2 8)",
                "1 * 1 = 1 (left: 1 2 8)",
                "2 + 1 = 3 (left: 1 3 8)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "2 * 1 = 2 (left: 2 2 8)",
                "8 - 2 = 6 (left: 1 2 6)",
                "1 * 1 = 1 (left: 1 2 8)",
                "2 + 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)",
                "2 + 1 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 1 = 7 (left: 2 7)",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 1 = 7 (left: 2 7)",
                "1 * 1 = 1 (left: 1 2 8)\n5 - 3 = 2 (left: 2 7)",
                "2 + 1 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 7)",
                "2 * 1 = 2 (left: 2 2 8)"
            ],
            "values": [
                1.002,
                1.002,
                3.0,
                60.0,
                60.0,
                1.001,
                1.002,
                0.001,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.1",
                "2 <- 2.3",
                "3 <- INIT",
                "4 <- 1.1",
                "5 <- 1.4",
                "6 <- 2.3",
                "7 <- 1.4",
                "8 <- 2.4",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "",
                "1 * 1 = 1 (left: 1 2 8)",
                "2 + 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)",
                "",
                "1 * 1 = 1 (left: 1 2 8)",
                "1 * 1 = 1 (left: 1 2 8)",
                "2 + 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 2 8)",
                "2 + 1 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "2 + 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)"
            ]
        },
        "step_3": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 8)",
                "1 * 1 = 1 (left: 1 2 8)\n3 * 5 = 15 (left: 7 15)",
                "2 + 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)",
                "8 / 2 = 4 (left: 2 4 8)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 + 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n5 + 10 = 15 (left: 15 15)",
                "1 * 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)",
                "2 + 1 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n5 * 10 = 50 (left: 50)",
                "2 + 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)"
            ],
            "values": [
                22.0,
                0.003,
                0.003,
                0.003,
                60.0,
                60.0,
                0.003,
                1.002,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 3.4",
                "2 <- 1.5",
                "3 <- 3.0",
                "4 <- INIT",
                "5 <- 3.4",
                "6 <- 1.1",
                "7 <- 3.5",
                "8 <- 1.5",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 + 1 = 3 (left: 1 3 8)",
                "1 * 1 = 1 (left: 1 2 8)",
                "",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 2 8)",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 + 1 = 3 (left: 1 3 8)",
                "2 + 1 = 3 (left: 1 3 8)"
            ]
        },
        "step_4": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n5 * 10 = 50 (left: 50)",
                "2 + 1 = 3 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "1 * 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "3 + 5 = 8 (left: 7 8 9)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "2 + 1 = 3 (left: 1 3 8)\n5 - 5 = 0 (left: 0 5)",
                "2 + 1 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)"
            ],
            "values": [
                0.001,
                0.002,
                60.0,
                40.001,
                22.0,
                0.001,
                60.0,
                0.001,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 4.6",
                "1 <- 3.4",
                "2 <- 4.6",
                "3 <- 1.1",
                "4 <- 4.6",
                "5 <- 3.5",
                "6 <- 4.3",
                "7 <- 1.4",
                "8 <- 4.3",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)",
                "1 * 1 = 1 (left: 1 2 8)",
                "1 * 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "1 * 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 * 1 = 1 (left: 1 2 8)",
                "1 * 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)"
            ]
        },
        "step_5": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 / 3 = 2.66667 (left: 2.66667)",
                "1 * 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8 8)",
                "1 * 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 * 1 = 1 (left: 1 2 8)\n2 - 1 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "1 * 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)"
            ],
            "values": [
                0.0,
                0.001,
                1.002,
                41.0,
                0.002,
                0.003,
                0.002,
                60.0,
                0.002,
                0.001
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 3.5",
                "2 <- 5.7",
                "3 <- 1.5",
                "4 <- 5.3",
                "5 <- 4.3",
                "6 <- 1.1",
                "7 <- 5.3",
                "8 <- 3.5",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 2 8)",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 + 1 = 3 (left: 1 3 8)",
                "1 * 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 * 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 * 1 = 1 (left: 1 2 8)",
                "1 * 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 + 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)"
            ]
        },
        "step_6": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 8)\n8 - 1 = 7 (left: 7 2)",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "2 + 1 = 3 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)",
                "1 * 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 + 4 = 5",
                "1 * 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "1 * 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "2 + 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)"
            ],
            "values": [
                1.002,
                0.002,
                0.003,
                40.0,
                0.003,
                0.002,
                60.0,
                0.003,
                0.003,
                20.0
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 6.3",
                "2 <- 2.3",
                "3 <- 6.3",
                "4 <- 1.7",
                "5 <- 6.3",
                "6 <- 5.7",
                "7 <- 3.4",
                "8 <- 2.4",
                "9 <- 5.7"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 2 8)",
                "2 + 1 = 3 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)",
                "2 + 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)",
                "2 + 1 = 3 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)",
                "3 * 3 = 9 (left: 9 2 1)",
                "2 + 1 = 3 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 + 1 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)"
            ]
        },
        "step_7": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 8)\n3 + 5 = 8 (left: 8 7)",
                "2 + 1 = 3 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n11 - 1 = 10 (left: 10)",
                "2 + 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "2 + 1 = 3 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\nInput: 3 9",
                "3 * 3 = 9 (left: 9 2 1)\n9 * 1 = 9 (left: 2 9)",
                "2 + 1 = 3 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n1 * 11 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n7 + 3 = 10 (left: 3 3 10)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "2 + 1 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)"
            ],
            "values": [
                0.003,
                0.002,
                2.001,
                0.003,
                0.0,
                0.002,
                3.0,
                60.0,
                0.001,
                0.0
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 4.2",
                "2 <- 1.4",
                "3 <- 2.3",
                "4 <- 4.3",
                "5 <- 1.5",
                "6 <- 3.4",
                "7 <- 2.4",
                "8 <- 6.6",
                "9 <- 2.4"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 + 1 = 3 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "1 * 1 = 1 (left: 1 2 8)",
                "2 + 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "2 + 1 = 3 (left: 1 3 8)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)",
                "2 + 1 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "2 + 1 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)"
            ]
        },
        "step_8": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "2 + 1 = 3 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n5 / 1 = 5 (left: 5)",
                "1 * 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "2 + 1 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)",
                "2 + 1 = 3 (left: 1 3 8)\n3 - 1 = 2 (left: 2)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n6 * 2 = 12 (left: 12)",
                "2 + 1 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "2 + 1 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)"
            ],
            "values": [
                0.003,
                0.002,
                41.0,
                0.001,
                0.002,
                0.001,
                0.003,
                0.0,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 7.7",
                "1 <- 5.3",
                "2 <- 4.2",
                "3 <- 2.4",
                "4 <- 1.4",
                "5 <- 8.9",
                "6 <- 1.4",
                "7 <- 7.7",
                "8 <- 3.5",
                "9 <- 5.7"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)",
                "2 + 1 = 3 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "2 + 1 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 2 8)",
                "2 + 1 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 2 8)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)"
            ]
        },
        "step_9": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * 1) + (2 + 8) = 24",
                "1 * 1 = 1 (left: 1 2 8)\n8 / 2 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "2 + 1 = 3 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n5 / 1 = 5 (left: 5)",
                "2 + 1 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "1 * 1 = 1 (left: 1 2 8)\nPossible next steps:",
                "2 + 1 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 1) * (1 * 8) = 24",
                "1 * 1 = 1 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * 1) * (2 + 8) = 24",
                "1 * 1 = 1 (left: 1 2 8)\n8 - 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "1 * 1 = 1 (left: 1 2 8)\n1 + 2 = 3 (left: 3 8)\nInput: 4 7 9"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.47844450000000005
    },
    "11": {
        "input": "1 1 4 8",
        "step_1": {
            "steps": [
                "1 + 1 = 2 (left: 2 4 8)",
                "1 * 4 = 4 (left: 4 4 8)",
                "Possible next steps:",
                "4 / 1 = 4 (left: 1 4 8)",
                "8 - 1 = 7 (left: 1 4 7)",
                "8 - 1 = 7 (left: 1 4 7)",
                "8 / 4 = 2 (left: 1 2 4)",
                "1 + 1 = 2 (left: 2 4 8)",
                "1 + 4 = 5 (left: 1 5 8)",
                "1 * 1 = 1 (left: 1 4 8)"
            ],
            "values": [
                20.002,
                40.0,
                0.003,
                20.002,
                1.002,
                20.002,
                3.0,
                0.003,
                3.0,
                0.002
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 1.1",
                "2 <- 1.0",
                "3 <- 1.1",
                "4 <- 1.5",
                "5 <- 1.1",
                "6 <- 1.8",
                "7 <- INIT",
                "8 <- 1.0",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "4 / 1 = 4 (left: 1 4 8)",
                "1 * 4 = 4 (left: 4 4 8)",
                "1 + 1 = 2 (left: 2 4 8)",
                "1 * 4 = 4 (left: 4 4 8)",
                "8 - 1 = 7 (left: 1 4 7)",
                "1 * 4 = 4 (left: 4 4 8)",
                "1 + 4 = 5 (left: 1 5 8)",
                "",
                "1 + 1 = 2 (left: 2 4 8)",
                "8 / 4 = 2 (left: 1 2 4)"
            ]
        },
        "step_2": {
            "steps": [
                "4 / 1 = 4 (left: 1 4 8)\n8 / 1 = 8 (left: 8)",
                "1 * 4 = 4 (left: 4 4 8)\n1 / 1 = 1 (left: 1 1 1)",
                "1 + 1 = 2 (left: 2 4 8)\n7 + 3 = 10 (left: 5 10)",
                "1 * 4 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 8)",
                "8 - 1 = 7 (left: 1 4 7)\n3 + 5 = 8 (left: 8 9)",
                "1 * 4 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 8)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)",
                "4 * 1 = 4 (left: 4 4 8)",
                "1 + 1 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 8)",
                "8 / 4 = 2 (left: 1 2 4)\n2 + 6 = 8 (left: 3 9 8)"
            ],
            "values": [
                0.002,
                1.002,
                1.002,
                1.002,
                0.003,
                0.003,
                60.0,
                60.0,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 2.6",
                "2 <- 2.7",
                "3 <- 2.7",
                "4 <- 2.7",
                "5 <- INIT",
                "6 <- 2.6",
                "7 <- 2.6",
                "8 <- 1.1",
                "9 <- 2.6"
            ],
            "resampled_steps": [
                "1 * 4 = 4 (left: 4 4 8)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)",
                "4 * 1 = 4 (left: 4 4 8)",
                "4 * 1 = 4 (left: 4 4 8)",
                "4 * 1 = 4 (left: 4 4 8)",
                "",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)",
                "1 * 4 = 4 (left: 4 4 8)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)"
            ]
        },
        "step_3": {
            "steps": [
                "1 * 4 = 4 (left: 4 4 8)\n27 - 3 = 24 (left: 9 24)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n3 / 1 = 3 (left: 3)",
                "4 * 1 = 4 (left: 4 4 8)\n1 * 7 = 7 (left: 7 3)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)",
                "4 * 1 = 4 (left: 4 4 8)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\nPossible next steps:",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n10 / 5 = 2 (left: 2)",
                "1 * 4 = 4 (left: 4 4 8)\n6 * 7 = 42 (left: 42 5)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n1 + 3 = 4 (left: 4)"
            ],
            "values": [
                21.0,
                20.0,
                0.0,
                60.0,
                60.0,
                41.0,
                0.003,
                0.001,
                0.001,
                0.0
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 2.6",
                "2 <- 3.5",
                "3 <- 2.6",
                "4 <- 1.0",
                "5 <- 2.6",
                "6 <- 3.4",
                "7 <- 2.6",
                "8 <- 3.5",
                "9 <- 3.4"
            ],
            "resampled_steps": [
                "4 / 1 = 4 (left: 1 4 8)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)",
                "4 * 1 = 4 (left: 4 4 8)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)",
                "1 + 1 = 2 (left: 2 4 8)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)",
                "4 * 1 = 4 (left: 4 4 8)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)"
            ]
        },
        "step_4": {
            "steps": [
                "4 / 1 = 4 (left: 1 4 8)\n4 * 1 = 4 (left: 4 8)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n3 - 1 = 2 (left: 2)",
                "4 * 1 = 4 (left: 4 4 8)\n4 - 4 = 0 (left: 0 8)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n1 * 3 = 3 (left: 3)",
                "1 + 1 = 2 (left: 2 4 8)\n8 - 2 = 6 (left: 6 8)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n3 / 1 = 3 (left: 3)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 / 9 = 1.67 (left: 1.67)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n1 * 3 = 3 (left: 3)",
                "4 * 1 = 4 (left: 4 4 8)\nPossible next steps:",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 * 9 = 135 (left: 135)"
            ],
            "values": [
                0.003,
                0.0,
                0.001,
                0.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 1.1",
                "2 <- 3.1",
                "3 <- 2.7",
                "4 <- 3.4",
                "5 <- 3.4",
                "6 <- 2.9",
                "7 <- 2.7",
                "8 <- 2.6",
                "9 <- 3.3"
            ],
            "resampled_steps": [
                "4 * 1 = 4 (left: 4 4 8)",
                "1 * 4 = 4 (left: 4 4 8)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n3 / 1 = 3 (left: 3)",
                "4 * 1 = 4 (left: 4 4 8)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)",
                "8 / 4 = 2 (left: 1 2 4)\n2 + 6 = 8 (left: 3 9 8)",
                "4 * 1 = 4 (left: 4 4 8)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)"
            ]
        },
        "step_5": {
            "steps": [
                "4 * 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 8)",
                "1 * 4 = 4 (left: 4 4 8)\n3 + 3 = 6 (left: 6 9)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n3 / 1 = 3 (left: 3)\n3 + 8 = 11 (left: 8 11)",
                "4 * 1 = 4 (left: 4 4 8)\n1 + 3 = 4 (left: 4 5 7)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 * 9 = 135 (left: 135)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)",
                "8 / 4 = 2 (left: 1 2 4)\n2 + 6 = 8 (left: 3 9 8)\n3 * 9 = 27 (left: 8 27)",
                "4 * 1 = 4 (left: 4 4 8)\n8 + 4 = 12 (left: 4 12)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n1 - 3 = -2 (left: -2)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 - 8 = 8 (left: 8)"
            ],
            "values": [
                1.001,
                0.003,
                0.001,
                3.0,
                0.003,
                60.0,
                0.003,
                20.001,
                0.0,
                0.002
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 3.5",
                "2 <- 2.6",
                "3 <- 3.3",
                "4 <- 1.5",
                "5 <- 3.5",
                "6 <- 3.4",
                "7 <- 3.3",
                "8 <- 5.5",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)",
                "4 * 1 = 4 (left: 4 4 8)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "8 - 1 = 7 (left: 1 4 7)",
                "4 * 1 = 4 (left: 4 4 8)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)",
                "4 * 1 = 4 (left: 4 4 8)"
            ]
        },
        "step_6": {
            "steps": [
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 / 9 = 1.67 (left: 1.67)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 4 8)",
                "1 + 4 = 5 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n3 / 1 = 3 (left: 3)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)",
                "8 - 1 = 7 (left: 1 4 7)\n1 + 4 = 5 (left: 5 7)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 / 8 = 2 (left: 2 8)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n6 * 3 = 18 (left: 18 9 18)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                40.001,
                1.001,
                60.0,
                60.0,
                1.001,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 1.3",
                "2 <- 3.5",
                "3 <- 6.5",
                "4 <- 5.7",
                "5 <- 6.5",
                "6 <- 6.6",
                "7 <- 6.8",
                "8 <- 3.4",
                "9 <- 5.7"
            ],
            "resampled_steps": [
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)",
                "4 / 1 = 4 (left: 1 4 8)",
                "4 * 1 = 4 (left: 4 4 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "4 * 1 = 4 (left: 4 4 8)\n8 + 4 = 12 (left: 4 12)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)",
                "4 * 1 = 4 (left: 4 4 8)\n8 + 4 = 12 (left: 4 12)"
            ]
        },
        "step_7": {
            "steps": [
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 * 15 = 135 (left: 135)",
                "4 / 1 = 4 (left: 1 4 8)\n1 + 4 = 5 (left: 5 8)",
                "4 * 1 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 / 8 = 2 (left: 2)",
                "4 * 1 = 4 (left: 4 4 8)\n8 + 4 = 12 (left: 4 12)\n12 / 4 = 3 (left: 3)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n8 / 16 = 0.5 (left: 0.5 8)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (4 * 1) + (8 - 4) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) + (7 - 3) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 * 15 = 135 (left: 135)",
                "4 * 1 = 4 (left: 4 4 8)\n8 + 4 = 12 (left: 4 12)\n12 - 4 = 8 (left: 8 12)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                0.001,
                0.002,
                0.002,
                60.0,
                60.0,
                0.002,
                1.001
            ],
            "resampled": [
                "0 <- 6.3",
                "1 <- 3.4",
                "2 <- 7.6",
                "3 <- 6.8",
                "4 <- 7.6",
                "5 <- 6.5",
                "6 <- 3.0",
                "7 <- 6.5",
                "8 <- 7.6",
                "9 <- 6.8"
            ],
            "resampled_steps": [
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (4 * 1) + (8 - 4) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (4 * 1) + (8 - 4) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "1 * 4 = 4 (left: 4 4 8)\n27 - 3 = 24 (left: 9 24)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (4 * 1) + (8 - 4) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24"
            ]
        },
        "step_8": {
            "steps": [
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)\n24 / 8 = 3 (left: 3 24)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (4 * 1) + (8 - 4) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 7 4)\n3 * 4 = 12 (left: 7 12)\n7 + 12 = 19 (left: 19)\n19 + 4 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: (((3 + 4) * 3) + 4) + 1 = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24\nInput: 3 3 4 6\n\n3 * 4 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 / 3) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (4 * 1) + (8 - 4) = 24\nInput: 3 3 3 8\nSteps:\n3 * 3 = 9 (left: 9 3 8)\n9 - 3 = 6 (left: 6 8)\n6 * 4 = 24 (left: 24)\nAnswer: (3 * 3) * (8 - 3) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 / 8 = 2 (left: 2 8)",
                "1 * 4 = 4 (left: 4 4 8)\n27 - 3 = 24 (left: 9 24)\n24 / 9 = 2.6666666666666665 (left: 2.6666666666666665)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n8 - 16 = -8 (left: -8)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (4 * 1) + (8 - 4) = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 + 3 = 13 (left: 13)\n13 * 2 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: (((3 + 3) * 3) - 8) + (10 + 3) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 + 3 = 13 (left: 13)\n13 * 2 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: (((3 + 3) * 3) - 8) + 2 = 24"
            ],
            "values": [
                20.002,
                60.0,
                60.0,
                60.0,
                40.0,
                0.003,
                0.0,
                0.002,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 8.8",
                "1 <- 5.5",
                "2 <- 5.7",
                "3 <- 6.5",
                "4 <- 8.1",
                "5 <- 6.8",
                "6 <- 3.3",
                "7 <- 6.6",
                "8 <- 8.3",
                "9 <- 8.3"
            ],
            "resampled_steps": [
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (4 * 1) + (8 - 4) = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 + 3 = 13 (left: 13)\n13 * 2 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: (((3 + 3) * 3) - 8) + (10 + 3) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)",
                "4 * 1 = 4 (left: 4 4 8)\n8 + 4 = 12 (left: 4 12)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24\nInput: 3 3 4 6\n\n3 * 4 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 / 3) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24\nInput: 3 3 4 6\n\n3 * 4 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 / 3) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (4 * 1) + (8 - 4) = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 + 3 = 13 (left: 13)\n13 * 2 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: (((3 + 3) * 3) - 8) + (10 + 3) = 24\nInput: 2 3 6 8\nSteps:\n6 - 2 = 4 (left: 3 4 8)\n4 + 8 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 + (6 - 2)) + 8) * 3 = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 - 4) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n8 + 4 = 12 (left: 4 12)\n12 - 4 = 8 (left: 8 12)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 - 8 = 8 (left: 8)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24\nInput: 3 4 5 6\n\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (4 * 6) * (3 + 5) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 * 8 = 128 (left: 128)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (4 * 1) + (8 * 1) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24\nInput: 3 3 4 6\n\n3 * 4 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 / 3) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 4 = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24\nInput: 3 3 4 6\n\n3 * 4 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 / 3) = 24\nInput: 2 3 4 6\n\n3 * 4 = 12 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n4 * 6 = 24 (left: 24)\nAnswer: (3 * 4) * (6 - 2) = 24"
            ],
            "values": [
                60.0,
                60.0,
                2.001,
                0.001,
                60.0,
                60.0,
                0.003,
                60.0,
                40.0,
                60.0
            ],
            "resampled": [
                "0 <- 6.8",
                "1 <- 9.4",
                "2 <- 9.5",
                "3 <- 9.5",
                "4 <- 5.5",
                "5 <- 9.0",
                "6 <- 2.7",
                "7 <- 9.1",
                "8 <- 8.8",
                "9 <- 9.8"
            ],
            "resampled_steps": [
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24\nInput: 3 4 5 6\n\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (4 * 6) * (3 + 5) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24\nInput: 3 4 5 6\n\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (4 * 6) * (3 + 5) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (4 * 1) + (8 - 4) = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 + 3 = 13 (left: 13)\n13 * 2 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: (((3 + 3) * 3) - 8) + (10 + 3) = 24\nInput: 2 3 6 8\nSteps:\n6 - 2 = 4 (left: 3 4 8)\n4 + 8 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 + (6 - 2)) + 8) * 3 = 24",
                "4 * 1 = 4 (left: 4 4 8)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 - 4) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (4 * 1) + (8 - 4) = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 + 3 = 13 (left: 13)\n13 * 2 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: (((3 + 3) * 3) - 8) + (10 + 3) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24\nInput: 3 3 4 6\n\n3 * 4 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 / 3) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 4 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 9 8 9)\n9 + 9 = 18 (left: 18 9)\n18 / 9 = 2 (left: 2)\n2 * 8 = 16 (left: 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((3 * 3) + 9) * 8) - 1 = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24\nInput: 3 3 4 6\nSteps:\n3 + 6 = 9 (left: 3 4 9)\n3 * 4 = 12 (left: 12 9)\n12 - 9 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 + 6) * 4) - 9 = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24\nInput: 3 4 5 6\n\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (4 * 6) * (3 + 5) = 24\nInput: 2 3 6 8\n\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 8) + (2 * 6) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24\nInput: 3 4 5 6\n\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (4 * 6) * (3 + 5) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) + (6 - 2) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 4) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (4 * 1) + (8 - 4) = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 + 3 = 13 (left: 13)\n13 * 2 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: (((3 + 3) * 3) - 8) + (10 + 3) = 24\nInput: 2 3 6 8\nSteps:\n6 - 2 = 4 (left: 3 4 8)\n4 + 8 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 + (6 - 2)) + 8) * 3 = 24\nInput: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n6 - 3 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 5) + 7) * 2 = 24",
                "4 * 1 = 4 (left: 4 4 8)\n5 - 5 = 0 (left: 10)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 - 4) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) - (6 - 3) = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n15 + 9 = 24 (left: 24)\nAnswer: (4 * 1) + (8 - 4) = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 + 3 = 13 (left: 13)\n13 * 2 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: (((3 + 3) * 3) - 8) + (10 + 3) = 24\nInput: 2 3 5 6\nSteps:\n5 + 6 = 11 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 5 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((5 + 6) - 3) * 2 + 5 + 3 = 24",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 9)\n9 + 15 = 24 (left: 24)\nAnswer: (4 * 1) + (8 + 1) = 24\nInput: 3 3 4 6\n\n3 * 4 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 / 3) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 4 = 24\nInput: 2 2 6 8\nSteps:\n2 + 8 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 10 12)\n10 * 12 = 120 (left: 120)\n120 / 5 = 24 (left: 24)\nAnswer: ((2 + 8) * 2) / 5 = 24"
            ],
            "values": [
                60.0,
                40.0,
                60.0,
                40.0,
                40.001,
                60.0,
                0.003,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.5335179999999999
    },
    "12": {
        "input": "1 1 5 8",
        "step_1": {
            "steps": [
                "1 / 1 = 1 (left: 1 5 8)",
                "5 + 1 = 6 (left: 1 6 8)",
                "1 * 1 = 1 (left: 1 5 8)",
                "8 - 1 = 7 (left: 1 5 7)",
                "5 + 1 = 6 (left: 1 5 8)",
                "1 + 1 = 2 (left: 2 5 8)",
                "5 + 1 = 6 (left: 1 6 8)",
                "9 - 6 = 3 (left: 3 3 12)",
                "1 - 1 = 0 (left: 0 5 8)",
                "5 + 8 = 13 (left: 1 13)"
            ],
            "values": [
                2.001,
                3.0,
                1.0,
                1.001,
                2.0,
                1.002,
                1.002,
                3.0,
                2.001,
                1.001
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 1.8",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 1.7",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "9 - 6 = 3 (left: 3 3 12)",
                "",
                "",
                "",
                "",
                "1 - 1 = 0 (left: 0 5 8)",
                "",
                "",
                "9 - 6 = 3 (left: 3 3 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "9 - 6 = 3 (left: 3 3 12)\n12 / 3 = 4 (left: 4 3)",
                "1 + 1 = 2 (left: 2 5 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "1 * 1 = 1 (left: 1 5 8)",
                "1 * 1 = 1 (left: 1 5 8)",
                "1 - 1 = 0 (left: 0 5 8)\n9 - 7 = 2 (left: 3 2)",
                "1 * 1 = 1 (left: 1 5 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "9 - 6 = 3 (left: 3 3 12)\nInput: 5 3 8",
                "8 - 5 = 3 (left: 1 3 8)"
            ],
            "values": [
                40.0,
                2.001,
                60.0,
                2.001,
                3.0,
                0.002,
                2.001,
                60.0,
                0.003,
                41.0
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 2.0",
                "2 <- 2.9",
                "3 <- 2.2",
                "4 <- 2.2",
                "5 <- 2.9",
                "6 <- 2.9",
                "7 <- 2.4",
                "8 <- 1.0",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "5 + 1 = 6 (left: 1 6 8)",
                "9 - 6 = 3 (left: 3 3 12)\n12 / 3 = 4 (left: 4 3)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "1 * 1 = 1 (left: 1 5 8)",
                "1 / 1 = 1 (left: 1 5 8)",
                "8 - 5 = 3 (left: 1 3 8)"
            ]
        },
        "step_3": {
            "steps": [
                "5 + 1 = 6 (left: 1 6 8)\n9 / 3 = 3 (left: 3 5 7)",
                "9 - 6 = 3 (left: 3 3 12)\n12 / 3 = 4 (left: 4 3)\n4 * 3 = 12 (left: 12)",
                "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "8 - 5 = 3 (left: 1 3 8)\n8 / 3 = 2 (left: 1 2)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "1 * 1 = 1 (left: 1 5 8)\n1 * 5 = 5 (left: 5 8)",
                "1 / 1 = 1 (left: 1 5 8)\n5 - 1 = 4 (left: 4 8)",
                "8 - 5 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)"
            ],
            "values": [
                3.0,
                0.002,
                0.003,
                0.003,
                60.0,
                0.001,
                0.003,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 2.0",
                "2 <- 2.9",
                "3 <- INIT",
                "4 <- 2.7",
                "5 <- 1.0",
                "6 <- 2.7",
                "7 <- 3.4",
                "8 <- 2.9",
                "9 <- 2.6"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)",
                "9 - 6 = 3 (left: 3 3 12)\n12 / 3 = 4 (left: 4 3)",
                "8 - 5 = 3 (left: 1 3 8)",
                "",
                "8 - 5 = 3 (left: 1 3 8)",
                "1 / 1 = 1 (left: 1 5 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "1 * 1 = 1 (left: 1 5 8)"
            ]
        },
        "step_4": {
            "steps": [
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "9 - 6 = 3 (left: 3 3 12)\n12 / 3 = 4 (left: 4 3)\n4 - 3 = 1 (left: 1)",
                "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)",
                "1 * 1 = 1 (left: 1 5 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "1 / 1 = 1 (left: 1 5 8)\n1 * 5 = 5 (left: 5 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "8 - 5 = 3 (left: 1 3 8)\n10 * 15 = 150 (left: 5 150)",
                "1 * 1 = 1 (left: 1 5 8)\n5 - 1 = 4 (left: 4 8)"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                3.0,
                0.002,
                0.002,
                60.0,
                0.002,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 3.4",
                "2 <- 4.0",
                "3 <- 4.0",
                "4 <- 3.4",
                "5 <- 4.2",
                "6 <- 4.2",
                "7 <- 4.6",
                "8 <- 3.4",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)"
            ]
        },
        "step_5": {
            "steps": [
                "8 - 5 = 3 (left: 1 3 8)\n8 / 3 = 2.67 (left: 2.67)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 - 8 = -5 (left: -5)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (8 - 5)) * 3 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "8 - 5 = 3 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11) ",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\nPossible next steps:",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "8 - 5 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 7 3)"
            ],
            "values": [
                0.003,
                0.001,
                60.0,
                0.003,
                40.0,
                0.001,
                0.003,
                0.003,
                0.002,
                1.0
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 2.2",
                "2 <- 5.2",
                "3 <- 2.7",
                "4 <- 4.6",
                "5 <- 4.0",
                "6 <- 4.0",
                "7 <- 4.0",
                "8 <- 2.9",
                "9 <- 5.4"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)"
            ]
        },
        "step_6": {
            "steps": [
                "8 - 5 = 3 (left: 1 3 8)\n4 * 9 = 36 (left: 5 7 36)",
                "8 - 5 = 3 (left: 1 3 8)\n3 / 1 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 - 3 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)\nAnswer: (3 + 5) * (4 - 3) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n15 - 10 = 5 (left: 5 15)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24"
            ],
            "values": [
                1.002,
                41.0,
                60.0,
                0.003,
                40.0,
                60.0,
                60.0,
                60.0,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 6.9",
                "2 <- 6.7",
                "3 <- 6.6",
                "4 <- 2.2",
                "5 <- 2.2",
                "6 <- 3.4",
                "7 <- 6.2",
                "8 <- 5.2",
                "9 <- 4.6"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 - 3 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)\nAnswer: (3 + 5) * (4 - 3) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)"
            ]
        },
        "step_7": {
            "steps": [
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 - 3 = 4 (left: 4 15)\n4 * 15 = 60 (left: 60)\n60 / 3 = 20 (left: 20)\n20 - 7 = 13 (left: 13)\n13 + 15 = 28 (left: 28)\n28 - 3 = 25 (left: 25)\n25 + 7 = 32 (left: 32)\n32 - 9 = 23 (left: 23)\n23 + 6 = 29 (left: 29)\n29 + 15 = 44 (left: 44)\n44 - 20 = 24 (left: 24)\nAnswer: (((3 + 6) + 9) + 7) * ((15 * 4) / 3) - 7 + 13 + 25 + 23 + 6 + 15 + 7 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 4 5 6\nSteps:\n3 + 5 = 8 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 5) * (6 - 4)) + 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n6 - 3 = 3 (left: 3 27)\n3 * 27 = 81 (left: 81)\nAnswer: (3 * 9) - (6 - 3) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n3 * 13 = 39 (left: 39)\nAnswer: (3 * 7) - (8 - 3) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)",
                "8 - 5 = 3 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 - 3 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)\nAnswer: (3 + 5) * (4 - 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (2 * (3 + 5)) + 7 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n17 - 3 = 14 (left: 14)\nAnswer: ((3 * 7) - 4) - 3 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                0.003,
                0.003,
                60.0,
                60.0,
                60.0,
                0.001
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 7.3",
                "2 <- 6.7",
                "3 <- 7.1",
                "4 <- 2.7",
                "5 <- 7.1",
                "6 <- 2.0",
                "7 <- 7.7",
                "8 <- 6.5",
                "9 <- 7.0"
            ],
            "resampled_steps": [
                "5 + 1 = 6 (left: 1 5 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n3 * 13 = 39 (left: 39)\nAnswer: (3 * 7) - (8 - 3) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 4 5 6\nSteps:\n3 + 5 = 8 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 5) * (6 - 4)) + 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 4 5 6\nSteps:\n3 + 5 = 8 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 5) * (6 - 4)) + 8 = 24",
                "9 - 6 = 3 (left: 3 3 12)\n12 / 3 = 4 (left: 4 3)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 - 3 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)\nAnswer: (3 + 5) * (4 - 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (2 * (3 + 5)) + 7 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 - 3 = 4 (left: 4 15)\n4 * 15 = 60 (left: 60)\n60 / 3 = 20 (left: 20)\n20 - 7 = 13 (left: 13)\n13 + 15 = 28 (left: 28)\n28 - 3 = 25 (left: 25)\n25 + 7 = 32 (left: 32)\n32 - 9 = 23 (left: 23)\n23 + 6 = 29 (left: 29)\n29 + 15 = 44 (left: 44)\n44 - 20 = 24 (left: 24)\nAnswer: (((3 + 6) + 9) + 7) * ((15 * 4) / 3) - 7 + 13 + 25 + 23 + 6 + 15 + 7 = 24"
            ]
        },
        "step_8": {
            "steps": [
                "5 + 1 = 6 (left: 1 5 8)\n9 - 4 = 5 (left: 3 5 5)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n3 * 13 = 39 (left: 39)\nAnswer: (3 * 7) - (8 - 3) = 24\nInput: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n6 - 2 = 4 (left: 4 15)\n4 * 15 = 60 (left: 60)\nAnswer: (3 * 5) * (6 - 2) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 8 18)\n18 / 8 = 2.25 (left: 2.25)\n2.25 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 4 5 6\nSteps:\n3 + 5 = 8 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 5) * (6 - 4)) + 8 = 24\nInput: 2 3 6 7\nSteps:\n2 * 3 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n13 + 6 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((2 * 3) + 7) + 6 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 4 5 6\nSteps:\n3 + 5 = 8 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 5) * (6 - 4)) + 8 = 24\nInput: 2 3 6 7\nSteps:\n2 * 3 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n13 + 6 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: (((2 * 3) + 6) + 7) + 5 = 24",
                "9 - 6 = 3 (left: 3 3 12)\n12 / 3 = 4 (left: 4 3)\n4 + 3 = 7 (left: 7)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 - 3 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)\nAnswer: (3 + 5) * (4 - 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (2 * (3 + 5)) + 7 = 24\nInput: 2 3 6 7\nSteps:\n6 + 7 = 13 (left: 2 3 13)\n3 * 13 = 39 (left: 2 39)\n2 * 39 = 78 (left: 78)\nAnswer: (2 * (3 + 6)) + 7 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n3 * 17 = 51 (left: 51)\nAnswer: (3 * 7) - (4 - 3) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n7 - 3 = 4 (left: 4 15)\n4 * 15 = 60 (left: 60)\n60 / 3 = 20 (left: 20)\n20 - 7 = 13 (left: 13)\n13 + 15 = 28 (left: 28)\n28 - 3 = 25 (left: 25)\n25 + 7 = 32 (left: 32)\n32 - 9 = 23 (left: 23)\n23 + 6 = 29 (left: 29)\n29 + 15 = 44 (left: 44)\n44 - 20 = 24 (left: 24)\nAnswer: (((3 + 6) + 9) + 7) * ((15 * 4) / 3) - 7 + 13 + 25 + 23 + 6 + 15 + 7 = 24\nThere are multiple ways to reach 24 with the given numbers. Here is one example:\n(((3 + 6) + 9) + 7) * ((15 * 4) / 3) - 7 + 13 + 25 + 23 + 6 + 15 + 7 = 24"
            ],
            "values": [
                3.0,
                60.0,
                40.0,
                40.0,
                60.0,
                60.0,
                0.002,
                60.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 6.9",
                "1 <- 4.6",
                "2 <- 6.6",
                "3 <- 7.1",
                "4 <- 8.5",
                "5 <- 8.2",
                "6 <- 5.2",
                "7 <- 7.3",
                "8 <- 8.8",
                "9 <- 7.8"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 4 5 6\nSteps:\n3 + 5 = 8 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 5) * (6 - 4)) + 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 4 5 6\nSteps:\n3 + 5 = 8 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 5) * (6 - 4)) + 8 = 24\nInput: 2 3 6 7\nSteps:\n2 * 3 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n13 + 6 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: (((2 * 3) + 6) + 7) + 5 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 8 18)\n18 / 8 = 2.25 (left: 2.25)\n2.25 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n3 * 13 = 39 (left: 39)\nAnswer: (3 * 7) - (8 - 3) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n3 * 17 = 51 (left: 51)\nAnswer: (3 * 7) - (4 - 3) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n17 - 3 = 14 (left: 14)\nAnswer: ((3 * 7) - 4) - 3 = 24"
            ]
        },
        "step_9": {
            "steps": [
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: ((3 * 4) + 7) * 4 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 4 5 6\nSteps:\n3 + 5 = 8 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 5) * (6 - 4)) + 8 = 24\nInput: 7 3 6 2\n\n6 * 2 = 12 (left: 7 3 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\n\nAnswer: ((7 * 6) - 3) / 2 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 4 5 6\nSteps:\n3 + 5 = 8 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 5) * (6 - 4)) + 8 = 24\nInput: 2 3 6 7\nSteps:\n2 * 3 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n13 + 6 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: (((2 * 3) + 6) + 7) + 5 = 24\nInput: 2 4 6 9\nSteps:\n6 - 4 = 2 (left: 2 9 2)\n2 * 2 = 4 (left: 9 4)\n9 * 4 = 36 (left: 36)\n36 / 9 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((2 * (6 - 4)) * 9) + 4 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 8 18)\n18 / 8 = 2.25 (left: 2.25)\n2.25 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24\nInput: 7 7 3 4\nSteps:\n7 + 7 = 14 (left: 3 4 14)\n3 * 4 = 12 (left: 12 14)\n12 + 14 = 26 (left: 26)\nAnswer: (7 + 7) * (3 * 4) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 8 18)\n18 / 8 = 2.25 (left: 2.25)\n2.25 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n3 * 13 = 39 (left: 39)\nAnswer: (3 * 7) - (8 - 3) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 / 2) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n3 * 17 = 51 (left: 51)\nAnswer: (3 * 7) - (4 - 3) = 24\nInput: 2 3 5 6\nSteps:\n2 * 6 = 12 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 * 6) * (5 - 3) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n17 - 3 = 14 (left: 14)\nAnswer: ((3 * 7) - 4) - 3 = 24\nInput: 2 3 5 9\nSteps:\n3 + 9 = 12 (left: 2 5 12)\n5 - 2 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 1.5 = 24 (left: 24)\nAnswer: ((3 + 9) - 2) * 12 / 1.5 = 24"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                40.0,
                60.0,
                60.0,
                40.0,
                60.0,
                40.0,
                20.0
            ],
            "resampled": [
                "0 <- 7.8",
                "1 <- 6.7",
                "2 <- 6.2",
                "3 <- 8.2",
                "4 <- 8.8",
                "5 <- 7.7",
                "6 <- 9.7",
                "7 <- 7.6",
                "8 <- 7.2",
                "9 <- 7.1"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n17 - 3 = 14 (left: 14)\nAnswer: ((3 * 7) - 4) - 3 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 - 3 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)\nAnswer: (3 + 5) * (4 - 3) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 8 18)\n18 / 8 = 2.25 (left: 2.25)\n2.25 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n3 * 17 = 51 (left: 51)\nAnswer: (3 * 7) - (4 - 3) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 - 3 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)\nAnswer: (3 + 5) * (4 - 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (2 * (3 + 5)) + 7 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n3 * 13 = 39 (left: 39)\nAnswer: (3 * 7) - (8 - 3) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 / 2) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n6 - 3 = 3 (left: 3 27)\n3 * 27 = 81 (left: 81)\nAnswer: (3 * 9) - (6 - 3) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 4 5 6\nSteps:\n3 + 5 = 8 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 5) * (6 - 4)) + 8 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n17 - 3 = 14 (left: 14)\nAnswer: ((3 * 7) - 4) - 3 = 24\nInput: 2 3 5 6\nSteps:\n3 * 6 = 18 (left: 2 5 18)\n18 - 5 = 13 (left: 2 13)\n13 * 2 = 26 (left: 26)\nAnswer: ((3 * 6) - 5) * 2 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n3 * 4 = 12 (left: 7 12)\n7 + 12 = 19 (left: 19)\n19 + 4 = 24 (left: 24)\nAnswer: ((3 + 4) * (3 * 4)) + 4 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 - 3 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)\nAnswer: (3 + 5) * (4 - 3) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 6 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 8 18)\n18 / 8 = 2.25 (left: 2.25)\n2.25 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) * 8 = 24\nInput: 2 3 4 6\nSteps:\n3 + 4 = 7 (left: 2 6 7)\n2 * 7 = 14 (left: 6 14)\n6 * 14 = 84 (left: 84)\n84 / 4 = 21 (left: 21)\n21 - 6 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: (((2 + (3 + 4)) * 6) / 4) - 6 + 9 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n21 - 4 = 17 (left: 3 17)\n3 * 17 = 51 (left: 51)\nAnswer: (3 * 7) - (4 - 3) = 24\nInput: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n2 * 3 = 6 (left: 6 24)\n6 * 24 = 24 (left: 24)\nAnswer: 4 * (6 * 2) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 - 3 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)\nAnswer: (3 + 5) * (4 - 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\nAnswer: (2 * (3 + 5)) + 7 = 24\nInput: 2 4 6 9\nSteps:\n6 - 4 = 2 (left: 2 9 2)\n2 * 9 = 18 (left: 18 2)\n18 - 2 = 16 (left: 16)\nAnswer: ((2 * (4 - 6)) + 9) * 2 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n3 * 13 = 39 (left: 39)\nAnswer: (3 * 7) - (8 - 3) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 / 2) = 24\nInput: 2 4 6 8\nSteps:\n6 - 2 = 4 (left: 4 4 8)\n4 * 8 = 32 (left: 4 32)\n4 * 32 = 128 (left: 128)\nAnswer: (6 - 2) * (4 * 8) = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 1 * (1 + 5) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n6 - 3 = 3 (left: 3 27)\n3 * 27 = 81 (left: 81)\nAnswer: (3 * 9) - (6 - 3) = 24\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n8 - 6 = 2 (left: 2 3 8)\n2 * 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: ((2 * 4) - 6) * 8 = 24",
                "8 - 5 = 3 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (1 * (1 + 5)) * 8 = 24\nInput: 3 4 5 6\nSteps:\n3 + 5 = 8 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 5) * (6 - 4)) + 8 = 24\nInput: 2 3 6 7\nSteps:\n6 * 3 = 18 (left: 2 7 18)\n18 - 7 = 11 (left: 2 11)\n11 + 2 = 13 (left: 13)\n13 * 2 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: ((2 + 3) * 6) - 7 = 24"
            ],
            "values": [
                60.0,
                60.0,
                40.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                40.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.5900015000000001
    },
    "13": {
        "input": "4 6 11 11",
        "step_1": {
            "steps": [
                "11 - 6 = 5 (left: 4 5 11)",
                "6 + 11 = 17 (left: 4 17 11)",
                "11 - 6 = 5 (left: 4 5 11)",
                "11 + 4 = 15 (left: 6 11 15)",
                "6 * 11 = 66 (left: 4 66 11)",
                "11 + 4 = 15 (left: 6 11 15)",
                "6 * 11 = 66 (left: 4 66 11)",
                "7 / 3 = 2.3333 (left: 2.3333 9 15)",
                "11 + 4 = 15 (left: 6 11 15)",
                "11 / 4 = 2.75 (left: 2.75 11 11)"
            ],
            "values": [
                0.003,
                40.001,
                0.003,
                21.001,
                41.0,
                21.001,
                2.0,
                2.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 1.4",
                "2 <- INIT",
                "3 <- 1.7",
                "4 <- 1.4",
                "5 <- 1.1",
                "6 <- 1.1",
                "7 <- 1.1",
                "8 <- 1.4",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "11 + 4 = 15 (left: 6 11 15)",
                "6 * 11 = 66 (left: 4 66 11)",
                "",
                "7 / 3 = 2.3333 (left: 2.3333 9 15)",
                "6 * 11 = 66 (left: 4 66 11)",
                "6 + 11 = 17 (left: 4 17 11)",
                "6 + 11 = 17 (left: 4 17 11)",
                "6 + 11 = 17 (left: 4 17 11)",
                "6 * 11 = 66 (left: 4 66 11)",
                "11 + 4 = 15 (left: 6 11 15)"
            ]
        },
        "step_2": {
            "steps": [
                "11 + 4 = 15 (left: 6 11 15)\n6 + 11 = 17 (left: 17 15)",
                "6 * 11 = 66 (left: 4 66 11)\n11 + 4 = 15 (left: 15 66)",
                "4 + 6 = 10 (left: 10 11 11)",
                "7 / 3 = 2.3333 (left: 2.3333 9 15)\n2.3333 + 9 = 11.3333 (left: 11.3333 15)",
                "6 * 11 = 66 (left: 4 66 11)\n9 - 5 = 4 (left: 3 4 7)",
                "6 + 11 = 17 (left: 4 17 11)\n9 - 3 = 6 (left: 6 5 7)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)",
                "6 + 11 = 17 (left: 4 17 11)\n11 + 4 = 15 (left: 15)",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 11 264)",
                "11 + 4 = 15 (left: 6 11 15)\n11 - 6 = 5 (left: 5 15)"
            ],
            "values": [
                0.002,
                0.003,
                1.002,
                0.001,
                3.0,
                3.0,
                40.0,
                0.002,
                21.001,
                0.003
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 2.6",
                "2 <- 1.1",
                "3 <- 2.6",
                "4 <- 1.4",
                "5 <- 1.5",
                "6 <- 1.4",
                "7 <- INIT",
                "8 <- 1.1",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "6 * 11 = 66 (left: 4 66 11)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)",
                "6 + 11 = 17 (left: 4 17 11)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)",
                "6 * 11 = 66 (left: 4 66 11)",
                "11 + 4 = 15 (left: 6 11 15)",
                "6 * 11 = 66 (left: 4 66 11)",
                "",
                "6 + 11 = 17 (left: 4 17 11)",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 11 264)"
            ]
        },
        "step_3": {
            "steps": [
                "6 * 11 = 66 (left: 4 66 11)\n11 + 4 = 15 (left: 15 66)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "6 + 11 = 17 (left: 4 17 11)\n9 / 3 = 3 (left: 3 4 5)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "6 * 11 = 66 (left: 4 66 11)\n7 * 7 = 49 (left: 9 11 49)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)",
                "6 * 11 = 66 (left: 4 66 11)\n11 * 4 = 44 (left: 44 11)",
                "4 + 11 = 15 (left: 6 11 15)",
                "6 + 11 = 17 (left: 4 17 11)\n9 / 3 = 3 (left: 3 27 6)",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 11 264)\n11 + 264 = 275 (left: 275)"
            ],
            "values": [
                0.003,
                0.002,
                2.001,
                1.002,
                3.0,
                60.0,
                0.001,
                22.0,
                22.0,
                0.003
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 3.5",
                "2 <- 3.5",
                "3 <- 3.5",
                "4 <- 2.6",
                "5 <- 2.6",
                "6 <- 3.5",
                "7 <- 3.8",
                "8 <- 2.6",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)",
                "6 + 11 = 17 (left: 4 17 11)\n9 / 3 = 3 (left: 3 27 6)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)",
                "6 * 11 = 66 (left: 4 66 11)"
            ]
        },
        "step_4": {
            "steps": [
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n8 / 3 = 2.66667 (left: 2.66667 8)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n8 / 3 = 2.6666666666666665 (left: 2.67)",
                "6 + 11 = 17 (left: 4 17 11)\n9 / 3 = 3 (left: 3 27 6)\n27 - 6 = 21 (left: 21)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)\nPossible next steps:",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 264 11)"
            ],
            "values": [
                60.0,
                1.002,
                2.001,
                0.003,
                0.002,
                0.002,
                0.002,
                0.0,
                0.003,
                40.0
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 3.8",
                "2 <- 2.6",
                "3 <- 4.0",
                "4 <- 4.0",
                "5 <- INIT",
                "6 <- 3.5",
                "7 <- 1.1",
                "8 <- 1.5",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)",
                "6 + 11 = 17 (left: 4 17 11)\n9 / 3 = 3 (left: 3 27 6)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)",
                "6 + 11 = 17 (left: 4 17 11)",
                "11 + 4 = 15 (left: 6 11 15)",
                "11 + 4 = 15 (left: 6 11 15)"
            ]
        },
        "step_5": {
            "steps": [
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "6 + 11 = 17 (left: 4 17 11)\n9 / 3 = 3 (left: 3 27 6)\n3 * 27 = 81 (left: 6 81)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 3) = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24",
                "11 + 4 = 15 (left: 6 11 15)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n9 / 5 = 1.8 (left: 1.8)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6 11)",
                "11 + 4 = 15 (left: 6 11 15)\n11 - 15 = -4 (left: 6 -4)",
                "11 + 4 = 15 (left: 6 11 15)\nPossible next steps:"
            ],
            "values": [
                0.003,
                20.002,
                0.002,
                0.003,
                60.0,
                0.003,
                0.001,
                60.0,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 5.1",
                "1 <- 5.4",
                "2 <- 3.5",
                "3 <- 4.9",
                "4 <- 2.6",
                "5 <- 2.6",
                "6 <- 5.7",
                "7 <- 5.1",
                "8 <- INIT",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "6 + 11 = 17 (left: 4 17 11)\n9 / 3 = 3 (left: 3 27 6)\n3 * 27 = 81 (left: 6 81)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 264 11)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6 11)",
                "6 + 11 = 17 (left: 4 17 11)\n9 / 3 = 3 (left: 3 27 6)\n3 * 27 = 81 (left: 6 81)",
                "",
                "4 + 11 = 15 (left: 6 11 15)"
            ]
        },
        "step_6": {
            "steps": [
                "6 + 11 = 17 (left: 4 17 11)\n9 / 3 = 3 (left: 3 27 6)\n3 * 27 = 81 (left: 6 81)\n81 - 6 = 75 (left: 75)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 5 6 7\n\n7 - 3 = 4 (left: 4 5 6)\n4 * 6 = 24 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (7 - 3) * (4 * 6) = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n4 / 2 = 2 (left: 2)",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 264 11)\n264 - 11 = 253 (left: 253 11)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)\nPossible next steps:",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6 11)\n6 * 11 = 66 (left: 4 66)",
                "6 + 11 = 17 (left: 4 17 11)\n9 / 3 = 3 (left: 3 27 6)\n3 * 27 = 81 (left: 6 81)\n6 + 81 = 87 (left: 87)",
                "11 + 4 = 15 (left: 6 15 11)",
                "4 + 11 = 15 (left: 6 11 15)\n9 - 7 = 2 (left: 2 4 10)"
            ],
            "values": [
                0.003,
                60.0,
                0.003,
                20.0,
                0.003,
                0.0,
                0.002,
                0.001,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 4.9",
                "1 <- 6.3",
                "2 <- 6.3",
                "3 <- 6.3",
                "4 <- 5.7",
                "5 <- 3.7",
                "6 <- 2.6",
                "7 <- 3.5",
                "8 <- 1.1",
                "9 <- 5.4"
            ],
            "resampled_steps": [
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 264 11)",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 264 11)\n264 - 11 = 253 (left: 253 11)",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 264 11)\n264 - 11 = 253 (left: 253 11)",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 264 11)\n264 - 11 = 253 (left: 253 11)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6 11)",
                "4 + 11 = 15 (left: 6 11 15)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)",
                "6 + 11 = 17 (left: 4 17 11)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24"
            ]
        },
        "step_7": {
            "steps": [
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 264 11)\n5 * 7 = 35 (left: 7 35)",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 264 11)\n264 - 11 = 253 (left: 253 11)\n253 + 11 = 264 (left: 264)",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 264 11)\n264 - 11 = 253 (left: 253 11)\n253 * 11 = 2783 (left: 2783)",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 264 11)\n264 - 11 = 253 (left: 253 11)\n253 * 11 = 2783 (left: 2783)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6 11)\n6 * 4 = 24 (left: 24 11)",
                "4 + 11 = 15 (left: 6 11 15)\n18 / 3 = 6 (left: 6 6 6)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "6 + 11 = 17 (left: 4 17 11)\n17 + 11 = 28 (left: 4 28)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: (3 * 3) + (8 - 9) = 24"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                0.003,
                20.002,
                21.001,
                0.003,
                0.002,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 4.9",
                "2 <- 4.9",
                "3 <- 4.1",
                "4 <- 6.1",
                "5 <- 4.0",
                "6 <- 2.4",
                "7 <- 5.7",
                "8 <- 2.8",
                "9 <- 5.7"
            ],
            "resampled_steps": [
                "6 + 11 = 17 (left: 4 17 11)",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 264 11)",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 264 11)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 5 6 7\n\n7 - 3 = 4 (left: 4 5 6)\n4 * 6 = 24 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (7 - 3) * (4 * 6) = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "6 * 11 = 66 (left: 4 66 11)\n9 - 5 = 4 (left: 3 4 7)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6 11)",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 11 264)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6 11)"
            ]
        },
        "step_8": {
            "steps": [
                "6 + 11 = 17 (left: 4 17 11)\n9 + 3 = 12 (left: 6 12)",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 264 11)\nPossible next steps:",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 264 11)\n264 + 11 = 275 (left: 11 275)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\n10 / 5 = 2 (left: 2 10)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 5 6 7\n\n7 - 3 = 4 (left: 4 5 6)\n4 * 6 = 24 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (7 - 3) * (4 * 6) = 24\nInput: 2 3 4 5\nSteps:\n5 * 4 = 20 (left: 2 3 20)\n3 + 2 = 5 (left: 5 20)\n5 * 20 = 100 (left: 100)\nAnswer: (5 + 3 * 2) * 4 = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 3) = 24",
                "6 * 11 = 66 (left: 4 66 11)\n9 - 5 = 4 (left: 3 4 7)\nInput: 9 3 6",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6 11)\n3 + 5 = 8 (left: 7 8)",
                "6 * 11 = 66 (left: 4 66 11)\n4 * 66 = 264 (left: 11 264)\n11 + 264 = 275 (left: 275)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6 11)\nPossible next steps:"
            ],
            "values": [
                0.003,
                0.003,
                20.0,
                0.0,
                60.0,
                20.002,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 7.9",
                "1 <- 1.1",
                "2 <- 7.9",
                "3 <- 5.1",
                "4 <- 3.5",
                "5 <- 8.4",
                "6 <- 8.5",
                "7 <- 1.7",
                "8 <- 7.9",
                "9 <- 4.0"
            ],
            "resampled_steps": [
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: (3 * 3) + (8 - 9) = 24",
                "6 + 11 = 17 (left: 4 17 11)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: (3 * 3) + (8 - 9) = 24",
                "6 + 11 = 17 (left: 4 17 11)\n9 / 3 = 3 (left: 3 27 6)\n3 * 27 = 81 (left: 6 81)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 5 6 7\n\n7 - 3 = 4 (left: 4 5 6)\n4 * 6 = 24 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (7 - 3) * (4 * 6) = 24\nInput: 2 3 4 5\nSteps:\n5 * 4 = 20 (left: 2 3 20)\n3 + 2 = 5 (left: 5 20)\n5 * 20 = 100 (left: 100)\nAnswer: (5 + 3 * 2) * 4 = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 3) = 24",
                "7 / 3 = 2.3333 (left: 2.3333 9 15)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: (3 * 3) + (8 - 9) = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)"
            ]
        },
        "step_9": {
            "steps": [
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: (3 * 3) + (8 - 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\nAnswer: (2 * 6) + (4 - 3) = 24",
                "6 + 11 = 17 (left: 4 17 11)\n11 / 4 = 2.75 (left: 2.75 11)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: (3 * 3) + (8 - 9) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 * 12 = 24 (left: 24)\nAnswer: (2 + 6) * (3 * 4) = 24",
                "6 + 11 = 17 (left: 4 17 11)\n9 / 3 = 3 (left: 3 27 6)\n3 * 27 = 81 (left: 6 81)\n6 * 81 = 486 (left: 486)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 5 6 7\n\n7 - 3 = 4 (left: 4 5 6)\n4 * 6 = 24 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (7 - 3) * (4 * 6) = 24\nInput: 2 3 4 5\nSteps:\n5 * 4 = 20 (left: 2 3 20)\n3 + 2 = 5 (left: 5 20)\n5 * 20 = 100 (left: 100)\nAnswer: (5 + 3 * 2) * 4 = 24\nInput: 2 6 8 9\nSteps:\n8 - 2 = 6 (left: 6 9 6)\n6 * 9 = 54 (left: 54 6)\n54 / 6 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((8 - 2) * 9) + 6 = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 3) = 24\nInput: 3 5 7 8\nSteps:\n3 * 8 = 24 (left: 5 7 24)\n7 - 5 = 2 (left: 2 24)\n2 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (7 - 5) = 24",
                "7 / 3 = 2.3333 (left: 2.3333 9 15)\n4 * 7 = 28 (left: 13 20 28)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: (3 * 3) + (8 - 9) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\nAnswer: (3 * 8) - 12 = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24"
            ],
            "values": [
                60.0,
                1.002,
                40.0,
                20.002,
                60.0,
                60.0,
                60.0,
                1.002,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 3.7",
                "1 <- 1.1",
                "2 <- 9.6",
                "3 <- 7.9",
                "4 <- 9.4",
                "5 <- 9.5",
                "6 <- 9.4",
                "7 <- 4.0",
                "8 <- 9.0",
                "9 <- 9.6"
            ],
            "resampled_steps": [
                "4 + 11 = 15 (left: 6 11 15)",
                "6 + 11 = 17 (left: 4 17 11)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 3) = 24\nInput: 3 5 7 8\nSteps:\n3 * 8 = 24 (left: 5 7 24)\n7 - 5 = 2 (left: 2 24)\n2 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (7 - 5) = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: (3 * 3) + (8 - 9) = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 5 6 7\n\n7 - 3 = 4 (left: 4 5 6)\n4 * 6 = 24 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (7 - 3) * (4 * 6) = 24\nInput: 2 3 4 5\nSteps:\n5 * 4 = 20 (left: 2 3 20)\n3 + 2 = 5 (left: 5 20)\n5 * 20 = 100 (left: 100)\nAnswer: (5 + 3 * 2) * 4 = 24\nInput: 2 6 8 9\nSteps:\n8 - 2 = 6 (left: 6 9 6)\n6 * 9 = 54 (left: 54 6)\n54 / 6 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((8 - 2) * 9) + 6 = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: (3 * 3) + (8 - 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\nAnswer: (2 * 6) + (4 - 3) = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 3) = 24\nInput: 3 5 7 8\nSteps:\n3 * 8 = 24 (left: 5 7 24)\n7 - 5 = 2 (left: 2 24)\n2 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (7 - 5) = 24"
            ]
        },
        "step_10": {
            "steps": [
                "4 + 11 = 15 (left: 6 11 15)\n6 / 11 = 0.55 (left: 0.55 15)",
                "6 + 11 = 17 (left: 4 17 11)\n17 - 11 = 6 (left: 4 6)",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 3) = 24\nInput: 3 5 7 8\nSteps:\n3 * 8 = 24 (left: 5 7 24)\n7 - 5 = 2 (left: 2 24)\n2 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (7 - 5) = 24\nInput: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 - 2 = 1 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (2 * 3) * (4 - 1) = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: (3 * 3) + (8 - 9) = 24\nThere seems to be a mistake in the steps provided. Let's correct it:\n\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)\n10 * 9 = 90 (left: 90)\n\nThe correct expression to get 24 is: (3 * 3) + (8 + 9) = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 5 6 7\n\n7 - 3 = 4 (left: 4 5 6)\n4 * 6 = 24 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (7 - 3) * (4 * 6) = 24\nInput: 2 3 4 5\nSteps:\n5 * 4 = 20 (left: 2 3 20)\n3 + 2 = 5 (left: 5 20)\n5 * 20 = 100 (left: 100)\nAnswer: (5 + 3 * 2) * 4 = 24\nInput: 2 6 8 9\nSteps:\n8 - 2 = 6 (left: 6 9 6)\n6 * 9 = 54 (left: 54 6)\n54 / 6 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((8 - 2) * 9) + 6 = 24\nInput: 3 4 7 8\nSteps:\n7 - 3 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 24)\nAnswer: (7 - 3) * (4 * 4) = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 3) = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 11) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\nAnswer: (3 * 3) + (8 - 9) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\nAnswer: (2 * 6) + (4 - 3) = 24\nInput: 1 3 7 8\nSteps:\n1 * 8 = 8 (left: 3 7 8)\n7 - 3 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\nAnswer: (1 * 8) - (7 - 3) = 24",
                "11 + 4 = 15 (left: 6 11 15)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (11 + 4) * (6 - 3) = 24\nInput: 3 5 7 8\nSteps:\n3 * 8 = 24 (left: 5 7 24)\n7 - 5 = 2 (left: 2 24)\n2 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (7 - 5) = 24\nInput: 2 3 5 9\nSteps:\n2 * 9 = 18 (left: 3 5 18)\n5 - 3 = 2 (left: 2 18)\n2 * 18 = 36 (left: 36)\nAnswer: (2 * 9) - (5 - 3) = 24"
            ],
            "values": [
                0.0,
                60.0,
                40.0,
                60.0,
                40.001,
                40.0,
                0.003,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.647613
    },
    "14": {
        "input": "1 1 3 12",
        "step_1": {
            "steps": [
                "3 + 1 = 4 (left: 1 4 12)",
                "1 * 1 = 1 (left: 1 3 12)",
                "12 / 1 = 12 (left: 1 3 12)",
                "12 - 3 = 9 (left: 1 9 12)",
                "1 + 1 = 2 (left: 2 3 12)",
                "12 - 3 = 9 (left: 1 1 9)",
                "1 * 1 = 1 (left: 1 3 12)",
                "12 - 1 = 11 (left: 1 3 11)",
                "1 + 1 = 2 (left: 2 3 12)",
                "12 / 3 = 4 (left: 1 4 12)"
            ],
            "values": [
                0.003,
                60.0,
                41.0,
                1.002,
                1.002,
                0.002,
                60.0,
                20.002,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 1.1",
                "2 <- 1.2",
                "3 <- 1.1",
                "4 <- 1.6",
                "5 <- 1.2",
                "6 <- 1.1",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 3 12)",
                "1 * 1 = 1 (left: 1 3 12)",
                "12 / 1 = 12 (left: 1 3 12)",
                "1 * 1 = 1 (left: 1 3 12)",
                "1 * 1 = 1 (left: 1 3 12)",
                "12 / 1 = 12 (left: 1 3 12)",
                "1 * 1 = 1 (left: 1 3 12)",
                "",
                "",
                "1 * 1 = 1 (left: 1 3 12)"
            ]
        },
        "step_2": {
            "steps": [
                "1 * 1 = 1 (left: 1 3 12)\n1 + 3 = 4 (left: 4 12)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 / 1 = 12 (left: 1 3 12)\n5 + 5 = 10 (left: 10 7)",
                "1 * 1 = 1 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)",
                "1 * 1 = 1 (left: 1 3 12)\n1 * 3 = 3 (left: 3 12)",
                "12 / 1 = 12 (left: 1 3 12)\n1 * 3 = 3 (left: 3 12)",
                "1 * 1 = 1 (left: 1 3 12)\n8 / 2 = 4 (left: 6 4)",
                "12 / 1 = 12 (left: 1 3 12)",
                "1 + 1 = 2 (left: 2 3 12)",
                "1 * 1 = 1 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)"
            ],
            "values": [
                20.002,
                60.0,
                1.002,
                60.0,
                0.003,
                0.003,
                60.0,
                60.0,
                1.002,
                0.001
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 2.1",
                "2 <- 1.2",
                "3 <- 2.1",
                "4 <- 2.6",
                "5 <- INIT",
                "6 <- 2.3",
                "7 <- 2.1",
                "8 <- INIT",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 3 12)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 / 1 = 12 (left: 1 3 12)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "1 * 1 = 1 (left: 1 3 12)\n8 / 2 = 4 (left: 6 4)",
                "",
                "1 * 1 = 1 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "",
                "1 * 1 = 1 (left: 1 3 12)\n1 + 3 = 4 (left: 4 12)"
            ]
        },
        "step_3": {
            "steps": [
                "1 * 1 = 1 (left: 1 3 12)\nInput: 4 6 24",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 + 36 = 37 (left: 37)",
                "12 / 1 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 + 36 = 37",
                "1 * 1 = 1 (left: 1 3 12)\n8 / 2 = 4 (left: 6 4)\n6 + 4 = 10 (left: 10)",
                "3 + 1 = 4 (left: 1 4 12)",
                "1 * 1 = 1 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)\n1 + 9 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 - 1 = 35 (left: 35)",
                "1 * 1 = 1 (left: 1 3 12)",
                "1 * 1 = 1 (left: 1 3 12)\n1 + 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8) "
            ],
            "values": [
                0.003,
                0.003,
                60.0,
                0.003,
                0.002,
                1.002,
                0.001,
                0.003,
                21.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 2.3",
                "2 <- 2.3",
                "3 <- 2.7",
                "4 <- 1.7",
                "5 <- 2.7",
                "6 <- 3.2",
                "7 <- 2.1",
                "8 <- 2.3",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)",
                "1 * 1 = 1 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)",
                "1 * 1 = 1 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)",
                "12 / 1 = 12 (left: 1 3 12)",
                "12 - 1 = 11 (left: 1 3 11)",
                "12 / 1 = 12 (left: 1 3 12)",
                "12 / 1 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "1 * 1 = 1 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)",
                "12 / 1 = 12 (left: 1 3 12)"
            ]
        },
        "step_4": {
            "steps": [
                "1 * 1 = 1 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)\n1 + 9 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)\n1 + 9 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)\n1 + 9 = 10 (left: 9)",
                "12 / 1 = 12 (left: 1 3 12)\n7 - 5 = 2 (left: 2 9 13)",
                "12 - 1 = 11 (left: 1 3 11)\n3 - 1 = 2 (left: 2 11)",
                "12 / 1 = 12 (left: 1 3 12)\n1 * 3 = 3 (left: 3 12)",
                "12 / 1 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "1 * 1 = 1 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)\n9 - 1 = 8 (left: 8)",
                "12 / 1 = 12 (left: 1 3 12)\nPossible next steps:"
            ],
            "values": [
                0.002,
                0.002,
                0.002,
                0.003,
                1.001,
                20.002,
                0.001,
                40.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.7",
                "1 <- 1.2",
                "2 <- 2.3",
                "3 <- 3.2",
                "4 <- 2.1",
                "5 <- 2.3",
                "6 <- 2.0",
                "7 <- 2.1",
                "8 <- 2.3",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "12 / 1 = 12 (left: 1 3 12)",
                "1 * 1 = 1 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)",
                "12 / 1 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "1 * 1 = 1 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)",
                "1 * 1 = 1 (left: 1 3 12)\n1 + 3 = 4 (left: 4 12)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "1 * 1 = 1 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)",
                ""
            ]
        },
        "step_5": {
            "steps": [
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nThere are no more possible next steps as there is only one number left.",
                "12 / 1 = 12 (left: 1 3 12)\n1 + 3 = 4 (left: 4 12)",
                "1 * 1 = 1 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)\n9 / 1 = 9 (left: 9)",
                "12 / 1 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 + 36 = 37 (left: 37)",
                "1 * 1 = 1 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)\n1 + 9 = 10",
                "1 * 1 = 1 (left: 1 3 12)\n1 + 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8 12)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "1 * 1 = 1 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)\n1 * 9 = 9 (left: 9)",
                "3 + 1 = 4 (left: 1 4 12)"
            ],
            "values": [
                0.003,
                2.001,
                0.001,
                0.003,
                0.002,
                0.003,
                1.002,
                60.0,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 5.7",
                "1 <- 5.7",
                "2 <- 5.7",
                "3 <- 2.6",
                "4 <- 2.7",
                "5 <- 2.1",
                "6 <- 1.7",
                "7 <- 2.1",
                "8 <- 3.2",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "1 * 1 = 1 (left: 1 3 12)\n8 / 2 = 4 (left: 6 4)",
                "12 / 1 = 12 (left: 1 3 12)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 - 1 = 11 (left: 1 3 11)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 / 1 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)",
                "1 * 1 = 1 (left: 1 3 12)"
            ]
        },
        "step_6": {
            "steps": [
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\n36 + 2 = 38",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\n36 / 2 = 18",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\n36 + 8 = 44",
                "1 * 1 = 1 (left: 1 3 12)\n8 / 2 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "12 / 1 = 12 (left: 1 3 12)\n5 / 10 = 0.5 (left: 5 15)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "12 - 1 = 11 (left: 1 3 11)\n4 * 6 = 24 (left: 7 3 24)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 - 1 = 35 (left: 35)",
                "12 / 1 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 3 12)\n12 - 1 = 11 (left: 3 11)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                60.0,
                0.003,
                60.0,
                22.0,
                0.003,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 6.8",
                "1 <- 6.3",
                "2 <- 2.1",
                "3 <- 6.5",
                "4 <- 4.4",
                "5 <- 6.8",
                "6 <- 6.6",
                "7 <- 6.5",
                "8 <- 6.6",
                "9 <- 5.7"
            ],
            "resampled_steps": [
                "12 / 1 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 3 12)\n8 / 2 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "12 - 1 = 11 (left: 1 3 11)\n3 - 1 = 2 (left: 2 11)",
                "12 / 1 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 1 = 11 (left: 1 3 11)\n4 * 6 = 24 (left: 7 3 24)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "12 - 1 = 11 (left: 1 3 11)\n4 * 6 = 24 (left: 7 3 24)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)"
            ]
        },
        "step_7": {
            "steps": [
                "12 / 1 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 1) * (3 - 1) = 24",
                "1 * 1 = 1 (left: 1 3 12)\n8 / 2 = 4 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (1 * 1) * (3 + 12) = 24",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 + 36 = 37 (left: 37)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nNo possible next steps with only one number provided.",
                "12 - 1 = 11 (left: 1 3 11)\n3 - 1 = 2 (left: 2 11)\n9 * 5 = 45 (left: 7 45)",
                "12 / 1 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 1) * (3 - 1) = 24",
                "12 - 1 = 11 (left: 1 3 11)\n4 * 6 = 24 (left: 7 3 24)\n7 + 3 = 10 (left: 10 24)",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nThere is only one number, so there are no possible next steps.",
                "12 - 1 = 11 (left: 1 3 11)\n4 * 6 = 24 (left: 7 3 24)\nInput: 4 5 20",
                "1 * 1 = 1 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\nThere is only one number, so there are no possible next steps."
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.6830625000000001
    },
    "15": {
        "input": "2 2 2 12",
        "step_1": {
            "steps": [
                "2 / 2 = 1 (left: 1 2 12)",
                "Input: 2 2 2 10",
                "12 - 2 = 10 (left: 2 2 10)",
                "2 + 2 = 4 (left: 2 4 12)",
                "2 * 2 = 4 (left: 4 2 12)",
                "2 * 2 = 4 (left: 4 2 12)",
                "12 - 2 = 10 (left: 2 2 10)",
                "2 * 2 = 4 (left: 4 2 12)",
                "2 * 2 = 4 (left: 4 2 12)",
                "12 / 2 = 6 (left: 2 2 6)"
            ],
            "values": [
                60.0,
                0.003,
                3.0,
                1.002,
                3.0,
                3.0,
                3.0,
                0.002,
                1.002,
                60.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.0",
                "2 <- 1.9",
                "3 <- 1.0",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 1.0",
                "7 <- 1.0",
                "8 <- 1.9",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "",
                "2 / 2 = 1 (left: 1 2 12)",
                "12 / 2 = 6 (left: 2 2 6)",
                "2 / 2 = 1 (left: 1 2 12)",
                "",
                "",
                "2 / 2 = 1 (left: 1 2 12)",
                "2 / 2 = 1 (left: 1 2 12)",
                "12 / 2 = 6 (left: 2 2 6)",
                "12 / 2 = 6 (left: 2 2 6)"
            ]
        },
        "step_2": {
            "steps": [
                "2 / 2 = 1 (left: 1 2 12)",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "12 / 2 = 6 (left: 2 2 6)\n6 - 2 = 4 (left: 2 4)",
                "2 / 2 = 1 (left: 1 2 12)\n10 - 2 = 8 (left: 2 8 10)",
                "2 / 2 = 1 (left: 1 2 12)",
                "2 + 2 = 4 (left: 2 4 12)",
                "2 / 2 = 1 (left: 1 2 12)\n4 * 5 = 20 (left: 20)",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "12 / 2 = 6 (left: 2 2 6)\n3 + 3 = 6 (left: 4 6)",
                "12 / 2 = 6 (left: 2 2 6)\n6 - 2 = 4 (left: 2 4)"
            ],
            "values": [
                60.0,
                60.0,
                0.003,
                2.001,
                41.0,
                2.001,
                0.002,
                60.0,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 2.8",
                "2 <- 2.0",
                "3 <- 1.0",
                "4 <- 2.8",
                "5 <- 1.9",
                "6 <- 2.0",
                "7 <- 2.4",
                "8 <- INIT",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "12 / 2 = 6 (left: 2 2 6)\n3 + 3 = 6 (left: 4 6)",
                "2 / 2 = 1 (left: 1 2 12)",
                "2 / 2 = 1 (left: 1 2 12)",
                "12 / 2 = 6 (left: 2 2 6)\n3 + 3 = 6 (left: 4 6)",
                "12 / 2 = 6 (left: 2 2 6)",
                "2 / 2 = 1 (left: 1 2 12)",
                "2 / 2 = 1 (left: 1 2 12)",
                "",
                "12 / 2 = 6 (left: 2 2 6)"
            ]
        },
        "step_3": {
            "steps": [
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "12 / 2 = 6 (left: 2 2 6)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "12 / 2 = 6 (left: 2 2 6)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "12 / 2 = 6 (left: 2 2 6)\nPossible next steps:",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "2 / 2 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "2 * 2 = 4 (left: 4 2 12)",
                "12 / 2 = 6 (left: 2 2 6)\n6 / 2 = 3 (left: 3 2)"
            ],
            "values": [
                0.002,
                60.0,
                40.0,
                60.0,
                60.0,
                0.003,
                60.0,
                60.0,
                2.001,
                0.001
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 2.7",
                "2 <- 1.9",
                "3 <- 2.1",
                "4 <- 3.2",
                "5 <- 2.8",
                "6 <- 3.4",
                "7 <- 3.7",
                "8 <- 2.7",
                "9 <- 3.2"
            ],
            "resampled_steps": [
                "12 / 2 = 6 (left: 2 2 6)",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "12 / 2 = 6 (left: 2 2 6)",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "12 / 2 = 6 (left: 2 2 6)\n3 + 3 = 6 (left: 4 6)",
                "12 / 2 = 6 (left: 2 2 6)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "2 / 2 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)"
            ]
        },
        "step_4": {
            "steps": [
                "12 / 2 = 6 (left: 2 2 6)\nPossible next steps:",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "12 / 2 = 6 (left: 2 2 6)\n4 * 5 = 20 (left: 6 20)",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7",
                "12 / 2 = 6 (left: 2 2 6)\n3 + 3 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "12 / 2 = 6 (left: 2 2 6)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 + 2) * (2 + 12) = 24",
                "2 / 2 = 1 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)"
            ],
            "values": [
                0.003,
                0.001,
                1.002,
                0.003,
                0.003,
                0.0,
                40.001,
                0.003,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 3.6",
                "1 <- 3.6",
                "2 <- 3.4",
                "3 <- 4.6",
                "4 <- 2.7",
                "5 <- 3.2",
                "6 <- 3.1",
                "7 <- 3.2",
                "8 <- 2.0",
                "9 <- 3.1"
            ],
            "resampled_steps": [
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "12 / 2 = 6 (left: 2 2 6)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "12 / 2 = 6 (left: 2 2 6)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 + 2) * (2 + 12) = 24",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "12 / 2 = 6 (left: 2 2 6)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "2 / 2 = 1 (left: 1 2 12)",
                "12 / 2 = 6 (left: 2 2 6)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ]
        },
        "step_5": {
            "steps": [
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "12 / 2 = 6 (left: 2 2 6)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 2) * (12 / 2) = 24",
                "12 / 2 = 6 (left: 2 2 6)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 + 2) * (2 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 + 8 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n3 * 11 = 33 (left: 33)\n33 - 9 = 24 (left: 24)\nAnswer: ((3 + 8) - 3) * 6 = 24",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "12 / 2 = 6 (left: 2 2 6)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 + 2) * (2 * 12) = 24",
                "2 / 2 = 1 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "2 / 2 = 1 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "12 / 2 = 6 (left: 2 2 6)\n3 + 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 2) * (12 / 2) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ],
        "cost": 0.707101
    },
    "16": {
        "input": "1 1 4 12",
        "step_1": {
            "steps": [
                "1 + 1 = 2 (left: 2 4 12)",
                "1 * 1 = 1 (left: 1 4 12)",
                "1 * 1 = 1 (left: 1 4 12)",
                "12 - 1 = 11 (left: 1 4 11)",
                "1 + 1 = 2 (left: 2 4 12)",
                "4 * 1 = 4 (left: 1 4 12)",
                "4 * 1 = 4 (left: 1 4 12)",
                "1 * 1 = 1 (left: 1 4 12)",
                "1 * 1 = 1 (left: 1 4 12)",
                "12 - 1 = 11 (left: 1 4 11)"
            ],
            "values": [
                1.001,
                0.003,
                0.003,
                1.002,
                2.001,
                0.003,
                0.003,
                0.003,
                1.002,
                22.0
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.9",
                "5 <- 1.9",
                "6 <- 1.4",
                "7 <- INIT",
                "8 <- 1.8",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "12 - 1 = 11 (left: 1 4 11)",
                "",
                "",
                "",
                "12 - 1 = 11 (left: 1 4 11)",
                "12 - 1 = 11 (left: 1 4 11)",
                "1 + 1 = 2 (left: 2 4 12)",
                "",
                "1 * 1 = 1 (left: 1 4 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "12 - 1 = 11 (left: 1 4 11)\nPossible next steps:",
                "12 - 1 = 11 (left: 1 4 11)",
                "4 + 1 = 5 (left: 1 5 12)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 - 1 = 11 (left: 1 4 11)\n11 / 4 = 2.75 (left: 1 2.75)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)",
                "1 + 1 = 2 (left: 2 4 12)\n2 + 4 = 6 (left: 6 12)",
                "1 * 1 = 1 (left: 1 4 12)",
                "1 * 1 = 1 (left: 1 4 12)\n6 / 3 = 2 (left: 2 6 12)",
                "12 - 1 = 11 (left: 1 4 11)"
            ],
            "values": [
                0.003,
                2.001,
                2.001,
                60.0,
                3.0,
                60.0,
                0.003,
                0.003,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.4",
                "2 <- INIT",
                "3 <- 2.5",
                "4 <- 2.5",
                "5 <- 2.3",
                "6 <- 2.5",
                "7 <- 2.5",
                "8 <- INIT",
                "9 <- 2.5"
            ],
            "resampled_steps": [
                "",
                "12 - 1 = 11 (left: 1 4 11)\n11 / 4 = 2.75 (left: 1 2.75)",
                "",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)",
                "",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)"
            ]
        },
        "step_3": {
            "steps": [
                "12 - 1 = 11 (left: 1 4 11)",
                "12 - 1 = 11 (left: 1 4 11)\n11 / 4 = 2.75 (left: 1 2.75)\n1 / 2.75 \u2248 0.364 (left: 0.364)",
                "1 + 1 = 2 (left: 2 4 12)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)\n1 / 6 = 0.16666666666666666 (left: 0.16666666666666666)",
                "12 / 4 = 3 (left: 1 3 12)\n3 + 12 = 15 (left: 1 15)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)"
            ],
            "values": [
                3.0,
                0.003,
                3.0,
                0.002,
                0.0,
                0.002,
                0.002,
                0.002,
                41.0,
                0.001
            ],
            "resampled": [
                "0 <- 2.5",
                "1 <- 3.8",
                "2 <- 3.8",
                "3 <- 2.5",
                "4 <- 2.3",
                "5 <- 1.0",
                "6 <- 2.3",
                "7 <- 3.8",
                "8 <- 2.5",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)",
                "12 / 4 = 3 (left: 1 3 12)",
                "1 + 1 = 2 (left: 2 4 12)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 1 = 12 (left: 3 12)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "12 / 4 = 3 (left: 1 3 12)\n20 - 4 = 16 (left: 4 16)",
                "1 + 1 = 2 (left: 2 4 12)\n4 * 12 = 48 (left: 2 48)",
                "12 / 4 = 3 (left: 1 3 12)\n1 * 3 = 3 (left: 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n2 * 6 = 12 (left: 12 7)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "12 / 4 = 3 (left: 1 3 12)"
            ],
            "values": [
                0.002,
                60.0,
                0.002,
                0.002,
                0.003,
                0.003,
                20.002,
                0.003,
                0.003,
                41.0
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 1.9",
                "2 <- 2.5",
                "3 <- INIT",
                "4 <- 2.9",
                "5 <- 4.1",
                "6 <- 2.5",
                "7 <- 4.1",
                "8 <- 4.6",
                "9 <- 2.5"
            ],
            "resampled_steps": [
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 - 1 = 11 (left: 1 4 11)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)",
                "",
                "12 - 1 = 11 (left: 1 4 11)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 / 4 = 3 (left: 1 3 12)\n1 * 3 = 3 (left: 3 12)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)"
            ]
        },
        "step_5": {
            "steps": [
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 + 36 = 37 (left: 37)",
                "12 - 1 = 11 (left: 1 4 11)\n7 - 5 = 2 (left: 2 3 11)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6) ",
                "1 / 1 = 1 (left: 1 4 12)",
                "12 - 1 = 11 (left: 1 4 11)\n4 * 1 = 4 (left: 4 11)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 - 1 = 35 (left: 35)",
                "12 / 4 = 3 (left: 1 3 12)\n1 * 3 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)"
            ],
            "values": [
                0.003,
                2.001,
                0.002,
                0.003,
                0.001,
                60.0,
                0.002,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 5.5",
                "1 <- 4.1",
                "2 <- 3.8",
                "3 <- 4.1",
                "4 <- 4.1",
                "5 <- 2.5",
                "6 <- 2.3",
                "7 <- 4.9",
                "8 <- 1.9",
                "9 <- 4.9"
            ],
            "resampled_steps": [
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 - 1 = 11 (left: 1 4 11)",
                "12 / 4 = 3 (left: 1 3 12)"
            ]
        },
        "step_6": {
            "steps": [
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\nNo possible next steps as there is only one number given.",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "12 / 4 = 3 (left: 1 3 12)\n6 * 8 = 48 (left: 4 48 10)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 - 1 = 35 (left: 35)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n10 / 4 = 2.5 (left: 2.5 5)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)",
                "12 / 4 = 3 (left: 1 3 12)\n1 + 3 = 4 (left: 4 12)",
                "12 - 1 = 11 (left: 1 4 11)\n1 + 4 = 5 (left: 5 11)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 21 = 63 (left: 7 9 63)"
            ],
            "values": [
                0.003,
                20.002,
                2.0,
                0.002,
                1.002,
                0.003,
                60.0,
                0.003,
                1.002,
                60.0
            ],
            "resampled": [
                "0 <- 6.9",
                "1 <- 6.6",
                "2 <- 1.9",
                "3 <- 6.2",
                "4 <- 6.1",
                "5 <- 6.9",
                "6 <- 2.5",
                "7 <- 6.9",
                "8 <- 6.1",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "12 / 4 = 3 (left: 1 3 12)\n3 * 21 = 63 (left: 7 9 63)",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)",
                "12 - 1 = 11 (left: 1 4 11)",
                "12 / 4 = 3 (left: 1 3 12)\n6 * 8 = 48 (left: 4 48 10)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 21 = 63 (left: 7 9 63)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 21 = 63 (left: 7 9 63)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "12 - 1 = 11 (left: 1 4 11)"
            ]
        },
        "step_7": {
            "steps": [
                "12 / 4 = 3 (left: 1 3 12)\n3 * 21 = 63 (left: 7 9 63)\n63 / 7 = 9 (left: 9 63)",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4) ",
                "12 - 1 = 11 (left: 1 4 11)\n3 + 6 = 9 (left: 9 9 12)",
                "12 / 4 = 3 (left: 1 3 12)\n6 * 8 = 48 (left: 4 48 10)\n10 / 4 = 2.5 (left: 2.5 48)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\nThere are no possible next steps for the number 36 as it is a single number and cannot be combined with any other numbers.",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 21 = 63 (left: 7 9 63)\n7 * 9 = 63 (left: 63)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)\n1 + 6 = 7",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 21 = 63 (left: 7 9 63)\n9 * 7 = 63 (left: 63)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\n36 * 2 = 72 (left: 72)",
                "12 - 1 = 11 (left: 1 4 11)\n11 - 4 = 7 (left: 1 7)"
            ],
            "values": [
                0.002,
                0.003,
                1.002,
                41.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 3.8",
                "1 <- 3.8",
                "2 <- 4.6",
                "3 <- 6.9",
                "4 <- 6.9",
                "5 <- 2.5",
                "6 <- 2.3",
                "7 <- 7.3",
                "8 <- 3.8",
                "9 <- 4.9"
            ],
            "resampled_steps": [
                "12 / 4 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n1 * 3 = 3 (left: 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 21 = 63 (left: 7 9 63)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 21 = 63 (left: 7 9 63)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n6 * 8 = 48 (left: 4 48 10)\n10 / 4 = 2.5 (left: 2.5 48)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)"
            ]
        },
        "step_8": {
            "steps": [
                "12 / 4 = 3 (left: 1 3 12)\nPossible next steps:",
                "12 / 4 = 3 (left: 1 3 12)\n1 * 3 = 3 (left: 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n1 * 3 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 21 = 63 (left: 7 9 63)\n9 * 7 = 63 (left: 63)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 21 = 63 (left: 7 9 63)\n9 * 7 = 63 (left: 63)",
                "12 - 1 = 11 (left: 1 4 11)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 1 = 3 (left: 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n6 * 8 = 48 (left: 4 48 10)\n10 / 4 = 2.5 (left: 2.5 48)\n48 / 2.5 = 19.2 (left: 19.2)",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)"
            ],
            "values": [
                0.003,
                40.001,
                0.001,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                21.0,
                60.0
            ],
            "resampled": [
                "0 <- 8.9",
                "1 <- 8.9",
                "2 <- 8.1",
                "3 <- 6.9",
                "4 <- 6.6",
                "5 <- 8.9",
                "6 <- 8.9",
                "7 <- 8.9",
                "8 <- 3.8",
                "9 <- 8.9"
            ],
            "resampled_steps": [
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 / 4 = 3 (left: 1 3 12)\n1 * 3 = 3 (left: 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 21 = 63 (left: 7 9 63)",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)"
            ]
        },
        "step_9": {
            "steps": [
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 - 1 = 35 (left: 35)",
                "12 / 4 = 3 (left: 1 3 12)\n1 * 3 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 21 = 63 (left: 7 9 63)\n7 * 9 = 63 (left: 63)",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 - 1 = 35 (left: 35)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "12 / 4 = 3 (left: 1 3 12)\n1 * 3 = 3 (left: 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 + 36 = 37 (left: 37)"
            ],
            "values": [
                60.0,
                0.002,
                0.002,
                0.003,
                0.002,
                20.0,
                0.003,
                60.0,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 9.0",
                "1 <- 2.3",
                "2 <- 9.0",
                "3 <- 6.1",
                "4 <- 5.5",
                "5 <- 9.7",
                "6 <- 9.7",
                "7 <- 8.8",
                "8 <- 9.0",
                "9 <- 9.7"
            ],
            "resampled_steps": [
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "12 / 4 = 3 (left: 1 3 12)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)"
            ]
        },
        "step_10": {
            "steps": [
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\n36 / 2 = 18",
                "12 / 4 = 3 (left: 1 3 12)\n12 - 1 = 11 (left: 3 11)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\n36 / 2 = 18",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\nThere are no possible next steps as the input is only one number.",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\nThere are no possible next steps with the number 36.",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\nThere is only one number, so no possible next steps.",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\nThere are no possible next steps for the number 36 as it is already a single number.",
                "12 / 4 = 3 (left: 1 3 12)\n12 / 3 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\n36 + 8 = 44",
                "12 / 4 = 3 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\n36 + 2 = 38"
            ],
            "values": [
                0.003,
                20.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.755035
    },
    "17": {
        "input": "1 1 12 12",
        "step_1": {
            "steps": [
                "1 * 1 = 1 (left: 1 12 12)",
                "12 / 1 = 12 (left: 1 12 12)",
                "12 / 1 = 12 (left: 1 12 12)",
                "1 * 1 = 1 (left: 1 12 12)",
                "12 / 1 = 12 (left: 1 12 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "3 * 5 = 15 (left: 7 9 15)",
                "12 - 1 = 11 (left: 1 12 11)",
                "1 + 1 = 2 (left: 2 12 12)",
                "1 * 1 = 1 (left: 1 12 12)"
            ],
            "values": [
                20.002,
                41.0,
                1.002,
                20.001,
                20.002,
                20.002,
                2.001,
                60.0,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.7",
                "4 <- 1.3",
                "5 <- 1.1",
                "6 <- 1.3",
                "7 <- 1.1",
                "8 <- 1.1",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "12 / 1 = 12 (left: 1 12 12)",
                "",
                "",
                "12 - 1 = 11 (left: 1 12 11)",
                "1 * 1 = 1 (left: 1 12 12)",
                "12 / 1 = 12 (left: 1 12 12)",
                "1 * 1 = 1 (left: 1 12 12)",
                "12 / 1 = 12 (left: 1 12 12)",
                "12 / 1 = 12 (left: 1 12 12)",
                "12 / 1 = 12 (left: 1 12 12)"
            ]
        },
        "step_2": {
            "steps": [
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 + 1 = 13 (left: 1 12 13)",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 - 1 = 11 (left: 1 12 11)\n11 / 1 = 11 (left: 11 11)",
                "1 * 1 = 1 (left: 1 12 12)\n5 / 3 = 1.67 (left: 10 1.67)",
                "12 / 1 = 12 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)",
                "1 * 1 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 * 1 = 12 (left: 12 12)"
            ],
            "values": [
                60.0,
                0.003,
                40.001,
                0.003,
                1.0,
                0.002,
                0.003,
                20.002,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 2.8",
                "2 <- 2.0",
                "3 <- 2.0",
                "4 <- 2.8",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 1.5",
                "8 <- 2.0",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "12 / 1 = 12 (left: 1 12 12)\n12 * 1 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "",
                "",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)"
            ]
        },
        "step_3": {
            "steps": [
                "12 / 1 = 12 (left: 1 12 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24",
                "12 + 1 = 13 (left: 1 12 13)",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 - 1 = 11 (left: 1 11 12)\n3 * 5 = 15 (left: 6 8 15)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)"
            ],
            "values": [
                0.003,
                20.002,
                0.002,
                0.002,
                0.003,
                0.003,
                2.001,
                2.001,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 3.6",
                "2 <- 2.9",
                "3 <- 1.7",
                "4 <- 2.0",
                "5 <- 2.2",
                "6 <- 1.5",
                "7 <- 1.7",
                "8 <- 2.0",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "12 - 1 = 11 (left: 1 11 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 * 1 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 12 11)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 - 1 = 11 (left: 1 12 11)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)"
            ]
        },
        "step_4": {
            "steps": [
                "12 - 1 = 11 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 * 11 = 11 (left: 11 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24",
                "12 - 1 = 11 (left: 1 12 11)\n11 - 1 = 10 (left: 10 11)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 - 1 = 11 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 12 11)\n1 * 12 = 12 (left: 12 11)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                2.001,
                0.003,
                0.003,
                41.0,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 2.9",
                "2 <- 1.7",
                "3 <- 2.0",
                "4 <- 2.0",
                "5 <- 2.9",
                "6 <- 1.5",
                "7 <- 4.3",
                "8 <- 4.6",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "12 / 1 = 12 (left: 1 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 * 1 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 12 11)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 * 1 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 - 1 = 11 (left: 1 12 11)\n11 - 1 = 10 (left: 10 11)",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)"
            ]
        },
        "step_5": {
            "steps": [
                "12 / 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)",
                "12 / 1 = 12 (left: 1 12 12)\n12 * 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 1 = 11 (left: 1 11)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 / 1 = 12 (left: 1 12 12)\n12 * 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 12 11)\n11 - 1 = 10 (left: 10 11)\n10 / 11 = 0.9090909090909091 (left: 0.9090909090909091)",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24"
            ],
            "values": [
                0.003,
                0.003,
                40.0,
                0.002,
                0.003,
                0.001,
                60.0,
                0.003,
                40.001,
                0.003
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.1",
                "2 <- 2.8",
                "3 <- 5.6",
                "4 <- 1.7",
                "5 <- 5.8",
                "6 <- 1.7",
                "7 <- 1.1",
                "8 <- 5.2",
                "9 <- 5.2"
            ],
            "resampled_steps": [
                "12 / 1 = 12 (left: 1 12 12)",
                "12 / 1 = 12 (left: 1 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 12 11)",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24",
                "12 - 1 = 11 (left: 1 12 11)",
                "12 / 1 = 12 (left: 1 12 12)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 1 = 11 (left: 1 11)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 1 = 11 (left: 1 11)"
            ]
        },
        "step_6": {
            "steps": [
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 11 = 1 (left: 1 11)",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24\n24 - 12 = 12 (left: 12 24)",
                "12 - 1 = 11 (left: 1 12 11)\n1 + 12 = 13 (left: 11 13)",
                "12 / 1 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 1 = 11 (left: 1 11)\n1 + 11 = 12 (left: 12)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 1 = 11 (left: 1 11)\n11 - 11 = 0 (left: 0)"
            ],
            "values": [
                40.001,
                0.002,
                0.002,
                0.002,
                60.0,
                0.003,
                60.0,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 5.6",
                "1 <- 6.0",
                "2 <- 5.2",
                "3 <- 6.6",
                "4 <- 6.6",
                "5 <- 6.4",
                "6 <- 5.6",
                "7 <- 6.4",
                "8 <- 5.8",
                "9 <- 5.6"
            ],
            "resampled_steps": [
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 1 = 11 (left: 1 11)",
                "12 - 1 = 11 (left: 1 12 11)\n1 + 12 = 13 (left: 11 13)",
                "12 - 1 = 11 (left: 1 12 11)\n1 + 12 = 13 (left: 11 13)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 11 = 1 (left: 1 11)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 11 = 1 (left: 1 11)",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)"
            ]
        },
        "step_7": {
            "steps": [
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 1 = 11 (left: 1 11)\n11 - 1 = 10 (left: 10)",
                "12 - 1 = 11 (left: 1 12 11)\n1 + 12 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "12 - 1 = 11 (left: 1 12 11)\n1 + 12 = 13 (left: 11 13)\n13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 11 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 11 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24\n12 - 12 = 0 (left: 0 24)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)"
            ],
            "values": [
                0.003,
                20.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 6.0",
                "1 <- 2.8",
                "2 <- 2.0",
                "3 <- 5.8",
                "4 <- 7.8",
                "5 <- 1.5",
                "6 <- 6.6",
                "7 <- 2.2",
                "8 <- 5.2",
                "9 <- 4.6"
            ],
            "resampled_steps": [
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24\n12 - 12 = 0 (left: 0 24)",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 - 1 = 11 (left: 1 12 11)\n1 + 12 = 13 (left: 11 13)",
                "12 - 1 = 11 (left: 1 11 12)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 1 = 11 (left: 1 11)",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)"
            ]
        },
        "step_8": {
            "steps": [
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24\n24 / 12 = 2 (left: 2 12)",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24\n12 - 12 = 0 (left: 0 24)\n0 / 24 = 0 (left: 0)",
                "12 - 1 = 11 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)",
                "12 - 1 = 11 (left: 1 12 11)\n1 + 12 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 1 = 11 (left: 1 11)\n1 * 11 = 11 (left: 11)",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24"
            ],
            "values": [
                60.0,
                0.003,
                20.0,
                60.0,
                0.003,
                0.003,
                0.003,
                20.002,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 6.0",
                "2 <- 5.2",
                "3 <- 2.8",
                "4 <- 5.6",
                "5 <- 2.8",
                "6 <- 5.2",
                "7 <- 4.6",
                "8 <- 6.0",
                "9 <- 6.0"
            ],
            "resampled_steps": [
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 1 = 11 (left: 1 11)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 1 = 11 (left: 1 11)",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)"
            ]
        },
        "step_9": {
            "steps": [
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 1 = 11 (left: 1 11)\n11 / 1 = 11 (left: 11)",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24",
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 1 = 11 (left: 1 11)\n1 + 11 = 12 (left: 12)",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)"
            ],
            "values": [
                0.003,
                0.003,
                0.001,
                0.003,
                20.002,
                20.002,
                0.003,
                0.003,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 8.2",
                "1 <- 9.9",
                "2 <- 6.6",
                "3 <- 5.6",
                "4 <- 8.0",
                "5 <- 8.3",
                "6 <- 9.9",
                "7 <- 9.9",
                "8 <- 5.2",
                "9 <- 8.3"
            ],
            "resampled_steps": [
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 1 = 11 (left: 1 12 11)\n1 + 12 = 13 (left: 11 13)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24\n24 / 12 = 2 (left: 2 12)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 1 = 11 (left: 1 11)",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24\n24 / 12 = 2 (left: 2 12)"
            ]
        },
        "step_10": {
            "steps": [
                "12 / 1 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((12 / 1) + (12 / 1)) * 12 = 24",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 1) * (1 * 12) = 24",
                "12 - 1 = 11 (left: 1 12 11)\n1 + 12 = 13 (left: 11 13)\n11 / 13 \u2248 0.846 (left: 0.846)",
                "12 - 1 = 11 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 1) * (1 + 12) = 24",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24\n24 / 12 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 1) * (1 * 12) = 24",
                "12 / 1 = 12 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / 1) * (1 * 12) = 24",
                "12 - 1 = 11 (left: 1 12 11)\n12 - 1 = 11 (left: 1 11)\n1 * 11 = 11 (left: 11)",
                "12 - 1 = 11 (left: 1 11 12)\n5 + 7 = 12 (left: 12 12)\n12 + 12 = 24\n24 / 12 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)"
            ],
            "values": [
                60.0,
                60.0,
                0.002,
                0.003,
                60.0,
                0.003,
                60.0,
                60.0,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.799326
    },
    "18": {
        "input": "3 3 3 8",
        "step_1": {
            "steps": [
                "8 - 3 = 5 (left: 3 3 5)",
                "3 + 3 = 6 (left: 3 6 8)",
                "8 - 3 = 5 (left: 3 3 5)",
                "3 + 3 = 6 (left: 3 6 8)",
                "3 / 3 = 1 (left: 1 3 8)",
                "8 - 3 = 5 (left: 3 3 5)",
                "8 - 3 = 5 (left: 3 5 5)",
                "Possible next steps:",
                "3 + 3 = 6 (left: 3 6 8)",
                "3 + 3 = 6 (left: 3 6 8)"
            ],
            "values": [
                3.0,
                2.001,
                1.002,
                2.0,
                60.0,
                2.001,
                3.0,
                0.003,
                2.001,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.4",
                "2 <- 1.4",
                "3 <- INIT",
                "4 <- 1.6",
                "5 <- INIT",
                "6 <- 1.0",
                "7 <- 1.5",
                "8 <- 1.5",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "3 / 3 = 1 (left: 1 3 8)",
                "3 / 3 = 1 (left: 1 3 8)",
                "",
                "8 - 3 = 5 (left: 3 5 5)",
                "",
                "8 - 3 = 5 (left: 3 3 5)",
                "8 - 3 = 5 (left: 3 3 5)",
                "8 - 3 = 5 (left: 3 3 5)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "8 - 3 = 5 (left: 3 3 5)",
                "3 / 3 = 1 (left: 1 3 8)\n5 / 5 = 1 (left: 1 10 10)",
                "3 / 3 = 1 (left: 1 3 8)\n8 / 3 = 2 (left: 2 8)",
                "3 * 3 = 9 (left: 9 3 8)",
                "8 - 3 = 5 (left: 3 5 5)\n3 + 5 = 8 (left: 5 8)",
                "8 - 3 = 5 (left: 3 5 8)",
                "8 - 3 = 5 (left: 3 3 5)\n3 - 3 = 0 (left: 0 5)",
                "8 - 3 = 5 (left: 3 3 5)\nInput: 4 2 1",
                "8 - 3 = 5 (left: 3 3 5)\n3 * 3 = 9 (left: 5 9)",
                "3 * 3 = 9 (left: 9 3 8)"
            ],
            "values": [
                3.0,
                0.003,
                0.003,
                3.0,
                0.002,
                3.0,
                0.0,
                0.003,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- INIT",
                "2 <- 1.4",
                "3 <- 1.4",
                "4 <- 1.4",
                "5 <- 1.4",
                "6 <- 1.4",
                "7 <- 1.4",
                "8 <- INIT",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "3 / 3 = 1 (left: 1 3 8)",
                "",
                "3 / 3 = 1 (left: 1 3 8)",
                "3 / 3 = 1 (left: 1 3 8)",
                "3 / 3 = 1 (left: 1 3 8)",
                "3 / 3 = 1 (left: 1 3 8)",
                "3 / 3 = 1 (left: 1 3 8)",
                "3 / 3 = 1 (left: 1 3 8)",
                "",
                "3 + 3 = 6 (left: 3 6 8)"
            ]
        },
        "step_3": {
            "steps": [
                "3 / 3 = 1 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)",
                "3 * 3 = 9 (left: 9 3 8)",
                "3 / 3 = 1 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "3 / 3 = 1 (left: 1 3 8)\n3 + 1 = 4 (left: 4 8)",
                "3 / 3 = 1 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "3 / 3 = 1 (left: 1 3 8)\n5 - 2 = 3 (left: 4 6 3)",
                "3 / 3 = 1 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "3 / 3 = 1 (left: 1 3 8)\n5 * 5 = 25 (left: 5 25)",
                "8 - 3 = 5 (left: 3 3 5)",
                "3 + 3 = 6 (left: 3 6 8)\n8 - 3 = 5 (left: 5 8)"
            ],
            "values": [
                1.001,
                3.0,
                21.0,
                0.002,
                1.002,
                41.0,
                0.003,
                0.003,
                2.001,
                1.002
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 1.4",
                "2 <- 1.4",
                "3 <- 3.2",
                "4 <- 3.2",
                "5 <- 2.0",
                "6 <- 3.1",
                "7 <- 2.3",
                "8 <- 1.4",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "3 / 3 = 1 (left: 1 3 8)\n5 - 2 = 3 (left: 4 6 3)",
                "3 / 3 = 1 (left: 1 3 8)",
                "3 / 3 = 1 (left: 1 3 8)",
                "3 / 3 = 1 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "3 / 3 = 1 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)",
                "8 - 3 = 5 (left: 3 3 5)",
                "3 * 3 = 9 (left: 9 3 8)",
                "3 * 3 = 9 (left: 9 3 8)",
                "3 / 3 = 1 (left: 1 3 8)",
                "3 / 3 = 1 (left: 1 3 8)"
            ]
        },
        "step_4": {
            "steps": [
                "3 / 3 = 1 (left: 1 3 8)\n5 - 2 = 3 (left: 4 6 3)\n3 + 6 = 9 (left: 4 9)",
                "3 / 3 = 1 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)",
                "3 / 3 = 1 (left: 1 3 8)\n7 - 5 = 2 (left: 2 9)",
                "3 / 3 = 1 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n1 + 5 = 6 (left: 6)",
                "3 / 3 = 1 (left: 1 3 8)\n8 - 3 = 5 (left: 1 5)\n1 + 5 = 6",
                "8 - 3 = 5 (left: 3 3 5)\n4 + 10 = 14 (left: 4 14)",
                "3 * 3 = 9 (left: 9 3 8)\n10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)",
                "3 / 3 = 1 (left: 1 3 8)\n8 - 1 = 7 (left: 3 7)",
                "3 / 3 = 1 (left: 1 3 8)\n8 - 1 = 7 (left: 7 8)"
            ],
            "values": [
                20.002,
                21.001,
                0.002,
                0.003,
                0.003,
                0.003,
                1.0,
                60.0,
                2.0,
                0.002
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- INIT",
                "2 <- 4.7",
                "3 <- 1.4",
                "4 <- 4.7",
                "5 <- 4.1",
                "6 <- 4.7",
                "7 <- 4.7",
                "8 <- 4.0",
                "9 <- 4.1"
            ],
            "resampled_steps": [
                "3 / 3 = 1 (left: 1 3 8)",
                "",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)",
                "3 / 3 = 1 (left: 1 3 8)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)",
                "3 / 3 = 1 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)",
                "3 / 3 = 1 (left: 1 3 8)\n5 - 2 = 3 (left: 4 6 3)\n3 + 6 = 9 (left: 4 9)",
                "3 / 3 = 1 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)"
            ]
        },
        "step_5": {
            "steps": [
                "3 / 3 = 1 (left: 1 3 8)\n8 / 3 = 2 (left: 1 2)",
                "3 * 3 = 9 (left: 9 3 8)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "3 / 3 = 1 (left: 1 3 8)\n5 + 10 = 15 (left: 15)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "3 / 3 = 1 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n1 + 11 = 12 (left: 12)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "3 / 3 = 1 (left: 1 3 8)\n5 - 2 = 3 (left: 4 6 3)\n3 + 6 = 9 (left: 4 9)\n9 - 3 = 6 (left: 6 9)",
                "3 / 3 = 1 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n11 / 1 = 11 (left: 11)"
            ],
            "values": [
                0.003,
                2.001,
                60.0,
                0.003,
                0.003,
                0.002,
                0.0,
                60.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 3.8",
                "1 <- 5.7",
                "2 <- 5.7",
                "3 <- 5.2",
                "4 <- 1.4",
                "5 <- 4.0",
                "6 <- 4.7",
                "7 <- 4.7",
                "8 <- 4.0",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "8 - 3 = 5 (left: 3 3 5)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "3 / 3 = 1 (left: 1 3 8)",
                "3 / 3 = 1 (left: 1 3 8)\n5 - 2 = 3 (left: 4 6 3)\n3 + 6 = 9 (left: 4 9)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)",
                "3 / 3 = 1 (left: 1 3 8)\n5 - 2 = 3 (left: 4 6 3)\n3 + 6 = 9 (left: 4 9)",
                "8 - 3 = 5 (left: 3 3 5)"
            ]
        },
        "step_6": {
            "steps": [
                "8 - 3 = 5 (left: 3 3 5)\n3 / 3 = 1 (left: 1 5)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (3 * 8) = 24",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (3 * 8) = 24",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (3 + 8) = 24",
                "3 / 3 = 1 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)",
                "3 / 3 = 1 (left: 1 3 8)\n5 - 2 = 3 (left: 4 6 3)\n3 + 6 = 9 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n8 / 3 = 2.66667 (left: 2.66667)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "3 / 3 = 1 (left: 1 3 8)\n5 - 2 = 3 (left: 4 6 3)\n3 + 6 = 9 (left: 4 9)\n9 - 4 = 5 (left: 5)",
                "8 - 3 = 5 (left: 3 3 5)\n5 * 3 = 15 (left: 15)"
            ],
            "values": [
                60.0,
                20.002,
                0.003,
                60.0,
                20.001,
                0.003,
                0.002,
                1.0,
                0.002,
                0.001
            ],
            "resampled": [
                "0 <- 6.3",
                "1 <- 5.2",
                "2 <- 4.7",
                "3 <- 6.0",
                "4 <- 6.4",
                "5 <- 6.0",
                "6 <- 5.2",
                "7 <- 6.0",
                "8 <- 6.4",
                "9 <- 6.0"
            ],
            "resampled_steps": [
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (3 + 8) = 24",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)",
                "8 - 3 = 5 (left: 3 3 5)\n3 / 3 = 1 (left: 1 5)",
                "3 / 3 = 1 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)",
                "8 - 3 = 5 (left: 3 3 5)\n3 / 3 = 1 (left: 1 5)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 - 3 = 5 (left: 3 3 5)\n3 / 3 = 1 (left: 1 5)",
                "3 / 3 = 1 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)",
                "8 - 3 = 5 (left: 3 3 5)\n3 / 3 = 1 (left: 1 5)"
            ]
        },
        "step_7": {
            "steps": [
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (3 + 8) = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\nAnswer: ((2 * 6) + (3 + 4)) = 24",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (8 / 3) = 24",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)",
                "8 - 3 = 5 (left: 3 3 5)\n3 / 3 = 1 (left: 1 5)\n1 + 5 = 6",
                "3 / 3 = 1 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n11 / 1 = 11 (left: 11)",
                "8 - 3 = 5 (left: 3 3 5)\n3 / 3 = 1 (left: 1 5)\n5 - 1 = 4 (left: 4)",
                "3 * 3 = 9 (left: 9 3 8)\n9 / 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (3 + 8) = 24",
                "8 - 3 = 5 (left: 3 3 5)\n3 / 3 = 1 (left: 1 5)\n1 + 5 = 6 (left: 6)",
                "3 / 3 = 1 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n1 + 11 = 12 (left: 12)",
                "8 - 3 = 5 (left: 3 3 5)\n3 / 3 = 1 (left: 1 5)\n1 * 5 = 5 (left: 5)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.8384860000000001
    },
    "19": {
        "input": "1 1 2 6",
        "step_1": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 6)",
                "4 * 5 = 20 (left: 3 6 20)",
                "8 - 5 = 3 (left: 3 5 8)",
                "6 - 1 = 5 (left: 1 2 5)",
                "1 * 1 = 1 (left: 1 2 6)",
                "6 - 1 = 5 (left: 1 2 5)",
                "2 + 1 = 3 (left: 3 2 6)",
                "6 / 2 = 3 (left: 1 3 6)",
                "2 * 1 = 2 (left: 2 6 6)",
                "5 * 3 = 15 (left: 7 15 1)"
            ],
            "values": [
                1.002,
                0.003,
                3.0,
                1.002,
                1.002,
                2.001,
                41.0,
                21.0,
                41.0,
                1.002
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.7",
                "2 <- 1.8",
                "3 <- 1.5",
                "4 <- 1.8",
                "5 <- 1.6",
                "6 <- 1.8",
                "7 <- 1.4",
                "8 <- 1.6",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "6 / 2 = 3 (left: 1 3 6)",
                "6 / 2 = 3 (left: 1 3 6)",
                "2 * 1 = 2 (left: 2 6 6)",
                "6 - 1 = 5 (left: 1 2 5)",
                "2 * 1 = 2 (left: 2 6 6)",
                "2 + 1 = 3 (left: 3 2 6)",
                "2 * 1 = 2 (left: 2 6 6)",
                "1 * 1 = 1 (left: 1 2 6)",
                "2 + 1 = 3 (left: 3 2 6)",
                "2 * 1 = 2 (left: 2 6 6)"
            ]
        },
        "step_2": {
            "steps": [
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 7 = 1.429 (left: 1.429 10)",
                "2 * 1 = 2 (left: 2 6 6)\n6 / 2 = 3 (left: 3 6)",
                "6 - 1 = 5 (left: 1 2 5)\n5 - 1 = 4 (left: 2 4)",
                "2 * 1 = 2 (left: 2 6 6)\n2 + 6 = 8 (left: 6 8)",
                "2 + 1 = 3 (left: 3 2 6)\n3 + 2 = 5 (left: 5 6)",
                "2 * 1 = 2 (left: 2 6 6)\n6 / 2 = 3 (left: 3 6)",
                "1 * 1 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)",
                "2 + 1 = 3 (left: 3 2 6)\n9 / 1 = 9 (left: 4 7 9)",
                "2 * 1 = 2 (left: 2 6 6)\n2 + 6 = 8 (left: 6 8)"
            ],
            "values": [
                60.0,
                0.003,
                0.001,
                0.003,
                0.003,
                0.002,
                2.0,
                40.0,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 1.6",
                "2 <- 1.7",
                "3 <- 1.8",
                "4 <- 2.7",
                "5 <- 2.0",
                "6 <- 2.0",
                "7 <- 2.7",
                "8 <- 1.8",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "2 + 1 = 3 (left: 3 2 6)\n9 / 1 = 9 (left: 4 7 9)",
                "2 + 1 = 3 (left: 3 2 6)",
                "6 / 2 = 3 (left: 1 3 6)",
                "2 * 1 = 2 (left: 2 6 6)",
                "1 * 1 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)",
                "1 * 1 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)",
                "2 * 1 = 2 (left: 2 6 6)",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)"
            ]
        },
        "step_3": {
            "steps": [
                "2 + 1 = 3 (left: 3 2 6)\n9 / 1 = 9 (left: 4 7 9)\n12 - 6 = 6 (left: 3 6)",
                "2 + 1 = 3 (left: 3 2 6)\n6 / 3 = 2 (left: 2 6)",
                "6 / 2 = 3 (left: 1 3 6)\n5 * 10 = 50 (left: 2 50 20)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)",
                "1 * 1 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n3 / 1 = 3 (left: 3)",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)\n5 / 2 = 2.5 (left: 2.5)",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)\n5 + 2 = 7 (left: 7)",
                "1 * 1 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n3 - 1 = 2 (left: 2)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)\n5 / 2 = 2.5 (left: 2.5)"
            ],
            "values": [
                1.0,
                1.0,
                22.0,
                60.0,
                0.003,
                0.002,
                0.002,
                0.001,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 3.8",
                "2 <- 3.3",
                "3 <- INIT",
                "4 <- 1.6",
                "5 <- 1.6",
                "6 <- 2.0",
                "7 <- 3.3",
                "8 <- 2.7",
                "9 <- 3.8"
            ],
            "resampled_steps": [
                "6 / 2 = 3 (left: 1 3 6)\n5 * 10 = 50 (left: 2 50 20)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)",
                "",
                "2 + 1 = 3 (left: 3 2 6)",
                "2 + 1 = 3 (left: 3 2 6)",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)",
                "1 * 1 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)"
            ]
        },
        "step_4": {
            "steps": [
                "6 / 2 = 3 (left: 1 3 6)\n5 * 10 = 50 (left: 2 50 20)\n50 - 2 = 48 (left: 48 20)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n9 / 3 = 3 (left: 3)",
                "1 + 1 = 2 (left: 2 2 6)",
                "2 + 1 = 3 (left: 3 2 6)\n6 + 3 = 9 (left: 2 9)",
                "2 + 1 = 3 (left: 3 2 6)\n3 + 2 = 5 (left: 5 6)",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)\n5 / 2 = 2.5 (left: 2.5)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n1 + 3 = 4 (left: 4)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)"
            ],
            "values": [
                0.003,
                60.0,
                0.002,
                60.0,
                1.0,
                0.001,
                0.001,
                60.0,
                0.0,
                0.001
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 1.8",
                "2 <- 2.7",
                "3 <- 2.0",
                "4 <- 3.3",
                "5 <- 4.1",
                "6 <- 1.8",
                "7 <- 2.7",
                "8 <- 4.1",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "2 * 1 = 2 (left: 2 6 6)",
                "1 * 1 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "2 * 1 = 2 (left: 2 6 6)",
                "1 * 1 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)"
            ]
        },
        "step_5": {
            "steps": [
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n2 + 6 = 8 (left: 6 8)",
                "1 * 1 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n1 * 3 = 3 (left: 3)",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)\n5 - 2 = 3 (left: 3)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n2 + 6 = 8 (left: 6 8)",
                "1 * 1 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n1 * 3 = 3 (left: 3)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)\n5 - 2 = 3 (left: 3)"
            ],
            "values": [
                60.0,
                1.002,
                0.002,
                0.0,
                40.0,
                60.0,
                0.002,
                0.002,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 4.7",
                "1 <- 3.2",
                "2 <- 3.2",
                "3 <- 5.4",
                "4 <- 4.3",
                "5 <- 5.4",
                "6 <- 2.7",
                "7 <- INIT",
                "8 <- 2.0",
                "9 <- 4.1"
            ],
            "resampled_steps": [
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 / 2 = 3 (left: 1 3 6)\n5 * 10 = 50 (left: 2 50 20)",
                "6 / 2 = 3 (left: 1 3 6)\n5 * 10 = 50 (left: 2 50 20)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 2 6)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)",
                "",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ]
        },
        "step_6": {
            "steps": [
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "6 / 2 = 3 (left: 1 3 6)\n5 * 10 = 50 (left: 2 50 20)\n2 + 50 = 52 (left: 20 52)",
                "6 / 2 = 3 (left: 1 3 6)\n5 * 10 = 50 (left: 2 50 20)\n50 / 2 = 25 (left: 25 20)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 6) = 24",
                "1 + 1 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "1 * 1 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n3 / 1 = 3 (left: 3)",
                "9 - 3 = 6 (left: 6 7 5)",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)\n5 * 2 = 10 (left: 10)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24"
            ],
            "values": [
                60.0,
                0.002,
                0.003,
                0.003,
                60.0,
                60.0,
                0.002,
                3.0,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 2.0",
                "2 <- 2.7",
                "3 <- 4.1",
                "4 <- 4.1",
                "5 <- 4.1",
                "6 <- 2.0",
                "7 <- 5.0",
                "8 <- 5.0",
                "9 <- 6.5"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)",
                "1 * 1 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24"
            ]
        },
        "step_7": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n3 - 1 = 2 (left: 2)",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)\n5 - 2 = 3 (left: 3)",
                "1 * 1 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n1 + 3 = 4 (left: 4)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)\n5 / 2 = 2.5 (left: 2.5)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\nAnswer: (3 + 5) * (7 - 3) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nThe steps to obtain 24 from 1 1 2 6 are: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n3 + 4 = 7 (left: 7 7)\n7 * 7 = 49 (left: 49)\n49 - 25 = 24 (left: 24)\nAnswer: (3 + 4) * (3 + 4) - 25 = 24"
            ],
            "values": [
                0.002,
                0.003,
                0.002,
                60.0,
                60.0,
                60.0,
                0.001,
                40.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 5.8",
                "2 <- 7.8",
                "3 <- 4.7",
                "4 <- 4.7",
                "5 <- 6.9",
                "6 <- 7.7",
                "7 <- 7.5",
                "8 <- 3.3",
                "9 <- 6.4"
            ],
            "resampled_steps": [
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nThe steps to obtain 24 from 1 1 2 6 are: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\nAnswer: (3 + 5) * (7 - 3) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)"
            ]
        },
        "step_8": {
            "steps": [
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n8 - 6 = 2 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 3) + 6) + 8 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nThe steps to obtain 24 from 1 1 2 6 are: (2 * 1) * (6 - 1) = 24\nThe steps to obtain 24 from 1 1 2 6 are: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 5 9\nSteps:\n3 * 5 = 15 (left: 3 9 15)\n15 - 9 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 5) - 9) + 6 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\nAnswer: (3 + 5) * (7 - 3) = 24\nInput: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 * 2 = 6 (left: 6 24)\n6 * 24 = 144 (left: 144)\nAnswer: (4 * 6) - (3 * 2) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 + 5) * (4 * 3) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n27 / 3 = 9 (left: 9 9 27)",
                "1 + 1 = 2 (left: 2 2 6)\n2 / 2 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)"
            ],
            "values": [
                40.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                1.002,
                0.001
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 6.9",
                "2 <- 2.0",
                "3 <- 8.6",
                "4 <- 7.3",
                "5 <- 8.3",
                "6 <- 8.5",
                "7 <- 7.7",
                "8 <- 5.5",
                "9 <- 8.0"
            ],
            "resampled_steps": [
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\nAnswer: (3 + 5) * (7 - 3) = 24\nInput: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 * 2 = 6 (left: 6 24)\n6 * 24 = 144 (left: 144)\nAnswer: (4 * 6) - (3 * 2) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 5 9\nSteps:\n3 * 5 = 15 (left: 3 9 15)\n15 - 9 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 5) - 9) + 6 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\nAnswer: (3 + 5) * (7 - 3) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 3 8\n\n3 * 3 = 9 (left: 9 8)\n9 - 8 = 1 (left: 1 9)\n1 * 24 = 24 (left: 24)\n\nAnswer: (3 * 3) * (8 - 3) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: ((3 + 5) * 4) - 8 = 24",
                "6 / 2 = 3 (left: 1 3 6)\n10 / 4 = 2 (left: 5 2)\n5 + 2 = 7 (left: 7)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\nAnswer: (3 + 5) * (7 - 3) = 24\nInput: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 * 2 = 6 (left: 6 24)\n6 * 24 = 144 (left: 144)\nAnswer: (4 * 6) - (3 * 2) = 24\nInput: 3 6 8 9\nSteps:\n3 + 9 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24)\nAnswer: ((3 + 9) - 8) * 6 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 4 4\nSteps:\n3 + 3 = 6 (left: 4 4 6)\n4 * 4 = 16 (left: 6 16)\n16 + 6 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((3 + 3) * (4 * 4)) + 2 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 5) - 4) * (3 * 2) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 5 9\nSteps:\n3 * 5 = 15 (left: 3 9 15)\n15 - 9 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 5) - 9) + 6 = 24\nInput: 2 3 5 6\nSteps:\n5 + 6 = 11 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((5 + 6) - 3) * 2 + 8 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\nAnswer: (3 + 5) * (7 - 3) = 24\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n8 - 6 = 2 (left: 2 3 8)\n2 * 3 = 6 (left: 6 8)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 4) - 6) * 4 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n4 - 3 = 1 (left: 1 21)\n1 * 21 = 21 (left: 21)\nAnswer: (3 * 7) - (4 - 3) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\nAnswer: (2 + 6) * (3 * 4) = 24"
            ],
            "values": [
                60.0,
                60.0,
                0.001,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 9.9",
                "1 <- 9.0",
                "2 <- 9.1",
                "3 <- 8.1",
                "4 <- 5.8",
                "5 <- 4.3",
                "6 <- 8.1",
                "7 <- 7.9",
                "8 <- 5.0",
                "9 <- 6.9"
            ],
            "resampled_steps": [
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\nAnswer: (2 + 6) * (3 * 4) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 3 8\n\n3 * 3 = 9 (left: 9 8)\n9 - 8 = 1 (left: 1 9)\n1 * 24 = 24 (left: 24)\n\nAnswer: (3 * 3) * (8 - 3) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: ((3 + 5) * 4) - 8 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n8 - 6 = 2 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 3) + 6) + 8 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "1 + 1 = 2 (left: 2 2 6)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n8 - 6 = 2 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 3) + 6) + 8 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n3 + 4 = 7 (left: 7 7)\n7 * 7 = 49 (left: 49)\n49 - 25 = 24 (left: 24)\nAnswer: (3 + 4) * (3 + 4) - 25 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24"
            ]
        },
        "step_10": {
            "steps": [
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\nAnswer: (2 + 6) * (3 * 4) = 24\nInput: 2 3 5 7\nSteps:\n2 * 5 = 10 (left: 3 7 10)\n10 - 7 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\nAnswer: ((2 * 5) - 7) * 3 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 3 8\n\n3 * 3 = 9 (left: 9 8)\n9 - 8 = 1 (left: 1 9)\n1 * 24 = 24 (left: 24)\n\nAnswer: (3 * 3) * (8 - 3) = 24\nInput: 2 3 4 6\n\n2 * 3 = 6 (left: 4 6 6)\n4 + 6 = 10 (left: 10 6)\n10 + 6 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\n\nAnswer: ((2 * 3) + 4) + 6 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n12 - 8 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: ((3 + 5) * 4) - 8 = 24\nInput: 2 3 5 7\nSteps:\n2 * 7 = 14 (left: 3 5 14)\n14 - 5 = 9 (left: 3 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((2 * 7) - 5) * 3 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n8 - 6 = 2 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 3) + 6) + 8 = 24\nInput: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\nAnswer: (2 * 3) * 4 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 4 5\n\n3 * 4 = 12 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * 4) - 5) + 3 = 24",
                "1 + 1 = 2 (left: 2 2 6)\n6 / 2 = 3 (left: 2 3)",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n8 - 6 = 2 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 3) + 6) + 8 = 24\nInput: 2 3 4 9\nSteps:\n4 * 3 = 12 (left: 2 9 12)\n9 - 2 = 7 (left: 7 12)\n12 * 7 = 84 (left: 84)\n84 / 4 = 21 (left: 21)\n21 - 9 = 12 (left: 12)\n12 + 2 = 14 (left: 14)\n14 * 3 = 42 (left: 42)\n42 / 14 = 3 (left: 3)\n3 * 24 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((((((2 * 3) * 4) / 9) - 2) + 7) * 3) / 14) * 24) / 3 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 4 4\nSteps:\n3 + 4 = 7 (left: 3 4 7)\n3 + 4 = 7 (left: 7 7)\n7 * 7 = 49 (left: 49)\n49 - 25 = 24 (left: 24)\nAnswer: (3 + 4) * (3 + 4) - 25 = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n21 - 5 = 16 (left: 2 16)\n2 * 16 = 32 (left: 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) * 2 - 8 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n3 * 5 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 15)\n5 * 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 + 7) * 3 - 10) * 5 - 1 = 24",
                "2 * 1 = 2 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * 1) * (6 - 1) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 5 = 2 (left: 2 7)\n2 * 3 = 6 (left: 6 7)\n6 * 7 = 42 (left: 42)\n42 / 2 = 21 (left: 21)\n21 - 5 = 16 (left: 16)\n16 - 3 = 13 (left: 13)\n13 - 1 = 12 (left: 12)\n12 - 4 = 8 (left: 8)\n8 - 3 = 5 (left: 5)\n5 * 4 = 20 (left: 20)\n20 + 8 = 28 (left: 28)\n28 / 7 = 4 (left: 4 28)\n4 * 5 = 20 (left: 20 28)\n20 + 20 = 40 (left: 40 28)\n40 / 4 = 10 (left: 10 28)\n10 / 10 = 1 (left: 1 28)\n1 * 28 = 28 (left: 28)\n28 - 8 = 20 (left: 20)\n20 + 5 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 4 = 26 (left: 26)\n26 / 2 = 13 (left: 13)\n13 * 1 = 13 (left: 13)\n13 + 12 = 25 (left: 25)\n25 - 5 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((((3 + 4) - 5) * 3) * 7) / 2 = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                0.002,
                60.0,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.8909940000000001
    },
    "20": {
        "input": "1 1 2 11",
        "step_1": {
            "steps": [
                "1 * 1 = 1 (left: 1 2 11)",
                "2 + 1 = 3 (left: 1 3 11)",
                "7 * 8 = 56 (left: 3 5 56)",
                "1 + 2 = 3 (left: 3 2 11)",
                "11 - 2 = 9 (left: 1 2 9)",
                "3 * 5 = 15 (left: 7 15 2)",
                "11 / 1 = 11 (left: 1 2 11)",
                "11 - 2 = 9 (left: 1 2 9)",
                "11 - 1 = 10 (left: 1 2 10)",
                "11 - 2 = 9 (left: 1 2 9)"
            ],
            "values": [
                1.002,
                1.002,
                0.001,
                1.0,
                0.003,
                2.001,
                1.002,
                1.002,
                2.001,
                1.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.7",
                "5 <- INIT",
                "6 <- 1.5",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                "11 - 2 = 9 (left: 1 2 9)",
                "",
                "3 * 5 = 15 (left: 7 15 2)",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "5 / 3 = 1.66667 (left: 1.66667 5 8)",
                "1 + 1 = 2 (left: 2 2 11)",
                "2 * 1 = 2 (left: 2 2 11)",
                "2 + 1 = 3 (left: 3 2 11)",
                "11 - 2 = 9 (left: 1 2 9)\n7 - 5 = 2 (left: 2 3)",
                "1 + 1 = 2 (left: 2 2 11)",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)",
                "11 - 1 = 10 (left: 1 2 10)",
                "2 * 3 = 6 (left: 6 5 2)",
                "10 - 3 = 7 (left: 5 7 10)"
            ],
            "values": [
                3.0,
                1.002,
                2.001,
                1.001,
                0.0,
                1.002,
                40.001,
                1.002,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- INIT",
                "2 <- 2.6",
                "3 <- INIT",
                "4 <- 2.6",
                "5 <- INIT",
                "6 <- 2.6",
                "7 <- 2.6",
                "8 <- 2.6",
                "9 <- 2.9"
            ],
            "resampled_steps": [
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)",
                "",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)",
                "",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)",
                "",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)",
                "10 - 3 = 7 (left: 5 7 10)"
            ]
        },
        "step_3": {
            "steps": [
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n7 / 17 \u2248 0.4117647058823529 (left: 0.4117647058823529)",
                "11 * 1 = 11 (left: 2 11 11)",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n17 / 7 = 2.43 (left: 2.43)",
                "24 / 4 = 6 (left: 4 6 24)",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n17 / 7 = 2.43 (left: 2.43)",
                "1 + 1 = 2 (left: 2 2 11)",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n7 * 17 = 119 (left: 119)",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n17 / 7 = 2.428571428571429 (left: 2.428571428571429)",
                "10 - 3 = 7 (left: 5 7 10)\n5 - 7 = -2 (left: -2 10)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                60.0,
                0.003,
                22.0,
                0.003,
                60.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 3.7",
                "1 <- 3.3",
                "2 <- 3.7",
                "3 <- 3.5",
                "4 <- 2.0",
                "5 <- INIT",
                "6 <- 3.7",
                "7 <- 3.5",
                "8 <- 3.3",
                "9 <- 2.5"
            ],
            "resampled_steps": [
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "24 / 4 = 6 (left: 4 6 24)",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 2 11)",
                "5 / 3 = 1.66667 (left: 1.66667 5 8)",
                "",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 2 11)",
                "24 / 4 = 6 (left: 4 6 24)",
                "1 + 1 = 2 (left: 2 2 11)"
            ]
        },
        "step_4": {
            "steps": [
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (1 + 1) * (2 + 11) = 24",
                "24 / 4 = 6 (left: 4 6 24)\n9 / 3 = 3 (left: 3 3 18)",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (1 + 1) * (2 + 11) = 24",
                "1 + 1 = 2 (left: 2 2 11)\n11 - 2 = 9 (left: 2 9)",
                "5 / 3 = 1.66667 (left: 1.66667 5 8)\n3 + 6 = 9 (left: 9 9 12)",
                "2 * 1 = 2 (left: 2 2 11)",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (1 + 1) * (2 * 11) = 24",
                "1 + 1 = 2 (left: 2 2 11)\n2 * 11 = 22 (left: 2 22)",
                "24 / 4 = 6 (left: 4 6 24)\n6 * 4 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 2 11)\n7 - 3 = 4 (left: 4 1)"
            ],
            "values": [
                60.0,
                0.003,
                40.001,
                0.0,
                1.002,
                1.002,
                60.0,
                0.003,
                60.0,
                40.001
            ],
            "resampled": [
                "0 <- 4.0",
                "1 <- 4.0",
                "2 <- 3.7",
                "3 <- 4.8",
                "4 <- INIT",
                "5 <- 4.8",
                "6 <- 4.8",
                "7 <- 4.0",
                "8 <- 2.6",
                "9 <- 4.8"
            ],
            "resampled_steps": [
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (1 + 1) * (2 + 11) = 24",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (1 + 1) * (2 + 11) = 24",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "24 / 4 = 6 (left: 4 6 24)\n6 * 4 = 24 (left: 24)",
                "",
                "24 / 4 = 6 (left: 4 6 24)\n6 * 4 = 24 (left: 24)",
                "24 / 4 = 6 (left: 4 6 24)\n6 * 4 = 24 (left: 24)",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (1 + 1) * (2 + 11) = 24",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)",
                "24 / 4 = 6 (left: 4 6 24)\n6 * 4 = 24 (left: 24)"
            ]
        },
        "step_5": {
            "steps": [
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (1 + 1) * (2 + 11) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\nAnswer: (3 * 7) - (5 - 3) = 24",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (1 + 1) * (2 + 11) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 + 10 = 15 (left: 3 15)\n3 * 15 = 45 (left: 45)\n45 / 5 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * 15) / 5) * 3 - 3 = 24",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((1 * 2) * 11) + 1 = 24",
                "24 / 4 = 6 (left: 4 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (24 / 4) * 6 = 24",
                "11 - 1 = 10 (left: 1 2 10)",
                "24 / 4 = 6 (left: 4 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (1 * 2) * (11 + 24 / 4) = 24",
                "24 / 4 = 6 (left: 4 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (1 * 2) * (11 + 1) = 24",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: (1 + 1) * (2 + 11) = 24\nInput: 3 3 8 9\nSteps:\n3 * 8 = 24 (left: 3 9 24)\n9 - 3 = 6 (left: 6 24)\n6 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (9 - 3) = 24",
                "3 * 5 = 15 (left: 7 15 2)\n15 + 2 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)",
                "24 / 4 = 6 (left: 4 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (24 / 4) * 6 = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.9207505
    },
    "21": {
        "input": "1 2 3 4",
        "step_1": {
            "steps": [
                "4 / 2 = 2 (left: 1 3 2)",
                "3 * 4 = 12 (left: 1 2 12)",
                "2 + 3 = 5 (left: 1 5 4)",
                "3 + 2 = 5 (left: 1 4 5)",
                "4 / 2 = 2 (left: 1 2 3)",
                "4 - 1 = 3 (left: 2 3 4)",
                "3 - 1 = 2 (left: 2 2 4)",
                "3 + 4 = 7 (left: 1 2 7)",
                "4 - 1 = 3 (left: 2 3 3)",
                "4 - 1 = 3 (left: 3 2 4)"
            ],
            "values": [
                2.0,
                60.0,
                22.0,
                1.002,
                2.001,
                60.0,
                3.0,
                2.001,
                1.0,
                60.0
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 1.9",
                "2 <- 1.2",
                "3 <- 1.9",
                "4 <- 1.1",
                "5 <- 1.2",
                "6 <- 1.5",
                "7 <- INIT",
                "8 <- 1.1",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "4 - 1 = 3 (left: 2 3 4)",
                "4 - 1 = 3 (left: 3 2 4)",
                "2 + 3 = 5 (left: 1 5 4)",
                "4 - 1 = 3 (left: 3 2 4)",
                "3 * 4 = 12 (left: 1 2 12)",
                "2 + 3 = 5 (left: 1 5 4)",
                "4 - 1 = 3 (left: 2 3 4)",
                "",
                "3 * 4 = 12 (left: 1 2 12)",
                "2 + 3 = 5 (left: 1 5 4)"
            ]
        },
        "step_2": {
            "steps": [
                "4 - 1 = 3 (left: 2 3 4)\n3 - 2 = 1 (left: 1 4)",
                "4 - 1 = 3 (left: 3 2 4)\n2 * 4 = 8 (left: 3 8)",
                "2 + 3 = 5 (left: 1 5 4)\n4 + 2 = 6 (left: 6 16)",
                "4 - 1 = 3 (left: 3 2 4)\n2 + 4 = 6 (left: 3 6)",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)",
                "2 + 3 = 5 (left: 1 5 4)\n5 / 1 = 5 (left: 5 4)",
                "4 - 1 = 3 (left: 2 3 4)\nInput: 5 9 1",
                "3 - 2 = 1 (left: 1 1 4)",
                "3 * 4 = 12 (left: 1 2 12)\nInput: 3 7 8",
                "2 + 3 = 5 (left: 1 5 4)\n1 - 5 = -4 (left: -4 4)"
            ],
            "values": [
                60.0,
                60.0,
                1.001,
                1.0,
                60.0,
                2.0,
                0.003,
                3.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 1.9",
                "2 <- 1.9",
                "3 <- 2.1",
                "4 <- 1.2",
                "5 <- 1.1",
                "6 <- 2.4",
                "7 <- 2.4",
                "8 <- 1.1",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "4 - 1 = 3 (left: 3 2 4)",
                "4 - 1 = 3 (left: 3 2 4)",
                "4 - 1 = 3 (left: 3 2 4)",
                "4 - 1 = 3 (left: 3 2 4)\n2 * 4 = 8 (left: 3 8)",
                "2 + 3 = 5 (left: 1 5 4)",
                "3 * 4 = 12 (left: 1 2 12)",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)",
                "3 * 4 = 12 (left: 1 2 12)",
                "4 - 1 = 3 (left: 2 3 4)\n3 - 2 = 1 (left: 1 4)"
            ]
        },
        "step_3": {
            "steps": [
                "4 - 1 = 3 (left: 3 2 4)\n4 + 3 = 7 (left: 2 7)",
                "4 - 1 = 3 (left: 3 2 4)\n15 - 5 = 10 (left: 10 10)",
                "4 - 1 = 3 (left: 3 2 4)\n3 + 2 = 5 (left: 4 5)",
                "4 - 1 = 3 (left: 3 2 4)\n2 * 4 = 8 (left: 3 8)\nPossible next steps:",
                "2 + 3 = 5 (left: 1 5 4)\n4 / 1 = 4 (left: 4)",
                "3 * 4 = 12 (left: 1 2 12)\n2 + 12 = 14 (left: 1 14)",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 12 = 12 (left: 2 12)",
                "4 - 1 = 3 (left: 2 3 4)\n3 - 2 = 1 (left: 1 4)\n4 - 1 = 3 (left: 3)"
            ],
            "values": [
                0.0,
                1.001,
                21.0,
                0.003,
                0.002,
                0.003,
                60.0,
                0.001,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.9",
                "2 <- 1.9",
                "3 <- 1.5",
                "4 <- 1.1",
                "5 <- 2.1",
                "6 <- 2.0",
                "7 <- 3.1",
                "8 <- 3.8",
                "9 <- 2.4"
            ],
            "resampled_steps": [
                "3 * 4 = 12 (left: 1 2 12)",
                "4 - 1 = 3 (left: 3 2 4)",
                "4 - 1 = 3 (left: 3 2 4)",
                "4 - 1 = 3 (left: 2 3 4)",
                "3 * 4 = 12 (left: 1 2 12)",
                "4 - 1 = 3 (left: 3 2 4)\n2 * 4 = 8 (left: 3 8)",
                "4 - 1 = 3 (left: 2 3 4)\n3 - 2 = 1 (left: 1 4)",
                "4 - 1 = 3 (left: 3 2 4)\n15 - 5 = 10 (left: 10 10)",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 12 = 12 (left: 2 12)",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)"
            ]
        },
        "step_4": {
            "steps": [
                "3 * 4 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "4 - 1 = 3 (left: 3 2 4)\nInput: 6 2 3",
                "4 - 1 = 3 (left: 3 2 4)\n2 - 4 = -2 (left: -2 4)",
                "4 - 1 = 3 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)",
                "3 * 4 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "4 - 1 = 3 (left: 3 2 4)\n2 * 4 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)",
                "4 - 1 = 3 (left: 2 3 4)\n3 - 2 = 1 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "4 - 1 = 3 (left: 3 2 4)\n15 - 5 = 10 (left: 10 10)\n10 / 10 = 1 (left: 1)",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 12 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ],
            "values": [
                0.002,
                0.003,
                1.001,
                20.0,
                60.0,
                0.001,
                0.003,
                0.003,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 3.6",
                "1 <- 4.4",
                "2 <- 1.1",
                "3 <- INIT",
                "4 <- 4.9",
                "5 <- 4.9",
                "6 <- 4.9",
                "7 <- 3.6",
                "8 <- 2.0",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "3 * 4 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "3 * 4 = 12 (left: 1 2 12)",
                "",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "4 - 1 = 3 (left: 2 3 4)\n3 - 2 = 1 (left: 1 4)",
                "3 * 4 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)"
            ]
        },
        "step_5": {
            "steps": [
                "3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (1 * (3 * 4)) = 24",
                "3 * 4 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "3 * 4 = 12 (left: 1 2 12)\n12 - 1 = 11 (left: 2 11)",
                "3 / 1 = 3 (left: 2 3 4)",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((1 * 2) * (3 * 4)) = 24",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (1 * (3 * 4)) = 24",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 1 * 2 * (3 * 4) = 24",
                "3 * 4 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 * 2) * (3 * 4) = 24",
                "4 - 1 = 3 (left: 2 3 4)\n3 - 2 = 1 (left: 1 4)\n1 + 4 = 5",
                "3 * 4 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)"
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.946016
    },
    "22": {
        "input": "11 11 12 12",
        "step_1": {
            "steps": [
                "12 + 11 = 23 (left: 11 12 23)",
                "11 / 11 = 1 (left: 1 12 12)",
                "12 - 11 = 1 (left: 1 11 12)",
                "12 / 11 = 1 (left: 1 12 12)",
                "12 - 11 = 1 (left: 1 12 12)",
                "12 - 11 = 1 (left: 1 12 12)",
                "12 - 11 = 1 (left: 11 1 12)",
                "11 / 11 = 1 (left: 1 12 12)",
                "12 - 11 = 1 (left: 1 12 12)",
                "11 + 11 = 22 (left: 12 12 22)"
            ],
            "values": [
                2.001,
                0.003,
                1.002,
                20.002,
                1.002,
                41.0,
                40.001,
                20.001,
                20.002,
                0.003
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 1.7",
                "2 <- 1.5",
                "3 <- INIT",
                "4 <- 1.5",
                "5 <- 1.5",
                "6 <- 1.6",
                "7 <- 1.6",
                "8 <- 1.3",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 1 12 12)",
                "11 / 11 = 1 (left: 1 12 12)",
                "12 - 11 = 1 (left: 1 12 12)",
                "",
                "12 - 11 = 1 (left: 1 12 12)",
                "12 - 11 = 1 (left: 1 12 12)",
                "12 - 11 = 1 (left: 11 1 12)",
                "12 - 11 = 1 (left: 11 1 12)",
                "12 / 11 = 1 (left: 1 12 12)",
                "12 - 11 = 1 (left: 1 12 12)"
            ]
        },
        "step_2": {
            "steps": [
                "12 - 11 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)",
                "11 / 11 = 1 (left: 1 12 12)\n9 / 3 = 3 (left: 3 9)",
                "12 - 11 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "1 + 2 = 3 (left: 2 3 3)",
                "12 - 11 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)",
                "12 - 11 = 1 (left: 11 1 12)\n1 / 11 = 0.0909090909 (left: 0.0909090909 12)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)",
                "12 / 11 = 1 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)",
                "12 - 11 = 1 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)"
            ],
            "values": [
                0.003,
                0.003,
                40.001,
                1.0,
                0.003,
                0.003,
                2.001,
                60.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 2.7",
                "2 <- 1.8",
                "3 <- 2.2",
                "4 <- INIT",
                "5 <- 1.5",
                "6 <- 1.6",
                "7 <- 1.5",
                "8 <- 1.5",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)",
                "12 - 11 = 1 (left: 1 12 12)",
                "12 - 11 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "",
                "12 - 11 = 1 (left: 1 12 12)",
                "12 - 11 = 1 (left: 11 1 12)",
                "12 - 11 = 1 (left: 1 12 12)",
                "12 - 11 = 1 (left: 1 12 12)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)"
            ]
        },
        "step_3": {
            "steps": [
                "12 - 11 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n5 / 3 = 1.6666666666666667 (left: 1.6666666666666667 7)",
                "12 - 11 = 1 (left: 1 12 12)\n12 + 1 = 13 (left: 13 12)",
                "12 - 11 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "11 + 11 = 22 (left: 12 12 22)",
                "12 - 11 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 11 1 12)\n12 / 1 = 12 (left: 11 12)",
                "12 - 11 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 1 12 12)\n12 + 1 = 13 (left: 13)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)"
            ],
            "values": [
                0.002,
                0.002,
                0.003,
                0.003,
                0.003,
                40.001,
                0.003,
                20.002,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 3.5",
                "2 <- 1.6",
                "3 <- 2.7",
                "4 <- 1.5",
                "5 <- 2.7",
                "6 <- 2.2",
                "7 <- 2.7",
                "8 <- 2.7",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 11 1 12)",
                "12 - 11 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 11 1 12)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)",
                "12 - 11 = 1 (left: 1 12 12)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)",
                "12 - 11 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)"
            ]
        },
        "step_4": {
            "steps": [
                "12 - 11 = 1 (left: 11 1 12)\n3 - 7 = -4 (left: 4 -4 2)",
                "12 - 11 = 1 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 - 11 = 1 (left: 11 1 12)\n1 - 11 = -10 (left: -10 12)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "12 - 11 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "12 - 11 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)"
            ],
            "values": [
                2.001,
                0.003,
                0.003,
                60.0,
                0.002,
                0.002,
                0.002,
                0.003,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 3.7",
                "1 <- 2.2",
                "2 <- 3.7",
                "3 <- 2.7",
                "4 <- 2.7",
                "5 <- INIT",
                "6 <- 4.9",
                "7 <- 4.3",
                "8 <- 2.7",
                "9 <- 4.3"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)",
                "",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)"
            ]
        },
        "step_5": {
            "steps": [
                "12 - 11 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 11 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 - 11 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n5 * 5 = 25 (left: 5 5 25)",
                "11 * 11 = 121 (left: 12 12 121)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (11 + (11 - 12)) + 12 = 24",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (11 + (11 - 12)) + 12 = 24",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "12 - 11 = 1 (left: 11 1 12)\n1 + 12 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (11 + (12 - 11)) + 12 = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ],
        "cost": 0.97143
    },
    "23": {
        "input": "3 7 7 8",
        "step_1": {
            "steps": [
                "7 - 3 = 4 (left: 4 7 8)",
                "7 / 3 = 2 (left: 2 7 8)",
                "7 / 3 = 2 (left: 2 7 8)",
                "8 - 7 = 1 (left: 3 7 1)",
                "7 - 3 = 4 (left: 4 7 8)",
                "7 / 3 = 2 (left: 2 7 8)",
                "3 + 7 = 10 (left: 7 7 8)",
                "7 / 3 = 2 (left: 2 8 8)",
                "Input: 4 6 6 9",
                "7 - 3 = 4 (left: 4 7 8)"
            ],
            "values": [
                2.001,
                2.001,
                1.002,
                3.0,
                3.0,
                3.0,
                3.0,
                2.001,
                0.003,
                41.0
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.9",
                "4 <- 1.9",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 1.9",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 4 7 8)",
                "",
                "",
                "7 - 3 = 4 (left: 4 7 8)",
                "7 - 3 = 4 (left: 4 7 8)",
                "",
                "",
                "",
                "7 - 3 = 4 (left: 4 7 8)",
                "7 - 3 = 4 (left: 4 7 8)"
            ]
        },
        "step_2": {
            "steps": [
                "7 - 3 = 4 (left: 4 7 8)\n4 + 7 = 11 (left: 8 11)",
                "7 - 3 = 4 (left: 4 7 8)",
                "7 - 3 = 4 (left: 4 7 8)",
                "7 - 3 = 4 (left: 4 7 8)\n8 - 4 = 4 (left: 4 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 / 4 = 1.75 (left: 1.75 8)",
                "7 * 3 = 21 (left: 7 8 21)",
                "7 / 3 = 2 (left: 2 7 8)",
                "3 * 7 = 21 (left: 7 8 21)",
                "7 - 3 = 4 (left: 4 7 8)\n4 + 7 = 11 (left: 8 11)",
                "7 - 3 = 4 (left: 4 7 8)\n4 + 7 = 11 (left: 8 11)"
            ],
            "values": [
                1.002,
                2.001,
                3.0,
                0.003,
                1.002,
                2.001,
                2.001,
                3.0,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.9",
                "4 <- 1.9",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 1.9",
                "8 <- 1.9",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "8 - 7 = 1 (left: 3 7 1)",
                "",
                "",
                "7 - 3 = 4 (left: 4 7 8)",
                "7 - 3 = 4 (left: 4 7 8)",
                "",
                "",
                "7 - 3 = 4 (left: 4 7 8)",
                "7 - 3 = 4 (left: 4 7 8)",
                "7 - 3 = 4 (left: 4 7 8)"
            ]
        },
        "step_3": {
            "steps": [
                "8 - 7 = 1 (left: 3 7 1)\n1 * 3 = 3 (left: 3)",
                "7 / 3 = 2 (left: 2 7 8)",
                "8 - 7 = 1 (left: 3 7 1)",
                "7 - 3 = 4 (left: 4 7 8)\n7 / 4 = 1.75 (left: 1.75 8)",
                "7 - 3 = 4 (left: 4 7 8)\n2 + 6 = 8 (left: 1.5 8 6)",
                "8 - 7 = 1 (left: 3 7 1)",
                "7 * 3 = 21 (left: 7 8 21)",
                "7 - 3 = 4 (left: 4 7 8)\n7 / 4 = 1.75 (left: 1.75 8)",
                "7 - 3 = 4 (left: 4 7 8)\n8 - 4 = 4 (left: 4 8)",
                "7 - 3 = 4 (left: 4 7 8)\n4 * 7 = 28 (left: 8 28)"
            ],
            "values": [
                0.002,
                1.002,
                2.001,
                0.001,
                3.0,
                3.0,
                2.001,
                0.003,
                0.002,
                1.002
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 1.9",
                "2 <- INIT",
                "3 <- 1.9",
                "4 <- 2.1",
                "5 <- 1.9",
                "6 <- 3.5",
                "7 <- 1.2",
                "8 <- 1.9",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 4 7 8)",
                "7 - 3 = 4 (left: 4 7 8)",
                "",
                "7 - 3 = 4 (left: 4 7 8)",
                "7 - 3 = 4 (left: 4 7 8)",
                "7 - 3 = 4 (left: 4 7 8)",
                "8 - 7 = 1 (left: 3 7 1)",
                "7 / 3 = 2 (left: 2 7 8)",
                "7 - 3 = 4 (left: 4 7 8)",
                "7 - 3 = 4 (left: 4 7 8)"
            ]
        },
        "step_4": {
            "steps": [
                "7 - 3 = 4 (left: 4 7 8)\nPossible next steps:",
                "7 - 3 = 4 (left: 4 7 8)\n8 - 4 = 4 (left: 4 8)",
                "3 + 7 = 10 (left: 7 8 10)",
                "7 - 3 = 4 (left: 4 7 8)\n4 + 7 = 11 (left: 8 11)",
                "7 - 3 = 4 (left: 4 7 8)\n8 + 4 = 12 (left: 7 12)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)",
                "8 - 7 = 1 (left: 3 7 1)\n3 - 2 = 1 (left: 5 1)",
                "7 / 3 = 2 (left: 2 7 8)\n8 - 3.5 = 4.5 (left: 4 4.5)",
                "7 - 3 = 4 (left: 4 7 8)\n4 * 7 = 28 (left: 8 28)",
                "7 - 3 = 4 (left: 4 7 8)\nInput: 1.75 3 8 15 4"
            ],
            "values": [
                0.003,
                0.003,
                3.0,
                1.002,
                0.002,
                20.002,
                1.001,
                1.0,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.9",
                "2 <- 3.1",
                "3 <- 4.5",
                "4 <- 1.9",
                "5 <- 4.7",
                "6 <- 4.5",
                "7 <- 4.5",
                "8 <- INIT",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 4 7 8)",
                "7 - 3 = 4 (left: 4 7 8)",
                "7 / 3 = 2 (left: 2 7 8)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)",
                "7 - 3 = 4 (left: 4 7 8)",
                "7 / 3 = 2 (left: 2 7 8)\n8 - 3.5 = 4.5 (left: 4 4.5)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)",
                "",
                "7 - 3 = 4 (left: 4 7 8)"
            ]
        },
        "step_5": {
            "steps": [
                "7 - 3 = 4 (left: 4 7 8)\n8 / 4 = 2 (left: 2 8)",
                "7 - 3 = 4 (left: 4 7 8)\n8 - 4 = 4 (left: 4 8)",
                "7 / 3 = 2 (left: 2 7 8)\n7 - 2 = 5 (left: 5 8)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "7 / 3 = 2 (left: 2 7 8)\n8 - 3.5 = 4.5 (left: 4 4.5)\n4 - 4.5 = -0.5 (left: -0.5)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)\n1 + 3 = 4 (left: 3 4)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)\n10 / 5 = 2 (left: 2 15)",
                "Possible next steps:",
                "7 - 3 = 4 (left: 4 7 8)\n8 / 4 = 2 (left: 2 8)"
            ],
            "values": [
                1.002,
                0.003,
                0.003,
                41.0,
                60.0,
                0.002,
                2.0,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 4.5",
                "1 <- 5.3",
                "2 <- 5.4",
                "3 <- 5.4",
                "4 <- 2.2",
                "5 <- 5.4",
                "6 <- 5.4",
                "7 <- 5.4",
                "8 <- 4.5",
                "9 <- 4.5"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)"
            ]
        },
        "step_6": {
            "steps": [
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)\n1 * 3 = 3 (left: 3 3)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)\n3 / 2 = 1.5 (left: 1.5)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11) ",
                "7 - 3 = 4 (left: 4 7 8)\n8 - 4 = 4 (left: 4 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 / 8 = 0.375 (left: 0.375)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)\n1 * 3 = 3 (left: 3 3)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)"
            ],
            "values": [
                0.001,
                0.0,
                60.0,
                0.003,
                0.003,
                0.003,
                0.001,
                0.002,
                0.001,
                1.002
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 5.4",
                "2 <- 3.6",
                "3 <- 6.2",
                "4 <- 5.4",
                "5 <- 5.4",
                "6 <- 6.2",
                "7 <- 5.3",
                "8 <- 5.3",
                "9 <- 5.4"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "7 * 3 = 21 (left: 7 8 21)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)"
            ]
        },
        "step_7": {
            "steps": [
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 + 8 = 11 (left: 8)",
                "7 * 3 = 21 (left: 7 8 21)\n21 / 7 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 3) * (7 - 4) * 8 = 24",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n6 + 9 = 15 (left: 15)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 3) * (7 - 4) * 8 = 24",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)\n3 / 2 = 1.5 (left: 1.5)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)\nInput: 10 5",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)"
            ],
            "values": [
                0.003,
                0.002,
                60.0,
                20.002,
                0.003,
                40.0,
                0.003,
                0.001,
                0.003,
                40.0
            ],
            "resampled": [
                "0 <- 7.9",
                "1 <- 5.4",
                "2 <- 5.4",
                "3 <- 6.2",
                "4 <- 7.5",
                "5 <- 7.2",
                "6 <- 7.5",
                "7 <- 7.2",
                "8 <- 7.2",
                "9 <- 6.2"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 * 3 = 21 (left: 7 8 21)\n21 / 7 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 * 3 = 21 (left: 7 8 21)\n21 / 7 = 3 (left: 3 8)",
                "7 * 3 = 21 (left: 7 8 21)\n21 / 7 = 3 (left: 3 8)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)"
            ]
        },
        "step_8": {
            "steps": [
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 3) * (7 - 4) * 8 = 24",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 3) * (7 - 4) * 8 = 24",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 3) * (7 - 4) * 8 = 24",
                "7 * 3 = 21 (left: 7 8 21)\n21 / 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 3) * (7 - 4) * 8 = 24",
                "7 * 3 = 21 (left: 7 8 21)\n21 / 7 = 3 (left: 3 8)\nPossible next steps:",
                "7 * 3 = 21 (left: 7 8 21)\n21 / 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 3) * (7 - 4) * 8 = 24"
            ],
            "values": [
                0.003,
                60.0,
                60.0,
                0.003,
                0.003,
                0.002,
                20.002,
                0.003,
                60.0,
                20.002
            ],
            "resampled": [
                "0 <- 6.2",
                "1 <- 4.5",
                "2 <- 7.5",
                "3 <- 7.5",
                "4 <- 8.8",
                "5 <- 5.3",
                "6 <- 8.2",
                "7 <- 7.2",
                "8 <- 7.2",
                "9 <- 8.8"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 * 3 = 21 (left: 7 8 21)\n21 / 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 * 3 = 21 (left: 7 8 21)\n21 / 7 = 3 (left: 3 8)",
                "7 * 3 = 21 (left: 7 8 21)\n21 / 7 = 3 (left: 3 8)",
                "7 * 3 = 21 (left: 7 8 21)\n21 / 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)"
            ]
        },
        "step_9": {
            "steps": [
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (7 - (7 - 8)) = 24",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)\n1 * 3 = 3 (left: 3 3)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 3) * (7 - 4) * 8 = 24",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 3) * (7 - 4) * 8 = 24",
                "7 * 3 = 21 (left: 7 8 21)\n21 / 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 * 3) / (7 - 8) = 24",
                "7 - 3 = 4 (left: 4 7 8)\n3 / 3 = 1 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)\n2 + 3 = 5 (left: 5)",
                "7 - 3 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 3) * (7 - 4) * 8 = 24",
                "7 * 3 = 21 (left: 7 8 21)\n21 / 7 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "7 * 3 = 21 (left: 7 8 21)\n21 / 7 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "7 * 3 = 21 (left: 7 8 21)\n21 / 7 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 * 3) * (7 - 8) = 24"
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.0166895
    },
    "24": {
        "input": "1 1 13 13",
        "step_1": {
            "steps": [
                "1 * 1 = 1 (left: 1 13 13)",
                "1 + 1 = 2 (left: 2 13 13)",
                "1 * 1 = 1 (left: 1 13 13)",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 / 1 = 13 (left: 1 13 13)",
                "13 - 1 = 12 (left: 1 12 13)",
                "13 / 1 = 13 (left: 1 13 13)",
                "13 / 1 = 13 (left: 1 13 13)"
            ],
            "values": [
                0.003,
                1.002,
                0.003,
                0.003,
                0.003,
                20.002,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- INIT",
                "2 <- 1.5",
                "3 <- 1.5",
                "4 <- 1.5",
                "5 <- 1.5",
                "6 <- 1.5",
                "7 <- INIT",
                "8 <- 1.5",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "13 + 1 = 14 (left: 1 13 14)",
                "",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 + 1 = 14 (left: 1 13 14)",
                "",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 + 1 = 14 (left: 1 13 14)"
            ]
        },
        "step_2": {
            "steps": [
                "13 + 1 = 14 (left: 1 13 14)\n13 - 1 = 12 (left: 12 14)",
                "1 + 1 = 2 (left: 2 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 1 = 12 (left: 12 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)",
                "13 + 1 = 14 (left: 1 13 14)\n13 + 1 = 14 (left: 1 14)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)",
                "13 + 1 = 14 (left: 1 13 14)\n14 / 1 = 14 (left: 14 14)",
                "1 - 1 = 0 (left: 0 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\nPossible next steps:",
                "13 + 1 = 14 (left: 1 13 14)\n13 / 1 = 13 (left: 1 14)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                3.0,
                0.002,
                21.001,
                0.003,
                0.003,
                0.003,
                0.0
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 1.5",
                "2 <- INIT",
                "3 <- 2.3",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 2.5",
                "7 <- INIT",
                "8 <- 2.5",
                "9 <- 2.5"
            ],
            "resampled_steps": [
                "13 + 1 = 14 (left: 1 13 14)",
                "13 + 1 = 14 (left: 1 13 14)",
                "",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)",
                "",
                "",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)",
                "",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)"
            ]
        },
        "step_3": {
            "steps": [
                "13 + 1 = 14 (left: 1 13 14)\n13 / 1 = 13 (left: 13 14)",
                "13 + 1 = 14 (left: 1 13 14)\n1 * 13 = 13 (left: 13 14)",
                "1 * 1 = 1 (left: 1 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "1 + 1 = 2 (left: 2 13 13)",
                "13 - 1 = 12 (left: 1 12 13)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n14 / 1 = 14 (left: 14)",
                "13 - 1 = 12 (left: 1 12 13)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n14 - 1 = 13 (left: 13)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n1 * 14 = 14 (left: 14)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                40.0,
                0.003,
                1.002,
                0.002,
                0.003,
                0.002,
                0.0
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 1.5",
                "2 <- 2.5",
                "3 <- 1.5",
                "4 <- 2.5",
                "5 <- INIT",
                "6 <- 2.5",
                "7 <- 3.3",
                "8 <- INIT",
                "9 <- 2.5"
            ],
            "resampled_steps": [
                "13 + 1 = 14 (left: 1 13 14)",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)",
                "",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)"
            ]
        },
        "step_4": {
            "steps": [
                "13 + 1 = 14 (left: 1 13 14)\n13 / 1 = 13 (left: 13 14)",
                "13 + 1 = 14 (left: 1 13 14)\n14 - 1 = 13 (left: 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n1 * 14 = 14 (left: 14)",
                "13 + 1 = 14 (left: 1 13 14)\n14 - 13 = 1 (left: 1 14)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n1 + 14 = 15 (left: 15)",
                "1 / 1 = 1 (left: 1 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n1 * 14 = 14 (left: 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 - 1 = 6 (left: 6)",
                "1 * 1 = 1 (left: 1 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n1 + 14 = 15 (left: 15)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                0.001,
                0.002,
                0.003,
                0.003,
                0.002,
                0.003,
                0.0
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 3.3",
                "2 <- INIT",
                "3 <- 2.5",
                "4 <- 3.3",
                "5 <- 1.5",
                "6 <- INIT",
                "7 <- 1.5",
                "8 <- INIT",
                "9 <- 3.3"
            ],
            "resampled_steps": [
                "13 + 1 = 14 (left: 1 13 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "13 + 1 = 14 (left: 1 13 14)",
                "",
                "13 + 1 = 14 (left: 1 13 14)",
                "",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)"
            ]
        },
        "step_5": {
            "steps": [
                "13 + 1 = 14 (left: 1 13 14)\n14 - 1 = 13 (left: 1 13)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n1 + 7 = 8 (left: 8)",
                "1 * 1 = 1 (left: 1 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n14 / 1 = 14 (left: 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n1 * 7 = 7 (left: 7)",
                "13 + 1 = 14 (left: 1 13 14)\n14 / 1 = 14 (left: 13 14)",
                "1 + 1 = 2 (left: 2 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n14 - 1 = 13 (left: 1 13)",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n1 + 7 = 8 (left: 8)"
            ],
            "values": [
                0.002,
                0.002,
                20.002,
                0.002,
                0.001,
                0.003,
                0.003,
                0.003,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 2.3",
                "2 <- 3.3",
                "3 <- 2.5",
                "4 <- 2.5",
                "5 <- 3.3",
                "6 <- 3.3",
                "7 <- 1.5",
                "8 <- 5.8",
                "9 <- 5.2"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 + 1 = 14 (left: 1 13 14)",
                "1 * 1 = 1 (left: 1 13 13)"
            ]
        },
        "step_6": {
            "steps": [
                "1 * 1 = 1 (left: 1 13 13)\n13 / 1 = 13 (left: 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n7 - 4 = 3 (left: 3 7)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 / 1 = 7 (left: 7)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n1 * 14 = 14 (left: 14)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n1 + 14 = 15 (left: 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n1 * 7 = 7 (left: 7)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 - 1 = 6 (left: 6)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 1 = 12 (left: 12)",
                "13 + 1 = 14 (left: 1 13 14)\n1 - 13 = -12 (left: -12 14)",
                "1 * 1 = 1 (left: 1 13 13)\n13 / 1 = 13 (left: 13 13)"
            ],
            "values": [
                0.003,
                1.0,
                0.002,
                0.002,
                0.002,
                0.001,
                0.002,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 2.3",
                "2 <- 5.2",
                "3 <- 3.3",
                "4 <- 5.2",
                "5 <- 5.2",
                "6 <- 5.2",
                "7 <- 6.1",
                "8 <- 2.5",
                "9 <- 5.2"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)",
                "1 * 1 = 1 (left: 1 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "1 * 1 = 1 (left: 1 13 13)",
                "1 * 1 = 1 (left: 1 13 13)",
                "1 * 1 = 1 (left: 1 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n7 - 4 = 3 (left: 3 7)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)",
                "1 * 1 = 1 (left: 1 13 13)"
            ]
        },
        "step_7": {
            "steps": [
                "1 * 1 = 1 (left: 1 13 13)\n13 / 1 = 13 (left: 13 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n15 - 10 = 5 (left: 5 5)",
                "1 * 1 = 1 (left: 1 13 13)\n13 / 1 = 13 (left: 13 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 / 1 = 7 (left: 7)",
                "1 * 1 = 1 (left: 1 13 13)\nInput: 3 5 7 9",
                "1 * 1 = 1 (left: 1 13 13)\n13 - 1 = 12 (left: 12 13)",
                "1 * 1 = 1 (left: 1 13 13)\n1 + 13 = 14 (left: 13 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n7 - 4 = 3 (left: 3 7)\n3 - 5 = -2 (left: -2 3)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n1 + 14 = 15 (left: 15)",
                "1 * 1 = 1 (left: 1 13 13)\n13 - 13 = 0 (left: 1)"
            ],
            "values": [
                1.002,
                0.003,
                0.003,
                0.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 2.5",
                "2 <- 3.3",
                "3 <- 5.2",
                "4 <- 3.3",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 3.3",
                "8 <- 2.5",
                "9 <- 3.3"
            ],
            "resampled_steps": [
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "1 * 1 = 1 (left: 1 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "",
                "",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)"
            ]
        },
        "step_8": {
            "steps": [
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n1 + 7 = 8 (left: 8)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n14 / 1 = 14 (left: 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 / 1 = 7 (left: 7)",
                "1 * 1 = 1 (left: 1 13 13)\n13 / 1 = 13 (left: 13 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 - 1 = 6 (left: 6)",
                "1 - 1 = 0 (left: 0 13 13)",
                "13 / 1 = 13 (left: 1 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 * 1 = 7 (left: 7)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n1 * 14 = 14 (left: 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 / 1 = 7 (left: 7)"
            ],
            "values": [
                0.003,
                0.001,
                0.0,
                0.003,
                0.003,
                0.003,
                1.002,
                0.002,
                0.001,
                0.001
            ],
            "resampled": [
                "0 <- 2.5",
                "1 <- 5.2",
                "2 <- 5.2",
                "3 <- 5.2",
                "4 <- 5.2",
                "5 <- 5.8",
                "6 <- 3.3",
                "7 <- 5.2",
                "8 <- 3.3",
                "9 <- 3.3"
            ],
            "resampled_steps": [
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)",
                "1 * 1 = 1 (left: 1 13 13)",
                "1 * 1 = 1 (left: 1 13 13)",
                "1 * 1 = 1 (left: 1 13 13)",
                "1 * 1 = 1 (left: 1 13 13)",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "1 * 1 = 1 (left: 1 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)"
            ]
        },
        "step_9": {
            "steps": [
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n1 * 14 = 14 (left: 14)",
                "1 * 1 = 1 (left: 1 13 13)\n13 + 1 = 14 (left: 13 14)",
                "1 * 1 = 1 (left: 1 13 13)\n5 - 5 = 0 (left: 0 10)",
                "1 * 1 = 1 (left: 1 13 13)\n13 / 1 = 13 (left: 13 13 13)",
                "1 * 1 = 1 (left: 1 13 13)\n4 * 5 = 20 (left: 20 20)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 1 = 12 (left: 12 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n1 * 7 = 7 (left: 7)",
                "1 * 1 = 1 (left: 1 13 13)\n13 - 1 = 12 (left: 12 13)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n1 + 7 = 8 (left: 8)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 - 1 = 6 (left: 6)"
            ],
            "values": [
                0.001,
                0.003,
                0.0,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.0,
                0.002
            ],
            "resampled": [
                "0 <- 2.5",
                "1 <- 3.3",
                "2 <- 5.2",
                "3 <- 2.5",
                "4 <- 1.5",
                "5 <- 3.3",
                "6 <- 2.5",
                "7 <- 3.3",
                "8 <- 2.5",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "1 * 1 = 1 (left: 1 13 13)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)",
                "13 + 1 = 14 (left: 1 13 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)"
            ]
        },
        "step_10": {
            "steps": [
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n1 + 14 = 15 (left: 15)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 - 1 = 6 (left: 6)",
                "1 * 1 = 1 (left: 1 13 13)\n13 - 13 = 0 (left: 1)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n1 + 14 = 15 (left: 15)",
                "13 + 1 = 14 (left: 1 13 14)\n1 * 13 = 13 (left: 13 14)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n1 * 7 = 7 (left: 7)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n14 - 1 = 13 (left: 13)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 - 1 = 6 (left: 6)",
                "13 + 1 = 14 (left: 1 13 14)\n13 - 13 = 0 (left: 1 14)\n1 + 14 = 15 (left: 15)",
                "13 + 1 = 14 (left: 1 13 14)\n9 - 5 = 4 (left: 3 4 7)\n4 * 3 = 12 (left: 12 7)"
            ],
            "values": [
                0.002,
                0.002,
                0.002,
                0.002,
                0.003,
                0.002,
                0.002,
                0.003,
                0.002,
                20.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.0650445
    },
    "25": {
        "input": "1 2 4 12",
        "step_1": {
            "steps": [
                "2 * 2 = 4 (left: 4 4 12)",
                "12 - 1 = 11 (left: 2 4 11)",
                "1 + 2 = 3 (left: 3 4 12)",
                "4 * 3 = 12 (left: 1 12 12)",
                "12 / 4 = 3 (left: 1 2 3)",
                "2 * 1 = 2 (left: 2 4 12)",
                "2 * 4 = 8 (left: 1 8 12)",
                "4 + 1 = 5 (left: 5 12)",
                "4 / 2 = 2 (left: 1 2 12)",
                "2 * 4 = 8 (left: 1 8 12)"
            ],
            "values": [
                21.001,
                2.001,
                41.0,
                20.001,
                1.001,
                3.0,
                2.001,
                21.001,
                60.0,
                1.002
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 1.8",
                "2 <- 1.2",
                "3 <- 1.5",
                "4 <- 1.0",
                "5 <- 1.8",
                "6 <- 1.8",
                "7 <- 1.8",
                "8 <- INIT",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 4 12)",
                "4 / 2 = 2 (left: 1 2 12)",
                "1 + 2 = 3 (left: 3 4 12)",
                "2 * 1 = 2 (left: 2 4 12)",
                "2 * 2 = 4 (left: 4 4 12)",
                "4 / 2 = 2 (left: 1 2 12)",
                "4 / 2 = 2 (left: 1 2 12)",
                "4 / 2 = 2 (left: 1 2 12)",
                "",
                "1 + 2 = 3 (left: 3 4 12)"
            ]
        },
        "step_2": {
            "steps": [
                "1 + 2 = 3 (left: 3 4 12)\n9 / 5 = 1.8 (left: 5 1.8 9)",
                "4 / 2 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)",
                "1 + 2 = 3 (left: 3 4 12)\n12 / 3 = 4 (left: 4)",
                "2 * 1 = 2 (left: 2 4 12)\n2 * 4 = 8 (left: 8 12)",
                "2 * 2 = 4 (left: 4 4 12)\nInput: 1 8 12",
                "4 / 2 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "4 / 2 = 2 (left: 1 2 12)\n12 - 1 = 11 (left: 2 11)",
                "4 / 2 = 2 (left: 1 2 12)\n12 - 1 = 11 (left: 2 11)",
                "12 - 2 = 10 (left: 1 4 10)",
                "1 + 2 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 4 8)"
            ],
            "values": [
                3.0,
                60.0,
                0.0,
                0.002,
                0.003,
                60.0,
                0.002,
                0.001,
                3.0,
                0.002
            ],
            "resampled": [
                "0 <- 2.5",
                "1 <- 1.7",
                "2 <- 1.8",
                "3 <- 2.5",
                "4 <- 2.5",
                "5 <- 1.8",
                "6 <- INIT",
                "7 <- 2.1",
                "8 <- 1.3",
                "9 <- 2.1"
            ],
            "resampled_steps": [
                "4 / 2 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "4 + 1 = 5 (left: 5 12)",
                "4 / 2 = 2 (left: 1 2 12)",
                "4 / 2 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "4 / 2 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "4 / 2 = 2 (left: 1 2 12)",
                "",
                "4 / 2 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)",
                "4 * 3 = 12 (left: 1 12 12)",
                "4 / 2 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)"
            ]
        },
        "step_3": {
            "steps": [
                "4 / 2 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "4 + 1 = 5 (left: 5 12)\n12 - 5 = 7 (left: 7)",
                "4 / 2 = 2 (left: 1 2 12)\n2 + 12 = 14 (left: 1 14)",
                "4 / 2 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\nInput: 3 6 18",
                "4 / 2 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 24 = 0 (left: 0)",
                "4 / 2 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "12 / 2 = 6 (left: 1 4 6)",
                "4 / 2 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "4 * 3 = 12 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)",
                "4 / 2 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ],
            "values": [
                0.002,
                0.001,
                21.0,
                0.003,
                0.001,
                60.0,
                60.0,
                0.002,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 2.5",
                "1 <- 3.5",
                "2 <- 3.9",
                "3 <- 3.2",
                "4 <- 1.7",
                "5 <- 3.9",
                "6 <- 1.2",
                "7 <- 3.5",
                "8 <- 3.9",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "4 / 2 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "4 / 2 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "4 / 2 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "4 / 2 = 2 (left: 1 2 12)\n2 + 12 = 14 (left: 1 14)",
                "4 + 1 = 5 (left: 5 12)",
                "4 / 2 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 4 12)",
                "4 / 2 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "4 / 2 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "4 / 2 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)"
            ]
        },
        "step_4": {
            "steps": [
                "4 / 2 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 + 1 = 25 (left: 25)",
                "4 / 2 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "4 / 2 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 1 * (4 / 2) * 12 = 24",
                "4 / 2 = 2 (left: 1 2 12)\n2 + 12 = 14 (left: 1 14)\n14 - 1 = 13 (left: 13)",
                "4 + 1 = 5 (left: 5 12)\n5 + 12 = 17 (left: 17)",
                "4 / 2 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 * 2) * (4 / 2) = 24",
                "1 + 2 = 3 (left: 3 4 12)\n12 / 4 = 3 (left: 3 12)",
                "4 / 2 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "4 / 2 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 * 2) * (4 / 2) = 24",
                "4 / 2 = 2 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 * 1 = 24 (left: 24)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.0862660000000002
    },
    "26": {
        "input": "1 1 3 6",
        "step_1": {
            "steps": [
                "3 * 1 = 3 (left: 1 3 6)",
                "1 * 1 = 1 (left: 1 3 6)",
                "6 / 1 = 6 (left: 1 3 6)",
                "3 + 1 = 4 (left: 1 4 6)",
                "3 - 1 = 2 (left: 4 5 2)",
                "6 - 3 = 3 (left: 1 3 3)",
                "6 - 3 = 3 (left: 1 3 3)",
                "6 / 3 = 2 (left: 1 1 2)",
                "Input: 4 7 2 3",
                "1 * 1 = 1 (left: 1 3 6)"
            ],
            "values": [
                3.0,
                60.0,
                22.0,
                40.001,
                3.0,
                1.002,
                1.002,
                22.0,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.2",
                "2 <- 1.3",
                "3 <- 1.3",
                "4 <- 1.1",
                "5 <- INIT",
                "6 <- 1.2",
                "7 <- 1.1",
                "8 <- 1.1",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "6 / 3 = 2 (left: 1 1 2)",
                "6 / 1 = 6 (left: 1 3 6)",
                "3 + 1 = 4 (left: 1 4 6)",
                "3 + 1 = 4 (left: 1 4 6)",
                "1 * 1 = 1 (left: 1 3 6)",
                "",
                "6 / 1 = 6 (left: 1 3 6)",
                "1 * 1 = 1 (left: 1 3 6)",
                "1 * 1 = 1 (left: 1 3 6)",
                "1 * 1 = 1 (left: 1 3 6)"
            ]
        },
        "step_2": {
            "steps": [
                "6 / 3 = 2 (left: 1 1 2)\n1 * 1 = 1 (left: 1 2)",
                "6 / 1 = 6 (left: 1 3 6)\n3 * 1 = 3 (left: 3)",
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "3 + 1 = 4 (left: 1 4 6)\n6 / 4 = 1.5 (left: 1.5 6)",
                "1 * 1 = 1 (left: 1 3 6)\n1 * 3 = 3 (left: 3)",
                "1 + 1 = 2 (left: 2 3 6)",
                "6 / 1 = 6 (left: 1 3 6)\n4 + 5 = 9 (left: 9 10)",
                "1 * 1 = 1 (left: 1 3 6)\n6 / 3 = 2 (left: 1 2)",
                "1 * 1 = 1 (left: 1 3 6)\n10 / 5 = 2 (left: 2 15)",
                "1 * 1 = 1 (left: 1 3 6)\n3 / 1 = 3 (left: 3)"
            ],
            "values": [
                0.003,
                0.002,
                60.0,
                1.001,
                0.002,
                40.001,
                0.002,
                40.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 1.1",
                "2 <- 2.5",
                "3 <- 1.1",
                "4 <- 2.2",
                "5 <- 2.5",
                "6 <- 1.1",
                "7 <- 1.1",
                "8 <- 2.7",
                "9 <- 1.3"
            ],
            "resampled_steps": [
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 3 6)",
                "1 + 1 = 2 (left: 2 3 6)",
                "1 * 1 = 1 (left: 1 3 6)",
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "1 + 1 = 2 (left: 2 3 6)",
                "1 * 1 = 1 (left: 1 3 6)",
                "1 * 1 = 1 (left: 1 3 6)",
                "1 * 1 = 1 (left: 1 3 6)\n6 / 3 = 2 (left: 1 2)",
                "3 + 1 = 4 (left: 1 4 6)"
            ]
        },
        "step_3": {
            "steps": [
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "1 * 1 = 1 (left: 1 3 6)\nPossible next steps:",
                "1 + 1 = 2 (left: 2 3 6)\n2 + 3 = 5 (left: 5 6)",
                "1 * 1 = 1 (left: 1 3 6)\n6 / 3 = 2 (left: 1 2)",
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "1 + 1 = 2 (left: 2 3 6)\n10 / 5 = 2 (left: 2 2)",
                "1 * 1 = 1 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)",
                "1 * 1 = 1 (left: 1 3 6)\n9 / 3 = 3 (left: 3 5 7)",
                "1 * 1 = 1 (left: 1 3 6)\n6 / 3 = 2 (left: 1 2)\n2 - 1 = 1 (left: 1)",
                "3 + 1 = 4 (left: 1 4 6)\nInput: 3 5 7 9"
            ],
            "values": [
                0.001,
                0.003,
                0.003,
                0.002,
                0.002,
                0.002,
                40.0,
                3.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 1.1",
                "2 <- 2.7",
                "3 <- 2.5",
                "4 <- 2.5",
                "5 <- 1.3",
                "6 <- INIT",
                "7 <- 2.2",
                "8 <- 1.2",
                "9 <- 1.7"
            ],
            "resampled_steps": [
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "1 * 1 = 1 (left: 1 3 6)",
                "1 * 1 = 1 (left: 1 3 6)\n6 / 3 = 2 (left: 1 2)",
                "1 + 1 = 2 (left: 2 3 6)",
                "1 + 1 = 2 (left: 2 3 6)",
                "3 + 1 = 4 (left: 1 4 6)",
                "",
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "6 / 1 = 6 (left: 1 3 6)",
                "6 / 3 = 2 (left: 1 1 2)"
            ]
        },
        "step_4": {
            "steps": [
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 3 6)\n3 * 1 = 3 (left: 3 6)",
                "1 * 1 = 1 (left: 1 3 6)\n6 / 3 = 2 (left: 1 2)\n1 * 2 = 2 (left: 2)",
                "1 + 1 = 2 (left: 2 3 6)\nPossible next steps:",
                "1 + 1 = 2 (left: 2 3 6)\n9 / 3 = 3 (left: 3)",
                "3 + 1 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)",
                "8 - 4 = 4 (left: 2 4 8)",
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "6 / 1 = 6 (left: 1 3 6)\n3 + 6 = 9 (left: 1 9)",
                "6 / 3 = 2 (left: 1 1 2)\nInput: 5 6 7"
            ],
            "values": [
                60.0,
                22.0,
                0.002,
                0.003,
                0.002,
                60.0,
                20.002,
                40.0,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 4.0",
                "1 <- 1.7",
                "2 <- 2.7",
                "3 <- 4.1",
                "4 <- 2.5",
                "5 <- 3.6",
                "6 <- 2.5",
                "7 <- 1.3",
                "8 <- 2.2",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "6 / 3 = 2 (left: 1 1 2)",
                "1 * 1 = 1 (left: 1 3 6)\n6 / 3 = 2 (left: 1 2)",
                "1 * 1 = 1 (left: 1 3 6)\n3 * 1 = 3 (left: 3 6)",
                "1 + 1 = 2 (left: 2 3 6)",
                "1 * 1 = 1 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)",
                "1 + 1 = 2 (left: 2 3 6)",
                "3 + 1 = 4 (left: 1 4 6)",
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "6 / 1 = 6 (left: 1 3 6)"
            ]
        },
        "step_5": {
            "steps": [
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (1 + 3) * (6 + 1) = 24",
                "6 / 3 = 2 (left: 1 1 2)\n1 * 1 = 1 (left: 1 2)",
                "1 * 1 = 1 (left: 1 3 6)\n6 / 3 = 2 (left: 1 2)\n2 / 1 = 2 (left: 2)",
                "1 * 1 = 1 (left: 1 3 6)\n3 * 1 = 3 (left: 3 6)\n6 - 3 = 3 (left: 3)",
                "1 + 1 = 2 (left: 2 3 6)\n12 / 4 = 3 (left: 3 9)",
                "1 * 1 = 1 (left: 1 3 6)\n1 + 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "1 + 1 = 2 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)",
                "3 + 1 = 4 (left: 1 4 6)\n6 - 4 = 2 (left: 1 2)",
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 - 1 = 23 (left: 24)",
                "6 / 1 = 6 (left: 1 3 6)\n10 / 4 = 2 (left: 4 2)"
            ],
            "values": [
                20.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                0.001,
                0.003,
                20.0,
                0.003
            ],
            "resampled": [
                "0 <- 4.5",
                "1 <- 4.5",
                "2 <- 4.7",
                "3 <- 5.0",
                "4 <- 4.0",
                "5 <- INIT",
                "6 <- 4.7",
                "7 <- 1.1",
                "8 <- 4.6",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "3 + 1 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)",
                "3 + 1 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)",
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (1 + 3) * (6 + 1) = 24",
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "",
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 3 6)",
                "8 - 4 = 4 (left: 2 4 8)",
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)"
            ]
        },
        "step_6": {
            "steps": [
                "3 + 1 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "3 + 1 = 4 (left: 1 4 6)\n4 / 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (1 * (3 + 1)) * 6 = 24",
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (1 + 3) * (6 + 1) = 24\nInput: 3 5 7 9\nSteps:\n5 + 9 = 14 (left: 3 7 14)\n7 - 3 = 4 (left: 4 14)\n4 * 14 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: (((3 + 5) * (7 - 3)) / 2) - 4 = 24",
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (3 + 1) * (6 * 1) = 24",
                "1 * 1 = 1 (left: 1 3 6)",
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (3 + 1) * (6 * 1) = 24",
                "1 * 1 = 1 (left: 1 3 6)\n4 + 5 = 9 (left: 7 9)",
                "8 - 4 = 4 (left: 2 4 8)\n8 - 4 = 4 (left: 2 4)",
                "3 + 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.1168079999999998
    },
    "27": {
        "input": "1 1 3 9",
        "step_1": {
            "steps": [
                "9 / 3 = 3 (left: 1 3 3)",
                "9 - 1 = 8 (left: 1 3 8)",
                "Possible next steps:",
                "1 * 1 = 1 (left: 1 3 9)",
                "1 + 1 = 2 (left: 2 3 9)",
                "1 + 1 = 2 (left: 2 3 9)",
                "1 * 1 = 1 (left: 1 3 9)",
                "3 + 1 = 4 (left: 1 4 9)",
                "1 * 1 = 1 (left: 1 3 9)",
                "9 - 3 = 6 (left: 1 6 9)"
            ],
            "values": [
                2.001,
                60.0,
                0.003,
                1.002,
                1.002,
                0.003,
                0.003,
                22.0,
                20.002,
                2.001
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.1",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 1.7",
                "6 <- 1.1",
                "7 <- 1.1",
                "8 <- INIT",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "9 - 1 = 8 (left: 1 3 8)",
                "9 - 1 = 8 (left: 1 3 8)",
                "",
                "",
                "",
                "3 + 1 = 4 (left: 1 4 9)",
                "9 - 1 = 8 (left: 1 3 8)",
                "9 - 1 = 8 (left: 1 3 8)",
                "",
                "9 - 1 = 8 (left: 1 3 8)"
            ]
        },
        "step_2": {
            "steps": [
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n12 - 5 = 7 (left: 7 9 12)",
                "9 / 3 = 3 (left: 1 3 3)",
                "9 / 3 = 3 (left: 1 3 3)",
                "8 - 6 = 2 (left: 2 5 6)",
                "3 + 1 = 4 (left: 1 4 9)\n6 - 3 = 3 (left: 3 12)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)",
                "9 - 1 = 8 (left: 1 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n8 / 3 = 2.67 (left: 1 2.67)"
            ],
            "values": [
                60.0,
                3.0,
                2.001,
                0.003,
                3.0,
                0.003,
                60.0,
                0.002,
                40.001,
                1.002
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 2.8",
                "2 <- 2.8",
                "3 <- 1.1",
                "4 <- 2.0",
                "5 <- 2.6",
                "6 <- 2.6",
                "7 <- 2.8",
                "8 <- 1.1",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)",
                "9 - 1 = 8 (left: 1 3 8)",
                "9 - 1 = 8 (left: 1 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)",
                "9 - 1 = 8 (left: 1 3 8)",
                "9 - 1 = 8 (left: 1 3 8)"
            ]
        },
        "step_3": {
            "steps": [
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "9 - 1 = 8 (left: 1 3 8)\n3 - 1 = 2 (left: 2 8)",
                "9 - 1 = 8 (left: 1 3 8)\n4 - 5 = -1 (left: -1 7)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "9 - 1 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "9 - 1 = 8 (left: 1 3 8)\n1 + 3 = 4 (left: 4 8)",
                "9 - 1 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)"
            ],
            "values": [
                0.002,
                60.0,
                0.003,
                0.001,
                0.002,
                0.002,
                0.003,
                0.003,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 2.0",
                "2 <- 3.9",
                "3 <- 3.9",
                "4 <- 2.1",
                "5 <- 2.0",
                "6 <- 2.6",
                "7 <- 3.9",
                "8 <- 3.1",
                "9 <- 3.1"
            ],
            "resampled_steps": [
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n12 - 5 = 7 (left: 7 9 12)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)"
            ]
        },
        "step_4": {
            "steps": [
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n9 / 5 = 1.8 (left: 1.8)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "9 - 1 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "9 - 1 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n6 * 9 = 54 (left: 54)",
                "9 - 1 = 8 (left: 1 3 8)\n12 - 5 = 7 (left: 7 9 12)\n12 - 7 = 5 (left: 7 5)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\nPossible next steps:",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n4 * 7 = 28 (left: 28 3)",
                "9 - 1 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 8 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)"
            ],
            "values": [
                0.001,
                60.0,
                0.002,
                0.003,
                0.003,
                0.003,
                0.001,
                1.002,
                21.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 2.6",
                "2 <- 2.0",
                "3 <- 2.6",
                "4 <- 1.8",
                "5 <- 3.9",
                "6 <- 2.8",
                "7 <- 2.6",
                "8 <- 2.0",
                "9 <- 4.1"
            ],
            "resampled_steps": [
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 3 9)",
                "9 - 1 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)"
            ]
        },
        "step_5": {
            "steps": [
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5) ",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 3 9)\nInput: 5 5 25",
                "9 - 1 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "9 - 1 = 8 (left: 1 3 8)\n8 - 1 = 7 (left: 7 3)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\nPossible next steps:",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (9 - 1)) * 8 = 24"
            ],
            "values": [
                0.002,
                0.003,
                0.001,
                60.0,
                0.003,
                60.0,
                0.001,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 1.8",
                "2 <- 5.5",
                "3 <- 2.8",
                "4 <- 5.5",
                "5 <- 4.1",
                "6 <- 5.5",
                "7 <- 2.0",
                "8 <- 1.1",
                "9 <- 5.3"
            ],
            "resampled_steps": [
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "1 * 1 = 1 (left: 1 3 9)",
                "9 - 1 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "9 - 1 = 8 (left: 1 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "9 - 1 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)"
            ]
        },
        "step_6": {
            "steps": [
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5 8)",
                "1 * 1 = 1 (left: 1 3 9)\nInput: 4 6 10",
                "9 - 1 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (9 - (1 / 1)) = 24",
                "9 - 1 = 8 (left: 1 3 8)\n4 * 5 = 20 (left: 20 9)",
                "9 - 1 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - 1) * (1 + 3) = 24",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (9 - 1)) * 8 = 24",
                "9 - 1 = 8 (left: 1 3 8)\n8 / 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - 1) / (1 + 3) * 8 = 24",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "9 - 1 = 8 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 1 3 8)\n3 * 1 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (9 - 1)) * 8 = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.1465425
    },
    "28": {
        "input": "7 7 12 12",
        "step_1": {
            "steps": [
                "7 * 7 = 49 (left: 12 12 49)",
                "7 - 7 = 0 (left: 0 12 12)",
                "12 / 7 = 1 (left: 7 12 1)",
                "7 * 7 = 49 (left: 12 12 49)",
                "7 * 7 = 49 (left: 12 12 49)",
                "12 + 7 = 19 (left: 7 12 19)",
                "12 - 7 = 5 (left: 5 12 12)",
                "12 - 7 = 5 (left: 7 12 5)",
                "12 / 7 = 1 (left: 1 12 12)",
                "12 + 7 = 19 (left: 7 12 19)"
            ],
            "values": [
                2.001,
                40.001,
                2.001,
                21.001,
                1.002,
                2.001,
                2.001,
                22.0,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.3",
                "2 <- 1.1",
                "3 <- INIT",
                "4 <- 1.1",
                "5 <- 1.1",
                "6 <- 1.1",
                "7 <- 1.3",
                "8 <- INIT",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "7 - 7 = 0 (left: 0 12 12)",
                "7 * 7 = 49 (left: 12 12 49)",
                "7 - 7 = 0 (left: 0 12 12)",
                "",
                "7 - 7 = 0 (left: 0 12 12)",
                "7 - 7 = 0 (left: 0 12 12)",
                "7 - 7 = 0 (left: 0 12 12)",
                "7 * 7 = 49 (left: 12 12 49)",
                "",
                "7 - 7 = 0 (left: 0 12 12)"
            ]
        },
        "step_2": {
            "steps": [
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "7 * 7 = 49 (left: 12 12 49)\n12 - 12 = 0 (left: 0 12 49)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 12 = 0 (left: 0)",
                "7 * 7 = 49 (left: 12 12 49)\n49 / 12 = 4.08333 (left: 4.08333 12)",
                "12 + 7 = 19 (left: 7 12 19)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)"
            ],
            "values": [
                40.001,
                1.002,
                60.0,
                60.0,
                60.0,
                40.001,
                0.003,
                1.002,
                3.0,
                40.001
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 2.9",
                "2 <- 2.4",
                "3 <- 2.5",
                "4 <- 1.1",
                "5 <- 2.2",
                "6 <- 2.9",
                "7 <- 2.5",
                "8 <- INIT",
                "9 <- 2.4"
            ],
            "resampled_steps": [
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "",
                "7 - 7 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)"
            ]
        },
        "step_3": {
            "steps": [
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24",
                "7 - 7 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)\n0 + 1 = 1 (left: 1)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "7 - 7 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 - 7 = 5 (left: 7 5 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)\n1 / 0 = undefined"
            ],
            "values": [
                0.002,
                40.001,
                0.002,
                0.003,
                60.0,
                40.001,
                0.003,
                0.003,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 2.2",
                "2 <- 1.1",
                "3 <- 2.4",
                "4 <- 3.5",
                "5 <- 2.0",
                "6 <- 2.3",
                "7 <- 1.7",
                "8 <- 3.4",
                "9 <- 2.5"
            ],
            "resampled_steps": [
                "7 - 7 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12)",
                "12 - 7 = 5 (left: 7 12 5)",
                "7 - 7 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)"
            ]
        },
        "step_4": {
            "steps": [
                "7 - 7 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)\n1 - 0 = 1 (left: 1)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 - 7 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)\n0 * 1 = 0 (left: 0)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24\n24 / 12 = 2 (left: 2 24)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 - 7 = 0 (left: 0 12 12)\n0 * 12 = 0 (left: 12 12)",
                "12 - 7 = 5 (left: 7 12 5)\n5 - 7 = -2 (left: 12 -2)",
                "7 - 7 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)\n1 / 0 = undefined",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)"
            ],
            "values": [
                0.002,
                40.0,
                20.002,
                0.002,
                0.003,
                60.0,
                60.0,
                0.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.8",
                "1 <- 2.1",
                "2 <- 2.4",
                "3 <- 4.1",
                "4 <- 4.2",
                "5 <- 2.2",
                "6 <- 2.9",
                "7 <- 4.5",
                "8 <- 4.6",
                "9 <- 3.8"
            ],
            "resampled_steps": [
                "12 - 7 = 5 (left: 7 5 12)",
                "7 * 7 = 49 (left: 12 12 49)\n12 - 12 = 0 (left: 0 12 49)",
                "7 - 7 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 - 7 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 - 7 = 0 (left: 0 12 12)\n0 * 12 = 0 (left: 12 12)",
                "12 - 7 = 5 (left: 7 5 12)"
            ]
        },
        "step_5": {
            "steps": [
                "12 - 7 = 5 (left: 7 5 12)\n7 * 5 = 35 (left: 35 12)",
                "7 * 7 = 49 (left: 12 12 49)\n12 - 12 = 0 (left: 0 12 49)\n49 - 12 = 37 (left: 0 12 37)",
                "7 - 7 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)\n0 + 1 = 1 (left: 1)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 7) * (12 + 12) = 24",
                "7 - 7 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 7) * (12 + 12) = 24",
                "7 - 7 = 0 (left: 0 12 12)\n0 * 12 = 0 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 - 7 = 5 (left: 7 5 12)\n7 - 5 = 2 (left: 2 12)"
            ],
            "values": [
                0.002,
                0.003,
                0.002,
                60.0,
                0.003,
                0.003,
                0.002,
                60.0,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 4.5",
                "2 <- 2.9",
                "3 <- 2.2",
                "4 <- 1.7",
                "5 <- 5.7",
                "6 <- 5.9",
                "7 <- 5.9",
                "8 <- 4.5",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "12 - 7 = 5 (left: 7 12 5)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 7) * (12 + 12) = 24",
                "12 - 7 = 5 (left: 7 5 12)\n7 - 5 = 2 (left: 2 12)",
                "12 - 7 = 5 (left: 7 5 12)\n7 - 5 = 2 (left: 2 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 - 7 = 0 (left: 0 12 12)"
            ]
        },
        "step_6": {
            "steps": [
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 7) * (12 + 12) = 24",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 7 = 5 (left: 7 12 5)\n12 / 5 = 2.4 (left: 2.4 7)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 7) * (12 + 12) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n1 * 3 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 - 1 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 + 5) - 7) * 3 = 24",
                "12 - 7 = 5 (left: 7 5 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 7 = 5 (left: 7 5 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 7) * (12 + 12) = 24",
                "7 - 7 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)"
            ],
            "values": [
                0.002,
                60.0,
                60.0,
                60.0,
                0.003,
                60.0,
                40.0,
                0.001,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 5.7",
                "1 <- 4.2",
                "2 <- 3.4",
                "3 <- 5.9",
                "4 <- 4.5",
                "5 <- 5.9",
                "6 <- 6.1",
                "7 <- 5.9",
                "8 <- 5.7",
                "9 <- 5.7"
            ],
            "resampled_steps": [
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 7) * (12 + 12) = 24",
                "7 - 7 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "12 - 7 = 5 (left: 7 5 12)\n7 - 5 = 2 (left: 2 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 7 = 5 (left: 7 5 12)\n7 - 5 = 2 (left: 2 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 7) * (12 + 12) = 24",
                "12 - 7 = 5 (left: 7 5 12)\n7 - 5 = 2 (left: 2 12)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 7) * (12 + 12) = 24",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 7) * (12 + 12) = 24"
            ]
        },
        "step_7": {
            "steps": [
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 7) * (12 + 12) = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 - 3 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)\nAnswer: (3 + 5) - (4 - 3) = 24",
                "7 - 7 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)\n12 + 12 = 24",
                "7 - 7 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)\n1 / 0 = undefined",
                "12 - 7 = 5 (left: 7 5 12)\n7 - 5 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 7) + (12 + 12) = 24",
                "12 - 7 = 5 (left: 7 5 12)\n7 - 5 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 7) * (12 + 12) = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 / 8 = 2.25 (left: 2.25)\nAnswer: (3 + 3) * (3 * 8) = 24",
                "12 - 7 = 5 (left: 7 5 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 7) * (12 + 12) = 24\nInput: 3 3 8 10\nSteps:\n3 + 3 = 6 (left: 6 8 10)\n6 * 10 = 60 (left: 8 60)\n60 / 8 = 7.5 (left: 7.5)\n7.5 * 8 = 24 (left: 24)\nAnswer: ((3 + 3) * 10) / 8 = 24",
                "7 - 7 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 7) * (12 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 + 8 = 14 (left: 6 14)\n6 * 14 = 84 (left: 84)\nAnswer: (3 + 3) * (6 + 8) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.1771525
    },
    "29": {
        "input": "4 6 7 7",
        "step_1": {
            "steps": [
                "6 / 4 = 1.5 (left: 1.5 7 7)",
                "7 + 6 = 13 (left: 4 7 13)",
                "4 + 7 = 11 (left: 6 7 11)",
                "7 / 4 = 1.75 (left: 1.75 7 7)",
                "7 / 4 = 1.75 (left: 1.75 7 7)",
                "7 - 6 = 1 (left: 4 1 7)",
                "7 - 6 = 1 (left: 4 1 7)",
                "6 / 4 = 1.5 (left: 1.5 7 7)",
                "7 - 4 = 3 (left: 3 7 7)",
                "7 - 4 = 3 (left: 3 7 7)"
            ],
            "values": [
                0.003,
                20.002,
                22.0,
                1.002,
                3.0,
                2.001,
                40.001,
                3.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.9",
                "2 <- 1.8",
                "3 <- 1.1",
                "4 <- INIT",
                "5 <- 1.2",
                "6 <- 1.6",
                "7 <- INIT",
                "8 <- 1.8",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "",
                "7 - 4 = 3 (left: 3 7 7)",
                "7 - 4 = 3 (left: 3 7 7)",
                "7 + 6 = 13 (left: 4 7 13)",
                "",
                "4 + 7 = 11 (left: 6 7 11)",
                "7 - 6 = 1 (left: 4 1 7)",
                "",
                "7 - 4 = 3 (left: 3 7 7)",
                "7 - 4 = 3 (left: 3 7 7)"
            ]
        },
        "step_2": {
            "steps": [
                "6 - 4 = 2 (left: 2 7 7)",
                "7 - 4 = 3 (left: 3 7 7)\n12 / 4 = 3 (left: 3 12)",
                "7 - 4 = 3 (left: 3 7 7)\n5 * 9 = 45 (left: 4 45)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)",
                "6 - 4 = 2 (left: 2 7 7)",
                "4 + 7 = 11 (left: 6 7 11)\n11 - 6 = 5 (left: 5 11)",
                "7 - 6 = 1 (left: 4 1 7)\n4 + 1 = 5 (left: 5 7)",
                "6 - 4 = 2 (left: 2 7 7)",
                "7 - 4 = 3 (left: 3 7 7)\n7 / 3 = 2 (left: 2 7)",
                "7 - 4 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7)"
            ],
            "values": [
                2.001,
                1.002,
                1.001,
                60.0,
                2.001,
                21.001,
                0.003,
                2.001,
                0.0,
                0.002
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 1.9",
                "2 <- 2.7",
                "3 <- 1.8",
                "4 <- 1.5",
                "5 <- 1.2",
                "6 <- 1.8",
                "7 <- INIT",
                "8 <- 2.3",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "7 - 6 = 1 (left: 4 1 7)",
                "7 - 4 = 3 (left: 3 7 7)",
                "6 - 4 = 2 (left: 2 7 7)",
                "7 - 4 = 3 (left: 3 7 7)",
                "7 - 6 = 1 (left: 4 1 7)",
                "4 + 7 = 11 (left: 6 7 11)",
                "7 - 4 = 3 (left: 3 7 7)",
                "",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)",
                "7 - 4 = 3 (left: 3 7 7)"
            ]
        },
        "step_3": {
            "steps": [
                "7 - 6 = 1 (left: 4 1 7)\n3 * 5 = 15 (left: 15 2)",
                "7 - 4 = 3 (left: 3 7 7)\n12 / 4 = 3 (left: 3 6 6 12)",
                "6 - 4 = 2 (left: 2 7 7)\n7 - 2 = 5 (left: 5 7)",
                "7 - 4 = 3 (left: 3 7 7)\n7 + 3 = 10 (left: 7 10)",
                "7 - 6 = 1 (left: 4 1 7)\n4 - 3 = 1 (left: 6 1)",
                "4 + 7 = 11 (left: 6 7 11)\n2.83 + 9.40 = 12.23 (left: 4.68 12.23)",
                "7 - 4 = 3 (left: 3 7 7)\n3 * 7 = 21 (left: 7 21)",
                "7 - 6 = 1 (left: 4 1 7)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "7 - 4 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7)"
            ],
            "values": [
                0.003,
                2.0,
                0.0,
                0.002,
                40.0,
                0.003,
                0.0,
                2.001,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 2.0",
                "2 <- 3.1",
                "3 <- 1.8",
                "4 <- 1.6",
                "5 <- 2.3",
                "6 <- 1.1",
                "7 <- 2.3",
                "8 <- 1.9",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "7 + 6 = 13 (left: 4 7 13)",
                "6 - 4 = 2 (left: 2 7 7)",
                "7 - 4 = 3 (left: 3 7 7)\n12 / 4 = 3 (left: 3 6 6 12)",
                "7 - 4 = 3 (left: 3 7 7)",
                "7 - 6 = 1 (left: 4 1 7)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)",
                "7 + 6 = 13 (left: 4 7 13)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)",
                "7 - 4 = 3 (left: 3 7 7)",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "7 + 6 = 13 (left: 4 7 13)\n6 / 3 = 2 (left: 2 9)",
                "6 - 4 = 2 (left: 2 7 7)\n7 - 2 = 5 (left: 5 7)",
                "7 - 4 = 3 (left: 3 7 7)\n12 / 4 = 3 (left: 3 6 6 12)\n6 * 2 = 12 (left: 6 12 12)",
                "7 - 4 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7)",
                "7 - 6 = 1 (left: 4 1 7)\n3 * 6 = 18 (left: 18 2)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "7 + 6 = 13 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "7 - 4 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7)",
                "7 - 4 = 3 (left: 3 7 7)"
            ],
            "values": [
                0.001,
                0.001,
                41.0,
                0.003,
                20.0,
                0.003,
                20.002,
                0.002,
                0.003,
                41.0
            ],
            "resampled": [
                "0 <- 2.5",
                "1 <- 4.2",
                "2 <- 2.3",
                "3 <- 1.6",
                "4 <- 2.3",
                "5 <- 2.3",
                "6 <- 2.3",
                "7 <- 2.3",
                "8 <- 4.6",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "4 + 7 = 11 (left: 6 7 11)\n11 - 6 = 5 (left: 5 11)",
                "7 - 4 = 3 (left: 3 7 7)\n12 / 4 = 3 (left: 3 6 6 12)\n6 * 2 = 12 (left: 6 12 12)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)",
                "7 - 6 = 1 (left: 4 1 7)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)",
                "7 + 6 = 13 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)"
            ]
        },
        "step_5": {
            "steps": [
                "4 + 7 = 11 (left: 6 7 11)\n11 - 6 = 5 (left: 5 11)\n5 * 11 = 55 (left: 55)",
                "7 - 4 = 3 (left: 3 7 7)\n12 / 4 = 3 (left: 3 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "7 - 6 = 1 (left: 4 1 7)\n1 - 7 = -6 (left: -6 7)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 / 13 \u2248 0.846 (left: 0.846)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\nInput: 5 5 5 5",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "7 + 6 = 13 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)\n12 / 6 = 2 (left: 3 2)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)"
            ],
            "values": [
                0.002,
                60.0,
                0.003,
                1.002,
                0.001,
                0.003,
                0.003,
                60.0,
                1.001,
                60.0
            ],
            "resampled": [
                "0 <- 5.9",
                "1 <- 5.9",
                "2 <- 5.7",
                "3 <- 4.9",
                "4 <- INIT",
                "5 <- 5.7",
                "6 <- 4.2",
                "7 <- 3.4",
                "8 <- 5.9",
                "9 <- 5.1"
            ],
            "resampled_steps": [
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "7 - 4 = 3 (left: 3 7 7)",
                "",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "7 - 4 = 3 (left: 3 7 7)\n12 / 4 = 3 (left: 3 6 6 12)\n6 * 2 = 12 (left: 6 12 12)",
                "7 - 6 = 1 (left: 4 1 7)\n4 - 3 = 1 (left: 6 1)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "7 - 4 = 3 (left: 3 7 7)\n12 / 4 = 3 (left: 3 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)"
            ]
        },
        "step_6": {
            "steps": [
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (4 + (7 + 6)) + 7 = 24",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((4 + 7) + 6) + 7 = 24",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((4 + 7) + (7 + 6)) = 24",
                "7 - 4 = 3 (left: 3 7 7)\n7 / 3 = 2 (left: 2 7)",
                "4 + 7 = 11 (left: 6 7 11)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (4 + 7) + (6 + 7) = 24",
                "7 - 4 = 3 (left: 3 7 7)\n12 / 4 = 3 (left: 3 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)",
                "7 - 6 = 1 (left: 4 1 7)\n4 - 3 = 1 (left: 6 1)\n6 - 1 = 5 (left: 5)",
                "7 + 6 = 13 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (4 + 7) + (6 + 7) = 24",
                "7 - 4 = 3 (left: 3 7 7)\n12 / 4 = 3 (left: 3 6 6 12)\n6 * 2 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "cost": 1.209816
    },
    "30": {
        "input": "1 1 2 13",
        "step_1": {
            "steps": [
                "13 - 2 = 11 (left: 1 1 11)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 / 1 = 13 (left: 1 2 13)",
                "13 / 1 = 13 (left: 1 2 13)",
                "7 + 5 = 12 (left: 12 3 21)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 2 = 11 (left: 1 1 11)",
                "1 * 1 = 1 (left: 1 2 13)",
                "13 - 2 = 11 (left: 1 1 11)"
            ],
            "values": [
                0.003,
                60.0,
                40.001,
                21.001,
                0.003,
                22.0,
                60.0,
                2.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 1.6",
                "2 <- 1.6",
                "3 <- 1.6",
                "4 <- 1.6",
                "5 <- 1.3",
                "6 <- 1.6",
                "7 <- 1.1",
                "8 <- 1.2",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 / 1 = 13 (left: 1 2 13)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)"
            ]
        },
        "step_2": {
            "steps": [
                "13 - 1 = 12 (left: 1 2 12)\n5 / 2 = 2.5 (left: 3 4 2.5)",
                "13 - 1 = 12 (left: 1 2 12)\n2 - 1 = 1 (left: 1 12)",
                "13 - 1 = 12 (left: 1 2 12)\n1 + 12 = 13 (left: 13)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "13 / 1 = 13 (left: 1 2 13)\n1 + 2 = 3 (left: 3 13)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 1 = 2 (left: 2 12)",
                "13 - 1 = 12 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "13 - 1 = 12 (left: 1 2 12)\n2 + 12 = 14 (left: 1 14)",
                "13 - 1 = 12 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)"
            ],
            "values": [
                3.0,
                21.001,
                0.002,
                60.0,
                60.0,
                0.003,
                60.0,
                60.0,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 2.6",
                "2 <- 2.1",
                "3 <- 2.6",
                "4 <- 2.6",
                "5 <- 1.6",
                "6 <- 2.6",
                "7 <- 2.3",
                "8 <- 1.2",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "13 - 1 = 12 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 1 = 2 (left: 2 12)",
                "13 - 1 = 12 (left: 1 2 12)\n2 - 1 = 1 (left: 1 12)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 1 = 2 (left: 2 12)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 1 = 2 (left: 2 12)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 1 = 2 (left: 2 12)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)"
            ]
        },
        "step_3": {
            "steps": [
                "13 - 1 = 12 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 1 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "13 - 1 = 12 (left: 1 2 12)\n2 - 1 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 1 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 1 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "13 - 1 = 12 (left: 1 2 12)\n3 + 3 = 6 (left: 6 6)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n12 + 2 = 14 (left: 14)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)"
            ],
            "values": [
                0.002,
                0.003,
                0.002,
                0.002,
                0.003,
                2.001,
                60.0,
                0.003,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 3.8",
                "2 <- 3.8",
                "3 <- 1.1",
                "4 <- 2.6",
                "5 <- 2.4",
                "6 <- 3.6",
                "7 <- 2.4",
                "8 <- 1.1",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 1 = 2 (left: 2 12)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)",
                "13 - 1 = 12 (left: 1 2 12)",
                "13 - 1 = 12 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)"
            ]
        },
        "step_4": {
            "steps": [
                "13 - 1 = 12 (left: 1 2 12)\n1 + 2 = 3 (left: 3 12)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 1 23)",
                "13 - 1 = 12 (left: 1 2 12)\n3 * 5 = 15 (left: 7 9 15)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (13 - 1) * (1 * 2) = 24",
                "13 - 1 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "13 - 1 = 12 (left: 1 2 12)\n12 / 1 = 12 (left: 2 12)",
                "13 - 1 = 12 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n6 - 2 = 4 (left: 4 4)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.2290235
    },
    "31": {
        "input": "1 1 5 6",
        "step_1": {
            "steps": [
                "5 - 1 = 4 (left: 1 4 6)",
                "6 / 1 = 6 (left: 1 5 6)",
                "1 * 1 = 1 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 5)",
                "Input: 3 9 1 4",
                "5 * 1 = 5 (left: 1 5 6)",
                "1 + 5 = 6 (left: 6 1 6)",
                "6 - 1 = 5 (left: 1 5 5)",
                "6 - 5 = 1 (left: 1 1 6)",
                "1 + 5 = 6 (left: 6 1 6)"
            ],
            "values": [
                40.001,
                21.0,
                2.0,
                22.0,
                0.003,
                3.0,
                21.001,
                60.0,
                2.001,
                2.001
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.6",
                "2 <- 1.6",
                "3 <- 1.0",
                "4 <- 1.0",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 1.1",
                "8 <- 1.1",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "6 - 1 = 5 (left: 1 5 5)",
                "1 + 5 = 6 (left: 6 1 6)",
                "1 + 5 = 6 (left: 6 1 6)",
                "5 - 1 = 4 (left: 1 4 6)",
                "5 - 1 = 4 (left: 1 4 6)",
                "",
                "",
                "6 / 1 = 6 (left: 1 5 6)",
                "6 / 1 = 6 (left: 1 5 6)",
                "1 + 5 = 6 (left: 6 1 6)"
            ]
        },
        "step_2": {
            "steps": [
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)",
                "1 + 5 = 6 (left: 6 1 6)\n9 - 1 = 8 (left: 8 9 1)",
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)",
                "5 - 1 = 4 (left: 1 4 6)\nPossible next steps:",
                "5 - 1 = 4 (left: 1 4 6)\n1 + 6 = 7 (left: 1 7)",
                "Possible next steps:",
                "3 + 4 = 7 (left: 7 8 9)",
                "6 / 1 = 6 (left: 1 5 6)\n5 * 1 = 5 (left: 5 6)",
                "6 / 1 = 6 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "1 + 5 = 6 (left: 6 1 6)\n6 + 1 = 7 (left: 7 6)"
            ],
            "values": [
                22.0,
                0.002,
                40.001,
                0.003,
                0.0,
                0.003,
                22.0,
                0.002,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 2.0",
                "2 <- 2.2",
                "3 <- INIT",
                "4 <- 1.7",
                "5 <- 1.1",
                "6 <- 1.0",
                "7 <- 1.0",
                "8 <- 1.7",
                "9 <- 1.3"
            ],
            "resampled_steps": [
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)",
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)",
                "",
                "6 - 1 = 5 (left: 1 5 5)",
                "6 / 1 = 6 (left: 1 5 6)",
                "5 - 1 = 4 (left: 1 4 6)",
                "5 - 1 = 4 (left: 1 4 6)",
                "6 - 1 = 5 (left: 1 5 5)",
                "6 - 1 = 5 (left: 1 5 5)"
            ]
        },
        "step_3": {
            "steps": [
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 + 5 = 9 (left: 9)",
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "1 * 1 = 1 (left: 1 5 6)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)",
                "6 / 1 = 6 (left: 1 5 6)\n1 * 5 = 5 (left: 5 6)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "5 - 1 = 4 (left: 1 4 6)\n7 - 5 = 2 (left: 2 8)",
                "6 - 1 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 5 6)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 1 4 5)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                21.001,
                22.0,
                0.001,
                60.0,
                2.001,
                2.001,
                1.002
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 1.7",
                "2 <- 3.6",
                "3 <- 2.0",
                "4 <- 2.0",
                "5 <- 3.4",
                "6 <- 2.2",
                "7 <- 1.3",
                "8 <- 1.1",
                "9 <- 3.6"
            ],
            "resampled_steps": [
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)",
                "6 - 1 = 5 (left: 1 5 5)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)",
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 5)",
                "6 / 1 = 6 (left: 1 5 6)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)"
            ]
        },
        "step_4": {
            "steps": [
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 + 5 = 9 (left: 9)",
                "6 - 1 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n5 - 4 = 1 (left: 1)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 + 5 = 9 (left: 9)",
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)",
                "6 / 1 = 6 (left: 1 5 6)\n1 + 5 = 6 (left: 6 6)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)"
            ],
            "values": [
                0.001,
                0.003,
                20.001,
                0.002,
                0.002,
                0.001,
                0.002,
                1.002,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 3.4",
                "2 <- 2.2",
                "3 <- 1.7",
                "4 <- 2.2",
                "5 <- 2.2",
                "6 <- 1.7",
                "7 <- 3.4",
                "8 <- 1.0",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)",
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 5)",
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)",
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 5 5)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)",
                "5 - 1 = 4 (left: 1 4 6)",
                "5 - 1 = 4 (left: 1 4 6)"
            ]
        },
        "step_5": {
            "steps": [
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 - 1 = 23 (left: 23)\nThere are no possible next steps with the input of 23.",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 + 5 = 9 (left: 9)",
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)\n6 + 6 = 12",
                "6 - 1 = 5 (left: 1 5 5)\n1 * 5 = 5 (left: 5 5)",
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 - 1 = 5 (left: 1 5 5)\n1 + 5 = 6 (left: 5 6)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n5 - 4 = 1 (left: 1)",
                "5 - 1 = 4 (left: 1 4 6)\n1 + 4 = 5 (left: 5 6)",
                "5 - 1 = 4 (left: 1 4 6)\n9 / 3 = 3 (left: 3 5 7)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                0.002,
                0.003,
                0.001,
                2.001
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 1.0",
                "2 <- 3.6",
                "3 <- 2.0",
                "4 <- 3.4",
                "5 <- 2.2",
                "6 <- 3.6",
                "7 <- 3.6",
                "8 <- 3.6",
                "9 <- 3.4"
            ],
            "resampled_steps": [
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)",
                "5 - 1 = 4 (left: 1 4 6)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)",
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)"
            ]
        },
        "step_6": {
            "steps": [
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 1 = 4 (left: 4 6)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n3 / 6 = 0.5 (left: 0.5)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 - 5 = -1 (left: -1)",
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)\n6 + 6 = 12",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 * 5 = 20 (left: 5)"
            ],
            "values": [
                0.003,
                20.0,
                0.003,
                0.0,
                0.0,
                0.003,
                0.002,
                60.0,
                20.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 3.6",
                "2 <- 3.6",
                "3 <- 6.8",
                "4 <- 3.4",
                "5 <- 6.7",
                "6 <- 6.8",
                "7 <- 2.2",
                "8 <- 6.7",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "1 + 5 = 6 (left: 6 1 6)\n6 + 1 = 7 (left: 7 6)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)",
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)",
                ""
            ]
        },
        "step_7": {
            "steps": [
                "1 + 5 = 6 (left: 6 1 6)\n6 + 1 = 7 (left: 7 6)\n7 - 6 = 1 (left: 1)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 + 24 = 25 (left: 24 25)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n24 / 1 = 24 (left: 24)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)\n25 / 2 = 12.5 (left: 2)",
                "6 - 1 = 5 (left: 1 5 5)\n5 - 1 = 4 (left: 4 5)\n4 / 5 = 0.8 (left: 0.8)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (1 * (5 - 1)) * 6 = 24",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)\n25 + 25 = 50",
                "1 + 5 = 6 (left: 6 1 6)\n6 / 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "5 - 1 = 4 (left: 1 4 6)\n4 * 6 = 24 (left: 1 24)\n1 * 24 = 24 (left: 24)\nAnswer: (1 * 24) * 1 = 24",
                "1 + 1 = 2 (left: 2 5 6)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.2619485
    },
    "32": {
        "input": "1 1 11 13",
        "step_1": {
            "steps": [
                "1 - 1 = 0 (left: 0 11 13)",
                "13 - 1 = 12 (left: 1 11 12)",
                "Possible next steps:",
                "10 - 7 = 3 (left: 3 3 3)",
                "1 + 1 = 2 (left: 2 11 13)",
                "1 * 11 = 11 (left: 11 1 13)",
                "1 + 1 = 2 (left: 2 11 13)",
                "11 - 3 = 8 (left: 5 7 8)",
                "1 + 1 = 2 (left: 2 11 13)",
                "13 - 1 = 12 (left: 1 11 12)"
            ],
            "values": [
                40.001,
                21.001,
                0.003,
                0.003,
                0.003,
                2.001,
                1.002,
                3.0,
                40.001,
                21.001
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 1.1",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.0",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 1.0",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "13 - 1 = 12 (left: 1 11 12)",
                "13 - 1 = 12 (left: 1 11 12)",
                "",
                "",
                "1 - 1 = 0 (left: 0 11 13)",
                "",
                "",
                "",
                "1 - 1 = 0 (left: 0 11 13)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "13 - 1 = 12 (left: 1 11 12)\n12 / 1 = 12 (left: 11 12)",
                "13 - 1 = 12 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)",
                "11 * 1 = 11 (left: 1 11 13)",
                "13 - 11 = 2 (left: 1 1 2)",
                "1 - 1 = 0 (left: 0 11 13)\nInput: 5 7 9 12",
                "11 + 1 = 12 (left: 1 12 13)",
                "13 - 1 = 12 (left: 1 11 12)",
                "15 / 3 = 5 (left: 5 5 20)",
                "1 - 1 = 0 (left: 0 11 13)\n7 / 9 = 0.7777777777777778 (left: 3 5 0.7777777777777778)",
                "3 + 3 = 6 (left: 6 6 12)"
            ],
            "values": [
                1.002,
                40.001,
                0.003,
                2.001,
                0.003,
                0.003,
                1.002,
                3.0,
                3.0,
                40.001
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 1.8",
                "2 <- INIT",
                "3 <- 1.8",
                "4 <- 2.9",
                "5 <- 2.1",
                "6 <- INIT",
                "7 <- 2.1",
                "8 <- INIT",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "13 - 1 = 12 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)",
                "1 + 1 = 2 (left: 2 11 13)",
                "",
                "1 + 1 = 2 (left: 2 11 13)",
                "3 + 3 = 6 (left: 6 6 12)",
                "13 - 1 = 12 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)",
                "",
                "13 - 1 = 12 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)",
                "",
                "1 - 1 = 0 (left: 0 11 13)"
            ]
        },
        "step_3": {
            "steps": [
                "13 - 1 = 12 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "1 + 1 = 2 (left: 2 11 13)\n11 - 2 = 9 (left: 2 9 13)",
                "1 * 1 = 1 (left: 1 11 13)",
                "1 + 1 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 9 13 13)",
                "3 + 3 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)",
                "13 - 1 = 12 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "13 - 1 = 12 (left: 1 11 12)",
                "13 - 1 = 12 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "13 - 1 = 12 (left: 1 11 12)",
                "1 - 1 = 0 (left: 0 11 13)\n11 + 13 = 24 (left: 0 24)"
            ],
            "values": [
                0.003,
                1.002,
                0.003,
                2.001,
                60.0,
                40.0,
                20.002,
                60.0,
                1.002,
                60.0
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- 3.7",
                "2 <- 3.5",
                "3 <- 3.5",
                "4 <- 3.7",
                "5 <- 1.8",
                "6 <- 3.9",
                "7 <- 1.1",
                "8 <- 3.7",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "1 - 1 = 0 (left: 0 11 13)\n11 + 13 = 24 (left: 0 24)",
                "13 - 1 = 12 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "13 - 1 = 12 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "13 - 1 = 12 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "13 - 1 = 12 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 11 13)",
                "1 - 1 = 0 (left: 0 11 13)\n11 + 13 = 24 (left: 0 24)",
                "13 - 1 = 12 (left: 1 11 12)",
                "13 - 1 = 12 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "1 + 1 = 2 (left: 2 11 13)"
            ]
        },
        "step_4": {
            "steps": [
                "1 - 1 = 0 (left: 0 11 13)\n11 + 13 = 24 (left: 0 24)\n24 / 0 is not possible as division by zero is undefined.",
                "13 - 1 = 12 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 1) + (11 + 1) = 24",
                "13 - 1 = 12 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 1) * (11 + 1) = 24",
                "13 - 1 = 12 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 1) * (11 + 1) = 24",
                "13 - 1 = 12 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 1) * (11 + 1) = 24",
                "1 + 1 = 2 (left: 2 11 13)\n11 / 2 = 5.5 (left: 5.5 13)",
                "1 - 1 = 0 (left: 0 11 13)\n11 + 13 = 24 (left: 0 24)\n24 - 0 = 24 (left: 24)",
                "13 - 1 = 12 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "13 - 1 = 12 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 1) * (11 + 1) = 24",
                "1 + 1 = 2 (left: 2 11 13)\n2 + 11 = 13 (left: 13 13)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.285203
    },
    "33": {
        "input": "1 6 6 12",
        "step_1": {
            "steps": [
                "12 - 1 = 11 (left: 6 6 11)",
                "12 - 1 = 11 (left: 6 6 11)",
                "12 - 6 = 6 (left: 1 6 6)",
                "6 * 1 = 6 (left: 6 6 12)",
                "6 / 1 = 6 (left: 6 6 12)",
                "12 / 6 = 2 (left: 1 2 6)",
                "12 + 1 = 13 (left: 6 6 13)",
                "12 - 6 = 6 (left: 1 6 6)",
                "6 - 1 = 5 (left: 5 6 12)",
                "6 / 1 = 6 (left: 6 6 12)"
            ],
            "values": [
                3.0,
                2.0,
                21.001,
                60.0,
                40.001,
                0.003,
                22.0,
                41.0,
                2.001,
                40.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.9",
                "3 <- 1.7",
                "4 <- 1.3",
                "5 <- 1.3",
                "6 <- 1.7",
                "7 <- 1.3",
                "8 <- 1.3",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "6 / 1 = 6 (left: 6 6 12)",
                "12 - 6 = 6 (left: 1 6 6)",
                "6 * 1 = 6 (left: 6 6 12)",
                "6 * 1 = 6 (left: 6 6 12)",
                "12 - 6 = 6 (left: 1 6 6)",
                "6 * 1 = 6 (left: 6 6 12)",
                "6 * 1 = 6 (left: 6 6 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "1 + 6 = 7 (left: 6 7 12)",
                "6 / 1 = 6 (left: 6 6 12)",
                "6 / 1 = 6 (left: 6 6 12)\n6 / 6 = 1 (left: 1 12)",
                "12 - 6 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6)",
                "6 * 1 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "6 * 1 = 6 (left: 6 6 12)\n6 / 6 = 1 (left: 1 12)",
                "12 - 6 = 6 (left: 1 6 6)\n6 + 1 = 7 (left: 6 7)",
                "6 * 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)",
                "6 * 1 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 12)",
                "12 - 6 = 6 (left: 1 6 6)"
            ],
            "values": [
                3.0,
                41.0,
                3.0,
                0.003,
                20.001,
                0.002,
                0.003,
                41.0,
                60.0,
                3.0
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 1.6",
                "2 <- 2.8",
                "3 <- 2.8",
                "4 <- 1.7",
                "5 <- 1.7",
                "6 <- 1.3",
                "7 <- 1.6",
                "8 <- 1.4",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "6 * 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)",
                "12 + 1 = 13 (left: 6 6 13)",
                "6 * 1 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 12)",
                "6 * 1 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 12)",
                "12 - 6 = 6 (left: 1 6 6)",
                "12 - 6 = 6 (left: 1 6 6)",
                "6 * 1 = 6 (left: 6 6 12)",
                "12 + 1 = 13 (left: 6 6 13)",
                "6 / 1 = 6 (left: 6 6 12)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "6 * 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)",
                "12 + 1 = 13 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)",
                "6 * 1 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "6 * 1 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "12 - 6 = 6 (left: 1 6 6)\n6 * 1 = 6 (left: 6 6)",
                "12 - 6 = 6 (left: 1 6 6)\n3 / 9 = 0.3333333333333333 (left: 0.3333333333333333 3 3)",
                "6 * 1 = 6 (left: 6 6 12)\n6 / 6 = 1 (left: 1 12)",
                "12 + 1 = 13 (left: 6 6 13)\n6 * 6 = 36 (left: 36 13)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "12 - 6 = 6 (left: 1 6 6)"
            ],
            "values": [
                0.002,
                0.003,
                0.0,
                0.002,
                0.003,
                2.001,
                40.001,
                0.002,
                40.001,
                3.0
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- 3.8",
                "3 <- 2.8",
                "4 <- 1.6",
                "5 <- 2.1",
                "6 <- 3.6",
                "7 <- 1.6",
                "8 <- INIT",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "6 / 1 = 6 (left: 6 6 12)",
                "6 / 1 = 6 (left: 6 6 12)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "6 * 1 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 12)",
                "12 + 1 = 13 (left: 6 6 13)",
                "6 / 1 = 6 (left: 6 6 12)",
                "6 * 1 = 6 (left: 6 6 12)\n6 / 6 = 1 (left: 1 12)",
                "12 + 1 = 13 (left: 6 6 13)",
                "",
                "12 - 6 = 6 (left: 1 6 6)"
            ]
        },
        "step_4": {
            "steps": [
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24",
                "6 * 1 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "12 + 1 = 13 (left: 6 6 13)\n1 * 4 = 4 (left: 4 9)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "6 * 1 = 6 (left: 6 6 12)\n6 / 6 = 1 (left: 1 12)\n12 / 1 = 12 (left: 12)",
                "12 + 1 = 13 (left: 6 6 13)\n10 + 3 = 13 (left: 13 6)",
                "6 / 1 = 6 (left: 6 6 12)",
                "12 - 6 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)"
            ],
            "values": [
                40.001,
                20.002,
                20.002,
                0.002,
                20.0,
                40.001,
                0.002,
                0.003,
                60.0,
                2.001
            ],
            "resampled": [
                "0 <- 4.8",
                "1 <- 2.1",
                "2 <- INIT",
                "3 <- 4.1",
                "4 <- INIT",
                "5 <- 4.5",
                "6 <- 1.9",
                "7 <- 1.4",
                "8 <- 4.4",
                "9 <- 4.8"
            ],
            "resampled_steps": [
                "6 / 1 = 6 (left: 6 6 12)",
                "6 / 1 = 6 (left: 6 6 12)",
                "",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "6 / 1 = 6 (left: 6 6 12)",
                "6 / 1 = 6 (left: 6 6 12)",
                "12 + 1 = 13 (left: 6 6 13)\n1 * 4 = 4 (left: 4 9)",
                "6 / 1 = 6 (left: 6 6 12)"
            ]
        },
        "step_5": {
            "steps": [
                "6 / 1 = 6 (left: 6 6 12)\n6 / 6 = 1 (left: 1 12)",
                "6 / 1 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "6 / 1 = 6 (left: 6 6 12)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "6 / 1 = 6 (left: 6 6 12)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "6 / 1 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "6 / 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)",
                "12 + 1 = 13 (left: 6 6 13)\n1 * 4 = 4 (left: 4 9)\n4 / 9 = 0.44 (left: 9 0.44)",
                "6 / 1 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)"
            ],
            "values": [
                1.002,
                20.001,
                60.0,
                0.002,
                40.001,
                0.003,
                41.0,
                40.001,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 4.9",
                "2 <- 4.4",
                "3 <- 1.7",
                "4 <- 2.8",
                "5 <- 4.8",
                "6 <- 5.4",
                "7 <- 1.7",
                "8 <- 4.5",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "6 / 1 = 6 (left: 6 6 12)",
                "12 - 6 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)",
                "12 + 1 = 13 (left: 6 6 13)\n1 * 4 = 4 (left: 4 9)",
                "12 - 6 = 6 (left: 1 6 6)",
                "6 * 1 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 12)",
                "6 / 1 = 6 (left: 6 6 12)",
                "6 / 1 = 6 (left: 6 6 12)",
                "12 - 6 = 6 (left: 1 6 6)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "6 / 1 = 6 (left: 6 6 12)"
            ]
        },
        "step_6": {
            "steps": [
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "12 - 6 = 6 (left: 1 6 6)\n6 / 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1)",
                "12 + 1 = 13 (left: 6 6 13)\n1 * 4 = 4 (left: 4 9)\n3 / 7 = 0.429 (left: 0.429 7 10)",
                "12 - 6 = 6 (left: 1 6 6)\n6 - 1 = 5 (left: 5 6 6)",
                "6 * 1 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24) ",
                "6 / 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)",
                "6 / 1 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)",
                "12 - 6 = 6 (left: 1 6 6)\n6 - 1 = 5 (left: 5 6 6)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144) ",
                "6 / 1 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 12)"
            ],
            "values": [
                60.0,
                0.003,
                2.001,
                21.001,
                60.0,
                40.0,
                60.0,
                22.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 6.0",
                "2 <- 4.5",
                "3 <- 1.9",
                "4 <- 6.6",
                "5 <- 2.1",
                "6 <- 3.5",
                "7 <- 5.7",
                "8 <- 5.2",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "6 / 1 = 6 (left: 6 6 12)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "6 / 1 = 6 (left: 6 6 12)",
                "6 / 1 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)",
                "6 / 1 = 6 (left: 6 6 12)",
                "12 - 6 = 6 (left: 1 6 6)\n3 / 9 = 0.3333333333333333 (left: 0.3333333333333333 3 3)",
                "6 / 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)",
                "6 / 1 = 6 (left: 6 6 12)",
                "6 * 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)"
            ]
        },
        "step_7": {
            "steps": [
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "6 / 1 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 6 2)",
                "6 / 1 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n18 - 6 = 12 (left: 6 12)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "12 - 6 = 6 (left: 1 6 6)\n3 / 9 = 0.3333333333333333 (left: 0.3333333333333333 3 3)\n3 * 3 = 9 (left: 9 3)",
                "6 / 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n12 * 0 = 0 (left: 0)",
                "6 / 1 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)",
                "6 * 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 * 12 = 0 (left: 0)"
            ],
            "values": [
                40.001,
                0.002,
                0.001,
                0.003,
                0.003,
                40.001,
                0.003,
                0.003,
                40.001,
                0.002
            ],
            "resampled": [
                "0 <- 6.5",
                "1 <- 6.4",
                "2 <- 5.1",
                "3 <- 3.9",
                "4 <- 2.1",
                "5 <- 7.8",
                "6 <- 7.8",
                "7 <- 7.5",
                "8 <- 2.8",
                "9 <- 5.2"
            ],
            "resampled_steps": [
                "6 / 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)",
                "6 * 1 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24) ",
                "6 / 1 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "12 - 6 = 6 (left: 1 6 6)",
                "6 / 1 = 6 (left: 6 6 12)",
                "6 / 1 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)",
                "6 / 1 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "6 * 1 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 12)",
                "6 / 1 = 6 (left: 6 6 12)"
            ]
        },
        "step_8": {
            "steps": [
                "6 / 1 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n12 / 0 = undefined",
                "6 * 1 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24) \nAnswer: (6 * 1) * (12 / 6) = 24",
                "6 / 1 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 * 12 = 432 (left: 432)",
                "12 - 6 = 6 (left: 1 6 6)\n1 + 6 = 7 (left: 6 6 7)",
                "6 / 1 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "6 / 1 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 / 1 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "6 * 1 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "6 / 1 = 6 (left: 6 6 12)\n6 / 6 = 1 (left: 1 12)"
            ],
            "values": [
                0.003,
                60.0,
                0.001,
                3.0,
                40.0,
                0.003,
                0.003,
                60.0,
                0.003,
                21.001
            ],
            "resampled": [
                "0 <- 3.6",
                "1 <- 7.8",
                "2 <- 7.8",
                "3 <- 4.0",
                "4 <- 1.3",
                "5 <- 8.7",
                "6 <- 6.6",
                "7 <- 6.0",
                "8 <- 8.1",
                "9 <- 6.7"
            ],
            "resampled_steps": [
                "6 * 1 = 6 (left: 6 6 12)\n6 / 6 = 1 (left: 1 12)",
                "6 / 1 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)",
                "6 / 1 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "6 * 1 = 6 (left: 6 6 12)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "6 / 1 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "6 * 1 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24) \nAnswer: (6 * 1) * (12 / 6) = 24",
                "12 - 6 = 6 (left: 1 6 6)\n6 - 1 = 5 (left: 5 6 6)"
            ]
        },
        "step_9": {
            "steps": [
                "6 * 1 = 6 (left: 6 6 12)\n6 / 6 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)",
                "6 / 1 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "6 / 1 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "6 * 1 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((6 / 1) + 6) + 12 = 24",
                "6 / 1 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\nInput: 3 9",
                "6 / 1 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "6 * 1 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24) \nAnswer: (6 * 1) * (12 / 6) = 24\nInput: 3 3 4 8\nSteps:\n3 * 4 = 12 (left: 3 8 12)\n3 + 8 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 4) + (3 + 8)) + 1 = 24",
                "12 - 6 = 6 (left: 1 6 6)\n6 - 1 = 5 (left: 5 6 6)\n5 * 6 = 30 (left: 6 30)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.3278995
    },
    "34": {
        "input": "4 5 12 12",
        "step_1": {
            "steps": [
                "12 /  4 = 3 (left: 3 12 12)",
                "4 + 5 = 9 (left: 9 12 12)",
                "12 / 5 = 2 (left: 4 2 12)",
                "12 - 5 = 7 (left: 4 7 12)",
                "12 / 5 = 2.4 (left: 5 2.4 12)",
                "12 / 4 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)",
                "4 + 5 = 9 (left: 9 12 12)",
                "12 - 4 = 8 (left: 8 12 12)"
            ],
            "values": [
                40.001,
                1.002,
                2.001,
                2.001,
                41.0,
                60.0,
                40.001,
                40.001,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 1.0",
                "2 <- 1.0",
                "3 <- 1.0",
                "4 <- 1.5",
                "5 <- 1.4",
                "6 <- 1.6",
                "7 <- 1.0",
                "8 <- 1.0",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "12 / 4 = 3 (left: 3 12 12)",
                "12 /  4 = 3 (left: 3 12 12)",
                "12 /  4 = 3 (left: 3 12 12)",
                "12 /  4 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)",
                "12 / 5 = 2.4 (left: 5 2.4 12)",
                "12 / 4 = 3 (left: 3 12 12)",
                "12 /  4 = 3 (left: 3 12 12)",
                "12 /  4 = 3 (left: 3 12 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "12 / 4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "12 /  4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "12 /  4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 3 9)",
                "12 /  4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "12 / 4 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)",
                "12 / 5 = 2.4 (left: 5 2.4 12)\nPossible next steps:",
                "12 / 4 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)",
                "12 /  4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "12 /  4 = 3 (left: 3 12 12)\n3 + 12 = 15 (left: 12 15)",
                "12 / 4 = 3 (left: 3 12 12)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                1.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.9",
                "2 <- INIT",
                "3 <- 2.9",
                "4 <- 1.4",
                "5 <- 2.9",
                "6 <- 2.9",
                "7 <- 1.5",
                "8 <- 1.5",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "",
                "12 / 4 = 3 (left: 3 12 12)",
                "",
                "12 / 4 = 3 (left: 3 12 12)",
                "12 / 5 = 2.4 (left: 5 2.4 12)",
                "12 / 4 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)"
            ]
        },
        "step_3": {
            "steps": [
                "4 + 5 = 9 (left: 9 12 12)",
                "12 / 4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "12 + 4 = 16 (left: 5 12 16)",
                "12 / 4 = 3 (left: 3 12 12)\n3 + 12 = 15 (left: 12 15)",
                "12 / 5 = 2.4 (left: 5 2.4 12)\n27 + 3 = 30 (left: 9 30)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)",
                "12 / 4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "12 / 4 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 36)",
                "12 / 4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)"
            ],
            "values": [
                21.001,
                0.003,
                3.0,
                0.003,
                0.003,
                41.0,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 1.0",
                "2 <- 2.9",
                "3 <- 1.0",
                "4 <- 1.5",
                "5 <- 2.9",
                "6 <- 1.6",
                "7 <- 3.5",
                "8 <- 1.0",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "12 / 4 = 3 (left: 3 12 12)",
                "12 /  4 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)",
                "12 /  4 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)",
                "12 /  4 = 3 (left: 3 12 12)",
                "12 / 5 = 2.4 (left: 5 2.4 12)"
            ]
        },
        "step_4": {
            "steps": [
                "12 / 4 = 3 (left: 3 12 12)\nInput: 4 9 12",
                "12 /  4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "12 / 4 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)",
                "12 /  4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 36)",
                "12 / 4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "12 / 4 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 * 145 = 1740 (left: 1740 432 144)",
                "12 /  4 = 3 (left: 3 12 12)\n4 / 4 = 1 (left: 1 8)",
                "12 / 5 = 2.4 (left: 5 2.4 12)\n5 / 2.4 = 2.08333333333 (left: 2.08333333333 12)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                20.002,
                0.003,
                0.003,
                0.003,
                3.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 1.0",
                "2 <- INIT",
                "3 <- 3.5",
                "4 <- 3.0",
                "5 <- 4.9",
                "6 <- 3.5",
                "7 <- 4.9",
                "8 <- 1.5",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "12 / 4 = 3 (left: 3 12 12)",
                "12 /  4 = 3 (left: 3 12 12)",
                "",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)",
                "4 + 5 = 9 (left: 9 12 12)",
                "12 / 5 = 2.4 (left: 5 2.4 12)\n5 / 2.4 = 2.08333333333 (left: 2.08333333333 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)",
                "12 / 5 = 2.4 (left: 5 2.4 12)\n5 / 2.4 = 2.08333333333 (left: 2.08333333333 12)",
                "12 / 4 = 3 (left: 3 12 12)",
                "4 + 5 = 9 (left: 9 12 12)"
            ]
        },
        "step_5": {
            "steps": [
                "12 / 4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "12 /  4 = 3 (left: 3 12 12)\n3 + 12 = 15 (left: 12 15)",
                "12 - 4 = 8 (left: 8 5 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n5 / 5 = 1 (left: 1 2 1)",
                "4 + 5 = 9 (left: 9 12 12)\n17 / 5 = 3.4 (left: 3.4)",
                "12 / 5 = 2.4 (left: 5 2.4 12)\n5 / 2.4 = 2.08333333333 (left: 2.08333333333 12)\n12 / 2.08333333333 = 5.76 (left: 5.76 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n15 + 3 = 18 (left: 5 10 18)",
                "12 / 5 = 2.4 (left: 5 2.4 12)\n5 / 2.4 = 2.08333333333 (left: 2.08333333333 12)\n6 - 3 = 3 (left: 1 3)",
                "12 / 4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "4 + 5 = 9 (left: 9 12 12)\n12 - 12 = 0 (left: 0)"
            ],
            "values": [
                1.002,
                0.003,
                3.0,
                3.0,
                0.002,
                0.003,
                1.002,
                0.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 4.3",
                "2 <- INIT",
                "3 <- 4.9",
                "4 <- 1.5",
                "5 <- 4.7",
                "6 <- 4.9",
                "7 <- 2.9",
                "8 <- 4.8",
                "9 <- 1.7"
            ],
            "resampled_steps": [
                "4 + 5 = 9 (left: 9 12 12)",
                "12 /  4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "",
                "12 / 5 = 2.4 (left: 5 2.4 12)\n5 / 2.4 = 2.08333333333 (left: 2.08333333333 12)",
                "12 / 4 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 * 145 = 1740 (left: 1740 432 144)",
                "12 / 5 = 2.4 (left: 5 2.4 12)\n5 / 2.4 = 2.08333333333 (left: 2.08333333333 12)",
                "12 / 4 = 3 (left: 3 12 12)",
                "12 /  4 = 3 (left: 3 12 12)\n4 / 4 = 1 (left: 1 8)",
                "12 / 4 = 3 (left: 3 12 12)"
            ]
        },
        "step_6": {
            "steps": [
                "4 + 5 = 9 (left: 9 12 12)\n12 - 9 = 3 (left: 3 12 12)",
                "12 /  4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)",
                "12 - 5 = 7 (left: 4 7 12)",
                "12 / 5 = 2.4 (left: 5 2.4 12)\n5 / 2.4 = 2.08333333333 (left: 2.08333333333 12)\n100.291666667 / 5.76718092561 = 17.3854166661 (left: 17.3854166661)",
                "12 / 4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n12 * 145 = 1740 (left: 1740 432 144)\n1740 / 432 = 4.027777777777778 (left: 4.027777777777778 144)",
                "12 / 5 = 2.4 (left: 5 2.4 12)\n5 / 2.4 = 2.08333333333 (left: 2.08333333333 12)\n12 - 2.08333333333 = 9.91666666667 (left: 9.91666666667)",
                "12 / 4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "12 /  4 = 3 (left: 3 12 12)\n4 / 4 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "12 / 4 = 3 (left: 3 12 12)\n5 - 2 = 3 (left: 3 5)"
            ],
            "values": [
                60.0,
                0.003,
                22.0,
                0.003,
                1.002,
                0.002,
                0.003,
                0.003,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 4.9",
                "1 <- 6.2",
                "2 <- 3.5",
                "3 <- 3.2",
                "4 <- 3.5",
                "5 <- 1.6",
                "6 <- 4.9",
                "7 <- INIT",
                "8 <- 2.9",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "12 / 5 = 2.4 (left: 5 2.4 12)\n5 / 2.4 = 2.08333333333 (left: 2.08333333333 12)",
                "12 - 5 = 7 (left: 4 7 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)",
                "12 + 4 = 16 (left: 5 12 16)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)",
                "12 / 4 = 3 (left: 3 12 12)",
                "12 / 5 = 2.4 (left: 5 2.4 12)\n5 / 2.4 = 2.08333333333 (left: 2.08333333333 12)",
                "",
                "12 / 4 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)"
            ]
        },
        "step_7": {
            "steps": [
                "12 / 5 = 2.4 (left: 5 2.4 12)\n5 / 2.4 = 2.08333333333 (left: 2.08333333333 12)\n2.08333333333 * 12 = 25 (left: 12 25)",
                "12 - 5 = 7 (left: 4 7 12)\n7 + 4 = 11 (left: 11 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n0 + 36 = 36 (left: 36 144)",
                "12 + 4 = 16 (left: 5 12 16)\n10 - 7 = 3 (left: 3 10)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\nPossible next steps:",
                "12 / 4 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)",
                "12 / 5 = 2.4 (left: 5 2.4 12)\n5 / 2.4 = 2.08333333333 (left: 2.08333333333 12)\nInput: 25 5.7619047619 ",
                "12 - 5 = 7 (left: 4 7 12)",
                "12 / 4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "12 / 4 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)"
            ],
            "values": [
                0.003,
                0.002,
                21.001,
                0.003,
                0.003,
                1.002,
                0.003,
                2.001,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 1.0",
                "2 <- 7.2",
                "3 <- 6.2",
                "4 <- 6.2",
                "5 <- 4.8",
                "6 <- 3.0",
                "7 <- 7.7",
                "8 <- 6.0",
                "9 <- 6.0"
            ],
            "resampled_steps": [
                "12 / 4 = 3 (left: 3 12 12)",
                "12 /  4 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n0 + 36 = 36 (left: 36 144)",
                "12 - 5 = 7 (left: 4 7 12)",
                "12 - 5 = 7 (left: 4 7 12)",
                "12 /  4 = 3 (left: 3 12 12)\n4 / 4 = 1 (left: 1 8)",
                "4 + 5 = 9 (left: 9 12 12)",
                "12 - 5 = 7 (left: 4 7 12)",
                "4 + 5 = 9 (left: 9 12 12)\n12 - 9 = 3 (left: 3 12 12)",
                "4 + 5 = 9 (left: 9 12 12)\n12 - 9 = 3 (left: 3 12 12)"
            ]
        },
        "step_8": {
            "steps": [
                "12 / 4 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)",
                "12 /  4 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n0 + 36 = 36 (left: 36 144)\n36 * 4 = 144 (left: 144)",
                "12 - 5 = 7 (left: 4 7 12)\n12 - 7 = 5 (left: 4 5)",
                "12 - 5 = 7 (left: 4 7 12)\n12 / 4 = 3 (left: 3 7)",
                "12 /  4 = 3 (left: 3 12 12)\n4 / 4 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "4 + 5 = 9 (left: 9 12 12)\n6 * 3 = 18 (left: 18 9)",
                "12 - 5 = 7 (left: 4 7 12)\n12 - 4 = 8 (left: 8 7)",
                "4 + 5 = 9 (left: 9 12 12)\n12 - 9 = 3 (left: 3 12 12)\n3 + 12 = 15 (left: 12 15)",
                "4 + 5 = 9 (left: 9 12 12)\n12 - 9 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 36)"
            ],
            "values": [
                20.001,
                0.003,
                0.002,
                40.001,
                21.0,
                0.002,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 4.3",
                "2 <- 3.0",
                "3 <- 4.9",
                "4 <- 4.8",
                "5 <- 6.0",
                "6 <- 3.5",
                "7 <- 8.0",
                "8 <- 8.3",
                "9 <- 8.3"
            ],
            "resampled_steps": [
                "",
                "12 /  4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "4 + 5 = 9 (left: 9 12 12)",
                "12 / 5 = 2.4 (left: 5 2.4 12)\n5 / 2.4 = 2.08333333333 (left: 2.08333333333 12)",
                "12 /  4 = 3 (left: 3 12 12)\n4 / 4 = 1 (left: 1 8)",
                "4 + 5 = 9 (left: 9 12 12)\n12 - 9 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)",
                "12 / 4 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)",
                "12 - 5 = 7 (left: 4 7 12)\n12 - 7 = 5 (left: 4 5)",
                "12 - 5 = 7 (left: 4 7 12)\n12 - 7 = 5 (left: 4 5)"
            ]
        },
        "step_9": {
            "steps": [
                "12 / 4 = 3 (left: 3 5 12)",
                "12 /  4 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)",
                "4 + 5 = 9 (left: 9 12 12)\n12 / 9 = 1.33 (left: 1.33 12 12)",
                "12 / 5 = 2.4 (left: 5 2.4 12)\n5 / 2.4 = 2.08333333333 (left: 2.08333333333 12)\n12 - 12 = 0 (left: 0)",
                "12 /  4 = 3 (left: 3 12 12)\n4 / 4 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "4 + 5 = 9 (left: 9 12 12)\n12 - 9 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n36 / 12 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8)",
                "12 - 5 = 7 (left: 4 7 12)\n12 - 7 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)",
                "12 - 5 = 7 (left: 4 7 12)\n12 - 7 = 5 (left: 4 5)\n5 / 4 = 1.25 (left: 1.25)"
            ],
            "values": [
                1.002,
                0.003,
                1.002,
                0.001,
                0.001,
                2.001,
                60.0,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 9.6",
                "1 <- 9.6",
                "2 <- 9.6",
                "3 <- 8.3",
                "4 <- 8.4",
                "5 <- 8.4",
                "6 <- 6.2",
                "7 <- 8.0",
                "8 <- 9.6",
                "9 <- 9.6"
            ],
            "resampled_steps": [
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n36 / 12 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n36 / 12 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n36 / 12 = 3 (left: 3 12 12)",
                "12 - 5 = 7 (left: 4 7 12)\n12 - 7 = 5 (left: 4 5)",
                "12 - 5 = 7 (left: 4 7 12)\n12 / 4 = 3 (left: 3 7)",
                "12 - 5 = 7 (left: 4 7 12)\n12 / 4 = 3 (left: 3 7)",
                "12 - 5 = 7 (left: 4 7 12)",
                "12 / 4 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n36 / 12 = 3 (left: 3 12 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n36 / 12 = 3 (left: 3 12 12)"
            ]
        },
        "step_10": {
            "steps": [
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n36 / 12 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n36 / 12 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 36)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n36 / 12 = 3 (left: 3 12 12)\n12 - 12 = 0 (left: 3 0)",
                "12 - 5 = 7 (left: 4 7 12)\n12 - 7 = 5 (left: 4 5)\n5 - 4 = 1 (left: 1)",
                "12 - 5 = 7 (left: 4 7 12)\n12 / 4 = 3 (left: 3 7)\n3 + 7 = 10 (left: 10)",
                "12 - 5 = 7 (left: 4 7 12)\n12 / 4 = 3 (left: 3 7)\n7 / 3 = 2.33333 (left: 2.33333)",
                "12 - 5 = 7 (left: 4 7 12)\n4 * 7 = 28 (left: 28 12)",
                "12 / 4 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)\n12 - 4 = 8 (left: 4 8)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n36 / 12 = 3 (left: 3 12 12)\n12 - 3 = 9 (left: 9 12)",
                "12 / 4 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)\n36 / 12 = 3 (left: 3 12 12)\n3 * 12 = 36 (left: 12 12 36)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                0.002,
                0.003,
                0.003,
                41.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.384505
    },
    "35": {
        "input": "4 6 13 13",
        "step_1": {
            "steps": [
                "13 - 6 = 7 (left: 4 7 13)",
                "6 / 4 = 1.5 (left: 1.5 6 13)",
                "4 + 6 = 10 (left: 10 13 13)",
                "4 * 6 = 24 (left: 24 13 13)",
                "13 / 4 = 3.25 (left: 6 13 13)",
                "13 / 4 = 3.25 (left: 3.25 13 13)",
                "4 + 6 = 10 (left: 10 13 13)",
                "13 - 6 = 7 (left: 4 7 13)",
                "4 + 6 = 10 (left: 10 13 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)"
            ],
            "values": [
                2.001,
                3.0,
                0.003,
                20.002,
                2.001,
                3.0,
                0.003,
                22.0,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.3",
                "2 <- 1.7",
                "3 <- 1.9",
                "4 <- 1.7",
                "5 <- 1.4",
                "6 <- 1.3",
                "7 <- 1.7",
                "8 <- INIT",
                "9 <- 1.3"
            ],
            "resampled_steps": [
                "13 - 6 = 7 (left: 4 7 13)",
                "4 * 6 = 24 (left: 24 13 13)",
                "13 - 6 = 7 (left: 4 7 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)",
                "13 - 6 = 7 (left: 4 7 13)",
                "13 / 4 = 3.25 (left: 6 13 13)",
                "4 * 6 = 24 (left: 24 13 13)",
                "13 - 6 = 7 (left: 4 7 13)",
                "",
                "4 * 6 = 24 (left: 24 13 13)"
            ]
        },
        "step_2": {
            "steps": [
                "13 - 6 = 7 (left: 4 7 13)\nPossible next steps:",
                "4 * 6 = 24 (left: 24 13 13)\n13 + 13 = 26 (left: 24 26)",
                "13 - 6 = 7 (left: 4 7 13)\n7 * 4 = 28 (left: 28 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "13 - 6 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)",
                "13 / 4 = 3.25 (left: 6 13 13)\n13 / 6 = 2.1666666666666665 (left: 2.1666666666666665 13)",
                "4 * 6 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)",
                "13 - 6 = 7 (left: 4 7 13)\n9 - 5 = 4 (left: 3 4 6)",
                "6 / 4 = 1.5 (left: 1.5 13 13)",
                "4 * 6 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                60.0,
                0.003,
                1.002,
                0.003,
                2.001,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- INIT",
                "2 <- 1.7",
                "3 <- 1.7",
                "4 <- 2.3",
                "5 <- 2.3",
                "6 <- 1.3",
                "7 <- INIT",
                "8 <- 1.7",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "",
                "13 - 6 = 7 (left: 4 7 13)",
                "13 - 6 = 7 (left: 4 7 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "4 * 6 = 24 (left: 24 13 13)",
                "",
                "13 - 6 = 7 (left: 4 7 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)"
            ]
        },
        "step_3": {
            "steps": [
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "13 - 4 = 9 (left: 6 9 13)",
                "13 - 6 = 7 (left: 4 7 13)\n11 - 5 = 6 (left: 3 6)",
                "13 - 6 = 7 (left: 4 7 13)\nInput: 3 5 9",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n13 / 11.5 = 1.13043478261 (left: 1.13043478261)",
                "4 * 6 = 24 (left: 24 13 13)\n2 * 11 = 22 (left: 5 22)",
                "4 + 6 = 10 (left: 10 13 13)",
                "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)"
            ],
            "values": [
                0.003,
                21.001,
                0.0,
                0.003,
                40.0,
                0.002,
                1.001,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 2.3",
                "2 <- 3.4",
                "3 <- INIT",
                "4 <- 1.7",
                "5 <- 1.3",
                "6 <- 3.4",
                "7 <- 3.4",
                "8 <- 2.3",
                "9 <- 3.4"
            ],
            "resampled_steps": [
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "",
                "13 - 6 = 7 (left: 4 7 13)",
                "4 * 6 = 24 (left: 24 13 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)"
            ]
        },
        "step_4": {
            "steps": [
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere are no possible next steps for the number 24.5 as it is already a single number.",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 / 13 = 0.8846153846153846 (left: 0.8846153846153846)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere are no possible next steps with the input 24.5 as there are no other numbers provided to perform operations with.",
                "6 + 13 = 19 (left: 4 19 13)",
                "13 - 6 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 28 13)",
                "4 * 6 = 24 (left: 24 13 13)\n24 + 13 = 37 (left: 13 37)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere is only one number given, so there are no possible next steps to perform any operations.",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere are no possible next steps for the input 24.5 as it is a single number and cannot be combined with other numbers using basic arithmetic operations.",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 * 13 = 149.5 (left: 149.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\n24.5 + 2 = 26.5"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                22.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 2.3",
                "2 <- 4.3",
                "3 <- 4.3",
                "4 <- INIT",
                "5 <- 2.3",
                "6 <- 3.4",
                "7 <- 3.4",
                "8 <- 1.7",
                "9 <- 3.1"
            ],
            "resampled_steps": [
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "6 + 13 = 19 (left: 4 19 13)",
                "6 + 13 = 19 (left: 4 19 13)",
                "",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "13 - 6 = 7 (left: 4 7 13)",
                "13 - 4 = 9 (left: 6 9 13)"
            ]
        },
        "step_5": {
            "steps": [
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere are no possible next steps with the input 24.5.",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 * 13 = 149.5 (left: 149.5)",
                "6 + 13 = 19 (left: 4 19 13)\n19 / 4 = 4.75 (left: 4.75 13)",
                "6 + 13 = 19 (left: 4 19 13)\n13 - 4 = 9 (left: 9 13)",
                "13 / 4 = 3.25 (left: 3.25 13 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 * 13 = 149.5 (left: 149.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere are no possible next steps for the input \"24.5\" as it is a single number and not a mathematical expression with operators.",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\n24.5 / 2 = 12.25",
                "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)",
                "13 - 4 = 9 (left: 6 9 13)\n9 - 6 = 3 (left: 3 13)"
            ],
            "values": [
                0.003,
                0.003,
                1.001,
                0.002,
                2.001,
                0.003,
                0.003,
                0.003,
                20.001,
                0.002
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 4.3",
                "2 <- 1.3",
                "3 <- 2.3",
                "4 <- 5.8",
                "5 <- 2.3",
                "6 <- 4.3",
                "7 <- 3.4",
                "8 <- 2.3",
                "9 <- 3.4"
            ],
            "resampled_steps": [
                "4 * 6 = 24 (left: 24 13 13)",
                "6 + 13 = 19 (left: 4 19 13)",
                "4 * 6 = 24 (left: 24 13 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "6 + 13 = 19 (left: 4 19 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)"
            ]
        },
        "step_6": {
            "steps": [
                "4 * 6 = 24 (left: 24 13 13)\n13 - 24 = -11 (left: -11 13)",
                "6 + 13 = 19 (left: 4 19 13)\nInput: 6 4 10 5",
                "4 * 6 = 24 (left: 24 13 13)\n24 / 13 = 1 (left: 1 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 / 13 = 0.8846153846 (left: 0.8846153846)",
                "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)\n7 - 3 = 4 (left: 4 11)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n5 / 3 = 1.67 (left: 1.67 7)",
                "6 + 13 = 19 (left: 4 19 13)\n20 + 5 = 25 (left: 7 25)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere is only one number provided, so there are no possible next steps to perform arithmetic operations.",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere is only one number, so there are no possible next steps."
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                0.0,
                0.001,
                1.001,
                0.003,
                0.003,
                40.001,
                0.003
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 6.8",
                "2 <- 6.8",
                "3 <- 3.4",
                "4 <- 5.2",
                "5 <- 6.8",
                "6 <- 4.3",
                "7 <- 1.7",
                "8 <- 6.8",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "13 - 4 = 9 (left: 6 9 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 + 13 = 19 (left: 4 19 13)\n19 / 4 = 4.75 (left: 4.75 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 + 13 = 19 (left: 4 19 13)",
                "13 - 6 = 7 (left: 4 7 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)"
            ]
        },
        "step_7": {
            "steps": [
                "13 - 4 = 9 (left: 6 9 13)\n13 - 6 = 7 (left: 7 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere is only one possible next step:",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere are no possible next steps for the input 24.5, as it is a single number and cannot be combined with any of the other numbers provided.",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere are no possible next steps for the input 24.5 as it is a single number and not an operation with two operands.",
                "6 + 13 = 19 (left: 4 19 13)\n19 / 4 = 4.75 (left: 4.75 13)\n10 / 5 = 2 (left: 2)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere are no possible next steps for the input 24.5 as it is a single number and not an operation.",
                "6 + 13 = 19 (left: 4 19 13)\n19 - 4 = 15 (left: 15 13)",
                "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere are no possible next steps for the number 24.5 as it is already a single number.",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)"
            ],
            "values": [
                0.001,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                1.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 6.8",
                "2 <- 2.3",
                "3 <- 2.3",
                "4 <- 6.8",
                "5 <- 2.3",
                "6 <- 6.8",
                "7 <- 2.3",
                "8 <- 3.1",
                "9 <- 5.8"
            ],
            "resampled_steps": [
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "13 - 4 = 9 (left: 6 9 13)",
                "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)"
            ]
        },
        "step_8": {
            "steps": [
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 - 13 = -1.5 (left: -1.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\n24.5 * 2 = 49 (left: 49)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 * 13 = 149.5 (left: 149.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 * 13 = 149.5 (left: 149.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere are no possible next steps for the input 24.5 as it is already a single number.",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 - 13 = -1.5 (left: -1.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere are no arithmetic operations that can be performed on the number 24.5 to reach a desired target number.",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 / 13 = 0.884615 (left: 0.884615)",
                "13 - 4 = 9 (left: 6 9 13)\n13 - 6 = 7 (left: 7 9)",
                "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)"
            ],
            "values": [
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                20.0
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 8.9",
                "2 <- 1.7",
                "3 <- 5.8",
                "4 <- 1.7",
                "5 <- 3.4",
                "6 <- 6.8",
                "7 <- 6.8",
                "8 <- 2.3",
                "9 <- 5.8"
            ],
            "resampled_steps": [
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "13 - 6 = 7 (left: 4 7 13)",
                "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)",
                "13 - 6 = 7 (left: 4 7 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)"
            ]
        },
        "step_9": {
            "steps": [
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 / 13 = 0.884615 (left: 0.884615)",
                "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 / 2 = 18",
                "13 - 6 = 7 (left: 4 7 13)\n13 / 4 = 3.25 (left: 3.25 7)",
                "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)\n3 * 6 = 18 (left: 9)",
                "13 - 6 = 7 (left: 4 7 13)\n3 / 5 = 0.6 (left: 0.6 9 3)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\n24.5 + 2 = 26.5",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere are no possible next steps with the input of 24.5.",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere are no possible next steps for the input 24.5 as it is a single number and cannot be combined with the other numbers provided.",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 / 13 = 0.8846153846153846 (left: 0.8846153846153846)",
                "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)\n3 + 5 = 8 (left: 7)"
            ],
            "values": [
                0.002,
                0.003,
                3.0,
                0.001,
                3.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- 4.3",
                "2 <- 6.8",
                "3 <- 3.4",
                "4 <- 6.8",
                "5 <- 8.9",
                "6 <- 4.3",
                "7 <- 6.8",
                "8 <- 2.3",
                "9 <- 9.2"
            ],
            "resampled_steps": [
                "6 + 13 = 19 (left: 4 19 13)",
                "6 + 13 = 19 (left: 4 19 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "6 + 13 = 19 (left: 4 19 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)",
                "13 - 6 = 7 (left: 4 7 13)\n13 / 4 = 3.25 (left: 3.25 7)"
            ]
        },
        "step_10": {
            "steps": [
                "6 + 13 = 19 (left: 4 19 13)\n4 + 19 = 23 (left: 13 23)",
                "6 + 13 = 19 (left: 4 19 13)\n19 - 4 = 15 (left: 15 13)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere are no possible next steps for the input 24.5 as it is already a single number.",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere are no possible next steps for the input 24.5 as it is already a single number.",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere are no possible operations that can be performed on the number 24.5 with the given input.",
                "13 - 6 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 4 9)\n4 * 9 = 36 (left: 36)\nNo possible next steps, as there is only one number.",
                "6 + 13 = 19 (left: 4 19 13)\n6 + 2 = 8 (left: 8 6)",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)\nThere is only one number given, so there are no possible arithmetic operations to perform.",
                "6 / 4 = 1.5 (left: 1.5 13 13)\n13 - 1.5 = 11.5 (left: 11.5 13)\n11.5 + 13 = 24.5 (left: 24.5)",
                "13 - 6 = 7 (left: 4 7 13)\n13 / 4 = 3.25 (left: 3.25 7)\n10 / 5 = 2 (left: 2 10)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                1.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.4375225
    },
    "36": {
        "input": "12 12 12 12",
        "step_1": {
            "steps": [
                "12 - 12 = 0 (left: 0 12 12)",
                "12 * 12 = 144 (left: 12 12 144)",
                "12 + 12 = 24 (left: 12 24 12)",
                "12 / 12 = 1 (left: 1 12 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 + 12 = 24 (left: 12 24 12)",
                "12 * 12 = 144 (left: 12 12 144)",
                "12 * 12 = 144 (left: 12 144 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 + 12 = 24 (left: 12 24 12)"
            ],
            "values": [
                40.001,
                0.003,
                60.0,
                1.002,
                40.001,
                60.0,
                21.001,
                60.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 1.2",
                "2 <- 1.7",
                "3 <- 1.8",
                "4 <- 1.8",
                "5 <- 1.7",
                "6 <- 1.8",
                "7 <- 1.6",
                "8 <- 1.0",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "12 + 12 = 24 (left: 12 24 12)",
                "12 + 12 = 24 (left: 12 24 12)",
                "12 * 12 = 144 (left: 12 144 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 * 12 = 144 (left: 12 144 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 * 12 = 144 (left: 12 12 144)",
                "12 - 12 = 0 (left: 0 12 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "12 + 12 = 24 (left: 12 24 12)\n6 + 12 = 18 (left: 18 18)",
                "12 + 12 = 24 (left: 12 24 12)\n24 / 12 = 2 (left: 2 12)",
                "12 * 12 = 144 (left: 12 144 12)\n144 / 12 = 12 (left: 12 12)",
                "12 - 12 = 0 (left: 0 12 12)\n4 + 6 = 10 (left: 10 10 14)",
                "12 - 12 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "12 * 12 = 144 (left: 12 144 12)\n144 - 12 = 132 (left: 12 132)",
                "12 - 12 = 0 (left: 0 12 12)\n0 + 12 = 12 (left: 12 12)",
                "12 * 12 = 144 (left: 12 12 144)\n12 + 12 = 24 (left: 24 144)",
                "12 - 12 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "12 - 12 = 0 (left: 0 12 12)"
            ],
            "values": [
                0.003,
                60.0,
                60.0,
                21.001,
                21.001,
                20.001,
                40.001,
                40.001,
                40.001,
                20.002
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- 1.2",
                "3 <- 2.1",
                "4 <- 2.3",
                "5 <- 2.1",
                "6 <- 2.5",
                "7 <- 1.6",
                "8 <- 1.2",
                "9 <- 2.1"
            ],
            "resampled_steps": [
                "12 + 12 = 24 (left: 12 24 12)\n24 / 12 = 2 (left: 2 12)",
                "12 + 12 = 24 (left: 12 24 12)\n24 / 12 = 2 (left: 2 12)",
                "12 + 12 = 24 (left: 12 24 12)",
                "12 + 12 = 24 (left: 12 24 12)\n24 / 12 = 2 (left: 2 12)",
                "12 - 12 = 0 (left: 0 12 12)\n4 + 6 = 10 (left: 10 10 14)",
                "12 + 12 = 24 (left: 12 24 12)\n24 / 12 = 2 (left: 2 12)",
                "12 * 12 = 144 (left: 12 144 12)\n144 - 12 = 132 (left: 12 132)",
                "12 * 12 = 144 (left: 12 12 144)",
                "12 + 12 = 24 (left: 12 24 12)",
                "12 + 12 = 24 (left: 12 24 12)\n24 / 12 = 2 (left: 2 12)"
            ]
        },
        "step_3": {
            "steps": [
                "12 + 12 = 24 (left: 12 24 12)\n24 / 12 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "12 + 12 = 24 (left: 12 24 12)\n24 / 12 = 2 (left: 2 12)\n14 + 6 = 20 (left: 20)",
                "12 + 12 = 24 (left: 12 24 12)\n20 * 5 = 100 (left: 100 4)",
                "12 + 12 = 24 (left: 12 24 12)\n24 / 12 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "12 - 12 = 0 (left: 0 12 12)\n4 + 6 = 10 (left: 10 10 14)\n10 / 10 = 1 (left: 1 14)",
                "12 + 12 = 24 (left: 12 24 12)\n24 / 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 * 12 = 144 (left: 12 144 12)\n144 - 12 = 132 (left: 12 132)\n12 / 132 = 0.09090909090909091 (left: 0.09090909090909091)",
                "12 * 12 = 144 (left: 12 12 144)\n144 / 12 = 12 (left: 12 144)",
                "12 + 12 = 24 (left: 12 24 12)\n24 - 12 = 12 (left: 12 12)",
                "12 + 12 = 24 (left: 12 24 12)\n24 / 12 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)"
            ],
            "values": [
                0.002,
                0.001,
                40.0,
                0.003,
                1.001,
                60.0,
                0.003,
                0.003,
                20.002,
                0.003
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 2.3",
                "2 <- 1.2",
                "3 <- 2.9",
                "4 <- 3.5",
                "5 <- 1.5",
                "6 <- 1.7",
                "7 <- 1.7",
                "8 <- 2.4",
                "9 <- 2.1"
            ],
            "resampled_steps": [
                "12 + 12 = 24 (left: 12 24 12)\n20 * 5 = 100 (left: 100 4)",
                "12 - 12 = 0 (left: 0 12 12)\n4 + 6 = 10 (left: 10 10 14)",
                "12 + 12 = 24 (left: 12 24 12)",
                "12 - 12 = 0 (left: 0 12 12)",
                "12 + 12 = 24 (left: 12 24 12)\n24 / 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 + 12 = 24 (left: 12 24 12)",
                "12 * 12 = 144 (left: 12 144 12)",
                "12 * 12 = 144 (left: 12 144 12)",
                "12 - 12 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)",
                "12 + 12 = 24 (left: 12 24 12)\n24 / 12 = 2 (left: 2 12)"
            ]
        },
        "step_4": {
            "steps": [
                "12 + 12 = 24 (left: 12 24 12)\n20 * 5 = 100 (left: 100 4)\n100 * 4 = 400 (left: 400)",
                "12 - 12 = 0 (left: 0 12 12)\n4 + 6 = 10 (left: 10 10 14)\n10 / 10 = 1 (left: 1 14)",
                "12 + 12 = 24 (left: 12 24 12)\n24 - 12 = 12 (left: 12 12)",
                "12 - 12 = 0 (left: 0 12 12)\n12 / 12 = 1 (left: 0 1)",
                "12 + 12 = 24 (left: 12 24 12)\n24 / 12 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 + 12) / (12 / 12) = 24",
                "12 + 12 = 24 (left: 12 24 12)\n24 / 2 = 12 (left: 12 12)",
                "12 * 12 = 144 (left: 12 144 12)\n12 - 12 = 0 (left: 0)",
                "12 * 12 = 144 (left: 12 144 12)\n12 - 12 = 0 (left: 0 12)",
                "12 - 12 = 0 (left: 0 12 12)\n12 - 0 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "12 + 12 = 24 (left: 12 24 12)\n24 / 12 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.457999
    },
    "37": {
        "input": "2 11 11 12",
        "step_1": {
            "steps": [
                "11 - 2 = 9 (left: 9 11 12)",
                "12 - 2 = 10 (left: 10 11 12)",
                "11 * 2 = 22 (left: 11 12 22)",
                "11 - 2 = 9 (left: 9 11 12)",
                "4 - 3 = 1 (left: 1 5 6)",
                "12 - 2 = 10 (left: 10 11 12)",
                "9 - 7 = 2 (left: 2 7 9)",
                "12 - 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 1 11 12)",
                "11 - 12 = -1 (left: -1 11 12)"
            ],
            "values": [
                20.002,
                2.001,
                0.003,
                1.002,
                3.0,
                3.0,
                2.001,
                21.001,
                60.0,
                3.0
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 1.8",
                "2 <- 1.0",
                "3 <- 1.8",
                "4 <- 1.7",
                "5 <- 1.8",
                "6 <- INIT",
                "7 <- 1.8",
                "8 <- 1.8",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 1 11 12)",
                "11 - 2 = 9 (left: 9 11 12)",
                "12 - 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 1 11 12)",
                "",
                "12 - 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 1 11 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 11 12)",
                "11 - 2 = 9 (left: 9 11 12)\n11 + 12 = 23 (left: 9 23)",
                "12 - 11 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)",
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)",
                "12 - 11 = 1 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "11 / 2 = 5.5 (left: 5.5 11 12)",
                "12 - 11 = 1 (left: 1 11 12)\n5 - 3 = 2 (left: 2 7 13)",
                "12 - 11 = 1 (left: 1 11 12)\n5 + 4 = 9 (left: 3 9 12)",
                "2 + 11 = 13 (left: 11 11 12)"
            ],
            "values": [
                40.001,
                0.003,
                0.003,
                20.002,
                60.0,
                1.001,
                3.0,
                2.001,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 2.4",
                "2 <- 1.0",
                "3 <- 1.0",
                "4 <- 2.0",
                "5 <- 1.0",
                "6 <- 2.4",
                "7 <- 1.8",
                "8 <- 2.4",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)",
                "11 - 2 = 9 (left: 9 11 12)",
                "11 - 2 = 9 (left: 9 11 12)",
                "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "11 - 2 = 9 (left: 9 11 12)",
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)",
                "12 - 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)",
                "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)"
            ]
        },
        "step_3": {
            "steps": [
                "12 - 11 = 1 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)\n10 / 10 = 1 (left: 1)",
                "11 - 2 = 9 (left: 9 11 12)\n12 - 11 = 1 (left: 9 1)",
                "11 - 2 = 9 (left: 9 11 12)\n12 - 9 = 3 (left: 9 3)",
                "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "11 - 2 = 9 (left: 9 11 12)\n9 + 11 = 20 (left: 20 12)",
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "12 - 11 = 1 (left: 1 11 12)\n6 - 3 = 3 (left: 3 9)",
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)\n1 + 10 = 11 (left: 10)",
                "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)"
            ],
            "values": [
                0.003,
                0.003,
                40.0,
                0.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 1.0",
                "2 <- 2.4",
                "3 <- INIT",
                "4 <- 1.8",
                "5 <- 1.0",
                "6 <- 2.3",
                "7 <- 3.2",
                "8 <- 1.8",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)",
                "11 - 2 = 9 (left: 9 11 12)",
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)",
                "",
                "12 - 11 = 1 (left: 1 11 12)",
                "11 - 2 = 9 (left: 9 11 12)",
                "12 - 11 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)",
                "11 - 2 = 9 (left: 9 11 12)\n12 - 11 = 1 (left: 9 1)",
                "12 - 11 = 1 (left: 1 11 12)",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "11 - 2 = 9 (left: 9 11 12)\n12 - 8 = 4 (left: 4 4 16)",
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "11 / 2 = 5.5 (left: 5.5 11 12)",
                "12 - 11 = 1 (left: 1 11 12)\n9 * 3 = 27 (left: 27)",
                "11 - 2 = 9 (left: 9 11 12)\n6 * 3 = 18 (left: 8 10 18)",
                "12 - 11 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n10 + 12 = 22 (left: 22)",
                "11 - 2 = 9 (left: 9 11 12)\n12 - 11 = 1 (left: 9 1)\n9 - 1 = 8 (left: 8)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)",
                "12 - 2 = 10 (left: 11 11 10)"
            ],
            "values": [
                0.0,
                1.002,
                0.001,
                2.001,
                0.002,
                1.002,
                0.001,
                0.002,
                40.001,
                0.003
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 3.2",
                "2 <- 2.4",
                "3 <- 3.2",
                "4 <- 2.3",
                "5 <- 1.8",
                "6 <- 4.8",
                "7 <- INIT",
                "8 <- 2.4",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 10 11 12)",
                "11 - 2 = 9 (left: 9 11 12)\n12 - 11 = 1 (left: 9 1)",
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)",
                "11 - 2 = 9 (left: 9 11 12)\n12 - 11 = 1 (left: 9 1)",
                "12 - 11 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)",
                "12 - 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)",
                "",
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)",
                "12 - 11 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)"
            ]
        },
        "step_5": {
            "steps": [
                "12 - 2 = 10 (left: 10 11 12)\n12 - 11 = 1 (left: 10)",
                "11 - 2 = 9 (left: 9 11 12)\n12 - 11 = 1 (left: 9 1)\n9 - 1 = 8 (left: 8)",
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "11 - 2 = 9 (left: 9 11 12)\n12 - 11 = 1 (left: 9 1)\n9 + 1 = 10 (left: 10)",
                "12 - 11 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\nInput: 22 1.2",
                "12 - 11 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "2 + 11 = 13 (left: 11 12 13)",
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)\n3 * 6 = 18 (left: 18 9)",
                "12 - 11 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10 12)\n10 / 12 = 0.8333 (left: 0.8333)"
            ],
            "values": [
                0.002,
                0.002,
                0.003,
                0.001,
                0.003,
                0.003,
                60.0,
                60.0,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 5.6",
                "1 <- 5.7",
                "2 <- 5.6",
                "3 <- 5.7",
                "4 <- 2.4",
                "5 <- 4.3",
                "6 <- 5.6",
                "7 <- 2.4",
                "8 <- 5.7",
                "9 <- 5.7"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "2 + 11 = 13 (left: 11 12 13)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "2 + 11 = 13 (left: 11 12 13)",
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)",
                "11 / 2 = 5.5 (left: 5.5 11 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)",
                "2 + 11 = 13 (left: 11 12 13)",
                "2 + 11 = 13 (left: 11 12 13)"
            ]
        },
        "step_6": {
            "steps": [
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "2 + 11 = 13 (left: 11 12 13)\n12 + 13 = 25 (left: 11)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "2 + 11 = 13 (left: 11 12 13)\n12 / 11 = 1.0909090909090908 (left: 1.0909090909090908 13)",
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)\n1 - 10 = -9 (left: -9)",
                "11 / 2 = 5.5 (left: 5.5 11 12)\n11 - 5.5 = 5.5 (left: 5.5 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n5 / 5 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "2 + 11 = 13 (left: 11 12 13)\n12 + 13 = 25 (left: 11)",
                "2 + 11 = 13 (left: 11 12 13)\n12 - 11 = 1 (left: 1 13)"
            ],
            "values": [
                40.001,
                0.001,
                60.0,
                2.0,
                0.003,
                1.0,
                60.0,
                0.003,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 5.6",
                "1 <- 2.6",
                "2 <- 5.6",
                "3 <- 6.2",
                "4 <- 1.8",
                "5 <- 5.6",
                "6 <- 6.6",
                "7 <- 6.0",
                "8 <- 6.5",
                "9 <- 6.2"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "11 / 2 = 5.5 (left: 5.5 11 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "12 - 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "11 / 2 = 5.5 (left: 5.5 11 12)\n11 - 5.5 = 5.5 (left: 5.5 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24"
            ]
        },
        "step_7": {
            "steps": [
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "11 / 2 = 5.5 (left: 5.5 11 12)\n5.5 * 11 = 60.5 (left: 12 60.5)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 + (12 / (11 - 11))) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n5 - 3 = 2 (left: 2 3 7)\n2 + 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\n35 / 5 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 7) + 3 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 / 9 = 2 (left: 2 18)\n2 * 8 = 16 (left: 16)\n16 + 9 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 8 = 30 (left: 30)\n30 - 2 = 28 (left: 28)\n28 / 8 = 3.5 (left: 3.5)\n3.5 * 9 = 31.5 (left: 31.5)\n31.5 - 8 = 23.5 (left: 23.5)\n23.5 + 9 = 32.5 (left: 32.5)\n32.5 - 3 = 29.5 (left: 29.5)\n29.5 + 8 = 37.5 (left: 37.5)\n37.5 / 9 = 4.16666666667 (left: 4.16666666667)\n4.16666666667 * 8 = 33.3333333334 (left: 33.3333333334)\n33.3333333334 - 9 = 24.3333333334 (left: 24.3333333334)\n24.3333333334 + 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.3333333334 - 9 = 26.3333333334 (left: 26.3333333334)\n26.3333333334 + 3 = 29.3333333334 (left: 29.3333333334)\n29.3333333334 - 8 = 21.3333333334 (left: 21.3333333334)\n21.3333333334 + 9 = 30.3333333334 (left: 30.3333333334)\n30.3333333334 - 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.3333333334 - 9 = 26.3333333334 (left: 26.3333333334)\n26.3333333334 + 3 = 29.3333333334 (left: 29.3333333334)\n29.3333333334 - 8 = 21.3333333334 (left: 21.3333333334)\n21.3333333334 + 9 = 30.3333333334 (left: 30.3333333334)\n30.3333333334 - 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.333333333",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 8 9\nSteps:\n3 * 9 = 27 (left: 3 8 27)\n27 - 8 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\nAnswer: ((3 * 9) - 8) - 3 = 24",
                "11 / 2 = 5.5 (left: 5.5 11 12)\n11 - 5.5 = 5.5 (left: 5.5 12)\n5.5 + 12 = 17.5 (left: 17.5)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 5) - 7) * 3 = 24"
            ],
            "values": [
                40.001,
                0.003,
                0.003,
                40.0,
                60.0,
                60.0,
                60.0,
                60.0,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 7.0",
                "1 <- 7.3",
                "2 <- 7.0",
                "3 <- 7.0",
                "4 <- 7.6",
                "5 <- 6.2",
                "6 <- 7.5",
                "7 <- 7.5",
                "8 <- 6.6",
                "9 <- 5.6"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n5 - 3 = 2 (left: 2 3 7)\n2 + 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\n35 / 5 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 7) + 3 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 / 9 = 2 (left: 2 18)\n2 * 8 = 16 (left: 16)\n16 + 9 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 8 = 30 (left: 30)\n30 - 2 = 28 (left: 28)\n28 / 8 = 3.5 (left: 3.5)\n3.5 * 9 = 31.5 (left: 31.5)\n31.5 - 8 = 23.5 (left: 23.5)\n23.5 + 9 = 32.5 (left: 32.5)\n32.5 - 3 = 29.5 (left: 29.5)\n29.5 + 8 = 37.5 (left: 37.5)\n37.5 / 9 = 4.16666666667 (left: 4.16666666667)\n4.16666666667 * 8 = 33.3333333334 (left: 33.3333333334)\n33.3333333334 - 9 = 24.3333333334 (left: 24.3333333334)\n24.3333333334 + 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.3333333334 - 9 = 26.3333333334 (left: 26.3333333334)\n26.3333333334 + 3 = 29.3333333334 (left: 29.3333333334)\n29.3333333334 - 8 = 21.3333333334 (left: 21.3333333334)\n21.3333333334 + 9 = 30.3333333334 (left: 30.3333333334)\n30.3333333334 - 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.3333333334 - 9 = 26.3333333334 (left: 26.3333333334)\n26.3333333334 + 3 = 29.3333333334 (left: 29.3333333334)\n29.3333333334 - 8 = 21.3333333334 (left: 21.3333333334)\n21.3333333334 + 9 = 30.3333333334 (left: 30.3333333334)\n30.3333333334 - 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.333333333",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)"
            ]
        },
        "step_8": {
            "steps": [
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 + 3 = 16 (left: 16)\nAnswer: ((3 * 7) - 5) + (13 + 3) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n5 - 3 = 2 (left: 2 3 7)\n2 + 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\n35 / 5 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 7) + 3 = 24\nInput: 1 3 4 10\nSteps:\n4 * 10 = 40 (left: 1 3 40)\n1 + 3 = 4 (left: 4 40)\n4 * 40 = 160 (left: 160)\n160 / 10 = 16 (left: 16)\n16 - 4 = 12 (left: 12)\n12 * 10 = 120 (left: 120)\n120 / 3 = 40 (left: 40)\n40 - 40 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: ((((1 + 3) * 10) * 40) / 10 - 4) * 3 + 24 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9 9)\n9 * 1 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n81 / 9 = 9 (left: 9)\nAnswer: ((3 * 3) * (8 - 9)) + 9 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 7 7 8 9\nSteps:\n7 + 8 = 15 (left: 7 9 15)\n9 - 7 = 2 (left: 2 15)\n2 * 15 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((7 + 8) * (9 - 7)) - 6 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 / 9 = 2 (left: 2 18)\n2 * 8 = 16 (left: 16)\n16 + 9 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 8 = 30 (left: 30)\n30 - 2 = 28 (left: 28)\n28 / 8 = 3.5 (left: 3.5)\n3.5 * 9 = 31.5 (left: 31.5)\n31.5 - 8 = 23.5 (left: 23.5)\n23.5 + 9 = 32.5 (left: 32.5)\n32.5 - 3 = 29.5 (left: 29.5)\n29.5 + 8 = 37.5 (left: 37.5)\n37.5 / 9 = 4.16666666667 (left: 4.16666666667)\n4.16666666667 * 8 = 33.3333333334 (left: 33.3333333334)\n33.3333333334 - 9 = 24.3333333334 (left: 24.3333333334)\n24.3333333334 + 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.3333333334 - 9 = 26.3333333334 (left: 26.3333333334)\n26.3333333334 + 3 = 29.3333333334 (left: 29.3333333334)\n29.3333333334 - 8 = 21.3333333334 (left: 21.3333333334)\n21.3333333334 + 9 = 30.3333333334 (left: 30.3333333334)\n30.3333333334 - 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.3333333334 - 9 = 26.3333333334 (left: 26.3333333334)\n26.3333333334 + 3 = 29.3333333334 (left: 29.3333333334)\n29.3333333334 - 8 = 21.3333333334 (left: 21.3333333334)\n21.3333333334 + 9 = 30.3333333334 (left: 30.3333333334)\n30.3333333334 - 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.333333333\n4 - (3 * 8) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 21 (left: 21)\n21 - 21 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: (((3 * 7) - (5 - 3)) / 2) + 24 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 + 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 7) - 8) + 3 + 8 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 5 7 8\nSteps:\n7 - 3 = 4 (left: 4 5 8)\n8 - 5 = 3 (left: 4 3)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((7 - 3) * (8 - 5)) * 2 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 7 8\nSteps:\n7 + 8 = 15 (left: 3 3 15)\n3 * 3 = 9 (left: 9 15)\n9 * 15 = 24 (left: 24)\nAnswer: (3 * 3) * (7 + 8) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24"
            ],
            "values": [
                60.0,
                60.0,
                40.0,
                60.0,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0,
                20.002
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 8.9",
                "2 <- 7.0",
                "3 <- 7.6",
                "4 <- 8.2",
                "5 <- 8.1",
                "6 <- 7.9",
                "7 <- 8.3",
                "8 <- 6.2",
                "9 <- 8.6"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n5 - 3 = 2 (left: 2 3 7)\n2 + 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\n35 / 5 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 7) + 3 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 / 9 = 2 (left: 2 18)\n2 * 8 = 16 (left: 16)\n16 + 9 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 8 = 30 (left: 30)\n30 - 2 = 28 (left: 28)\n28 / 8 = 3.5 (left: 3.5)\n3.5 * 9 = 31.5 (left: 31.5)\n31.5 - 8 = 23.5 (left: 23.5)\n23.5 + 9 = 32.5 (left: 32.5)\n32.5 - 3 = 29.5 (left: 29.5)\n29.5 + 8 = 37.5 (left: 37.5)\n37.5 / 9 = 4.16666666667 (left: 4.16666666667)\n4.16666666667 * 8 = 33.3333333334 (left: 33.3333333334)\n33.3333333334 - 9 = 24.3333333334 (left: 24.3333333334)\n24.3333333334 + 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.3333333334 - 9 = 26.3333333334 (left: 26.3333333334)\n26.3333333334 + 3 = 29.3333333334 (left: 29.3333333334)\n29.3333333334 - 8 = 21.3333333334 (left: 21.3333333334)\n21.3333333334 + 9 = 30.3333333334 (left: 30.3333333334)\n30.3333333334 - 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.3333333334 - 9 = 26.3333333334 (left: 26.3333333334)\n26.3333333334 + 3 = 29.3333333334 (left: 29.3333333334)\n29.3333333334 - 8 = 21.3333333334 (left: 21.3333333334)\n21.3333333334 + 9 = 30.3333333334 (left: 30.3333333334)\n30.3333333334 - 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.333333333",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9 9)\n9 * 1 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n81 / 9 = 9 (left: 9)\nAnswer: ((3 * 3) * (8 - 9)) + 9 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n5 - 3 = 2 (left: 2 3 7)\n2 + 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\n35 / 5 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 7) + 3 = 24\nInput: 1 3 4 10\nSteps:\n4 * 10 = 40 (left: 1 3 40)\n1 + 3 = 4 (left: 4 40)\n4 * 40 = 160 (left: 160)\n160 / 10 = 16 (left: 16)\n16 - 4 = 12 (left: 12)\n12 * 10 = 120 (left: 120)\n120 / 3 = 40 (left: 40)\n40 - 40 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: ((((1 + 3) * 10) * 40) / 10 - 4) * 3 + 24 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 5) - 7) * 3 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 7 7 8 9\nSteps:\n7 + 8 = 15 (left: 7 9 15)\n9 - 7 = 2 (left: 2 15)\n2 * 15 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((7 + 8) * (9 - 7)) - 6 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 + 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 7) - 8) + 3 + 8 = 24"
            ]
        },
        "step_9": {
            "steps": [
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n5 - 3 = 2 (left: 2 3 7)\n2 + 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\n35 / 5 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 7) + 3 = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (3 * 8) + (2 * 6) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 4 6\nSteps:\n3 + 4 = 7 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 + 4) * 6 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 6 7 9\nSteps:\n6 * 3 = 18 (left: 7 9 18)\n9 - 7 = 2 (left: 2 18)\n18 * 2 = 36 (left: 36)\n36 / 1.5 = 24 (left: 24)\nAnswer: (6 * 3) * ((9 - 7) * 2) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 / 9 = 2 (left: 2 18)\n2 * 8 = 16 (left: 16)\n16 + 9 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 8 = 30 (left: 30)\n30 - 2 = 28 (left: 28)\n28 / 8 = 3.5 (left: 3.5)\n3.5 * 9 = 31.5 (left: 31.5)\n31.5 - 8 = 23.5 (left: 23.5)\n23.5 + 9 = 32.5 (left: 32.5)\n32.5 - 3 = 29.5 (left: 29.5)\n29.5 + 8 = 37.5 (left: 37.5)\n37.5 / 9 = 4.16666666667 (left: 4.16666666667)\n4.16666666667 * 8 = 33.3333333334 (left: 33.3333333334)\n33.3333333334 - 9 = 24.3333333334 (left: 24.3333333334)\n24.3333333334 + 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.3333333334 - 9 = 26.3333333334 (left: 26.3333333334)\n26.3333333334 + 3 = 29.3333333334 (left: 29.3333333334)\n29.3333333334 - 8 = 21.3333333334 (left: 21.3333333334)\n21.3333333334 + 9 = 30.3333333334 (left: 30.3333333334)\n30.3333333334 - 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.3333333334 - 9 = 26.3333333334 (left: 26.3333333334)\n26.3333333334 + 3 = 29.3333333334 (left: 29.3333333334)\n29.3333333334 - 8 = 21.3333333334 (left: 21.3333333334)\n21.3333333334 + 9 = 30.3333333334 (left: 30.3333333334)\n30.3333333334 - 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.333333333\n4 * (8 - 3) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9 9)\n9 * 1 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n81 / 9 = 9 (left: 9)\nAnswer: ((3 * 3) * (8 - 9)) + 9 = 24\nInput: 2 3 7 9\nSteps:\n3 + 7 = 10 (left: 2 9 10)\n2 * 9 = 18 (left: 18 10)\n18 - 10 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: (2 * 9) - (10 + 3) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n5 - 3 = 2 (left: 2 3 7)\n2 + 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\n35 / 5 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 7) + 3 = 24\nInput: 1 3 4 10\nSteps:\n4 * 10 = 40 (left: 1 3 40)\n1 + 3 = 4 (left: 4 40)\n4 * 40 = 160 (left: 160)\n160 / 10 = 16 (left: 16)\n16 - 4 = 12 (left: 12)\n12 * 10 = 120 (left: 120)\n120 / 3 = 40 (left: 40)\n40 - 40 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: ((((1 + 3) * 10) * 40) / 10 - 4) * 3 + 24 = 24\nInput: 2 3 7 9\nSteps:\n7 - 3 = 4 (left: 2 4 9)\n4 * 9 = 36 (left: 2 36)\n36 / 2 = 18 (left: 18)\n18 + 18 = 36 (left: 36)\n36 - 9 = 27 (left: 27)\n27 - 18 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 2 = 25 (left: 25)\n25 + 24 = 24 (left: 24)\nAnswer: ((((2 * (7 - 3)) * 9) / 2 + 18 - 9) * 3) - 2 + 24 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 5) - 7) * 3 = 24\nInput: 1 2 3 4\nSteps:\n3 + 4 = 7 (left: 1 2 7)\n2 * 7 = 14 (left: 1 14)\n1 * 14 = 14 (left: 14)\n14 + 14 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((1 * 2) + (3 + 4)) - 4 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 7 7 8 9\nSteps:\n7 + 8 = 15 (left: 7 9 15)\n9 - 7 = 2 (left: 2 15)\n2 * 15 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((7 + 8) * (9 - 7)) - 6 = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n27 - 6 = 21 (left: 3 21)\n21 / 3 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 6 = 27 (left: 27)\n27 - 6 = 21 (left: 21)\n21 * 3 = 63 (left: 63)\n63 / 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: (((3 * 9) - 6) / 3) + 3 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 5 7 8\nSteps:\n3 * 7 = 21 (left: 5 8 21)\n21 - 8 = 13 (left: 5 13)\n13 + 5 = 18 (left: 18)\n18 * 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 8) + 5 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 + 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 7) - 8) + 3 + 8 = 24\nInput: 2 3 5 9\nSteps:\n3 + 5 = 8 (left: 2 8 9)\n8 + 9 = 17 (left: 17)\n2 * 17 = 34 (left: 34)\nAnswer: ((2 + 3) + 5 + 9) * 17 = 34"
            ],
            "values": [
                60.0,
                40.0,
                60.0,
                0.003,
                60.0,
                60.0,
                60.0,
                40.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 7.6",
                "1 <- 7.4",
                "2 <- 9.0",
                "3 <- 9.4",
                "4 <- 9.6",
                "5 <- 6.2",
                "6 <- 7.3",
                "7 <- 8.0",
                "8 <- 7.3",
                "9 <- 9.6"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 / 9 = 2 (left: 2 18)\n2 * 8 = 16 (left: 16)\n16 + 9 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 8 = 30 (left: 30)\n30 - 2 = 28 (left: 28)\n28 / 8 = 3.5 (left: 3.5)\n3.5 * 9 = 31.5 (left: 31.5)\n31.5 - 8 = 23.5 (left: 23.5)\n23.5 + 9 = 32.5 (left: 32.5)\n32.5 - 3 = 29.5 (left: 29.5)\n29.5 + 8 = 37.5 (left: 37.5)\n37.5 / 9 = 4.16666666667 (left: 4.16666666667)\n4.16666666667 * 8 = 33.3333333334 (left: 33.3333333334)\n33.3333333334 - 9 = 24.3333333334 (left: 24.3333333334)\n24.3333333334 + 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.3333333334 - 9 = 26.3333333334 (left: 26.3333333334)\n26.3333333334 + 3 = 29.3333333334 (left: 29.3333333334)\n29.3333333334 - 8 = 21.3333333334 (left: 21.3333333334)\n21.3333333334 + 9 = 30.3333333334 (left: 30.3333333334)\n30.3333333334 - 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.3333333334 - 9 = 26.3333333334 (left: 26.3333333334)\n26.3333333334 + 3 = 29.3333333334 (left: 29.3333333334)\n29.3333333334 - 8 = 21.3333333334 (left: 21.3333333334)\n21.3333333334 + 9 = 30.3333333334 (left: 30.3333333334)\n30.3333333334 - 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.333333333",
                "12 - 11 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n5 - 3 = 2 (left: 2 3 7)\n2 + 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\n35 / 5 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 7) + 3 = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (3 * 8) + (2 * 6) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9 9)\n9 * 1 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n81 / 9 = 9 (left: 9)\nAnswer: ((3 * 3) * (8 - 9)) + 9 = 24\nInput: 2 3 7 9\nSteps:\n3 + 7 = 10 (left: 2 9 10)\n2 * 9 = 18 (left: 18 10)\n18 - 10 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: (2 * 9) - (10 + 3) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 5) - 7) * 3 = 24\nInput: 1 2 3 4\nSteps:\n3 + 4 = 7 (left: 1 2 7)\n2 * 7 = 14 (left: 1 14)\n1 * 14 = 14 (left: 14)\n14 + 14 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((1 * 2) + (3 + 4)) - 4 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n5 - 3 = 2 (left: 2 3 7)\n2 + 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\n35 / 5 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 7) + 3 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 + 3 = 16 (left: 16)\nAnswer: ((3 * 7) - 5) + (13 + 3) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n5 - 3 = 2 (left: 2 3 7)\n2 + 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\n35 / 5 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 7) + 3 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 5) - 7) * 3 = 24\nInput: 1 2 3 4\nSteps:\n3 + 4 = 7 (left: 1 2 7)\n2 * 7 = 14 (left: 1 14)\n1 * 14 = 14 (left: 14)\n14 + 14 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((1 * 2) + (3 + 4)) - 4 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 / 9 = 2 (left: 2 18)\n2 * 8 = 16 (left: 16)\n16 + 9 = 25 (left: 25)\n25 - 3 = 22 (left: 22)\n22 + 8 = 30 (left: 30)\n30 - 2 = 28 (left: 28)\n28 / 8 = 3.5 (left: 3.5)\n3.5 * 9 = 31.5 (left: 31.5)\n31.5 - 8 = 23.5 (left: 23.5)\n23.5 + 9 = 32.5 (left: 32.5)\n32.5 - 3 = 29.5 (left: 29.5)\n29.5 + 8 = 37.5 (left: 37.5)\n37.5 / 9 = 4.16666666667 (left: 4.16666666667)\n4.16666666667 * 8 = 33.3333333334 (left: 33.3333333334)\n33.3333333334 - 9 = 24.3333333334 (left: 24.3333333334)\n24.3333333334 + 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.3333333334 - 9 = 26.3333333334 (left: 26.3333333334)\n26.3333333334 + 3 = 29.3333333334 (left: 29.3333333334)\n29.3333333334 - 8 = 21.3333333334 (left: 21.3333333334)\n21.3333333334 + 9 = 30.3333333334 (left: 30.3333333334)\n30.3333333334 - 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.3333333334 - 9 = 26.3333333334 (left: 26.3333333334)\n26.3333333334 + 3 = 29.3333333334 (left: 29.3333333334)\n29.3333333334 - 8 = 21.3333333334 (left: 21.3333333334)\n21.3333333334 + 9 = 30.3333333334 (left: 30.3333333334)\n30.3333333334 - 3 = 27.3333333334 (left: 27.3333333334)\n27.3333333334 + 8 = 35.3333333334 (left: 35.3333333334)\n35.333333333\n4 - 3 = 1 (left: 1 8 9)\n1 * 9 = 9 (left: 9 8)\n9 * 8 = 72 (left: 72)\n72 / 9 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((4 - 3) * 9) * 8 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)\n11 - 1 = 10 (left: 10)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n5 - 3 = 2 (left: 2 3 7)\n2 + 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\n35 / 5 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 7) + 3 = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (3 * 8) + (2 * 6) = 24\nInput: 1 3 5 7\nSteps:\n5 * 7 = 35 (left: 1 3 35)\n3 - 1 = 2 (left: 2 35)\n35 - 2 = 33 (left: 33)\n33 / 3 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 33 = 55 (left: 55)\n55 - 31 = 24 (left: 24)\nAnswer: (((1 + 3) * 5) - 7) * 2 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9 9)\n9 * 1 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n81 / 9 = 9 (left: 9)\nAnswer: ((3 * 3) * (8 - 9)) + 9 = 24\nInput: 2 3 7 9\nSteps:\n3 + 7 = 10 (left: 2 9 10)\n2 * 9 = 18 (left: 18 10)\n18 - 10 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: (2 * 9) - (10 + 3) = 24\nInput: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 + 6 = 12 (left: 6 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 + 6) * (6 + 6) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 5) - 7) * 3 = 24\nInput: 1 2 3 4\nSteps:\n3 + 4 = 7 (left: 1 2 7)\n2 * 7 = 14 (left: 1 14)\n1 * 14 = 14 (left: 14)\n14 + 14 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((1 * 2) + (3 + 4)) - 4 = 24\nInput: 6 7 8 9\nSteps:\n7 + 8 = 15 (left: 6 9 15)\n15 - 9 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((7 + 8) - 9) * 6 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 + 10 = 15 (left: 3 15)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 7) + 5) * 2 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n5 - 3 = 2 (left: 2 3 7)\n2 + 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\n35 / 5 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 7) + 3 = 24\nInput: 6 6 6 8\nSteps:\n6 + 8 = 14 (left: 6 6 14)\n6 * 6 = 36 (left: 36 14)\n36 - 14 = 22 (left: 22)\n22 + 8 = 30 (left: 30)\n30 / 6 = 5 (left: 5)\n5 * 6 = 30 (left: 30)\nAnswer: (6 + 8) * (6 - (6 / 5)) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\n13 + 3 = 16 (left: 16)\nAnswer: ((3 * 7) - 5) + (13 + 3) = 24\nInput: 2 3 6 8\nSteps:\n6 + 8 = 14 (left: 2 3 14)\n14 - 3 = 11 (left: 2 11)\n11 * 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((6 + 8) - 3) * (11 + 2) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n5 - 3 = 2 (left: 2 3 7)\n2 + 3 = 5 (left: 5 7)\n5 * 7 = 35 (left: 35)\n35 / 5 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 7) + 3 = 24\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n8 - 6 = 2 (left: 2 3 8)\n2 * 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((2 * 4) - 6) * (3 * 8) / 2 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 11 = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3 8)\n1 * 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 + 5) - 7) * 3 = 24\nInput: 1 2 3 4\nSteps:\n3 + 4 = 7 (left: 1 2 7)\n2 * 7 = 14 (left: 1 14)\n1 * 14 = 14 (left: 14)\n14 + 14 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((1 * 2) + (3 + 4)) - 4 = 24\nInput: 6 7 5 4\nSteps:\n6 + 7 = 13 (left: 5 4 13)\n5 - 4 = 1 (left: 1 13)\n13 * 1 = 13 (left: 13)\n13 + 13 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: ((6 + 7) * (5 - 4)) - 2 = 24"
            ],
            "values": [
                60.0,
                0.002,
                60.0,
                40.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.515341
    },
    "38": {
        "input": "4 4 4 6",
        "step_1": {
            "steps": [
                "6 - 4 = 2 (left: 4 4 2)",
                "6 - 4 = 2 (left: 4 4 2)",
                "4 + 4 = 8 (left: 4 8 6)",
                "6 - 4 = 2 (left: 4 4 2)",
                "4 * 4 = 16 (left: 16 4 6)",
                "4 * 4 = 16 (left: 4 6 16)",
                "6 - 4 = 2 (left: 4 4 2)",
                "4 + 4 = 8 (left: 4 8 6)",
                "4 + 4 = 8 (left: 8 4 6)",
                "4 - 4 = 0 (left: 0 4 6)"
            ],
            "values": [
                3.0,
                22.0,
                22.0,
                1.002,
                22.0,
                60.0,
                3.0,
                41.0,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- INIT",
                "2 <- 1.2",
                "3 <- 1.5",
                "4 <- 1.4",
                "5 <- 1.7",
                "6 <- 1.5",
                "7 <- 1.8",
                "8 <- 1.5",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "4 + 4 = 8 (left: 4 8 6)",
                "",
                "4 + 4 = 8 (left: 4 8 6)",
                "4 * 4 = 16 (left: 4 6 16)",
                "4 * 4 = 16 (left: 16 4 6)",
                "4 + 4 = 8 (left: 4 8 6)",
                "4 * 4 = 16 (left: 4 6 16)",
                "4 + 4 = 8 (left: 8 4 6)",
                "4 * 4 = 16 (left: 4 6 16)",
                "6 - 4 = 2 (left: 4 4 2)"
            ]
        },
        "step_2": {
            "steps": [
                "4 + 4 = 8 (left: 4 8 6)\n4 / 2 = 2 (left: 2 6 8)",
                "4 * 4 = 16 (left: 16 4 6)",
                "4 + 4 = 8 (left: 4 8 6)\n6 / 4 = 1.5 (left: 1.5 8)",
                "4 * 4 = 16 (left: 4 6 16)\n6 * 4 = 24 (left: 24 16)",
                "4 * 4 = 16 (left: 16 4 6)\n6 - 4 = 2 (left: 16 2)",
                "4 + 4 = 8 (left: 4 8 6)\n5 - 3 = 2 (left: 2 7 9)",
                "4 * 4 = 16 (left: 4 6 16)\n4 + 6 = 10 (left: 10 16)",
                "4 + 4 = 8 (left: 8 4 6)\n6 - 8 = -2 (left: -2)",
                "4 * 4 = 16 (left: 4 6 16)\n6 - 4 = 2 (left: 2 16)",
                "6 - 4 = 2 (left: 4 4 2)\nInput: 6 3 9"
            ],
            "values": [
                2.001,
                2.0,
                2.001,
                0.003,
                0.003,
                2.001,
                0.002,
                0.001,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.7",
                "2 <- 1.8",
                "3 <- 1.7",
                "4 <- 1.7",
                "5 <- 2.2",
                "6 <- INIT",
                "7 <- 1.7",
                "8 <- 1.1",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "4 + 4 = 8 (left: 4 8 6)",
                "4 + 4 = 8 (left: 4 8 6)",
                "4 + 4 = 8 (left: 8 4 6)",
                "4 + 4 = 8 (left: 4 8 6)",
                "4 + 4 = 8 (left: 4 8 6)",
                "4 + 4 = 8 (left: 4 8 6)\n6 / 4 = 1.5 (left: 1.5 8)",
                "",
                "4 + 4 = 8 (left: 4 8 6)",
                "6 - 4 = 2 (left: 4 4 2)",
                "4 * 4 = 16 (left: 4 6 16)"
            ]
        },
        "step_3": {
            "steps": [
                "4 + 4 = 8 (left: 4 8 6)\n5 / 10 = 0.5 (left: 0.5 3)",
                "4 + 4 = 8 (left: 4 8 6)\n2 - 1.5 = 0.5 (left: 0.5 32)",
                "4 + 4 = 8 (left: 8 4 6)\n8 * 4 = 32 (left: 6 32)",
                "4 + 4 = 8 (left: 4 8 6)\n6 - 4 = 2 (left: 2 2)",
                "4 + 4 = 8 (left: 4 8 6)\n8 / 4 = 2 (left: 2 6)",
                "4 + 4 = 8 (left: 4 8 6)\n6 / 4 = 1.5 (left: 1.5 8)\n8 / 1.5 = 5.33333333... (left: 5.33333333... 8)",
                "4 * 4 = 16 (left: 4 6 16)",
                "4 + 4 = 8 (left: 4 8 6)\n6 + 4 = 10 (left: 10)",
                "6 - 4 = 2 (left: 4 4 2)\n4 - 4 = 0 (left: 0 2)",
                "4 * 4 = 16 (left: 4 6 16)\nInput: 10 24 1.5 6 12 4 10 24 6 2"
            ],
            "values": [
                0.002,
                0.001,
                0.003,
                1.002,
                1.0,
                2.001,
                60.0,
                20.002,
                41.0,
                0.003
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 3.8",
                "2 <- 3.7",
                "3 <- 1.5",
                "4 <- 3.7",
                "5 <- 3.8",
                "6 <- 1.8",
                "7 <- 1.5",
                "8 <- 1.2",
                "9 <- 3.6"
            ],
            "resampled_steps": [
                "4 + 4 = 8 (left: 4 8 6)",
                "6 - 4 = 2 (left: 4 4 2)\n4 - 4 = 0 (left: 0 2)",
                "4 + 4 = 8 (left: 4 8 6)\n6 + 4 = 10 (left: 10)",
                "4 * 4 = 16 (left: 4 6 16)",
                "4 + 4 = 8 (left: 4 8 6)\n6 + 4 = 10 (left: 10)",
                "6 - 4 = 2 (left: 4 4 2)\n4 - 4 = 0 (left: 0 2)",
                "4 + 4 = 8 (left: 8 4 6)",
                "4 * 4 = 16 (left: 4 6 16)",
                "4 + 4 = 8 (left: 4 8 6)",
                "4 * 4 = 16 (left: 4 6 16)"
            ]
        },
        "step_4": {
            "steps": [
                "4 + 4 = 8 (left: 4 8 6)\n5 / 3 = 1.6666666666666667 (left: 1.6666666666666667 7)",
                "6 - 4 = 2 (left: 4 4 2)\n4 - 4 = 0 (left: 0 2)\n0 * 2 = 0 (left: 0)",
                "4 + 4 = 8 (left: 4 8 6)\n6 + 4 = 10 (left: 10)\nThere are no possible next steps as there is only one number left.",
                "4 * 4 = 16 (left: 4 6 16)\n4 * 6 = 24 (left: 24 16)",
                "4 + 4 = 8 (left: 4 8 6)\n6 + 4 = 10 (left: 10)\n10 + 10 = 20",
                "6 - 4 = 2 (left: 4 4 2)\n4 - 4 = 0 (left: 0 2)\n5 + 5 = 10 (left: 10)",
                "4 + 4 = 8 (left: 8 4 6)\nInput: 2 6 1.5",
                "4 * 4 = 16 (left: 4 6 16)\n16 - 4 = 12 (left: 4 12)",
                "4 + 4 = 8 (left: 4 8 6)\n3 * 5 = 15 (left: 12 15)",
                "4 * 4 = 16 (left: 4 6 16)\n16 / 4 = 4 (left: 4 6)"
            ],
            "values": [
                2.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 3.6",
                "2 <- 4.9",
                "3 <- 3.6",
                "4 <- INIT",
                "5 <- 3.7",
                "6 <- 3.8",
                "7 <- 1.2",
                "8 <- 1.8",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "4 * 4 = 16 (left: 4 6 16)",
                "4 * 4 = 16 (left: 4 6 16)",
                "4 * 4 = 16 (left: 4 6 16)\n16 / 4 = 4 (left: 4 6)",
                "4 * 4 = 16 (left: 4 6 16)",
                "",
                "4 + 4 = 8 (left: 4 8 6)\n6 + 4 = 10 (left: 10)",
                "6 - 4 = 2 (left: 4 4 2)\n4 - 4 = 0 (left: 0 2)",
                "4 + 4 = 8 (left: 4 8 6)",
                "4 + 4 = 8 (left: 8 4 6)",
                "4 * 4 = 16 (left: 4 6 16)"
            ]
        },
        "step_5": {
            "steps": [
                "4 * 4 = 16 (left: 4 6 16)\n16 - 4 = 12 (left: 6 12)",
                "4 * 4 = 16 (left: 4 6 16)\nInput: 10 24 22 4 12",
                "4 * 4 = 16 (left: 4 6 16)\n16 / 4 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "4 * 4 = 16 (left: 4 6 16)\n4 * 6 = 24 (left: 24 16)",
                "6 - 4 = 2 (left: 4 4 2)",
                "4 + 4 = 8 (left: 4 8 6)\n6 + 4 = 10 (left: 10)\n10 + 8 = 18 (left: 8 18)",
                "6 - 4 = 2 (left: 4 4 2)\n4 - 4 = 0 (left: 0 2)\n0 / 2 = 0 (left: 0)",
                "4 + 4 = 8 (left: 4 8 6)\n9 / 3 = 3 (left: 3 5)",
                "4 + 4 = 8 (left: 8 4 6)\n6 / 4 = 1.5 (left: 1.5 8)",
                "4 * 4 = 16 (left: 4 6 16)\n4 * 6 = 24 (left: 24 16)"
            ],
            "values": [
                0.003,
                0.003,
                0.001,
                0.003,
                3.0,
                21.001,
                0.001,
                1.001,
                2.0,
                40.001
            ],
            "resampled": [
                "0 <- 5.9",
                "1 <- 1.8",
                "2 <- 5.5",
                "3 <- 1.7",
                "4 <- 3.6",
                "5 <- 5.9",
                "6 <- 5.9",
                "7 <- INIT",
                "8 <- 1.5",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "4 * 4 = 16 (left: 4 6 16)\n4 * 6 = 24 (left: 24 16)",
                "4 + 4 = 8 (left: 8 4 6)",
                "4 + 4 = 8 (left: 4 8 6)\n6 + 4 = 10 (left: 10)\n10 + 8 = 18 (left: 8 18)",
                "4 + 4 = 8 (left: 4 8 6)",
                "4 * 4 = 16 (left: 4 6 16)",
                "4 * 4 = 16 (left: 4 6 16)\n4 * 6 = 24 (left: 24 16)",
                "4 * 4 = 16 (left: 4 6 16)\n4 * 6 = 24 (left: 24 16)",
                "",
                "4 * 4 = 16 (left: 4 6 16)",
                "4 + 4 = 8 (left: 8 4 6)"
            ]
        },
        "step_6": {
            "steps": [
                "4 * 4 = 16 (left: 4 6 16)\n4 * 6 = 24 (left: 24 16)\n24 * 16 = 384 (left: 384)",
                "4 + 4 = 8 (left: 8 4 6)\n4 + 6 = 10 (left: 8 10)",
                "4 + 4 = 8 (left: 4 8 6)\n6 + 4 = 10 (left: 10)\n10 + 8 = 18 (left: 8 18)\n8 + 18 = 26 (left: 26)",
                "4 + 4 = 8 (left: 4 8 6)\n6 - 4 = 2 (left: 2 8)",
                "4 * 4 = 16 (left: 4 6 16)\n16 / 4 = 4 (left: 6 4)",
                "4 * 4 = 16 (left: 4 6 16)\n4 * 6 = 24 (left: 24 16)\n24 - 16 = 8 (left: 8)",
                "4 * 4 = 16 (left: 4 6 16)\n4 * 6 = 24 (left: 24 16)\n24 * 16 = 384 (left: 384)",
                "2 * 3 = 6 (left: 6 7 11)",
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)",
                "4 + 4 = 8 (left: 8 4 6)\n8 + 4 = 12 (left: 6 12)"
            ],
            "values": [
                0.0,
                0.0,
                0.002,
                0.003,
                41.0,
                0.003,
                0.003,
                2.001,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 5.5",
                "2 <- 3.8",
                "3 <- 3.6",
                "4 <- 1.8",
                "5 <- 3.8",
                "6 <- 3.8",
                "7 <- 2.1",
                "8 <- 6.8",
                "9 <- 6.4"
            ],
            "resampled_steps": [
                "4 + 4 = 8 (left: 8 4 6)",
                "4 + 4 = 8 (left: 4 8 6)\n6 + 4 = 10 (left: 10)\n10 + 8 = 18 (left: 8 18)",
                "6 - 4 = 2 (left: 4 4 2)\n4 - 4 = 0 (left: 0 2)",
                "4 * 4 = 16 (left: 4 6 16)",
                "4 + 4 = 8 (left: 8 4 6)",
                "6 - 4 = 2 (left: 4 4 2)\n4 - 4 = 0 (left: 0 2)",
                "6 - 4 = 2 (left: 4 4 2)\n4 - 4 = 0 (left: 0 2)",
                "4 * 4 = 16 (left: 16 4 6)",
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)",
                "4 * 4 = 16 (left: 4 6 16)\n16 / 4 = 4 (left: 6 4)"
            ]
        },
        "step_7": {
            "steps": [
                "4 + 4 = 8 (left: 8 4 6)\n6 / 4 = 1.5 (left: 8 1.5)",
                "4 + 4 = 8 (left: 4 8 6)\n6 + 4 = 10 (left: 10)\n10 + 8 = 18 (left: 8 18)\n18 - 8 = 10 (left: 10)",
                "6 - 4 = 2 (left: 4 4 2)\n4 - 4 = 0 (left: 0 2)\n2 / 0 is undefined (left: 0 2)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)",
                "4 + 4 = 8 (left: 8 4 6)\n6 - 4 = 2 (left: 2)",
                "6 - 4 = 2 (left: 4 4 2)\n4 - 4 = 0 (left: 0 2)\nInput: 5 10",
                "6 - 4 = 2 (left: 4 4 2)\n4 - 4 = 0 (left: 0 2)\n0 - 2 = -2 (left: -2)",
                "4 * 4 = 16 (left: 16 4 6)\n16 - 6 = 10 (left: 10 6)",
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)\n6 / 4 = 1.5 (left: 1.5 4)",
                "4 * 4 = 16 (left: 4 6 16)\n16 / 4 = 4 (left: 6 4)\n6 / 4 = 1.5 (left: 1.5)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                60.0,
                0.003,
                0.003,
                0.0,
                0.003,
                1.0,
                0.0
            ],
            "resampled": [
                "0 <- 3.8",
                "1 <- 6.8",
                "2 <- 7.3",
                "3 <- 7.3",
                "4 <- 6.8",
                "5 <- 1.8",
                "6 <- 3.6",
                "7 <- 5.5",
                "8 <- 7.3",
                "9 <- 5.9"
            ],
            "resampled_steps": [
                "6 - 4 = 2 (left: 4 4 2)\n4 - 4 = 0 (left: 0 2)",
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)",
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)",
                "4 + 4 = 8 (left: 8 4 6)",
                "4 * 4 = 16 (left: 4 6 16)",
                "4 + 4 = 8 (left: 4 8 6)\n6 + 4 = 10 (left: 10)\n10 + 8 = 18 (left: 8 18)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)",
                "4 * 4 = 16 (left: 4 6 16)\n4 * 6 = 24 (left: 24 16)"
            ]
        },
        "step_8": {
            "steps": [
                "6 - 4 = 2 (left: 4 4 2)\n4 - 4 = 0 (left: 0 2)\n0 + 2 = 2 (left: 2)",
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)\n10 - 10 = 0 (left: 5)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)\n9 * 3 = 27 (left: 27 27)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)\n16 / 1.5 = 10.666666666666666 (left: 10.666666666666666)",
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)\n4 / 2 = 2 (left: 1 2 2)",
                "4 + 4 = 8 (left: 8 4 6)\nInput: 5 9 3 2",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)",
                "4 + 4 = 8 (left: 4 8 6)\n6 + 4 = 10 (left: 10)\n10 + 8 = 18 (left: 8 18)\n18 / 8 = 2.25 (left: 2.25)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)\n16 / 1.5 = 10.666666666667 (left: 10.666666666667)",
                "4 * 4 = 16 (left: 4 6 16)\n4 * 6 = 24 (left: 24 16)\n24 + 16 = 40 (left: 40)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.002,
                40.001,
                0.003,
                60.0,
                0.003,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 7.3",
                "2 <- 7.3",
                "3 <- 6.8",
                "4 <- 8.6",
                "5 <- 8.6",
                "6 <- 8.4",
                "7 <- 3.6",
                "8 <- 3.6",
                "9 <- 8.4"
            ],
            "resampled_steps": [
                "6 - 4 = 2 (left: 4 4 2)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)",
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)",
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)\n4 / 2 = 2 (left: 1 2 2)",
                "4 * 4 = 16 (left: 4 6 16)",
                "4 * 4 = 16 (left: 4 6 16)",
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)\n4 / 2 = 2 (left: 1 2 2)"
            ]
        },
        "step_9": {
            "steps": [
                "6 - 4 = 2 (left: 4 4 2)\n4 + 4 = 8 (left: 2 8)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)\n1.5 * 16 = 24 (left: 24)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)\n16 - 1.5 = 14.5 (left: 14.5)",
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)\n4 / 4 = 1 (left: 6 1)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)\n1.5 / 16 = 0.09375 (left: 0.09375)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)\n16 - 1.5 = 14.5 (left: 14.5)",
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)\n4 / 2 = 2 (left: 1 2 2)\n5 * 5 = 25 (left: 25 10)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)",
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)\n4 / 2 = 2 (left: 1 2 2)\n2 * 1 = 2 (left: 2 2 2)"
            ],
            "values": [
                0.003,
                60.0,
                0.003,
                40.001,
                0.002,
                0.002,
                0.003,
                60.0,
                60.0,
                20.002
            ],
            "resampled": [
                "0 <- 8.4",
                "1 <- 7.3",
                "2 <- 8.4",
                "3 <- 8.6",
                "4 <- 8.6",
                "5 <- 9.3",
                "6 <- 9.1",
                "7 <- 3.8",
                "8 <- 9.1",
                "9 <- 9.1"
            ],
            "resampled_steps": [
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)\n4 / 2 = 2 (left: 1 2 2)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)",
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)\n4 / 2 = 2 (left: 1 2 2)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)",
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)\n4 / 4 = 1 (left: 6 1)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)\n1.5 * 16 = 24 (left: 24)",
                "6 - 4 = 2 (left: 4 4 2)\n4 - 4 = 0 (left: 0 2)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)\n1.5 * 16 = 24 (left: 24)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)\n1.5 * 16 = 24 (left: 24)"
            ]
        },
        "step_10": {
            "steps": [
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)\n4 / 2 = 2 (left: 1 2 2)\n1 + 2 = 3 (left: 2 3)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)\n16 - 1.5 = 14.5 (left: 14.5)",
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)\n4 / 2 = 2 (left: 1 2 2)\n2 / 1 = 2 (left: 2 2 2)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)\n16 / 1.5 = 10.666666666666666 (left: 10.666666666666666)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)\n1.5 * 16 = 24 (left: 24)",
                "4 * 4 = 16 (left: 4 6 16)\n10 - 6 = 4 (left: 6 4 4)\n4 / 4 = 1 (left: 6 1)\n6 + 1 = 7 (left: 7)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)\n1.5 * 16 = 24 (left: 24)\nAnswer: (4 * 4) * (6 / 4) = 24",
                "6 - 4 = 2 (left: 4 4 2)\n4 - 4 = 0 (left: 0 2)\n2 / 4 = 0.5 (left: 0.5 6)",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)\n1.5 * 16 = 24 (left: 24)\nAnswer: (4 * 4) * (6 / 4) = 24",
                "4 * 4 = 16 (left: 4 6 16)\n6 / 4 = 1.5 (left: 1.5 16)\n1.5 * 16 = 24 (left: 24)\nAnswer: (4 * 4) * (6 / 4) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "cost": 1.5704755000000001
    },
    "39": {
        "input": "1 1 1 11",
        "step_1": {
            "steps": [
                "11 - 1 = 10 (left: 1 1 10)",
                "1 * 1 = 1 (left: 1 1 11)",
                "1 * 1 = 1 (left: 1 1 11)",
                "1 + 1 = 2 (left: 1 2 11)",
                "1 * 1 = 1 (left: 1 1 11)",
                "1 * 1 = 1 (left: 1 1 11)",
                "1 * 1 = 1 (left: 1 1 11)",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)",
                "1 + 1 = 2 (left: 1 2 11)"
            ],
            "values": [
                1.002,
                0.003,
                0.003,
                1.002,
                2.001,
                1.002,
                0.003,
                0.002,
                2.001,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "11 - 1 = 10 (left: 1 1 10)",
                "1 * 1 = 1 (left: 1 1 11)",
                "11 - 1 = 10 (left: 1 1 10)",
                "1 * 1 = 1 (left: 1 1 11)",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 10 1)",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 / 1 = 11 (left: 1 1 11)",
                "1 + 1 = 2 (left: 1 2 11)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                1.002,
                2.0,
                1.001,
                1.002,
                1.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 2.5",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 2.7",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "",
                "",
                "11 - 1 = 10 (left: 1 1 10)",
                "",
                "",
                "",
                "",
                "",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)"
            ]
        },
        "step_3": {
            "steps": [
                "11 - 1 = 10 (left: 1 1 10)",
                "1 * 1 = 1 (left: 1 1 11)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)",
                "11 / 1 = 11 (left: 1 1 11)",
                "11 - 1 = 10 (left: 1 1 10)",
                "1 * 1 = 1 (left: 1 1 11)",
                "1 * 1 = 1 (left: 1 1 11)",
                "11 / 1 = 11 (left: 1 1 11)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)"
            ],
            "values": [
                0.002,
                0.003,
                2.0,
                0.003,
                20.002,
                0.003,
                1.001,
                0.003,
                20.0,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 3.8",
                "2 <- 3.8",
                "3 <- 3.8",
                "4 <- INIT",
                "5 <- 3.2",
                "6 <- 3.4",
                "7 <- 1.4",
                "8 <- 3.8",
                "9 <- 3.4"
            ],
            "resampled_steps": [
                "",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)",
                "",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)",
                "11 - 1 = 10 (left: 1 1 10)",
                "1 * 1 = 1 (left: 1 1 11)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)",
                "11 - 1 = 10 (left: 1 1 10)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 1 = 2 (left: 2 1 11)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)\n0 + 10 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)\nInput: 5 3",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)\n10 / 0 = undefined",
                "1 * 1 = 1 (left: 1 1 11)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)\n10 / 2 = 5 (left: 5)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "1 * 1 = 1 (left: 1 1 11)\n1 + 1 = 2 (left: 2 11)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)\n10 * 0 = 0 (left: 0)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                60.0,
                1.001,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 4.6",
                "1 <- INIT",
                "2 <- 3.4",
                "3 <- 3.4",
                "4 <- 4.9",
                "5 <- 2.6",
                "6 <- 4.9",
                "7 <- 4.6",
                "8 <- 4.9",
                "9 <- 4.7"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 10 1)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "1 * 1 = 1 (left: 1 1 11)\n1 + 1 = 2 (left: 2 11)"
            ]
        },
        "step_5": {
            "steps": [
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n9 / 1 = 9 (left: 9)",
                "1 * 1 = 1 (left: 1 1 11)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 + 1 = 2 (left: 2 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n1 + 9 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 10 1)\n1 * 10 = 10 (left: 10 1)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n9 / 1 = 9 (left: 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n1 + 9 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n1 * 9 = 9 (left: 9)",
                "1 * 1 = 1 (left: 1 1 11)\n1 + 1 = 2 (left: 2 11)\n7 * 12 = 84 (left: 3 84)"
            ],
            "values": [
                0.001,
                0.003,
                0.0,
                3.0,
                0.003,
                60.0,
                0.002,
                0.003,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 4.6",
                "2 <- 4.9",
                "3 <- 5.5",
                "4 <- 4.6",
                "5 <- 4.6",
                "6 <- 3.8",
                "7 <- 5.5",
                "8 <- 4.9",
                "9 <- 4.9"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 10 1)\n1 * 10 = 10 (left: 10 1)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)",
                "11 - 1 = 10 (left: 1 10 1)\n1 * 10 = 10 (left: 10 1)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)"
            ]
        },
        "step_6": {
            "steps": [
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n1 * 9 = 9 (left: 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n9 / 1 = 9 (left: 9)",
                "11 - 1 = 10 (left: 1 10 1)\n1 * 10 = 10 (left: 10 1)\n10 + 1 = 11 (left: 11)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n1 + 9 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n9 / 1 = 9 (left: 9 9)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)\n5 - 3 = 2 (left: 2)",
                "11 - 1 = 10 (left: 1 10 1)\n1 * 10 = 10 (left: 10 1)\n10 / 1 = 10 (left: 1)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n1 + 9 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n9 / 1 = 9 (left: 9)"
            ],
            "values": [
                40.0,
                0.003,
                0.0,
                0.002,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 5.5",
                "1 <- 2.3",
                "2 <- 6.0",
                "3 <- 6.0",
                "4 <- 4.6",
                "5 <- 4.6",
                "6 <- 4.6",
                "7 <- 3.8",
                "8 <- 5.5",
                "9 <- 4.9"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 1 10 1)\n1 * 10 = 10 (left: 10 1)",
                "1 * 1 = 1 (left: 1 1 11)",
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)",
                "11 - 1 = 10 (left: 1 10 1)\n1 * 10 = 10 (left: 10 1)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)"
            ]
        },
        "step_7": {
            "steps": [
                "11 - 1 = 10 (left: 1 10 1)\n1 * 10 = 10 (left: 10 1)\nPossible next steps:",
                "1 * 1 = 1 (left: 1 1 11)\n1 * 1 = 1 (left: 1 11)",
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)\n3 * 9 = 27 (left: 5 27)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n9 - 1 = 8 (left: 8)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n1 + 9 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n1 * 9 = 9 (left: 9)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)\n7 / 5 = 1.4 (left: 1.4)",
                "11 - 1 = 10 (left: 1 10 1)\n1 * 10 = 10 (left: 10 1)\n3 * 7 = 21 (left: 9 21)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n9 - 1 = 8 (left: 8)"
            ],
            "values": [
                0.003,
                1.001,
                0.001,
                0.002,
                0.002,
                0.003,
                0.002,
                0.001,
                1.002,
                0.001
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 4.6",
                "2 <- 1.3",
                "3 <- 5.5",
                "4 <- 6.0",
                "5 <- 4.9",
                "6 <- 4.9",
                "7 <- 3.4",
                "8 <- 4.6",
                "9 <- 5.5"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 1 11)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "1 + 1 = 2 (left: 1 2 11)",
                "11 - 1 = 10 (left: 1 10 1)\n1 * 10 = 10 (left: 10 1)",
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 10 1)\n1 * 10 = 10 (left: 10 1)"
            ]
        },
        "step_8": {
            "steps": [
                "1 * 1 = 1 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n9 - 1 = 8 (left: 8)",
                "1 + 1 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)",
                "11 - 1 = 10 (left: 1 10 1)\n1 * 10 = 10 (left: 10 1)\n10 + 1 = 11 (left: 1)",
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n1 + 9 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n1 + 9 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n9 - 1 = 8 (left: 8)",
                "11 - 1 = 10 (left: 1 10 1)\n1 * 10 = 10 (left: 10 1)\n3 / 7 = 0.43 (left: 0.43 7)"
            ],
            "values": [
                60.0,
                0.001,
                1.002,
                0.003,
                0.003,
                0.002,
                0.002,
                40.001,
                0.002,
                0.0
            ],
            "resampled": [
                "0 <- 8.7",
                "1 <- 4.6",
                "2 <- 4.9",
                "3 <- 8.0",
                "4 <- 8.7",
                "5 <- 3.4",
                "6 <- 4.6",
                "7 <- 3.8",
                "8 <- 8.0",
                "9 <- 8.7"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "1 * 1 = 1 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)",
                "1 * 1 = 1 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)"
            ]
        },
        "step_9": {
            "steps": [
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n1 + 9 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n1 * 9 = 9 (left: 9)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n9 - 1 = 8 (left: 8)",
                "1 * 1 = 1 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)\nPossible next steps:",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n9 / 1 = 9 (left: 9)",
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n1 * 9 = 9 (left: 9)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)\nInput: 5 5",
                "1 * 1 = 1 (left: 1 1 11)\n11 - 1 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n9 / 1 = 9 (left: 9)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                60.0,
                0.0,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 5.5",
                "1 <- 6.0",
                "2 <- 6.0",
                "3 <- 4.6",
                "4 <- 9.5",
                "5 <- 3.8",
                "6 <- 9.5",
                "7 <- 4.6",
                "8 <- 6.0",
                "9 <- 8.7"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 1 10 1)\n1 * 10 = 10 (left: 10 1)",
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)",
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)"
            ]
        },
        "step_10": {
            "steps": [
                "11 - 1 = 10 (left: 1 10 1)\n1 * 10 = 10 (left: 10 1)\nPossible next steps:",
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n1 * 9 = 9 (left: 9)",
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 - 1 = 0 (left: 0 10)\n10 - 0 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n9 / 1 = 9 (left: 9)",
                "11 - 1 = 10 (left: 1 1 10)\n1 * 1 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "11 - 1 = 10 (left: 1 1 10)\n10 - 1 = 9 (left: 1 9)\n9 / 1 = 9 (left: 9)"
            ],
            "values": [
                0.003,
                0.002,
                0.002,
                0.001,
                0.003,
                0.002,
                0.003,
                0.001,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.6161685000000001
    },
    "40": {
        "input": "1 1 11 12",
        "step_1": {
            "steps": [
                "11 / 1 = 11 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 11 12)",
                "10 + 5 = 15 (left: 3 15 15)",
                "1 + 1 = 2 (left: 2 11 12)",
                "12 / 1 = 12 (left: 1 11 12)",
                "12 / 1 = 12 (left: 1 11 12)",
                "1 + 11 = 12 (left: 12 12 12)",
                "1 + 1 = 2 (left: 2 11 12)",
                "11 + 1 = 12 (left: 1 12 12)",
                "1 * 1 = 1 (left: 1 11 12)"
            ],
            "values": [
                22.0,
                0.003,
                0.003,
                21.001,
                2.001,
                1.002,
                0.003,
                0.003,
                2.001,
                21.001
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 1.3",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- INIT",
                "5 <- 1.3",
                "6 <- 1.0",
                "7 <- 1.9",
                "8 <- 1.9",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 11 12)",
                "1 + 1 = 2 (left: 2 11 12)",
                "",
                "1 + 1 = 2 (left: 2 11 12)",
                "",
                "1 + 1 = 2 (left: 2 11 12)",
                "11 / 1 = 11 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 11 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 12)\n9 + 3 = 12 (left: 5 8 12)",
                "1 + 1 = 2 (left: 2 11 12)\n12 - 2 = 10 (left: 10 12)",
                "11 - 1 = 10 (left: 1 10 12)",
                "1 + 1 = 2 (left: 2 11 12)\n11 - 2 = 9 (left: 2 9 12)",
                "11 + 1 = 12 (left: 1 12 12)",
                "1 + 1 = 2 (left: 2 11 12)\n11 / 2 = 5.5 (left: 5.5 12)",
                "11 / 1 = 11 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)",
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)",
                "1 * 1 = 1 (left: 1 11 12)\nPossible next steps:",
                "5 * 3 = 15 (left: 8 15 13)"
            ],
            "values": [
                3.0,
                1.001,
                2.001,
                1.002,
                0.003,
                1.002,
                0.003,
                40.0,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 2.9",
                "2 <- INIT",
                "3 <- 1.0",
                "4 <- 2.7",
                "5 <- 2.7",
                "6 <- INIT",
                "7 <- 1.0",
                "8 <- INIT",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "11 / 1 = 11 (left: 1 11 12)",
                "5 * 3 = 15 (left: 8 15 13)",
                "",
                "11 / 1 = 11 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)",
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)",
                "",
                "11 / 1 = 11 (left: 1 11 12)",
                "",
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)"
            ]
        },
        "step_3": {
            "steps": [
                "11 / 1 = 11 (left: 1 11 12)\n11 + 1 = 12 (left: 1 12)",
                "5 * 3 = 15 (left: 8 15 13)\n3 + 9 = 12 (left: 7 12 5)",
                "27 + 3 = 30 (left: 3 9 30)",
                "11 / 1 = 11 (left: 1 11 12)\n1 * 11 = 11 (left: 11 12)",
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)\n11 - 1 = 10 (left: 10)",
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)\n1 - 11 = -10 (left: -10)",
                "1 + 1 = 2 (left: 2 11 12)",
                "11 / 1 = 11 (left: 1 11 12)\n11 * 1 = 11 (left: 11 12)",
                "1 + 11 = 12 (left: 1 12 12)",
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)\n11 / 1 = 11 (left: 11)"
            ],
            "values": [
                1.002,
                3.0,
                2.001,
                0.003,
                0.002,
                0.002,
                0.003,
                0.003,
                20.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 3.1",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- 1.9",
                "5 <- 2.7",
                "6 <- 3.8",
                "7 <- 1.0",
                "8 <- 3.8",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)",
                "5 * 3 = 15 (left: 8 15 13)\n3 + 9 = 12 (left: 7 12 5)",
                "",
                "1 + 1 = 2 (left: 2 11 12)",
                "1 * 1 = 1 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)",
                "1 + 11 = 12 (left: 1 12 12)",
                "11 / 1 = 11 (left: 1 11 12)",
                "1 + 11 = 12 (left: 1 12 12)",
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)"
            ]
        },
        "step_4": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)\n11 / 1 = 11 (left: 11)",
                "5 * 3 = 15 (left: 8 15 13)\n3 + 9 = 12 (left: 7 12 5)\n7 + 12 = 19 (left: 5 19)",
                "12 * 1 = 12 (left: 1 11 12)",
                "1 + 1 = 2 (left: 2 11 12)\n12 - 2 = 10 (left: 2 11 10)",
                "1 * 1 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)",
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)\n11 - 1 = 10 (left: 10)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "11 / 1 = 11 (left: 1 11 12)\n1 * 11 = 11 (left: 11 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 + 1 = 13 (left: 13)",
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)\n11 - 1 = 10 (left: 10)"
            ],
            "values": [
                0.002,
                0.001,
                20.002,
                0.003,
                40.001,
                0.002,
                20.002,
                0.003,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 1.3",
                "2 <- 4.6",
                "3 <- 2.0",
                "4 <- 3.8",
                "5 <- INIT",
                "6 <- 3.1",
                "7 <- 3.8",
                "8 <- 4.6",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)",
                "1 + 1 = 2 (left: 2 11 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "1 * 1 = 1 (left: 1 11 12)\n9 + 3 = 12 (left: 5 8 12)",
                "1 + 11 = 12 (left: 1 12 12)",
                "",
                "5 * 3 = 15 (left: 8 15 13)\n3 + 9 = 12 (left: 7 12 5)",
                "1 + 11 = 12 (left: 1 12 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "1 * 1 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)"
            ]
        },
        "step_5": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "1 + 1 = 2 (left: 2 11 12)\n2 + 11 = 13 (left: 12 13)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24",
                "1 * 1 = 1 (left: 1 11 12)\n9 + 3 = 12 (left: 5 8 12)\nInput: 5 1.5 4",
                "1 + 11 = 12 (left: 1 12 12)\n7 / 3 = 2 (left: 2 11)",
                "1 / 1 = 1 (left: 1 11 12)",
                "5 * 3 = 15 (left: 8 15 13)\n3 + 9 = 12 (left: 7 12 5)\n12 * 5 = 60 (left: 60)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "1 * 1 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                21.001,
                0.003,
                60.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 5.7",
                "2 <- 1.0",
                "3 <- 4.2",
                "4 <- 1.9",
                "5 <- 5.7",
                "6 <- 4.2",
                "7 <- 4.4",
                "8 <- 2.0",
                "9 <- 4.6"
            ],
            "resampled_steps": [
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "11 / 1 = 11 (left: 1 11 12)",
                "12 * 1 = 12 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 11 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "12 * 1 = 12 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)",
                "1 * 1 = 1 (left: 1 11 12)\n9 + 3 = 12 (left: 5 8 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)"
            ]
        },
        "step_6": {
            "steps": [
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)\n1 + 11 = 12 (left: 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "11 / 1 = 11 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "12 * 1 = 12 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 11 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24",
                "12 * 1 = 12 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)",
                "1 * 1 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "1 * 1 = 1 (left: 1 11 12)\n9 + 3 = 12 (left: 5 8 12)\n12 - 5 = 7 (left: 8 7)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1) "
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 4.4",
                "2 <- 4.6",
                "3 <- 5.7",
                "4 <- 5.7",
                "5 <- 4.4",
                "6 <- 5.7",
                "7 <- 5.7",
                "8 <- 4.6",
                "9 <- 4.6"
            ],
            "resampled_steps": [
                "11 / 1 = 11 (left: 1 11 12)",
                "1 * 1 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "1 * 1 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)"
            ]
        },
        "step_7": {
            "steps": [
                "11 / 1 = 11 (left: 1 11 12)\nInput: 5 5 10",
                "1 * 1 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "1 * 1 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                0.002,
                0.0,
                0.003,
                0.002,
                60.0,
                0.001,
                60.0
            ],
            "resampled": [
                "0 <- 7.7",
                "1 <- 5.7",
                "2 <- 2.7",
                "3 <- 7.9",
                "4 <- 5.7",
                "5 <- 7.7",
                "6 <- 4.4",
                "7 <- 5.7",
                "8 <- 4.6",
                "9 <- 7.9"
            ],
            "resampled_steps": [
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)"
            ]
        },
        "step_8": {
            "steps": [
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + 11) * (1 + 12) = 24",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144",
                "1 * 1 = 1 (left: 1 11 12)\n12 - 1 = 11 (left: 1 11)\n1 + 11 = 12 (left: 12)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (1 + 11) / 1 + 12 = 24",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 11) / 1) + 12 = 24",
                "1 * 1 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 1 12 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((1 + 11) / 1) + 12 = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ],
        "cost": 1.657823
    },
    "41": {
        "input": "2 7 7 12",
        "step_1": {
            "steps": [
                "7 - 2 = 5 (left: 5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 14 12)",
                "7 - 2 = 5 (left: 5 7 12)",
                "12 - 7 = 5 (left: 2 5 7)",
                "7 - 2 = 5 (left: 5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "12 - 2 = 10 (left: 7 10 12)",
                "2 + 7 = 9 (left: 7 9 12)"
            ],
            "values": [
                21.001,
                22.0,
                21.001,
                3.0,
                21.0,
                2.001,
                22.0,
                22.0,
                2.001,
                1.001
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 1.6",
                "2 <- 1.2",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 1.2",
                "6 <- 1.4",
                "7 <- 1.2",
                "8 <- 1.1",
                "9 <- 1.7"
            ],
            "resampled_steps": [
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "7 - 2 = 5 (left: 5 7 12)",
                "",
                "",
                "7 - 2 = 5 (left: 5 7 12)",
                "7 - 2 = 5 (left: 5 7 12)",
                "7 - 2 = 5 (left: 5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 14 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)"
            ]
        },
        "step_2": {
            "steps": [
                "7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 7 = 10.5 (left: 10.5 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 7 = 10.5 (left: 10.5 12)",
                "7 - 2 = 5 (left: 5 7 12)\nInput: 1.4 2.4",
                "12 + 2 = 14 (left: 7 7 14)",
                "12 + 2 = 14 (left: 7 7 14)",
                "7 - 2 = 5 (left: 5 7 12)\n12 / 7 = 1.7142857142857142 (left: 1.7142857142857142 12)",
                "7 - 2 = 5 (left: 5 7 12)\n5 * 7 = 35 (left: 35 12)",
                "7 - 2 = 5 (left: 5 7 12)\nInput: 1.71 7",
                "7 / 2 = 3.5 (left: 3.5 14 12)\n12 - 3.5 = 8.5 (left: 8.5 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)"
            ],
            "values": [
                1.002,
                0.003,
                0.003,
                1.002,
                0.003,
                1.001,
                0.002,
                0.003,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.6",
                "5 <- 1.6",
                "6 <- 1.6",
                "7 <- 2.9",
                "8 <- 1.4",
                "9 <- 2.9"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)",
                "7 - 2 = 5 (left: 5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)"
            ]
        },
        "step_3": {
            "steps": [
                "2 * 7 = 14 (left: 7 14 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "12 + 2 = 14 (left: 7 7 14)",
                "12 - 7 = 5 (left: 2 5 7)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n4 - 2 = 2 (left: 1 2)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\nInput: 5 10 15",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "7 - 2 = 5 (left: 5 7 12)\n7 * 12 = 84 (left: 5 84)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)"
            ],
            "values": [
                2.001,
                22.0,
                2.001,
                2.001,
                0.003,
                21.001,
                0.003,
                0.003,
                2.0,
                0.002
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 3.5",
                "2 <- 3.1",
                "3 <- 1.6",
                "4 <- 1.1",
                "5 <- 1.3",
                "6 <- INIT",
                "7 <- 2.9",
                "8 <- 1.6",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "7 / 2 = 3.5 (left: 3.5 14 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 14 12)",
                "12 - 7 = 5 (left: 2 5 7)",
                "",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "7 / 2 = 3.5 (left: 3.5 14 12)\n3.5 + 14 = 17.5 (left: 12 17.5)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n16 / 4 = 4 (left: 10 4)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n12 / 3.5 = 3.42857 (left: 3.42857 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n13.5 / 4.5 = 3 (left: 3 13.5)",
                "7 / 2 = 3.5 (left: 3.5 14 12)\n3.5 - 2 = 1.5 (left: 1.5 12)",
                "12 - 7 = 5 (left: 2 5 7)\nInput: 3 9 12",
                "12 - 2 = 10 (left: 7 7 10)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n5.5 + 4 = 9.5 (left: 10 9.5)",
                "7 + 2 = 9 (left: 7 9 12)"
            ],
            "values": [
                0.003,
                2.001,
                41.0,
                1.001,
                0.001,
                0.003,
                40.001,
                0.002,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 4.6",
                "1 <- 3.1",
                "2 <- 2.9",
                "3 <- 3.5",
                "4 <- 3.5",
                "5 <- 4.6",
                "6 <- 4.2",
                "7 <- 1.6",
                "8 <- 4.2",
                "9 <- 2.9"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 7 7 10)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)",
                "12 - 2 = 10 (left: 7 7 10)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n12 / 3.5 = 3.42857 (left: 3.42857 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n12 / 3.5 = 3.42857 (left: 3.42857 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)"
            ]
        },
        "step_5": {
            "steps": [
                "12 - 2 = 10 (left: 7 7 10)\n1.43 + 4 = 5.43 (left: 5.43 7)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n12 - 7 = 5 (left: 3.5 5)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n10 / 4 = 2.5 (left: 2.5 16)",
                "12 - 2 = 10 (left: 7 7 10)\n7 - 7 = 0 (left: 0 10)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n12 / 3.5 = 3.42857 (left: 3.42857 7 12)\n7 * 3.42857 = 24 (left: 24 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 7 = 10.5 (left: 10.5 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n12 / 3.5 = 3.42857 (left: 3.42857 7 12)\n12 - 7 = 5 (left: 3.42857 5)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)"
            ],
            "values": [
                0.001,
                1.001,
                0.002,
                40.001,
                60.0,
                0.0,
                41.0,
                2.001,
                2.0,
                0.003
            ],
            "resampled": [
                "0 <- 4.6",
                "1 <- 5.4",
                "2 <- 1.7",
                "3 <- 3.1",
                "4 <- 5.4",
                "5 <- 2.9",
                "6 <- 5.4",
                "7 <- 2.9",
                "8 <- 5.3",
                "9 <- 4.2"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 7 7 10)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n10 / 4 = 2.5 (left: 2.5 16)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n10 / 4 = 2.5 (left: 2.5 16)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n10 / 4 = 2.5 (left: 2.5 16)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n12 / 3.5 = 3.42857 (left: 3.42857 7 12)"
            ]
        },
        "step_6": {
            "steps": [
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n10 / 4 = 2.5 (left: 2.5 16)\n16 - 2.5 = 13.5 (left: 13.5)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 * 7 = 24.5 (left: 24.5 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\nInput: 5 2 10 10",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n10 / 4 = 2.5 (left: 2.5 16)\n2.5 * 16 = 40 (left: 40)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)  ",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n10 / 4 = 2.5 (left: 2.5 16)\n16 / 2.5 = 6.4 (left: 6.4)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n12 / 3.5 = 3.42857 (left: 3.42857 7 12)\n3.42857 + 7 = 10.42857 (left: 10.42857 12)"
            ],
            "values": [
                40.0,
                0.003,
                0.002,
                0.003,
                0.003,
                0.001,
                0.0,
                0.003,
                60.0,
                2.001
            ],
            "resampled": [
                "0 <- 6.8",
                "1 <- 6.0",
                "2 <- 5.6",
                "3 <- 2.9",
                "4 <- 5.3",
                "5 <- 1.6",
                "6 <- INIT",
                "7 <- 1.7",
                "8 <- 3.5",
                "9 <- 2.9"
            ],
            "resampled_steps": [
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n12 / 3.5 = 3.42857 (left: 3.42857 7 12)\n7 * 3.42857 = 24 (left: 24 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)"
            ]
        },
        "step_7": {
            "steps": [
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: (2 + 7 / 2) * (7 + 12) = 24",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n10 - 14 = -4 (left: -4)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n12 / 3.5 = 3.42857 (left: 3.42857 7 12)\n7 * 3.42857 = 24 (left: 24 12)\n24 * 12 = 288 (left: 288)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)\n10 / 6 \u2248 1.67 (left: 1.67)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 + 16 = 56 (left: 56)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 7 = 10.5 (left: 10.5 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\nInput: 4 9 16 25",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)"
            ],
            "values": [
                60.0,
                0.001,
                0.002,
                0.003,
                0.003,
                0.002,
                2.0,
                0.003,
                41.0,
                0.001
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 4.3",
                "2 <- 7.0",
                "3 <- 7.8",
                "4 <- 6.8",
                "5 <- 7.0",
                "6 <- 7.8",
                "7 <- 6.0",
                "8 <- 4.6",
                "9 <- 7.0"
            ],
            "resampled_steps": [
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n13.5 / 4.5 = 3 (left: 3 13.5)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: (2 + 7 / 2) * (7 + 12) = 24",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: (2 + 7 / 2) * (7 + 12) = 24",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)",
                "12 - 2 = 10 (left: 7 7 10)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: (2 + 7 / 2) * (7 + 12) = 24"
            ]
        },
        "step_8": {
            "steps": [
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n13.5 / 4.5 = 3 (left: 3 13.5)\n4 + 2 = 6 (left: 6 6)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: (2 + 7 / 2) * (7 + 12) = 24\nSorry, there seems to have been a mistake in the solution provided. Let me correct it:\n\nInput: 2 7 7 12\nSteps:\n7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 12 = 15.5 (left: 7 15.5)\n7 * 2 = 14 (left: 14 15.5)\n14 + 15.5 = 29.5 (left: 29.5)\n29.5 - 5.5 = 24 (left: 24)\nAnswer: ((7 / 2) + 12) * (7 * 2) = 24",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 * 16 = 640 (left: 640)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: ((7 / 2) + 7) * (12 - 10) = 24",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: (2 + 7 / 2) * (7 + 12) = 24\nI'm sorry, but it seems there was an error in the calculation. Let me correct it:\n\n7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 12 = 15.5 (left: 7 15.5)\n7 * 15.5 = 108.5 (left: 108.5)\n108.5 - 84.5 = 24 (left: 24)\n\nAnswer: (7 / 2 + 12) * (7 * 12) = 24",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)",
                "12 - 2 = 10 (left: 7 7 10)\n7 + 7 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "12 - 2 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3 10)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: (2 + 7 / 2) * (7 + 12) = 24\nInput: 3 3 7 9\nSteps:\n3 * 3 = 9 (left: 7 9 9)\n9 - 7 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 + 7 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 3) + 7) * (9 - 7) = 24"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                0.003,
                60.0,
                60.0,
                40.0,
                40.0,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 5.6",
                "1 <- 7.8",
                "2 <- 8.4",
                "3 <- 8.0",
                "4 <- 3.1",
                "5 <- 8.5",
                "6 <- 8.9",
                "7 <- 8.2",
                "8 <- 8.2",
                "9 <- 8.2"
            ],
            "resampled_steps": [
                "7 / 2 = 3.5 (left: 3.5 7 12)\n12 / 3.5 = 3.42857 (left: 3.42857 7 12)\n7 * 3.42857 = 24 (left: 24 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: ((7 / 2) + 7) * (12 - 10) = 24",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 / 2 = 3.5 (left: 3.5 7 12)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: (2 + 7 / 2) * (7 + 12) = 24\nI'm sorry, but it seems there was an error in the calculation. Let me correct it:\n\n7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 12 = 15.5 (left: 7 15.5)\n7 * 15.5 = 108.5 (left: 108.5)\n108.5 - 84.5 = 24 (left: 24)\n\nAnswer: (7 / 2 + 12) * (7 * 12) = 24",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: (2 + 7 / 2) * (7 + 12) = 24\nInput: 3 3 7 9\nSteps:\n3 * 3 = 9 (left: 7 9 9)\n9 - 7 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 + 7 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 3) + 7) * (9 - 7) = 24",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: (2 + 7 / 2) * (7 + 12) = 24\nSorry, there seems to have been a mistake in the solution provided. Let me correct it:\n\nInput: 2 7 7 12\nSteps:\n7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 12 = 15.5 (left: 7 15.5)\n7 * 2 = 14 (left: 14 15.5)\n14 + 15.5 = 29.5 (left: 29.5)\n29.5 - 5.5 = 24 (left: 24)\nAnswer: ((7 / 2) + 12) * (7 * 2) = 24",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: (2 + 7 / 2) * (7 + 12) = 24\nSorry, there seems to have been a mistake in the solution provided. Let me correct it:\n\nInput: 2 7 7 12\nSteps:\n7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 12 = 15.5 (left: 7 15.5)\n7 * 2 = 14 (left: 14 15.5)\n14 + 15.5 = 29.5 (left: 29.5)\n29.5 - 5.5 = 24 (left: 24)\nAnswer: ((7 / 2) + 12) * (7 * 2) = 24",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: (2 + 7 / 2) * (7 + 12) = 24\nSorry, there seems to have been a mistake in the solution provided. Let me correct it:\n\nInput: 2 7 7 12\nSteps:\n7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 12 = 15.5 (left: 7 15.5)\n7 * 2 = 14 (left: 14 15.5)\n14 + 15.5 = 29.5 (left: 29.5)\n29.5 - 5.5 = 24 (left: 24)\nAnswer: ((7 / 2) + 12) * (7 * 2) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "7 / 2 = 3.5 (left: 3.5 7 12)\n12 / 3.5 = 3.42857 (left: 3.42857 7 12)\n7 * 3.42857 = 24 (left: 24 12)\n24 * 12 = 288 (left: 288)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: ((7 / 2) + 7) * (12 - 10) = 24\nSorry, I don't have an answer for that.",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n7 / 3.5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 / (7 / 2)) * 12 = 24",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n10 * 4 = 40 (left: 40 5)",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: (2 + 7 / 2) * (7 + 12) = 24\nI'm sorry, but it seems there was an error in the calculation. Let me correct it:\n\n7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 12 = 15.5 (left: 7 15.5)\n7 * 15.5 = 108.5 (left: 108.5)\n108.5 - 84.5 = 24 (left: 24)\n\nAnswer: (7 / 2 + 12) * (7 * 12) = 24\nInput: 3 4 5 6\n\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\n\nAnswer: ((3 * 4) + (5 + 6)) + 1 = 24",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: (2 + 7 / 2) * (7 + 12) = 24\nInput: 3 3 7 9\nSteps:\n3 * 3 = 9 (left: 7 9 9)\n9 - 7 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 + 7 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 3) + 7) * (9 - 7) = 24\nInput: 2 5 6 7\nSteps:\n5 * 2 = 10 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 + 14 = 24 (left: 24)\nAnswer: ((5 * 2) * (7 - 6)) + 10 = 24",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: (2 + 7 / 2) * (7 + 12) = 24\nSorry, there seems to have been a mistake in the solution provided. Let me correct it:\n\nInput: 2 7 7 12\nSteps:\n7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 12 = 15.5 (left: 7 15.5)\n7 * 2 = 14 (left: 14 15.5)\n14 + 15.5 = 29.5 (left: 29.5)\n29.5 - 5.5 = 24 (left: 24)\nAnswer: ((7 / 2) + 12) * (7 * 2) = 24\nSorry, there seems to have been a mistake in the solution provided. Let me correct it:\n\nInput: 2 7 7 12\nSteps:\n7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 12 = 15.5 (left: 7 15.5)\n7 * 2 = 14 (left: 14 15.5)\n14 + 15.5 = 29.5 (left: 29.5)\n29.5 - 5.5 = 24 (left: 24)\nAnswer: ((7 / 2) + 12) * (7 * 2) = 24",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: (2 + 7 / 2) * (7 + 12) = 24\nSorry, there seems to have been a mistake in the solution provided. Let me correct it:\n\nInput: 2 7 7 12\nSteps:\n7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 12 = 15.5 (left: 7 15.5)\n7 * 2 = 14 (left: 14 15.5)\n14 + 15.5 = 29.5 (left: 29.5)\n29.5 - 5.5 = 24 (left: 24)\nAnswer: ((7 / 2) + 12) * (7 * 2) = 24\nInput: 3 6 8 9\nSteps:\n6 * 3 = 18 (left: 8 9 18)\n9 - 8 = 1 (left: 1 18)\n18 * 1 = 18 (left: 18)\n8 + 18 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: ((6 * 3) + (9 - 8)) * (8 + 18) = 24",
                "7 / 2 = 3.5 (left: 3.5 7 12)\n2 + 8 = 10 (left: 4 10 16)\n4 * 10 = 40 (left: 40 16)\n40 - 16 = 24 (left: 24)\nAnswer: (2 + 7 / 2) * (7 + 12) = 24\nSorry, there seems to have been a mistake in the solution provided. Let me correct it:\n\nInput: 2 7 7 12\nSteps:\n7 / 2 = 3.5 (left: 3.5 7 12)\n3.5 + 12 = 15.5 (left: 7 15.5)\n7 * 2 = 14 (left: 14 15.5)\n14 + 15.5 = 29.5 (left: 29.5)\n29.5 - 5.5 = 24 (left: 24)\nAnswer: ((7 / 2) + 12) * (7 * 2) = 24\nThank you for pointing out the mistake. The correct solution is:\n((7 / 2) + 12) * (7 * 2) = 24."
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.7095100000000003
    },
    "42": {
        "input": "1 5 7 12",
        "step_1": {
            "steps": [
                "7 + 12 = 19 (left: 1 5 19)",
                "5 + 7 = 12 (left: 1 12)",
                "1 + 5 = 6 (left: 6 7 12)",
                "12 - 7 = 5 (left: 1 5 12)",
                "5 * 7 = 35 (left: 1 35 12)",
                "7 - 5 = 2 (left: 1 2 12)",
                "1 + 5 = 6 (left: 6 7 12)",
                "1 + 5 = 6 (left: 6 7 12)",
                "3 + 3 = 6 (left: 6 6 9)",
                "7 - 1 = 6 (left: 5 6 12)"
            ],
            "values": [
                1.002,
                20.002,
                2.001,
                2.001,
                3.0,
                60.0,
                3.0,
                1.002,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.2",
                "2 <- 1.1",
                "3 <- 1.5",
                "4 <- 1.1",
                "5 <- 1.5",
                "6 <- 1.5",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "5 + 7 = 12 (left: 1 12)",
                "1 + 5 = 6 (left: 6 7 12)",
                "5 + 7 = 12 (left: 1 12)",
                "7 - 5 = 2 (left: 1 2 12)",
                "5 + 7 = 12 (left: 1 12)",
                "7 - 5 = 2 (left: 1 2 12)",
                "7 - 5 = 2 (left: 1 2 12)",
                "",
                "",
                "7 - 5 = 2 (left: 1 2 12)"
            ]
        },
        "step_2": {
            "steps": [
                "5 + 7 = 12 (left: 1 12)\n12 / 1 = 12 (left: 12)",
                "1 + 5 = 6 (left: 6 7 12)\n7 * 12 = 84 (left: 6 84)",
                "5 + 7 = 12 (left: 1 12)\n1 + 12 = 13 (left: 13)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "5 + 7 = 12 (left: 1 12)\n12 / 1 = 12 (left: 12)",
                "7 - 5 = 2 (left: 1 2 12)\n2 + 12 = 14 (left: 1 14)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "5 * 7 = 35 (left: 1 35 12)",
                "12 - 7 = 5 (left: 1 5 12)",
                "7 - 5 = 2 (left: 1 2 12)\n2 + 12 = 14 (left: 1 14)"
            ],
            "values": [
                0.002,
                0.001,
                0.001,
                60.0,
                0.003,
                1.001,
                60.0,
                3.0,
                21.001,
                1.0
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- INIT",
                "2 <- 1.5",
                "3 <- 2.5",
                "4 <- 1.5",
                "5 <- 1.5",
                "6 <- 2.6",
                "7 <- 2.3",
                "8 <- 2.3",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "7 - 5 = 2 (left: 1 2 12)",
                "",
                "7 - 5 = 2 (left: 1 2 12)",
                "7 - 5 = 2 (left: 1 2 12)\n2 + 12 = 14 (left: 1 14)",
                "7 - 5 = 2 (left: 1 2 12)",
                "7 - 5 = 2 (left: 1 2 12)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)"
            ]
        },
        "step_3": {
            "steps": [
                "7 - 5 = 2 (left: 1 2 12)\n7 - 3 = 4 (left: 4 5 7)",
                "9 - 6 = 3 (left: 3 6 12)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "7 - 5 = 2 (left: 1 2 12)\n2 + 12 = 14 (left: 1 14)\n1 + 14 = 15 (left: 14)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)",
                "7 - 5 = 2 (left: 1 2 12)\n5 + 5 = 10 (left: 10 10)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 / 10 = 0.1 (left: 10)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)"
            ],
            "values": [
                2.001,
                2.001,
                60.0,
                0.001,
                20.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 2.3",
                "2 <- 3.2",
                "3 <- 2.8",
                "4 <- 2.6",
                "5 <- 2.8",
                "6 <- 3.2",
                "7 <- 1.5",
                "8 <- 2.6",
                "9 <- 3.4"
            ],
            "resampled_steps": [
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "12 - 7 = 5 (left: 1 5 12)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "12 - 7 = 5 (left: 1 5 12)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "7 - 5 = 2 (left: 1 2 12)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)"
            ]
        },
        "step_4": {
            "steps": [
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 + 1 = 11 (left: 10)",
                "12 - 7 = 5 (left: 1 5 12)\n12 / 1 = 12 (left: 5 12)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "12 - 7 = 5 (left: 1 5 12)\n12 - 5 = 7 (left: 1 7)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)\n10 / 5 = 2 (left: 2 15)"
            ],
            "values": [
                0.001,
                0.002,
                0.003,
                0.002,
                0.003,
                20.001,
                0.003,
                60.0,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 3.4",
                "2 <- 2.3",
                "3 <- 2.6",
                "4 <- 2.3",
                "5 <- 4.7",
                "6 <- 1.6",
                "7 <- 3.2",
                "8 <- 4.7",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "1 + 5 = 6 (left: 6 7 12)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "7 - 5 = 2 (left: 1 2 12)"
            ]
        },
        "step_5": {
            "steps": [
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)\n9 - 3 = 6 (left: 6 6 12)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "1 + 5 = 6 (left: 6 7 12)\n7 / 6 = 1.16666666667 (left: 1.16666666667 12)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 + 6 = 7",
                "7 - 5 = 2 (left: 1 2 12)\n6 * 5 = 30 (left: 3 30 12)"
            ],
            "values": [
                0.002,
                60.0,
                0.0,
                0.001,
                0.002,
                0.002,
                1.001,
                0.003,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 3.2",
                "2 <- 3.4",
                "3 <- 3.2",
                "4 <- 2.3",
                "5 <- 3.2",
                "6 <- INIT",
                "7 <- 5.1",
                "8 <- 5.1",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "7 - 5 = 2 (left: 1 2 12)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)\n9 - 3 = 6 (left: 6 6 12)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)\n9 - 3 = 6 (left: 6 6 12)",
                "7 - 5 = 2 (left: 1 2 12)"
            ]
        },
        "step_6": {
            "steps": [
                "7 - 5 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)\n15 - 5 = 10 (left: 10 10)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 * 10 = 10 (left: 10)",
                "1 * 5 = 5 (left: 5 7 12)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)\n9 - 3 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 6 2)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)\n9 - 3 = 6 (left: 6 6 12)\n2 / 5 = 0.4 (left: 4 0.4)",
                "7 - 5 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)"
            ],
            "values": [
                60.0,
                0.0,
                0.002,
                0.002,
                0.0,
                0.002,
                40.0,
                1.001,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 6.0",
                "1 <- 4.7",
                "2 <- 4.7",
                "3 <- 1.5",
                "4 <- 6.9",
                "5 <- 3.2",
                "6 <- 3.4",
                "7 <- 4.7",
                "8 <- 5.1",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "7 - 5 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "7 - 5 = 2 (left: 1 2 12)",
                "7 - 5 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)\n9 - 3 = 6 (left: 6 6 12)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)"
            ]
        },
        "step_7": {
            "steps": [
                "7 - 5 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "7 - 5 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 - 10 = 0 (left: 0)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)\n9 + 3 = 12 (left: 6 12)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)\n9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 - 1 = 5 (left: 5)"
            ],
            "values": [
                60.0,
                0.003,
                0.003,
                60.0,
                0.002,
                0.003,
                1.002,
                0.003,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 2.3",
                "2 <- 4.7",
                "3 <- 7.0",
                "4 <- 5.1",
                "5 <- 2.6",
                "6 <- 3.2",
                "7 <- 7.8",
                "8 <- 1.3",
                "9 <- 7.8"
            ],
            "resampled_steps": [
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)",
                "7 - 5 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)\n9 - 3 = 6 (left: 6 6 12)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)\n9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)",
                "12 - 7 = 5 (left: 1 5 12)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)\n9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)"
            ]
        },
        "step_8": {
            "steps": [
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "7 - 5 = 2 (left: 1 2 12)\n12 / 2 = 6 (left: 1 6)\n9 - 3 = 6 (left: 6 27)",
                "7 - 5 = 2 (left: 1 2 12)\n1 * 2 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 1 * ((7 - 5) * 12) = 24",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)\n9 - 3 = 6 (left: 6 6 12)\n72 - 1 = 71 (left: 12 71)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 - 10 = 0 (left: 0)",
                "7 - 5 = 2 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)\n9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "12 - 7 = 5 (left: 1 5 12)\n1 + 5 = 6 (left: 6 12)",
                "7 - 5 = 2 (left: 1 2 12)\n20 - 5 = 15 (left: 5 10 15)\n9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.74918
    },
    "43": {
        "input": "10 10 12 12",
        "step_1": {
            "steps": [
                "10 * 10 = 100 (left: 12 12 100)",
                "10 + 10 = 20 (left: 12 20 12)",
                "10 + 10 = 20 (left: 12 12 20)",
                "12 / 10 = 1.2 (left: 1.2 12 12)",
                "12 - 10 = 2 (left: 2 10 12)",
                "12 - 10 = 2 (left: 2 12 12)",
                "10 + 10 = 20 (left: 12 12 20)",
                "10 * 10 = 100 (left: 12 12 100)",
                "12 / 10 = 1.2 (left: 10 12 1.2)",
                "12 / 10 = 1.2 (left: 10 1.2 12)"
            ],
            "values": [
                1.002,
                2.001,
                0.003,
                0.003,
                0.003,
                1.002,
                0.003,
                1.002,
                3.0,
                60.0
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.9",
                "4 <- INIT",
                "5 <- 1.9",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 1.9",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "",
                "",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "",
                "",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "12 / 10 = 1.2 (left: 10 1.2 12)\n10 + 1.2 = 11.2 (left: 1.2 11.2 12)",
                "10 + 10 = 20 (left: 12 12 20)",
                "12 - 10 = 2 (left: 10 12 2)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n1.2 * 12 = 14.4 (left: 10 14.4)",
                "10 * 10 = 100 (left: 12 12 100)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)",
                "10 * 10 = 100 (left: 12 12 100)",
                "12 / 1.2 = 10 (left: 10 12 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n54 / 27 = 2 (left: 3 9 2)",
                "12 - 10 = 2 (left: 10 12 2)"
            ],
            "values": [
                1.002,
                0.003,
                2.001,
                0.0,
                1.002,
                60.0,
                1.002,
                40.001,
                2.0,
                41.0
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 2.5",
                "2 <- 2.5",
                "3 <- 2.5",
                "4 <- 2.5",
                "5 <- 1.9",
                "6 <- 1.9",
                "7 <- 1.9",
                "8 <- 1.9",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "12 / 1.2 = 10 (left: 10 12 12)"
            ]
        },
        "step_3": {
            "steps": [
                "12 / 10 = 1.2 (left: 10 1.2 12)\n10 + 1.2 = 11.2 (left: 1.2 11.2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n12 + 2 = 14 (left: 14)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n10 / 1.2 = 8.3333 (left: 8.3333 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n7 / 3 \u2248 2.3333 (left: 2.3333 7 9)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n10 * 1.2 = 12 (left: 12 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 / 1.2 = 10 (left: 10 12)",
                "12 / 1.2 = 10 (left: 10 12 12)\n12 - 10 = 2 (left: 2 12)"
            ],
            "values": [
                1.001,
                0.001,
                0.002,
                0.0,
                0.001,
                0.001,
                3.0,
                60.0,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- 1.9",
                "2 <- 3.9",
                "3 <- 2.7",
                "4 <- 3.7",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 2.7",
                "8 <- 2.9",
                "9 <- 3.9"
            ],
            "resampled_steps": [
                "12 / 1.2 = 10 (left: 10 12 12)\n12 - 10 = 2 (left: 2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "12 / 1.2 = 10 (left: 10 12 12)\n12 - 10 = 2 (left: 2 12)",
                "12 / 1.2 = 10 (left: 10 12 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n10 * 1.2 = 12 (left: 12 12)",
                "",
                "",
                "12 / 1.2 = 10 (left: 10 12 12)",
                "12 - 10 = 2 (left: 10 12 2)",
                "12 / 1.2 = 10 (left: 10 12 12)\n12 - 10 = 2 (left: 2 12)"
            ]
        },
        "step_4": {
            "steps": [
                "12 / 1.2 = 10 (left: 10 12 12)\n12 - 10 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n10 / 1.2 = 8.3333 (left: 8.3333 12)",
                "12 / 1.2 = 10 (left: 10 12 12)\n12 - 10 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "12 / 1.2 = 10 (left: 10 12 12)\n10 + 12 = 22 (left: 12 22)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n10 * 1.2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "10 * 10 = 100 (left: 12 12 100)",
                "12 - 10 = 2 (left: 2 12 12)",
                "12 / 1.2 = 10 (left: 10 12 12)\n10 + 12 = 22 (left: 12 12 22)",
                "12 - 10 = 2 (left: 10 12 2)\nInput: 14 26",
                "12 / 1.2 = 10 (left: 10 12 12)\n12 - 10 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)"
            ],
            "values": [
                0.003,
                1.001,
                0.002,
                0.003,
                60.0,
                21.001,
                41.0,
                0.003,
                20.002,
                0.003
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- 4.5",
                "2 <- 2.5",
                "3 <- 2.5",
                "4 <- 3.6",
                "5 <- 2.7",
                "6 <- 1.9",
                "7 <- 4.4",
                "8 <- 2.7",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "12 / 1.2 = 10 (left: 10 12 12)\n12 - 10 = 2 (left: 2 12)",
                "10 * 10 = 100 (left: 12 12 100)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n7 / 3 \u2248 2.3333 (left: 2.3333 7 9)",
                "12 / 1.2 = 10 (left: 10 12 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n10 * 1.2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 / 1.2 = 10 (left: 10 12 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n10 * 1.2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)"
            ]
        },
        "step_5": {
            "steps": [
                "12 / 1.2 = 10 (left: 10 12 12)\n12 - 10 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "10 * 10 = 100 (left: 12 12 100)\n3 - 5 = -2 (left: -2 11)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n12 - 10 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n7 / 3 \u2248 2.3333 (left: 2.3333 7 9)\n7 - 2.3333 = 4.6667 (left: 4.6667 9)",
                "12 / 1.2 = 10 (left: 10 12 12)\n10 * 12 = 120 (left: 12 120)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n10 - 1.2 = 8.8 (left: 8.8 12)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n10 * 1.2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (10 / 10)) + 12 = 24",
                "12 / 1.2 = 10 (left: 10 12 12)\n5 + 2 = 7 (left: 2 7 5)",
                "12 / 10 = 1.2 (left: 10 1.2 12)\n10 * 1.2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (10 * (12 / 10)) + 12 = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ],
        "cost": 1.776947
    },
    "44": {
        "input": "1 8 8 8",
        "step_1": {
            "steps": [
                "1 + 8 = 9 (left: 8 8 9)",
                "9 - 4 = 5 (left: 5 5 2)",
                "8 / 8 = 1 (left: 1 8 8)",
                "8 / 1 = 8 (left: 8 8 8)",
                "8 - 1 = 7 (left: 7 8 8)",
                "8 / 1 = 8 (left: 8 8 8)",
                "5 - 5 = 0 (left: 0 5 5)",
                "8 - 1 = 7 (left: 7 8 8)",
                "8 - 1 = 7 (left: 7 8 8)",
                "8 / 1 = 8 (left: 8 8 8)"
            ],
            "values": [
                3.0,
                1.002,
                1.002,
                1.002,
                3.0,
                2.001,
                2.001,
                3.0,
                3.0,
                41.0
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 1.9",
                "2 <- 1.7",
                "3 <- 1.4",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 1.9",
                "7 <- 1.6",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "8 / 1 = 8 (left: 8 8 8)",
                "8 / 1 = 8 (left: 8 8 8)",
                "8 - 1 = 7 (left: 7 8 8)",
                "8 - 1 = 7 (left: 7 8 8)",
                "",
                "",
                "8 / 1 = 8 (left: 8 8 8)",
                "5 - 5 = 0 (left: 0 5 5)",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "8 / 1 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0)",
                "8 / 1 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8) ",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)",
                "1 * 8 = 8 (left: 8 8 8)",
                "1 + 8 = 9 (left: 8 8 9)",
                "8 / 1 = 8 (left: 8 8 8)\n16 + 8 = 24 (left: 8 24)",
                "5 - 5 = 0 (left: 0 5 5)\n5 / 5 = 1 (left: 0 1)",
                "1 + 8 = 9 (left: 8 8 9)",
                "8 - 1 = 7 (left: 1 7 8)"
            ],
            "values": [
                0.003,
                20.002,
                40.0,
                60.0,
                41.0,
                2.001,
                21.001,
                60.0,
                0.002,
                2.001
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 1.9",
                "2 <- 1.9",
                "3 <- 2.4",
                "4 <- INIT",
                "5 <- 2.3",
                "6 <- 2.6",
                "7 <- 2.3",
                "8 <- 2.4",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)",
                "8 / 1 = 8 (left: 8 8 8)",
                "8 / 1 = 8 (left: 8 8 8)",
                "1 * 8 = 8 (left: 8 8 8)",
                "",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)",
                "8 / 1 = 8 (left: 8 8 8)\n16 + 8 = 24 (left: 8 24)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)",
                "1 * 8 = 8 (left: 8 8 8)",
                "8 - 1 = 7 (left: 7 8 8)"
            ]
        },
        "step_3": {
            "steps": [
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)\n8 / 1 = 8 (left: 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "1 * 8 = 8 (left: 8 8 8)\nPossible next steps:",
                "8 - 1 = 7 (left: 1 7 8)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "8 / 1 = 8 (left: 8 8 8)\n16 + 8 = 24 (left: 8 24)\n24 - 8 = 16 (left: 16)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "1 * 8 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0)",
                "8 - 1 = 7 (left: 7 8 8)\n8 / 8 = 1 (left: 7 1 8)"
            ],
            "values": [
                0.002,
                0.001,
                1.002,
                0.003,
                0.002,
                0.003,
                20.001,
                0.0,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.4",
                "2 <- 2.7",
                "3 <- 2.7",
                "4 <- 2.5",
                "5 <- 2.4",
                "6 <- 2.1",
                "7 <- 2.7",
                "8 <- 2.3",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "",
                "1 * 8 = 8 (left: 8 8 8)",
                "5 - 5 = 0 (left: 0 5 5)\n5 / 5 = 1 (left: 0 1)",
                "5 - 5 = 0 (left: 0 5 5)\n5 / 5 = 1 (left: 0 1)",
                "1 + 8 = 9 (left: 8 8 9)",
                "1 * 8 = 8 (left: 8 8 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)",
                "5 - 5 = 0 (left: 0 5 5)\n5 / 5 = 1 (left: 0 1)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)"
            ]
        },
        "step_4": {
            "steps": [
                "8 / 1 = 8 (left: 8 8 8)",
                "1 * 8 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0)",
                "5 - 5 = 0 (left: 0 5 5)\n5 / 5 = 1 (left: 0 1)\n1 / 0 is undefined - cannot divide by zero.",
                "5 - 5 = 0 (left: 0 5 5)\n5 / 5 = 1 (left: 0 1)\n0 + 1 = 1 (left: 1)",
                "1 + 8 = 9 (left: 8 8 9)\n9 * 8 = 72 (left: 72)",
                "1 * 8 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)\n5 / 3 = 1.67 (left: 1.67)",
                "5 - 5 = 0 (left: 0 5 5)\n5 / 5 = 1 (left: 0 1)\n0 / 1 = 0 (left: 0)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8 8)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)"
            ],
            "values": [
                22.0,
                0.002,
                0.003,
                0.002,
                0.002,
                41.0,
                0.002,
                0.002,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 4.0",
                "2 <- 2.2",
                "3 <- 2.7",
                "4 <- 2.3",
                "5 <- 2.2",
                "6 <- 4.5",
                "7 <- 4.5",
                "8 <- 2.5",
                "9 <- 2.4"
            ],
            "resampled_steps": [
                "8 / 1 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)",
                "8 / 1 = 8 (left: 8 8 8)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8) ",
                "5 - 5 = 0 (left: 0 5 5)\n5 / 5 = 1 (left: 0 1)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8) ",
                "1 * 8 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)",
                "1 * 8 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)",
                "1 + 8 = 9 (left: 8 8 9)",
                "1 * 8 = 8 (left: 8 8 8)"
            ]
        },
        "step_5": {
            "steps": [
                "8 / 1 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0 8)\n0 + 8 = 8 (left: 8)",
                "8 / 1 = 8 (left: 8 8 8)\nNo more possible next steps.",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8) \n8 / 1 = 8 (left: 8 8)",
                "5 - 5 = 0 (left: 0 5 5)\n5 / 5 = 1 (left: 0 1)\n0 - 1 = -1 (left: -1)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8) \n8 - 1 = 7 (left: 7)",
                "1 * 8 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "1 * 8 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "1 + 8 = 9 (left: 8 8 9)\n8 * 8 = 64 (left: 64 9)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)"
            ],
            "values": [
                0.003,
                0.003,
                1.002,
                0.0,
                0.003,
                0.0,
                0.001,
                0.0,
                0.002,
                21.001
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 2.2",
                "2 <- 4.5",
                "3 <- 5.9",
                "4 <- 2.5",
                "5 <- 4.0",
                "6 <- 2.2",
                "7 <- 5.9",
                "8 <- 2.3",
                "9 <- 5.9"
            ],
            "resampled_steps": [
                "5 - 5 = 0 (left: 0 5 5)\n5 / 5 = 1 (left: 0 1)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8) ",
                "1 * 8 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "1 + 8 = 9 (left: 8 8 9)",
                "8 / 1 = 8 (left: 8 8 8)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8) ",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)"
            ]
        },
        "step_6": {
            "steps": [
                "5 - 5 = 0 (left: 0 5 5)\n5 / 5 = 1 (left: 0 1)\n5 / 3 = 1.6666666666666667 (left: 1.6666666666666667)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8) \n8 / 1 = 8 (left: 8)",
                "1 * 8 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n1 + 8 = 9",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8)",
                "1 + 8 = 9 (left: 8 8 9)\n15 - 10 = 5 (left: 5 5)",
                "8 / 1 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8) \n1 + 8 = 9 (left: 9)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 * 8 = 128 (left: 128)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 - 16 = -8 (left: -8)"
            ],
            "values": [
                0.001,
                0.002,
                0.003,
                0.002,
                0.002,
                41.0,
                0.001,
                0.002,
                0.001,
                0.001
            ],
            "resampled": [
                "0 <- 4.0",
                "1 <- 2.7",
                "2 <- 6.5",
                "3 <- 5.9",
                "4 <- 3.6",
                "5 <- 4.5",
                "6 <- 3.6",
                "7 <- 2.4",
                "8 <- 2.2",
                "9 <- 5.9"
            ],
            "resampled_steps": [
                "8 / 1 = 8 (left: 8 8 8)",
                "5 - 5 = 0 (left: 0 5 5)\n5 / 5 = 1 (left: 0 1)",
                "8 / 1 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "8 / 1 = 8 (left: 8 8 8)\n16 + 8 = 24 (left: 8 24)\n24 - 8 = 16 (left: 16)",
                "1 * 8 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)",
                "8 / 1 = 8 (left: 8 8 8)\n16 + 8 = 24 (left: 8 24)\n24 - 8 = 16 (left: 16)",
                "1 * 8 = 8 (left: 8 8 8)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8) ",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)"
            ]
        },
        "step_7": {
            "steps": [
                "8 / 1 = 8 (left: 8 8 8)\n8 - 1 = 7 (left: 7)",
                "5 - 5 = 0 (left: 0 5 5)\n5 / 5 = 1 (left: 0 1)\n0 * 1 = 0 (left: 0)",
                "8 / 1 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8 8)",
                "8 / 1 = 8 (left: 8 8 8)\n16 + 8 = 24 (left: 8 24)\n24 - 8 = 16 (left: 16)\nNone, as there is only one number left.",
                "1 * 8 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n8 / 1 = 8 (left: 8)",
                "8 / 1 = 8 (left: 8 8 8)\n16 + 8 = 24 (left: 8 24)\n24 - 8 = 16 (left: 16)\n16 / 2 = 8 (left: 8)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8) \n1 + 8 = 9 (left: 9)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\nInput: 24 128 2 8"
            ],
            "values": [
                0.002,
                0.001,
                60.0,
                0.003,
                0.003,
                0.003,
                0.003,
                20.002,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 4.0",
                "1 <- 2.2",
                "2 <- 2.3",
                "3 <- 4.5",
                "4 <- 7.2",
                "5 <- 2.3",
                "6 <- 6.5",
                "7 <- 2.7",
                "8 <- 7.7",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "8 / 1 = 8 (left: 8 8 8)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8) ",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)",
                "1 * 8 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "5 - 5 = 0 (left: 0 5 5)\n5 / 5 = 1 (left: 0 1)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)",
                "1 + 8 = 9 (left: 8 8 9)"
            ]
        },
        "step_8": {
            "steps": [
                "8 / 1 = 8 (left: 8 8 8)\n8 - 8 = 0 (left: 0)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8) \n8 - 1 = 7 (left: 7)",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "1 * 8 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "8 / 1 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 + 16 = 24 (left: 24)\nAnswer: ((8 / 1) + 8) + 8 = 24",
                "8 - 1 = 7 (left: 7 8 8)\n8 - 7 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "8 / 1 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2)",
                "5 - 5 = 0 (left: 0 5 5)\n5 / 5 = 1 (left: 0 1)\n0 * 1 = 0 (left: 0)",
                "1 * 8 = 8 (left: 8 8 8)\n8 + 8 = 16 (left: 8 16)\n8 - 16 = -8 (left: -8)",
                "1 + 8 = 9 (left: 8 8 9)\n9 * 8 = 72 (left: 72)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.811437
    },
    "45": {
        "input": "2 2 3 8",
        "step_1": {
            "steps": [
                "3 / 2 = 1.5 (left: 1.5 2 8)",
                "3 * 2 = 6 (left: 2 6 8)",
                "8 - 2 = 6 (left: 2 3 6)",
                "2 * 2 = 4 (left: 4 3 8)",
                "8 - 2 = 6 (left: 2 3 6)",
                "1 + 4 = 5 (left: 5 9)",
                "8 / 2 = 4 (left: 2 3 4)",
                "2 + 2 = 4 (left: 3 4 8)",
                "8 - 3 = 5 (left: 2 5 8)",
                "8 - 2 = 6 (left: 2 3 6)"
            ],
            "values": [
                60.0,
                22.0,
                3.0,
                2.001,
                41.0,
                0.003,
                60.0,
                22.0,
                3.0,
                21.001
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- INIT",
                "2 <- 1.0",
                "3 <- 1.0",
                "4 <- 1.6",
                "5 <- 1.1",
                "6 <- 1.4",
                "7 <- 1.7",
                "8 <- 1.9",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "3 * 2 = 6 (left: 2 6 8)",
                "",
                "3 / 2 = 1.5 (left: 1.5 2 8)",
                "3 / 2 = 1.5 (left: 1.5 2 8)",
                "8 / 2 = 4 (left: 2 3 4)",
                "3 * 2 = 6 (left: 2 6 8)",
                "8 - 2 = 6 (left: 2 3 6)",
                "2 + 2 = 4 (left: 3 4 8)",
                "8 - 2 = 6 (left: 2 3 6)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "3 * 2 = 6 (left: 2 6 8)\n12 + 8 = 20 (left: 20)",
                "2 * 2 = 4 (left: 4 3 8)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n7 / 3 = 2.3333333333333335 (left: 2.3333333333333335)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 / 1.5 = 1.3333333333333333 (left: 1.3333333333333333 8)",
                "8 / 2 = 4 (left: 2 3 4)\n3 + 7 = 10 (left: 5 10)",
                "3 * 2 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 6 8)",
                "8 - 2 = 6 (left: 2 3 6)\nPossible next steps:",
                "2 + 2 = 4 (left: 3 4 8)\n10 - 5 = 5 (left: 1 5)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)",
                "8 / 2 = 4 (left: 4 2 8)"
            ],
            "values": [
                0.002,
                2.001,
                0.002,
                2.0,
                0.002,
                0.003,
                0.003,
                0.001,
                40.0,
                21.001
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.4",
                "2 <- 2.8",
                "3 <- 2.8",
                "4 <- 1.8",
                "5 <- 1.0",
                "6 <- 1.9",
                "7 <- 2.9",
                "8 <- 1.0",
                "9 <- 2.9"
            ],
            "resampled_steps": [
                "3 / 2 = 1.5 (left: 1.5 2 8)",
                "8 - 2 = 6 (left: 2 3 6)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)",
                "8 - 3 = 5 (left: 2 5 8)",
                "3 / 2 = 1.5 (left: 1.5 2 8)",
                "8 - 2 = 6 (left: 2 3 6)",
                "8 / 2 = 4 (left: 4 2 8)",
                "3 / 2 = 1.5 (left: 1.5 2 8)",
                "8 / 2 = 4 (left: 4 2 8)"
            ]
        },
        "step_3": {
            "steps": [
                "3 / 2 = 1.5 (left: 1.5 2 8)\n4 + 6 = 10 (left: 10 12)",
                "8 - 2 = 6 (left: 2 3 6)\n3 * 2 = 6 (left: 3 6)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "8 - 3 = 5 (left: 2 5 8)\n2 + 5 = 7 (left: 7 8)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n8 - 1.5 = 6.5 (left: 2 6.5)",
                "8 - 2 = 6 (left: 2 3 6)\nInput: 1 5 10",
                "8 / 2 = 4 (left: 4 2 8)\n8 / 2 = 4 (left: 4 4)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)",
                "8 / 2 = 4 (left: 4 2 8)\n8 / 4 = 2 (left: 2 8)"
            ],
            "values": [
                1.001,
                21.0,
                0.001,
                0.002,
                0.003,
                1.002,
                0.003,
                1.002,
                60.0,
                1.002
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 1.6",
                "2 <- 1.0",
                "3 <- 2.8",
                "4 <- 3.8",
                "5 <- 2.8",
                "6 <- 1.4",
                "7 <- 3.8",
                "8 <- 1.6",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "8 - 2 = 6 (left: 2 3 6)\n3 * 2 = 6 (left: 3 6)",
                "8 / 2 = 4 (left: 2 3 4)",
                "3 / 2 = 1.5 (left: 1.5 2 8)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)",
                "8 - 2 = 6 (left: 2 3 6)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)",
                "8 / 2 = 4 (left: 2 3 4)",
                "8 - 2 = 6 (left: 2 3 6)"
            ]
        },
        "step_4": {
            "steps": [
                "8 - 2 = 6 (left: 2 3 6)\n3 * 2 = 6 (left: 3 6)\n6 / 3 = 2 (left: 2)",
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n8 / 1.5 = 5.33 (left: 5.33 8)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\nInput: 5 10 15",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 / 2 = 4 (left: 2 3 4)\n15 / 5 = 3 (left: 3 10)",
                "8 - 2 = 6 (left: 2 3 6)\n9 - 5 = 4 (left: 4 9)"
            ],
            "values": [
                0.001,
                60.0,
                2.0,
                0.002,
                0.003,
                0.002,
                60.0,
                60.0,
                0.003,
                21.0
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 4.7",
                "2 <- 1.6",
                "3 <- 1.0",
                "4 <- 3.1",
                "5 <- 4.9",
                "6 <- 4.1",
                "7 <- 4.6",
                "8 <- 1.0",
                "9 <- 4.1"
            ],
            "resampled_steps": [
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 / 2 = 4 (left: 2 3 4)",
                "3 / 2 = 1.5 (left: 1.5 2 8)",
                "8 - 2 = 6 (left: 2 3 6)\n3 * 2 = 6 (left: 3 6)",
                "8 - 2 = 6 (left: 2 3 6)\n9 - 5 = 4 (left: 4 9)",
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)",
                "3 / 2 = 1.5 (left: 1.5 2 8)",
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)"
            ]
        },
        "step_5": {
            "steps": [
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24",
                "8 / 2 = 4 (left: 2 3 4)\n3 + 4 = 7 (left: 2 7)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n8 - 1.5 = 6.5 (left: 2 6.5)",
                "8 - 2 = 6 (left: 2 3 6)\n3 * 2 = 6 (left: 3 6)\n3 + 6 = 9 (left: 9)",
                "8 - 2 = 6 (left: 2 3 6)\n9 - 5 = 4 (left: 4 9)\n5 + 10 = 15 (left: 15)",
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n9 / 3 = 3 (left: 3 9 27)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n3 + 9 = 12 (left: 12)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n12 - 6 = 6 (left: 3 9 6)",
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)"
            ],
            "values": [
                0.002,
                60.0,
                0.003,
                2.001,
                0.002,
                0.003,
                60.0,
                0.003,
                3.0,
                0.002
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 4.1",
                "2 <- 2.8",
                "3 <- 3.1",
                "4 <- 3.8",
                "5 <- 5.1",
                "6 <- 4.6",
                "7 <- 4.7",
                "8 <- 5.1",
                "9 <- 4.1"
            ],
            "resampled_steps": [
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)",
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)",
                "8 - 2 = 6 (left: 2 3 6)\n3 * 2 = 6 (left: 3 6)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24",
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)"
            ]
        },
        "step_6": {
            "steps": [
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n10 + 20 = 30 (left: 30)",
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\nPossible next steps:",
                "8 - 2 = 6 (left: 2 3 6)\n3 * 2 = 6 (left: 3 6)\n3 * 6 = 18 (left: 18)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24\nInput: 3 3 5 6\nSteps:\n3 * 5 = 15 (left: 3 6 15)\n15 - 6 = 9 (left: 3 9)\n9 * 3 = 27 (left: 27)\nAnswer: (3 * 5) - (6 - 3) = 24",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ],
            "values": [
                0.003,
                60.0,
                0.003,
                0.0,
                0.002,
                60.0,
                60.0,
                60.0,
                60.0,
                40.0
            ],
            "resampled": [
                "0 <- 4.6",
                "1 <- 6.6",
                "2 <- 6.5",
                "3 <- 4.6",
                "4 <- 1.1",
                "5 <- 4.1",
                "6 <- 5.1",
                "7 <- 6.7",
                "8 <- 4.9",
                "9 <- 4.6"
            ],
            "resampled_steps": [
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24\nInput: 3 3 5 6\nSteps:\n3 * 5 = 15 (left: 3 6 15)\n15 - 6 = 9 (left: 3 9)\n9 * 3 = 27 (left: 27)\nAnswer: (3 * 5) - (6 - 3) = 24",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)",
                "3 * 2 = 6 (left: 2 6 8)",
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24",
                "8 - 2 = 6 (left: 2 3 6)\n9 - 5 = 4 (left: 4 9)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)"
            ]
        },
        "step_7": {
            "steps": [
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 2) * (2 + 3) = 24",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24\nInput: 3 3 5 6\nSteps:\n3 * 5 = 15 (left: 3 6 15)\n15 - 6 = 9 (left: 3 9)\n9 * 3 = 27 (left: 27)\nAnswer: (3 * 5) - (6 - 3) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 6 = 24",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "3 * 2 = 6 (left: 2 6 8)\n8 - 6 = 2 (left: 2 8)",
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24\nInput: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 + 7) - 4) * (3 * 6) = 24",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24\nInput: 3 6 7 4\nSteps:\n4 + 6 = 10 (left: 3 7 10)\n7 - 3 = 4 (left: 4 10)\n4 * 10 = 40 (left: 40)\n40 / 10 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((4 + 6) * 4) = 24",
                "8 - 2 = 6 (left: 2 3 6)\n9 - 5 = 4 (left: 4 9)\n3 + 6 = 9 (left: 9 10)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)"
            ],
            "values": [
                0.0,
                60.0,
                40.0,
                0.003,
                0.003,
                0.002,
                60.0,
                60.0,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 7.1",
                "1 <- 7.6",
                "2 <- 6.5",
                "3 <- 6.5",
                "4 <- 6.8",
                "5 <- 6.5",
                "6 <- 1.1",
                "7 <- 5.6",
                "8 <- 6.9",
                "9 <- 6.6"
            ],
            "resampled_steps": [
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 2) * (2 + 3) = 24",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24\nInput: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 + 7) - 4) * (3 * 6) = 24",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24\nInput: 3 3 5 6\nSteps:\n3 * 5 = 15 (left: 3 6 15)\n15 - 6 = 9 (left: 3 9)\n9 * 3 = 27 (left: 27)\nAnswer: (3 * 5) - (6 - 3) = 24",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24\nInput: 3 3 5 6\nSteps:\n3 * 5 = 15 (left: 3 6 15)\n15 - 6 = 9 (left: 3 9)\n9 * 3 = 27 (left: 27)\nAnswer: (3 * 5) - (6 - 3) = 24",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24\nInput: 3 3 5 6\nSteps:\n3 * 5 = 15 (left: 3 6 15)\n15 - 6 = 9 (left: 3 9)\n9 * 3 = 27 (left: 27)\nAnswer: (3 * 5) - (6 - 3) = 24",
                "3 * 2 = 6 (left: 2 6 8)",
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n9 / 3 = 3 (left: 3 9 27)",
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ]
        },
        "step_8": {
            "steps": [
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 2) * (2 + 3) = 24\nInput: 3 3 5 5\nSteps:\n3 * 5 = 15 (left: 3 15 5)\n15 - 3 = 12 (left: 12 5)\n12 * 5 = 60 (left: 60)\n60 / 3 = 20 (left: 20)\n20 - 5 = 15 (left: 15)\n15 + 3 = 18 (left: 18)\n18 - 3 = 15 (left: 15)\n15 + 5 = 20 (left: 20)\n20 - 3 = 17 (left: 17)\n17 - 5 = 12 (left: 12)\n12 * 15 = 180 (left: 180)\n180 / 20 = 9 (left: 9)\n9 - 15 = 6 (left: 6)\n6 * 12 = 72 (left: 72)\n72 / 9 = 8 (left: 8)\n8 * 20 = 160 (left: 160)\n160 / 17 = 9.41176470588 (left: 9.41176470588)\n9.41176470588 - 6 = 3.41176470588 (left: 3.41176470588)\n3.41176470588 * 18 = 61.4117647059 (left: 61.4117647059)\n61.4117647059 / 15 = 4.09411764706 (left: 4.09411764706)\n4.09411764706 * 20 = 81.8823529412 (left: 81.8823529412)\n81.8823529412 / 9 = 9.09803921568 (left: 9.09803921568)\n9.09803921568 + 5 = 14.0980392157 (left: 14.0980392157)\n14.0980392157 - 3 = 11.0980392157 (left: 11.0980392157)\n11.0980392157 + 5 = 16.0980392157 (left: 16.0980392157)\n16.0980392157 - 3 = 13.0980392157 (left: 13.0980392157)\n13.0980392157 + 5 = 18.0980392157 (left: 18.0980392157)\n18.0980392157 - 3 = 15.0980392157 (left: 15.0980392157)\n15.0980392157 + 5 = 20.0980392157 (left: 20.0980392157)\n20.0980392157 - 3 = 17.0980392157 (left: 17.0980392157)\n17.0980392157 - 5 = 12.0980392157 (left: 12.0980392157)\n12.0980392157 * 15 = 181.470588235 (left: 181.470588235)\n181.470588235 / 20 = 9.07352941176 (left: 9.07352941176)\n9.07352941176 - 17 = -7.92647058824 (left: -7.92647058824)\n-7.92647058824 + 5 = -2.92647058824 (left: -2.92647058824)\n-2.92647058824 * 12 = -35.1176470589 (left: -35.1176470589)\n-35.1176470589 / 9 = -3.90196078431 (left: -3.90196078431)\n-3.90196078431 + 15 = 11.0980392157 (left: 11.0980392157)\n11.0980392157 + 5 = 16.0980392157 (left: 16.0980392157)\n16.0980392157 - 3 = 13.0980392157 (left: 13.0980392157)\n13.0980392157 + 5 = 18.0980392157 (left: 18.0980392157)\n18.0980392157 - 3 = 15.0980392157 (left: 15.0980392157)\n15.0980392157 + 5 = 20.0980392157 (left: 20.0980392157)\n20.0980392157 - 3 = 17.0980392157 (left: ",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24\nInput: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 + 7) - 4) * (3 * 6) = 24\nInput: 1 2 4 12\nSteps:\n1 * 12 = 12 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n8 + 12 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((1 * 12) + (4 * 2)) + 4 = 24",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24\nInput: 3 3 5 6\nSteps:\n3 * 5 = 15 (left: 3 6 15)\n15 - 6 = 9 (left: 3 9)\n9 * 3 = 27 (left: 27)\nAnswer: (3 * 5) - (6 - 3) = 24\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n8 - 6 = 2 (left: 2 3 8)\n2 * 3 = 6 (left: 6 8)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 4) - 6) * 3 = 24",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24\nInput: 3 3 5 6\nSteps:\n3 * 5 = 15 (left: 3 6 15)\n15 - 6 = 9 (left: 3 9)\n9 * 3 = 27 (left: 27)\nAnswer: (3 * 5) - (6 - 3) = 24\nInput: 1 3 5 8\nSteps:\n5 - 3 = 2 (left: 1 2 8)\n2 * 8 = 16 (left: 1 16)\n16 - 1 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((5 - 3) * 8) + 9 = 24",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\nAnswer: 3 * (3 * 8) = 24\nInput: 1 3 4 6\nSteps:\n3 * 6 = 18 (left: 1 4 18)\n4 + 1 = 5 (left: 5 18)\n5 * 18 = 90 (left: 90)\n90 / 4 = 22.5 (left: 22.5)\n22.5 - 18 = 4.5 (left: 4.5)\n4.5 * 6 = 27 (left: 27)\n27 - 1 = 26 (left: 26)\n26 / 3 = 8.66666666667 (left: 8.66666666667)\n8.66666666667 * 5 = 43.3333333333 (left: 43.3333333333)\n43.3333333333 - 22.5 = 20.8333333333 (left: 20.8333333333)\n20.8333333333 - 4.5 = 16.3333333333 (left: 16.3333333333)\n16.3333333333 * 6 = 98 (left: 98)\n98 - 26 = 72 (left: 72)\n72 / 8.66666666667 = 8.3 (left: 8.3)\n8.3 + 43.3333333333 = 51.6333333333 (left: 51.6333333333)\n51.6333333333 / 20.8333333333 = 2.480952381 (left: 2.480952381)\nAnswer: ((1 * 3 * 4 * 6) + 8.3) / 2.480952381 = 24",
                "3 / 2 = 1.5 (left: 1.5 2 8)\n2 * 1.5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 2) * 8 = 24\nInput: 3 3 5 6\nSteps:\n3 * 5 = 15 (left: 3 6 15)\n15 - 6 = 9 (left: 3 9)\n9 * 3 = 27 (left: 27)\nAnswer: (3 * 5) - (6 - 3) = 24\nInput: 7 8 9 3\nSteps:\n7 * 3 = 21 (left: 8 9 21)\n8 - 9 = -1 (left: -1 21)\n-1 * 21 = -21 (left: -21)\n21 - (-21) = 24\nAnswer: (7 * 3) - (8 - 9) = 24",
                "3 * 2 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)",
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n9 / 3 = 3 (left: 3 9 27)\n27 - 9 = 18 (left: 3 18)",
                "8 / 2 = 4 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 / 2) * (2 * 3) = 24",
                "8 - 2 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 - 2) * (2 - 3) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "cost": 1.8567605
    },
    "46": {
        "input": "2 9 9 12",
        "step_1": {
            "steps": [
                "9 - 2 = 7 (left: 7 9 12)",
                "9 / 2 = 4.5 (left: 4.5 9 12)",
                "12 - 2 = 10 (left: 9 10 12)",
                "12 - 2 = 10 (left: 9 10 12)",
                "5 * 2 = 10 (left: 5 10 10)",
                "2 + 9 = 11 (left: 9 11 12)",
                "12 - 9 = 3 (left: 2 3 9)",
                "9 / 2 = 4.5 (left: 4.5 9 12)",
                "9 - 2 = 7 (left: 7 9 12)",
                "12 - 2 = 10 (left: 9 10 12)"
            ],
            "values": [
                2.001,
                3.0,
                21.001,
                2.001,
                1.002,
                1.002,
                1.002,
                2.001,
                21.001,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- 1.2",
                "5 <- 1.2",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 1.8",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "12 - 2 = 10 (left: 9 10 12)",
                "12 - 2 = 10 (left: 9 10 12)",
                "12 - 2 = 10 (left: 9 10 12)",
                "12 - 2 = 10 (left: 9 10 12)",
                "12 - 2 = 10 (left: 9 10 12)",
                "",
                "",
                "9 - 2 = 7 (left: 7 9 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "12 - 2 = 10 (left: 9 10 12)",
                "12 - 2 = 10 (left: 9 10 12)\n10 - 9 = 1 (left: 1 12)",
                "12 - 2 = 10 (left: 9 10 12)\n4 / 3 = 1.33 (left: 1.33 5 6)",
                "12 - 2 = 10 (left: 9 10 12)\n12 / 9 = 1.33 (left: 1.33 12)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)",
                "12 - 2 = 10 (left: 9 10 12)\nInput: 3 4 5 6",
                "2 + 9 = 11 (left: 9 11 12)",
                "9 * 2 = 18 (left: 9 12 18)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)",
                "2 + 9 = 11 (left: 9 11 12)"
            ],
            "values": [
                3.0,
                0.003,
                2.0,
                0.002,
                60.0,
                0.003,
                20.002,
                2.001,
                60.0,
                1.002
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 2.4",
                "2 <- 1.8",
                "3 <- INIT",
                "4 <- 2.8",
                "5 <- 2.8",
                "6 <- 2.8",
                "7 <- 2.8",
                "8 <- 2.4",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)",
                "9 - 2 = 7 (left: 7 9 12)",
                "",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)"
            ]
        },
        "step_3": {
            "steps": [
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)",
                "9 - 2 = 7 (left: 7 9 12)\n12 / 7 = 1.7142857142857142 (left: 7 1.7142857142857142)",
                "9 / 2 = 4.5 (left: 4.5 9 12)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\nPossible next steps:",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ],
            "values": [
                0.003,
                0.003,
                3.0,
                2.001,
                0.002,
                0.001,
                0.003,
                60.0,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 3.7",
                "1 <- 2.8",
                "2 <- 3.9",
                "3 <- 3.7",
                "4 <- 2.4",
                "5 <- 3.7",
                "6 <- 3.7",
                "7 <- INIT",
                "8 <- 3.9",
                "9 <- 2.4"
            ],
            "resampled_steps": [
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)"
            ]
        },
        "step_4": {
            "steps": [
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((9 - 2) - (9 - 7)) * 12 = 24",
                "9 - 2 = 7 (left: 7 9 12)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 24 9)"
            ],
            "values": [
                0.003,
                0.003,
                20.002,
                0.003,
                60.0,
                20.002,
                0.003,
                0.003,
                0.003,
                40.0
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 2.4",
                "2 <- 4.4",
                "3 <- 4.4",
                "4 <- 3.7",
                "5 <- 2.6",
                "6 <- 4.4",
                "7 <- 2.4",
                "8 <- 4.2",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "9 - 2 = 7 (left: 7 9 12)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "2 + 9 = 11 (left: 9 11 12)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)"
            ]
        },
        "step_5": {
            "steps": [
                "9 - 2 = 7 (left: 7 9 12)\n9 + 12 = 21 (left: 7 21)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 8 6)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "2 + 9 = 11 (left: 9 11 12)\n9 * 11 = 99 (left: 99 12)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 9 24)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n4 * 5 = 20 (left: 6 7 20)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / ((6 - 3) * 3) = 24",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 / 3 = 2.67 (left: 2.67 9)"
            ],
            "values": [
                0.002,
                0.003,
                3.0,
                0.003,
                0.003,
                0.003,
                0.003,
                2.001,
                40.0,
                40.0
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 1.8",
                "2 <- 4.4",
                "3 <- 2.4",
                "4 <- 5.8",
                "5 <- 3.7",
                "6 <- 5.9",
                "7 <- 3.9",
                "8 <- 5.9",
                "9 <- 5.9"
            ],
            "resampled_steps": [
                "2 + 9 = 11 (left: 9 11 12)",
                "9 - 2 = 7 (left: 7 9 12)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / ((6 - 3) * 3) = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 / 3 = 2.67 (left: 2.67 9)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 / 3 = 2.67 (left: 2.67 9)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 / 3 = 2.67 (left: 2.67 9)"
            ]
        },
        "step_6": {
            "steps": [
                "2 + 9 = 11 (left: 9 11 12)\n12 - 9 = 3 (left: 3 12)",
                "9 - 2 = 7 (left: 7 9 12)\n7 + 9 = 16 (left: 16 12)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / ((6 - 3) * 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\n63 / 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 2) * 21 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 / 3 = 2.67 (left: 2.67 9)\nPossible next steps:",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 / 3 = 2.67 (left: 2.67 9)\n9 - 2.67 \u2248 6.33 (left: 6.33)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 / 3 = 2.67 (left: 2.67 9)\n5 - 3.5 = 1.5 (left: 1.5)"
            ],
            "values": [
                0.003,
                0.003,
                3.0,
                0.003,
                20.0,
                20.002,
                0.003,
                20.002,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 6.4",
                "1 <- 2.8",
                "2 <- 1.3",
                "3 <- 4.4",
                "4 <- 6.7",
                "5 <- 6.7",
                "6 <- 4.2",
                "7 <- 4.9",
                "8 <- 4.4",
                "9 <- 5.9"
            ],
            "resampled_steps": [
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / ((6 - 3) * 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\n63 / 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 2) * 21 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)",
                "12 - 2 = 10 (left: 9 10 12)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 24 9)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 / 3 = 2.67 (left: 2.67 9)"
            ]
        },
        "step_7": {
            "steps": [
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / ((6 - 3) * 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\n63 / 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 2) * 21 = 24\nInput: 1 2 6 8\nSteps:\n2 * 6 = 12 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\n108 / 8 = 24 (left: 24)\nAnswer: ((1 + 8) * 12) / 8 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 2 = 10 (left: 9 10 12)\n10 + 12 = 22 (left: 9 22)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\nInput: 4 7 12",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 3) - 8) * (8 + 8) = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n40 - 8 = 32 (left: 32)\n32 / 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 8 - 8) / 3 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 7 9\nSteps:\n3 * 7 = 21 (left: 3 9 21)\n9 - 3 = 6 (left: 6 21)\n6 * 21 = 126 (left: 126)\n126 / 6 = 21 (left: 21)\n21 - 3 = 18 (left: 18)\n18 / 9 = 2 (left: 2)\n2 * 21 = 42 (left: 42)\n42 - 18 = 24 (left: 24)\nAnswer: (((3 * 7) - 3) * ((6 * 21) / 6)) + (18 / 9) = 24",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n3 * 8 = 24 (left: 24 9)\n24 + 9 = 33 (left: 33)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n10 / 4 = 2.5 (left: 2.5 12)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 / 3 = 2.67 (left: 2.67 9)\n9 - 2.67 = 6.33 (left: 6.33)"
            ],
            "values": [
                60.0,
                60.0,
                0.003,
                0.003,
                60.0,
                60.0,
                60.0,
                0.001,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 3.7",
                "1 <- 7.4",
                "2 <- 3.7",
                "3 <- 7.0",
                "4 <- 7.0",
                "5 <- 7.1",
                "6 <- 4.4",
                "7 <- 6.5",
                "8 <- 6.5",
                "9 <- 7.1"
            ],
            "resampled_steps": [
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 3) - 8) * (8 + 8) = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / ((6 - 3) * 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\n63 / 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 2) * 21 = 24\nInput: 1 2 6 8\nSteps:\n2 * 6 = 12 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\n108 / 8 = 24 (left: 24)\nAnswer: ((1 + 8) * 12) / 8 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / ((6 - 3) * 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\n63 / 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 2) * 21 = 24\nInput: 1 2 6 8\nSteps:\n2 * 6 = 12 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\n108 / 8 = 24 (left: 24)\nAnswer: ((1 + 8) * 12) / 8 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ]
        },
        "step_8": {
            "steps": [
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 3) - 8) * (8 + 8) = 24\nInput: 1 2 3 4\nSteps:\n1 * 2 = 2 (left: 2 3 4)\n2 + 3 = 5 (left: 5 4)\n5 * 4 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: (1 * 2) * ((3 + 4) + 4) = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / ((6 - 3) * 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\n63 / 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 2) * 21 = 24\nInput: 1 2 6 8\nSteps:\n2 * 6 = 12 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\n108 / 8 = 24 (left: 24)\nAnswer: ((1 + 8) * 12) / 8 = 24\nInput: 2 3 4 5\nSteps:\n3 * 5 = 15 (left: 2 4 15)\n4 + 2 = 6 (left: 6 15)\n6 * 15 = 90 (left: 90)\n90 / 4 = 22.5 (left: 22.5)\n22.5 + 5 = 24.5 (left: 22.5 24.5)\n24.5 - 2 = 22.5 (left: 22.5)\nAnswer: (((3 * 5) + 2) * 15) / 4 = 24.5",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / ((6 - 3) * 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\n63 / 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 2) * 21 = 24\nInput: 1 2 6 8\nSteps:\n2 * 6 = 12 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\n108 / 8 = 24 (left: 24)\nAnswer: ((1 + 8) * 12) / 8 = 24\nInput: 3 6 7 9\nSteps:\n6 * 3 = 18 (left: 7 9 18)\n7 - 9 = -2 (left: -2 18)\n-2 * 18 = -36 (left: -36)\n-36 + 9 = -27 (left: -27)\n-27 + 18 = -9 (left: -9)\n-9 * -3 = 27 (left: 27)\nAnswer: ((6 * 3) - (7 - 9) + 18) * -3 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 9)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 6 3 8)\n6 * 3 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 + 3 = 13 (left: 13)\n13 * 2 = 26 (left: 26)\n26 - 13 = 13 (left: 13)\n13 + 13 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: (((3 + 3) * 3) - 8 + 3) * 2 - 13 + 13 - 2 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\n6 - 6 = 0 (left: 24 0)\n24 / 0 = undefined\nAnswer: Not possible to obtain 24.",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) = 24"
            ],
            "values": [
                0.003,
                40.0,
                40.001,
                40.0,
                60.0,
                40.001,
                0.003,
                40.0,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 7.1",
                "1 <- 4.4",
                "2 <- 7.4",
                "3 <- 7.5",
                "4 <- 8.5",
                "5 <- 7.0",
                "6 <- 8.8",
                "7 <- 2.4",
                "8 <- 7.0",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 3) - 8) * (8 + 8) = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n40 - 8 = 32 (left: 32)\n32 / 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 8 - 8) / 3 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / ((6 - 3) * 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\n63 / 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 2) * 21 = 24\nInput: 1 2 6 8\nSteps:\n2 * 6 = 12 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\n108 / 8 = 24 (left: 24)\nAnswer: ((1 + 8) * 12) / 8 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\n6 - 6 = 0 (left: 24 0)\n24 / 0 = undefined\nAnswer: Not possible to obtain 24.",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / ((6 - 3) * 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\n63 / 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 2) * 21 = 24\nInput: 1 2 6 8\nSteps:\n2 * 6 = 12 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\n108 / 8 = 24 (left: 24)\nAnswer: ((1 + 8) * 12) / 8 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)"
            ]
        },
        "step_9": {
            "steps": [
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8 9)\n8 - 3 = 5 (left: 5 9)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 3) - 8) * (8 + 8) = 24\nInput: 2 3 5 6\nSteps:\n2 * 3 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = ",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n40 - 8 = 32 (left: 32)\n32 / 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 8 - 8) / 3 = 24\nInput: 6 6 9 3\nSteps:\n6 + 6 = 12 (left: 9 3 12)\n9 - 3 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((6 + 6) - 9) * (3 * 12) / 3 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((8 - 3) + 3) * 9 / 3 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / ((6 - 3) * 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\n63 / 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 2) * 21 = 24\nInput: 1 2 6 8\nSteps:\n2 * 6 = 12 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\n108 / 8 = 24 (left: 24)\nAnswer: ((1 + 8) * 12) / 8 = 24\nInput: 3 5 6 7\nSteps:\n5 * 7 = 35 (left: 3 6 35)\n6 - 3 = 3 (left: 3 35)\n3 * 35 = 105 (left: 105)\n105 / 5 = 21 (left: 21)\nAnswer: ((5 * 7) - 3) * 21 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\n6 - 6 = 0 (left: 24 0)\n24 / 0 = undefined\nAnswer: Not possible to obtain 24.\nInput: 2 2 6 8\nSteps:\n2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 + 8 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((2 * 2) + 6) + 8 = 24",
                "12 - 2 = 10 (left: 9 10 12)\n9 / 3 = 3 (left: 3 8 9)\n7 - 6 = 1 (left: 1 11)",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / ((6 - 3) * 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\n63 / 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 2) * 21 = 24\nInput: 1 2 6 8\nSteps:\n2 * 6 = 12 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\n108 / 8 = 24 (left: 24)\nAnswer: ((1 + 8) * 12) / 8 = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((4 * 6) / (5 - 3)) = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)"
            ],
            "values": [
                0.003,
                0.003,
                40.0,
                60.0,
                60.0,
                60.0,
                60.0,
                0.002,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 8.8",
                "1 <- 8.2",
                "2 <- 9.2",
                "3 <- 9.6",
                "4 <- 9.5",
                "5 <- 9.6",
                "6 <- 9.8",
                "7 <- 9.4",
                "8 <- 8.8",
                "9 <- 9.3"
            ],
            "resampled_steps": [
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\n6 - 6 = 0 (left: 24 0)\n24 / 0 = undefined\nAnswer: Not possible to obtain 24.",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 3) - 8) * (8 + 8) = 24\nInput: 2 3 5 6\nSteps:\n2 * 3 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = ",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\n6 - 6 = 0 (left: 24 0)\n24 / 0 = undefined\nAnswer: Not possible to obtain 24.\nInput: 2 2 6 8\nSteps:\n2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 + 8 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((2 * 2) + 6) + 8 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / ((6 - 3) * 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\n63 / 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 2) * 21 = 24\nInput: 1 2 6 8\nSteps:\n2 * 6 = 12 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\n108 / 8 = 24 (left: 24)\nAnswer: ((1 + 8) * 12) / 8 = 24\nInput: 3 5 6 7\nSteps:\n5 * 7 = 35 (left: 3 6 35)\n6 - 3 = 3 (left: 3 35)\n3 * 35 = 105 (left: 105)\n105 / 5 = 21 (left: 21)\nAnswer: ((5 * 7) - 3) * 21 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\n6 - 6 = 0 (left: 24 0)\n24 / 0 = undefined\nAnswer: Not possible to obtain 24.\nInput: 2 2 6 8\nSteps:\n2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 + 8 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((2 * 2) + 6) + 8 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / ((6 - 3) * 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\n63 / 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 2) * 21 = 24\nInput: 1 2 6 8\nSteps:\n2 * 6 = 12 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\n108 / 8 = 24 (left: 24)\nAnswer: ((1 + 8) * 12) / 8 = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((4 * 6) / (5 - 3)) = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((8 - 3) + 3) * 9 / 3 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\n6 - 6 = 0 (left: 24 0)\n24 / 0 = undefined\nAnswer: Not possible to obtain 24.",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n40 - 8 = 32 (left: 32)\n32 / 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 8 - 8) / 3 = 24\nInput: 6 6 9 3\nSteps:\n6 + 6 = 12 (left: 9 3 12)\n9 - 3 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((6 + 6) - 9) * (3 * 12) / 3 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\n6 - 6 = 0 (left: 24 0)\n24 / 0 = undefined\nAnswer: Not possible to obtain 24.\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 * 24 = 288 (left: 288)\nAnswer: (2 * 3 * 8) = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) * 8 + 8 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 8 8\nSteps:\n3 + 3 = 6 (left: 6 8 8)\n8 - 6 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 + 3) - 8) * (8 + 8) = 24\nInput: 2 3 5 6\nSteps:\n2 * 3 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = 36 (left: 36)\n36 / 6 = 6 (left: 6)\n6 * 6 = \n36 (left: 36)\nAnswer: (2 * 3) * (5 + 6) = 36",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\n6 - 6 = 0 (left: 24 0)\n24 / 0 = undefined\nAnswer: Not possible to obtain 24.\nInput: 2 2 6 8\nSteps:\n2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 + 8 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((2 * 2) + 6) + 8 = 24\nInput: 1 3 5 7\nSteps:\n5 - 3 = 2 (left: 1 2 7)\n2 * 7 = 14 (left: 1 14)\n14 * 1 = 14 (left: 14)\n14 + 10 = 24 (left: 24)\nAnswer: (5 - 3) * 7 + 10 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / ((6 - 3) * 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\n63 / 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 2) * 21 = 24\nInput: 1 2 6 8\nSteps:\n2 * 6 = 12 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\n108 / 8 = 24 (left: 24)\nAnswer: ((1 + 8) * 12) / 8 = 24\nInput: 3 5 6 7\nSteps:\n5 * 7 = 35 (left: 3 6 35)\n6 - 3 = 3 (left: 3 35)\n3 * 35 = 105 (left: 105)\n105 / 5 = 21 (left: 21)\nAnswer: ((5 * 7) - 3) * 21 = 24\nInput: 2 4 8 9\nSteps:\n4 * 8 = 32 (left: 2 9 32)\n9 - 2 = 7 (left: 7 32)\n7 * 32 = 224 (left: 224)\n224 / 9 = 24 (left: 24)\nAnswer: ((4 * 8) + 2) / 9 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\n6 - 6 = 0 (left: 24 0)\n24 / 0 = undefined\nAnswer: Not possible to obtain 24.\nInput: 2 2 6 8\nSteps:\n2 * 2 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 + 8 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((2 * 2) + 6) + 8 = 24\nInput: 3 5 5 7\nSteps:\n5 * 5 = 25 (left: 3 7 25)\n7 - 3 = 4 (left: 4 25)\n4 * 25 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 25 = 0 (left: 0)\n24 = Not possible to obtain 24.",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) / ((6 - 3) * 3) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n3 * 21 = 63 (left: 63)\n63 / 3 = 21 (left: 21)\nAnswer: ((3 * 7) - 2) * 21 = 24\nInput: 1 2 6 8\nSteps:\n2 * 6 = 12 (left: 1 8 12)\n1 + 8 = 9 (left: 9 12)\n9 * 12 = 108 (left: 108)\n108 / 8 = 24 (left: 24)\nAnswer: ((1 + 8) * 12) / 8 = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n5 - 3 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((4 * 6) / (5 - 3)) = 24\nInput: 2 4 7 9\nSteps:\n4 + 9 = 13 (left: 2 7 13)\n7 - 2 = 5 (left: 5 13)\n5 * 13 = 65 (left: 65)\n65 / 5 = 13 (left: 13)\nAnswer: ((4 + 9) / (7 - 2)) * 13 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 8 9\nSteps:\n8 - 3 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((8 - 3) + 3) * 9 / 3 = 24\nInput: 6 6 8 2\nSteps:\n6 + 6 = 12 (left: 8 2 12)\n8 - 2 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((6 + 6) * (8 - 2)) / 3 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\n6 - 6 = 0 (left: 24 0)\n24 / 0 = undefined\nAnswer: Not possible to obtain 24.\nInput: 1 3 7 8\nSteps:\n3 * 7 = 21 (left: 1 8 21)\n21 + 1 = 22 (left: 8 22)\n22 + 8 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((3 * 7) + 1 + 8) - 6 = 24",
                "9 - 2 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 2) * (9 - 7) * 12 = 24\nInput: 3 3 5 8\nSteps:\n3 + 5 = 8 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n40 - 8 = 32 (left: 32)\n32 / 3 = 24 (left: 24)\nAnswer: ((3 + 5) * 8 - 8) / 3 = 24\nInput: 6 6 9 3\nSteps:\n6 + 6 = 12 (left: 9 3 12)\n9 - 3 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((6 + 6) - 9) * (3 * 12) / 3 = 24\nInput: 3 4 5 7\nSteps:\n3 * 7 = 21 (left: 4 5 21)\n4 + 5 = 9 (left: 9 21)\n9 + 21 = 30 (left: 30)\n30 / 5 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 7) + (4 + 5)) + (30 / 5) * 4 = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.9158745000000001
    },
    "47": {
        "input": "11 11 11 12",
        "step_1": {
            "steps": [
                "12 - 11 = 1 (left: 11 11 1)",
                "12 / 11 = 1.09 (left: 11 11 1.09)",
                "11 + 11 = 22 (left: 11 22 12)",
                "11 + 11 = 22 (left: 11 22 12)",
                "12 - 11 = 1 (left: 11 1 1)",
                "11 * 11 = 121 (left: 11 121 12)",
                "11 + 11 = 22 (left: 11 22 12)",
                "12 - 11 = 1 (left: 11 11 1)",
                "11 + 11 = 22 (left: 11 22 12)",
                "11 + 1 = 12 (left: 11 12 12)"
            ],
            "values": [
                0.003,
                2.0,
                0.002,
                1.002,
                2.001,
                2.0,
                2.001,
                1.001,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.1",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "12 / 11 = 1.09 (left: 11 11 1.09)",
                "",
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "11 + 11 = 22 (left: 11 22 12)",
                "12 - 11 = 1 (left: 11 11 1)",
                "11 / 11 = 1 (left: 1 11 12)",
                "12 / 11 = 1.09 (left: 11 11 1.09)\n1.09 * 11 = 11.99 (left: 11 11.99)",
                "12 - 11 = 1 (left: 11 11 1)",
                "11 + 12 = 23 (left: 11 11 23)",
                "12 - 11 = 1 (left: 11 11 1)",
                "12 - 11 = 1 (left: 11 11 1)",
                "11 + 11 = 22 (left: 11 22 12)",
                "Input: 3 7 9 10"
            ],
            "values": [
                0.003,
                0.002,
                3.0,
                0.003,
                1.002,
                0.002,
                1.002,
                2.001,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 2.4",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 1.4",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "12 - 11 = 1 (left: 11 11 1)",
                "",
                "",
                "12 - 11 = 1 (left: 11 1 1)",
                "",
                "",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "11 + 11 = 22 (left: 11 22 12)",
                "11 + 11 = 22 (left: 11 22 12)",
                "11 / 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 11 11 1)\n11 + 11 = 22 (left: 1 22)",
                "11 / 11 = 1 (left: 1 11 12)",
                "11 / 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 11 1 1)\n11 + 1 = 12 (left: 1 12)",
                "11 / 11 = 1 (left: 1 11 1)",
                "11 + 11 = 22 (left: 11 22 12)",
                "11 - 11 = 0 (left: 0 11 12)"
            ],
            "values": [
                1.002,
                21.001,
                20.002,
                2.001,
                21.001,
                40.0,
                2.0,
                1.002,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 3.5",
                "2 <- 3.4",
                "3 <- 3.5",
                "4 <- 3.3",
                "5 <- INIT",
                "6 <- 3.5",
                "7 <- INIT",
                "8 <- 3.1",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "11 / 11 = 1 (left: 1 11 12)",
                "11 / 11 = 1 (left: 1 11 12)",
                "11 / 11 = 1 (left: 1 11 12)",
                "11 / 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 11 11 1)\n11 + 11 = 22 (left: 1 22)",
                "",
                "11 / 11 = 1 (left: 1 11 12)",
                "",
                "11 + 11 = 22 (left: 11 22 12)",
                "11 / 11 = 1 (left: 1 11 12)"
            ]
        },
        "step_4": {
            "steps": [
                "11 / 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12)",
                "11 / 11 = 1 (left: 1 11 12)\n9 - 3 = 6 (left: 6 12)",
                "11 / 11 = 1 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "11 / 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 11 11 1)\n11 + 11 = 22 (left: 1 22)\n22 - 1 = 21 (left: 21)",
                "11 + 11 = 22 (left: 11 22 12)",
                "11 / 11 = 1 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "11 / 11 = 1 (left: 1 11 12)",
                "11 + 11 = 22 (left: 11 22 12)\n5 / 3 = 1 (left: 1 7)",
                "11 / 11 = 1 (left: 1 11 12)\n11 - 1 = 10 (left: 10)"
            ],
            "values": [
                0.001,
                0.003,
                0.003,
                40.001,
                0.001,
                20.0,
                0.002,
                40.001,
                22.0,
                0.002
            ],
            "resampled": [
                "0 <- 4.7",
                "1 <- 3.0",
                "2 <- 4.7",
                "3 <- 3.5",
                "4 <- 4.8",
                "5 <- 4.8",
                "6 <- 4.7",
                "7 <- 4.3",
                "8 <- 3.5",
                "9 <- 4.8"
            ],
            "resampled_steps": [
                "11 / 11 = 1 (left: 1 11 12)",
                "11 + 11 = 22 (left: 11 22 12)",
                "11 / 11 = 1 (left: 1 11 12)",
                "11 / 11 = 1 (left: 1 11 12)",
                "11 + 11 = 22 (left: 11 22 12)\n5 / 3 = 1 (left: 1 7)",
                "11 + 11 = 22 (left: 11 22 12)\n5 / 3 = 1 (left: 1 7)",
                "11 / 11 = 1 (left: 1 11 12)",
                "11 / 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "11 / 11 = 1 (left: 1 11 12)",
                "11 + 11 = 22 (left: 11 22 12)\n5 / 3 = 1 (left: 1 7)"
            ]
        },
        "step_5": {
            "steps": [
                "11 / 11 = 1 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "11 + 11 = 22 (left: 11 22 12)\n22 - 11 = 11 (left: 11 12)",
                "11 / 11 = 1 (left: 1 11 12)\n12 - 11 = 1 (left: 1 12)",
                "11 / 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "11 + 11 = 22 (left: 11 22 12)\n5 / 3 = 1 (left: 1 7)\n1 + 7 = 8",
                "11 + 11 = 22 (left: 11 22 12)\n5 / 3 = 1 (left: 1 7)\n1 + 7 = 8 (left: 8)",
                "11 / 11 = 1 (left: 1 11 12)\n2 / 3 = 0.6666666666666666 (left: 0.6666666666666666 7)",
                "11 / 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "11 / 11 = 1 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "11 + 11 = 22 (left: 11 22 12)\n5 / 3 = 1 (left: 1 7)\n1 + 7 = 8 (left: 8)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                40.001,
                0.003,
                0.003,
                2.001,
                40.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 5.3",
                "2 <- 5.3",
                "3 <- 3.4",
                "4 <- 5.3",
                "5 <- 5.7",
                "6 <- 3.5",
                "7 <- 4.7",
                "8 <- 4.7",
                "9 <- 4.7"
            ],
            "resampled_steps": [
                "11 / 11 = 1 (left: 1 11 12)",
                "11 / 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "11 / 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "11 / 11 = 1 (left: 1 11 12)",
                "11 / 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "11 / 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "11 / 11 = 1 (left: 1 11 12)",
                "11 / 11 = 1 (left: 1 11 12)",
                "11 / 11 = 1 (left: 1 11 12)",
                "11 / 11 = 1 (left: 1 11 12)"
            ]
        },
        "step_6": {
            "steps": [
                "11 / 11 = 1 (left: 1 11 12)\n10 - 3 = 7 (left: 7 10)",
                "11 / 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24",
                "11 / 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24",
                "11 / 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "11 / 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24",
                "11 / 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (11 / 11 + 11) + 12 = 24",
                "11 / 11 = 1 (left: 1 11 12)\n1 * 11 = 11 (left: 11 12)",
                "11 / 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "11 / 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)",
                "11 / 11 = 1 (left: 1 11 12)\n13 - 5 = 8 (left: 3 8 13)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.9500875000000002
    },
    "48": {
        "input": "3 8 13 13",
        "step_1": {
            "steps": [
                "8 - 3 = 5 (left: 5 8 13)",
                "3 + 8 = 11 (left: 11 13 13)",
                "4 * 5 = 20 (left: 6 7 20)",
                "13 - 3 = 10 (left: 8 10 13)",
                "8 / 3 = 2.67 (left: 2.67 8 13)",
                "8 / 3 = 2.67 (left: 2.67 13 13)",
                "13 - 3 = 10 (left: 8 10 13)",
                "13 - 8 = 5 (left: 3 5 13)",
                "13 + 3 = 16 (left: 8 13 16)",
                "8 / 3 = 2 (left: 2 8 13)"
            ],
            "values": [
                0.003,
                2.001,
                1.001,
                21.001,
                2.001,
                2.001,
                40.001,
                0.003,
                2.0,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.3",
                "2 <- INIT",
                "3 <- 1.9",
                "4 <- 1.4",
                "5 <- 1.3",
                "6 <- INIT",
                "7 <- 1.6",
                "8 <- 1.6",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "",
                "13 - 3 = 10 (left: 8 10 13)",
                "",
                "8 / 3 = 2 (left: 2 8 13)",
                "8 / 3 = 2.67 (left: 2.67 8 13)",
                "13 - 3 = 10 (left: 8 10 13)",
                "",
                "13 - 3 = 10 (left: 8 10 13)",
                "13 - 3 = 10 (left: 8 10 13)",
                "13 - 3 = 10 (left: 8 10 13)"
            ]
        },
        "step_2": {
            "steps": [
                "13 - 8 = 5 (left: 3 5 13)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 8 = 5 (left: 5 13)",
                "8 - 3 = 5 (left: 5 8 13)",
                "8 / 3 = 2 (left: 2 8 13)\n8 * 6.5 = 52 (left: 52 8)",
                "8 / 3 = 2.67 (left: 2.67 8 13)\n8 - 2.67 \u2248 5.33 (left: 5.33 13)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 10)",
                "8 / 3 = 2.67 (left: 2.67 8 13)",
                "13 - 3 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)",
                "13 - 3 = 10 (left: 8 10 13)\n10 / 8 = 1.25 (left: 1.25 13)",
                "13 - 3 = 10 (left: 8 10 13)\n8 - 10 = -2 (left: -2 13)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.0,
                1.002,
                0.001,
                1.002,
                0.003,
                0.001,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.6",
                "2 <- 1.3",
                "3 <- 1.6",
                "4 <- 1.6",
                "5 <- INIT",
                "6 <- 1.3",
                "7 <- 1.3",
                "8 <- 2.9",
                "9 <- 1.3"
            ],
            "resampled_steps": [
                "",
                "13 - 3 = 10 (left: 8 10 13)",
                "13 - 3 = 10 (left: 8 10 13)",
                "13 - 3 = 10 (left: 8 10 13)",
                "13 - 3 = 10 (left: 8 10 13)",
                "",
                "13 - 3 = 10 (left: 8 10 13)",
                "13 - 3 = 10 (left: 8 10 13)",
                "13 - 3 = 10 (left: 8 10 13)\n8 - 10 = -2 (left: -2 13)",
                "13 - 3 = 10 (left: 8 10 13)"
            ]
        },
        "step_3": {
            "steps": [
                "8 - 3 = 5 (left: 5 8 13)",
                "13 - 3 = 10 (left: 8 10 13)\n13 + 8 = 21 (left: 21)",
                "13 - 3 = 10 (left: 8 10 13)\n8 * 10 = 80 (left: 80 13)",
                "13 - 3 = 10 (left: 8 10 13)\n10 / 8 = 1.25 (left: 1.25 13)",
                "13 - 3 = 10 (left: 8 10 13)\n8 / 10 = 0.8 (left: 0.8 13)",
                "13 / 3 = 4.33 (left: 4.33 8 13)",
                "13 - 3 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)",
                "13 - 3 = 10 (left: 8 10 13)\n8 / 10 = 0.8 (left: 0.8 13)",
                "13 - 3 = 10 (left: 8 10 13)\n8 - 10 = -2 (left: -2 13)\n-2 + 13 = 11 (left: 11)",
                "13 - 3 = 10 (left: 8 10 13)\n10 - 10 = 0 (left: 8 13)"
            ],
            "values": [
                2.001,
                0.003,
                0.003,
                1.001,
                1.001,
                2.001,
                1.002,
                2.0,
                0.003,
                1.001
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 1.3",
                "2 <- 3.4",
                "3 <- 1.6",
                "4 <- 1.6",
                "5 <- INIT",
                "6 <- 1.6",
                "7 <- 3.0",
                "8 <- 1.8",
                "9 <- 1.3"
            ],
            "resampled_steps": [
                "13 / 3 = 4.33 (left: 4.33 8 13)",
                "13 - 3 = 10 (left: 8 10 13)",
                "13 - 3 = 10 (left: 8 10 13)\n8 / 10 = 0.8 (left: 0.8 13)",
                "13 - 3 = 10 (left: 8 10 13)",
                "13 - 3 = 10 (left: 8 10 13)",
                "",
                "13 - 3 = 10 (left: 8 10 13)",
                "8 - 3 = 5 (left: 5 8 13)",
                "13 + 3 = 16 (left: 8 13 16)",
                "13 - 3 = 10 (left: 8 10 13)"
            ]
        },
        "step_4": {
            "steps": [
                "13 / 3 = 4.33 (left: 4.33 8 13)\n13 - 4.33 = 8.67 (left: 8.67 8)",
                "13 - 3 = 10 (left: 8 10 13)\n10 * 13 = 130 (left: 8 130)",
                "13 - 3 = 10 (left: 8 10 13)\n8 / 10 = 0.8 (left: 0.8 13)\n13 - 0.8 = 12.2 (left: 12.2)",
                "13 - 3 = 10 (left: 8 10 13)\nInput: 2 13 17",
                "13 - 3 = 10 (left: 8 10 13)\nInput: 18 13 8",
                "13 / 3 = 4.33 (left: 4.33 13 13)",
                "13 - 3 = 10 (left: 8 10 13)\n10 * 13 = 130 (left: 8 130)",
                "8 - 3 = 5 (left: 5 8 13)\n5 * 8 = 40 (left: 40 13)",
                "13 + 3 = 16 (left: 8 13 16)\nPossible next steps:",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)"
            ],
            "values": [
                2.001,
                21.0,
                0.003,
                0.003,
                0.003,
                3.0,
                0.002,
                0.003,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 4.9",
                "1 <- 1.3",
                "2 <- 4.9",
                "3 <- 4.1",
                "4 <- 3.4",
                "5 <- 4.9",
                "6 <- 4.9",
                "7 <- 4.9",
                "8 <- INIT",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)",
                "13 - 3 = 10 (left: 8 10 13)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)",
                "13 - 3 = 10 (left: 8 10 13)\n10 * 13 = 130 (left: 8 130)",
                "13 - 3 = 10 (left: 8 10 13)\n8 / 10 = 0.8 (left: 0.8 13)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)",
                "",
                "8 / 3 = 2 (left: 2 8 13)"
            ]
        },
        "step_5": {
            "steps": [
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)",
                "13 - 3 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 + 3 = 11 (left: 11)",
                "13 - 3 = 10 (left: 8 10 13)\n10 * 13 = 130 (left: 8 130)\n130 / 8 = 16.25 (left: 16.25)",
                "13 - 3 = 10 (left: 8 10 13)\n8 / 10 = 0.8 (left: 0.8 13)\n0.8 * 13 = 10.4 (left: 10.4)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 - 3 = 5 (left: 5)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 / 3 = 2.67 (left: 2.67)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 - 3 = 5 (left: 5)",
                "13 - 3 = 10 (left: 8 10 13)",
                "8 / 3 = 2 (left: 2 8 13)\n13 - 8 = 5 (left: 2 5 13)"
            ],
            "values": [
                60.0,
                0.003,
                0.001,
                0.003,
                0.001,
                0.002,
                0.002,
                0.002,
                22.0,
                2.001
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 4.9",
                "2 <- 5.0",
                "3 <- 4.5",
                "4 <- 1.6",
                "5 <- 4.9",
                "6 <- 4.9",
                "7 <- 1.5",
                "8 <- 4.9",
                "9 <- 4.9"
            ],
            "resampled_steps": [
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)",
                "13 / 3 = 4.33 (left: 4.33 13 13)",
                "13 - 3 = 10 (left: 8 10 13)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)",
                "8 / 3 = 2.67 (left: 2.67 13 13)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)"
            ]
        },
        "step_6": {
            "steps": [
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)\nAnswer: 8 * (13 - (13 - 3)) = 24",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 - 3 = 5 (left: 5)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 * 3 = 24 (left: 24)\nAnswer: 8 * (13 - (13 - 3)) = 24",
                "13 / 3 = 4.33 (left: 4.33 13 13)\n13 + 4.33 = 17.33 (left: 13 17.33)",
                "13 - 3 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 / 3 = 2.67 (left: 2.67)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 / 3 = 2.67 (left: 2.67)",
                "8 / 3 = 2.67 (left: 2.67 13 13)\n2.67 + 13 = 15.67 (left: 13 15.67)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 / 3 = 2.67 (left: 2.67)",
                "13 - 3 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 8 3)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)"
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.982084
    },
    "49": {
        "input": "9 9 12 12",
        "step_1": {
            "steps": [
                "12 / 9 = 1.33 (left: 9 12 1.33)",
                "9 / 9 = 1 (left: 1 12 12)",
                "12 - 9 = 3 (left: 3 9 12)",
                "12 + 9 = 21 (left: 9 12 21)",
                "9 + 9 = 18 (left: 12 18 12)",
                "12 / 9 = 1 (left: 1 9 12)",
                "5 / 3 = 1.67 (left: 1.67 7 9)",
                "12 / 9 = 1.33 (left: 12 1.33 9)",
                "9 / 9 = 1 (left: 1 12 12)",
                "12 - 9 = 3 (left: 9 12 3)"
            ],
            "values": [
                3.0,
                20.002,
                0.003,
                2.0,
                1.002,
                0.003,
                2.001,
                2.001,
                20.002,
                2.001
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- INIT",
                "2 <- 1.7",
                "3 <- INIT",
                "4 <- 1.8",
                "5 <- 1.0",
                "6 <- INIT",
                "7 <- 1.8",
                "8 <- 1.1",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "12 / 9 = 1.33 (left: 9 12 1.33)",
                "",
                "12 / 9 = 1.33 (left: 12 1.33 9)",
                "",
                "9 / 9 = 1 (left: 1 12 12)",
                "12 / 9 = 1.33 (left: 9 12 1.33)",
                "",
                "9 / 9 = 1 (left: 1 12 12)",
                "9 / 9 = 1 (left: 1 12 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "12 / 9 = 1.33 (left: 9 12 1.33)\n12 / 9 = 1.33 (left: 1.33)",
                "9 / 9 = 1 (left: 1 12 12)",
                "12 / 9 = 1.33 (left: 12 1.33 9)\n9 * 1.33 = 11.97 (left: 9 11.97)",
                "9 / 9 = 1 (left: 1 12 12)",
                "9 / 9 = 1 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)",
                "12 / 9 = 1.33 (left: 9 12 1.33)\n2 * 8 = 16 (left: 16)",
                "12 - 9 = 3 (left: 3 12 12)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "9 / 9 = 1 (left: 1 12 12)\n1 + 12 = 13 (left: 12 13)",
                "12 - 9 = 3 (left: 3 12 12)"
            ],
            "values": [
                0.003,
                2.001,
                1.0,
                40.001,
                0.003,
                0.001,
                60.0,
                40.001,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 2.9",
                "2 <- 2.7",
                "3 <- 2.6",
                "4 <- 2.3",
                "5 <- 2.7",
                "6 <- 2.7",
                "7 <- 2.7",
                "8 <- INIT",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 9 = 3 (left: 3 12 12)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "12 - 9 = 3 (left: 3 12 12)",
                "9 / 9 = 1 (left: 1 12 12)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "",
                "9 / 9 = 1 (left: 1 12 12)"
            ]
        },
        "step_3": {
            "steps": [
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24",
                "12 - 9 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24",
                "12 - 9 = 3 (left: 3 12 12)\n12 / 3 = 4 (left: 4 12)",
                "9 / 9 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 + 9 = 21 (left: 9 12 21)",
                "9 / 9 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)"
            ],
            "values": [
                60.0,
                0.002,
                20.002,
                0.003,
                0.002,
                20.002,
                0.003,
                60.0,
                3.0,
                1.002
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 3.0",
                "2 <- 3.7",
                "3 <- 2.7",
                "4 <- 2.7",
                "5 <- 3.0",
                "6 <- 2.3",
                "7 <- 2.7",
                "8 <- 3.0",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "12 - 9 = 3 (left: 3 12 12)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24",
                "9 / 9 = 1 (left: 1 12 12)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24"
            ]
        },
        "step_4": {
            "steps": [
                "12 - 9 = 3 (left: 3 12 12)\n3 + 12 = 15 (left: 12 15)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24\n12 * 12 = 144 (left: 144)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (9 / 9) * (12 + 12) = 24",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24\n12 / 12 = 1 (left: 24 1)",
                "9 / 9 = 1 (left: 1 12 12)\n12 - 1 = 11 (left: 11 12)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24\n24 / 12 = 2 (left: 2 12)",
                "9 / 9 = 1 (left: 1 12 12)\n1 * 12 = 12 (left: 12 12)\n12 + 12 = 24\n12 / 12 = 1 (left: 1 24)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.0019245
    }
}