{
    "0": {
        "puzzle": "1 1 4 6",
        "Step 0": {
            "steps": [
                "6 - 4 = 2 (left: 1 2 6)",
                "1 * 1 = 1 (left: 1 4 6)",
                "4 + 1 = 5 (left: 1 5 6)",
                "4 + 1 = 5 (left: 1 5 6)",
                "6 - 4 = 2 (left: 1 2 6)",
                "6 - 1 = 5 (left: 1 4 5)",
                "4 + 1 = 5 (left: 1 5 6)",
                "6 - 4 = 2 (left: 1 2 6)",
                "4 + 1 = 5 (left: 5 4 ",
                "6 - 4 = 2 (left: 1 2 6)"
            ],
            "Evaluation": [
                1.002,
                41.0,
                0.002,
                41.0,
                0.003,
                21.0,
                22.0,
                1.002,
                40.0,
                0.003
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- INIT",
                "2 <- 0.3",
                "3 <- 0.8",
                "4 <- INIT",
                "5 <- 0.3",
                "6 <- 0.8",
                "7 <- 0.1",
                "8 <- INIT",
                "9 <- 0.5"
            ]
        },
        "Step 1": {
            "steps": [
                "4 + 1 = 5 (left: 1 5 6) || 5 + 1 = 6 (left: 6 6)",
                "4 + 1 = 5 (left: 5 4 6)",
                "4 + 1 = 5 (left: 1 5 6) || 5 * 1 = 5 (left: 5 6)",
                "4 + 1 = 5 (left: 5 4  || 4 + 5 = 9 (left: 9)",
                "6 - 1 = 5 (left: 1 4 5)",
                "4 + 1 = 5 (left: 1 5 6) || Input: 3 9 27",
                "4 + 1 = 5 (left: 5 4  || 4 + 5 = 9 (left: 9)",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 1 = 5 (left: 4 5)",
                "6 - 4 = 2 (left: 1 2 6)",
                "6 - 1 = 5 (left: 1 4 5) || 5 / 1 = 5 (left: 5 5)"
            ],
            "Evaluation": [
                20.002,
                3.0,
                0.003,
                0.001,
                1.002,
                0.003,
                0.003,
                3.0,
                1.002,
                0.002
            ],
            "Resampling": [
                "0 <- 1.0",
                "1 <- 1.0",
                "2 <- 0.1",
                "3 <- 0.3",
                "4 <- 0.6",
                "5 <- INIT",
                "6 <- 0.3",
                "7 <- 0.8",
                "8 <- 0.8",
                "9 <- 0.8"
            ]
        },
        "Step 2": {
            "steps": [
                "4 + 1 = 5 (left: 1 5 6) || 5 + 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36)",
                "4 + 1 = 5 (left: 1 5 6) || 5 + 1 = 6 (left: 6 6) || 6 - 6 = 0 (left: 0)",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = 4 (left: 4 6)",
                "4 + 1 = 5 (left: 1 5 6) || 1 * 5 = 5 (left: 5 6)",
                "4 + 1 = 5 (left: 1 5 6) || 5 * 1 = 5 (left: 5 6)",
                "6 - 1 = 5 (left: 1 4 5)",
                "4 + 1 = 5 (left: 1 5 6) || 1 * 5 = 5 (left: 5 6)",
                "4 + 1 = 5 (left: 5 4  || 4 + 5 = 9 (left: 9)",
                "4 + 1 = 5 (left: 5 4  || 5 * 4 = 20 (left: 20)",
                "4 + 1 = 5 (left: 5 4  || 10 + 3 = 13 (left: 13)"
            ],
            "Evaluation": [
                40.0,
                20.002,
                60.0,
                1.001,
                1.002,
                1.002,
                0.003,
                0.002,
                0.003,
                0.003
            ],
            "Resampling": [
                "0 <- 0.3",
                "1 <- 0.5",
                "2 <- 2.0",
                "3 <- 2.2",
                "4 <- 2.2",
                "5 <- 0.3",
                "6 <- 2.2",
                "7 <- 0.8",
                "8 <- 1.7",
                "9 <- 2.2"
            ]
        },
        "Step 3": {
            "steps": [
                "4 + 1 = 5 (left: 1 5 6) || 5 + 1 = 6 (left: 6 6)",
                "6 - 1 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5)",
                "4 + 1 = 5 (left: 1 5 6) || 5 + 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24)",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "4 + 1 = 5 (left: 1 5 6) || Possible next steps:",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = 4 (left: 4 6) || Input: 10 20 30",
                "4 + 1 = 5 (left: 5 4  || 4 + 5 = 9 (left: 9)",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 1 = 5 (left: 4 5) || 5 - 4 = 1 (left: 1)",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = 4 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)"
            ],
            "Evaluation": [
                0.003,
                40.0,
                0.003,
                60.0,
                0.001,
                0.003,
                0.003,
                0.002,
                0.002,
                0.002
            ],
            "Resampling": [
                "0 <- 0.5",
                "1 <- 3.3",
                "2 <- 3.3",
                "3 <- 3.1",
                "4 <- 0.3",
                "5 <- 3.3",
                "6 <- 3.3",
                "7 <- 3.3",
                "8 <- 0.6",
                "9 <- 3.3"
            ]
        },
        "Step 4": {
            "steps": [
                "6 - 1 = 5 (left: 1 4 5) || 4 / 1 = 4 (left: 4 5)",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 1) * (4 / 1) * 6 = 24",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 1) * (4 / 1) * 6 = 24",
                "6 - 1 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 1 * 5 = 5 (left: 5)",
                "4 + 1 = 5 (left: 1 5 6) || 5 * 1 = 5 (left: 5 6)",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 1) * (4 / 1) * 6 = 24",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 1) * (4 / 1) * 6 = 24",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 1) * (4 / 1) * 6 = 24",
                "4 + 1 = 5 (left: 1 5 6) || 1 * 5 = 5 (left: 5 6)",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 1) * (4 / 1) * 6 = 24"
            ],
            "Evaluation": [
                2.001,
                0.002,
                0.002,
                0.002,
                60.0,
                60.0,
                20.0,
                60.0,
                60.0,
                0.003
            ],
            "Resampling": [
                "0 <- 4.8",
                "1 <- 4.5",
                "2 <- 4.4",
                "3 <- 0.8",
                "4 <- 0.6",
                "5 <- 4.7",
                "6 <- 0.5",
                "7 <- 4.8",
                "8 <- 4.8",
                "9 <- 4.7"
            ]
        },
        "Step 5": {
            "steps": [
                "6 - 1 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 5 - 1 = 4 (left: 4)",
                "4 + 1 = 5 (left: 1 5 6) || 5 + 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 + 2 = 38",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 4 = 1.5 (left: 1 1.5)",
                "4 + 1 = 5 (left: 5 4  || 4 + 5 = 9 (left: 9)",
                "4 + 1 = 5 (left: 1 5 6) || 5 * 1 = 5 (left: 5 6)",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 4 = 1.5 (",
                "6 - 1 = 5 (left: 1 4 5) || 5 / 1 = 5 (left: 4 5)",
                "6 - 1 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 1 * 5 = 5 (left: 5)",
                "6 - 1 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 1 + 5 = 6",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 4 = 1.5 (left: 1 1.5)"
            ],
            "Evaluation": [
                0.002,
                0.003,
                2.0,
                0.002,
                1.001,
                0.003,
                22.0,
                0.002,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 0.6",
                "1 <- 5.2",
                "2 <- 1.0",
                "3 <- 4.8",
                "4 <- 4.4",
                "5 <- INIT",
                "6 <- 2.2",
                "7 <- 4.7",
                "8 <- 5.6",
                "9 <- 0.1"
            ]
        },
        "Step 6": {
            "steps": [
                "4 + 1 = 5 (left: 1 5 6) || 5 + 1 = 6 (left: 6 6)",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 4 = 1.5 (left: 1 1.5) || 1 / 1.5 = 0.6666666666666666 (left: 0.6666666666666666)",
                "4 + 1 = 5 (left: 1 5 6) || 5 + 1 = 6 (left: 6 6) || 6 / 6 = 1 (left: 1)",
                "6 - 1 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 1 * 5 = 5 (left: 5)",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 4 = 1.5 (left: 1 1.5)",
                "4 + 1 = 5 (left: 1 4 6)",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = 4 (left: 4 6) || 6 / 4 = 1.5 (left: 1.5)",
                "1 * 1 = 1 (left: 1 4 6) || 4 + 6 = 10 (left: 1 10)",
                "6 - 1 = 5 (left: 1 4 5) || 5 / 1 = 5 (left: 4 5) || 4 * 5 = 20 (left: 20)",
                "1 * 1 = 1 (left: 1 4 6) || 3 * 9 = 27 (left: 9 27)"
            ],
            "Evaluation": [
                20.002,
                1.001,
                0.003,
                0.002,
                0.003,
                60.0,
                0.001,
                60.0,
                0.003,
                1.002
            ],
            "Resampling": [
                "0 <- 6.7",
                "1 <- 6.5",
                "2 <- 4.8",
                "3 <- 3.3",
                "4 <- 2.0",
                "5 <- 4.8",
                "6 <- 4.4",
                "7 <- 6.0",
                "8 <- 6.9",
                "9 <- 4.5"
            ]
        },
        "Step 7": {
            "steps": [
                "1 * 1 = 1 (left: 1 4 6) || 4 + 6 = 10 (left: 1 10) || 10 / 1 = 10 (left: 10)",
                "4 + 1 = 5 (left: 1 4 6) || 6 / 4 = 1.5 (left: 1 1.5)",
                "6 - 1 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 5 * 1 = 5 (left: 5)",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 1) * (4 / 1) * 6 = 24",
                "4 + 1 = 5 (left: 1 5 6) || 5 + 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || None - 36 is the final result.",
                "6 - 1 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 5 / 1 = 5 (left: 5)",
                "1 * 1 = 1 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2)",
                "4 + 1 = 5 (left: 1 5 6) || 5 + 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) ",
                "1 * 1 = 1 (left: 1 4 6) || 3 * 9 = 27 (left: 9 27) || 9 * 27 = 243 (left: 243)",
                "4 + 1 = 5 (left: 1 5 6) || 5 + 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || There are no possible next steps as there is only one number provided."
            ],
            "Evaluation": [
                0.002,
                21.001,
                0.003,
                0.003,
                0.002,
                0.002,
                60.0,
                0.003,
                0.003,
                60.0
            ],
            "Resampling": [
                "0 <- 6.5",
                "1 <- 4.4",
                "2 <- 7.1",
                "3 <- 2.2",
                "4 <- 6.5",
                "5 <- 7.6",
                "6 <- 7.9",
                "7 <- 7.9",
                "8 <- 6.7",
                "9 <- 7.6"
            ]
        },
        "Step 8": {
            "steps": [
                "4 + 1 = 5 (left: 1 4 6) || 4 + 6 = 10 (left: 1 10)",
                "1 * 1 = 1 (left: 1 4 6) || 6 / 4 = 1.5 (left: 1 1.5)",
                "4 + 1 = 5 (left: 1 4 6) || 6 / 4 = 1.5 (left: 1 1.5) || 1 - 1.5 = -0.5 (left: -0.5)",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = 4 (left: 4 6) || 6 - 4 = 2 (left: 2)",
                "4 + 1 = 5 (left: 1 4 6) || 6 / 4 = 1.5 (left: 1 1.5)",
                "4 + 1 = 5 (left: 1 5 6) || 5 + 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36)  || There are no possible operations to perform on the number 36.",
                "4 + 1 = 5 (left: 1 4 6) || 6 - 4 = 2 (left: 1 2)",
                "4 + 1 = 5 (left: 1 4 6) || 1 * 4 = 4 (left: 4 6)",
                "1 * 1 = 1 (left: 1 4 6) || 4 + 6 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "4 + 1 = 5 (left: 1 5 6) || 5 + 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36)  || 36 / 6 = 6 (left: 6)"
            ],
            "Evaluation": [
                60.0,
                0.003,
                0.002,
                0.003,
                1.001,
                0.003,
                1.002,
                41.0,
                0.002,
                60.0
            ],
            "Resampling": [
                "0 <- 4.5",
                "1 <- 8.0",
                "2 <- 2.2",
                "3 <- 8.0",
                "4 <- 2.1",
                "5 <- 6.7",
                "6 <- 3.3",
                "7 <- 3.1",
                "8 <- 4.5",
                "9 <- 0.3"
            ]
        },
        "Step 9": {
            "steps": [
                "4 + 1 = 5 (left: 1 5 6) || 5 + 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "4 + 1 = 5 (left: 1 4 6) || 4 + 6 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = 4 (left: 4 6) || 5 - 3 = 2 (left: 2 7)",
                "4 + 1 = 5 (left: 1 4 6) || 4 + 6 = 10 (left: 1 10) || 10 - 1 = 9 (left: 9)",
                "4 + 1 = 5 (left: 1 5 6) || 5 + 1 = 6 (left: 6 6) || 6 - 6 = 0 (left: 0) || There are no possible next steps as there are no numbers given in the input.",
                "1 * 1 = 1 (left: 1 4 6) || 4 + 6 = 10 (left: 1 10) || 3 + 5 = 8 (left: 8 9)",
                "1 * 1 = 1 (left: 1 4 6) || 4 / 1 = 4 (left: 4 6) || 4 * 6 = 24 (left: 24) || Answer: (1 * 1) * (4 / 6) = 24",
                "6 - 1 = 5 (left: 1 4 5) || 5 - 4 = 1 (left: 1 5) || 1 + 5 = 6",
                "4 + 1 = 5 (left: 1 5 6) || 5 + 1 = 6 (left: 6 6) || 6 * 6 = 36 (left: 36) || 36 / 2 = 18",
                "4 + 1 = 5 (left: 1 5 6) || 5 * 1 = 5 (left: 5 6)"
            ]
        },
        "Input": "1 1 4 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    }
}