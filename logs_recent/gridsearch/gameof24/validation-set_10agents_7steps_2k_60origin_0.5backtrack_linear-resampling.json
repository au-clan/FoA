{
    "875": {
        "puzzle": "5 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 9 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 6 / 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "22"
                }
            },
            "Step 4": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> None.",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "12 75"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input of 22.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input of 22. -> None",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "There are no possible next steps with the input 87."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 3 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> None",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "12 75"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 - 75 = -63 (left: -63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 75"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 - 12 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 - 12 = 63 (left: 63) -> 6 * 3 = 18 (left: 63 18)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 21"
                }
            },
            "Step 1": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input 22. -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 75"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87) -> 87 / 2 = 43",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 3 12) -> 5 * 3 = 15 (left: 15 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> 2 - 2 = 0 (left: 22 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 75"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 - 12 = 63 (left: 63)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 - 12 = 63 (left: 63) -> 6 + 3 = 9",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 5 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 15 - 5 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 75"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 / 12 = 6.25 (left: 6.25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 / 12 = 6.25 (left: 6.25) -> 6.25 + 8 = 14.25 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "22"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 75"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 * 75 = 900 (left: 900)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 * 75 = 900 (left: 900) -> There is only one possible next step for 900:",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 12 = 21 (left: 5 6 21)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 11 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 9 11 12) -> 11 - 9 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 75"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 * 75 = 900 (left: 900)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 * 75 = 900 (left: 900) -> 900 + 2 = 902 (left: 2)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "12 75"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 75"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 * 75 = 900 (left: 900)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 * 75 = 900 (left: 900) -> There are no possible next steps as there are no other numbers provided to perform operations with.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 - 3 = 3 (left: 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 3 6 12) -> 6 - 3 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 75"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87) -> 8 / 7 = 1 (left: 1)  ",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "22"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the number 22.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the number 22. -> There are no possible next steps with the number 22.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 5 6 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 5 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "12 75"
                }
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 75 - 12 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 75"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 * 75 = 900 (left: 900)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 * 75 = 900 (left: 900) -> There are no possible next steps for the number 900 as it is not possible to perform any basic arithmetic operations with the numbers provided.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 9 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 21"
                }
            },
            "Step 1": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 * 5 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 * 5 =  -> 21 * 5 = 105",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 9 12"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 3 5 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 3 5 6) -> 3 + 5 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 12 = 21 (left: 5 6 21) -> 21 - 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the input 22. -> None",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input 22."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 5 6 3) -> 3 - 5 = -2 (left: -2 3) -> -2 + 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "12 75"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 + 75 = 87 (left: 87) -> There are no possible next steps with the input 87.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 75"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 * 75 = 900 (left: 900)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 5 15 12) -> 5 * 15 = 75 (left: 12 75) -> 12 * 75 = 900 (left: 900) -> 900 / 2 = 450 (left: 450)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with the input 22."
                }
            }
        },
        "Input": "5 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "876": {
        "puzzle": "6 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 11 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 90 - 6 = 84 (left: 6 11 84)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 13 19"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 - 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 - 6 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 * 9 = 54 (left: 54 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 - 10 = 1 (",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 - 10 = 1 ( -> 11 - 10 = 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 11 84"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 90 - 6 = 84 (left: 6 11 84) -> 84 - 6 = 78 (left: 78 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 90 - 6 = 84 (left: 6 11 84) -> 84 - 6 = 78 (left: 78 11) -> 78 / 11 = 7 (left: 7)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 9 11 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 9 11 16) -> 16 - 9 = 7 (left: 7 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 3": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 11 44)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 11 44) -> 44 - 11 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 11 84"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 90 - 6 = 84 (left: 6 11 84) -> 6 * 11 = 66 (left: 66 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 90 - 6 = 84 (left: 6 11 84) -> 6 * 11 = 66 (left: 66 84) -> 66 * 84 = 5544 (left: 5544)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> Input: 3 6 9 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 19"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 * 11 = 66 (left: 66 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 6 * 11 = 66 (left: 66 19) -> 66 / 19 \u2248 3.47 (left: 3.47)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 1.3636"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 / 11 = 1.3636 (left: 10 1.3636) -> 10 - 1.3636 = 8.6364 (left: 1.3636 8.6364)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 / 11 = 1.3636 (left: 10 1.3636) -> 10 - 1.3636 = 8.6364 (left: 1.3636 8.6364) -> 8.6364 - 1.3636 = 7.2728 (left: 7.2728)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 10 + 11 = 21 (left: 21 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 11 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 6 + 11 = 17 (left: 17 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 13 19"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 - 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 - 6 = 7 (left: 7) -> 7 / 7 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 11 = 21 (left: 6 9 21) -> 6 + 9 = 15 (left: 15 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 / 11 = 1.3636 (left: 10 1.3636)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 13 19"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 - 6 = 7 (left: 7 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 - 6 = 7 (left: 7 19) -> 7 * 19 = 133 (left: 133)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 - 10 = 44 (left: 11 44)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 11 84"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 90 - 6 = 84 (left: 6 11 84) -> 84 - 11 = 73 (left: 6 73)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 90 - 6 = 84 (left: 6 11 84) -> 84 - 11 = 73 (left: 6 73) -> 6 - 73 = -67 (left: -67)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 11 54"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 11 * 10 = 110 (left: 110 54) -> 54 * 110 = 5940 (left: 5940)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 10 11) -> 10 / 3 = 3.33 (left: 3.33 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "6 13 19"
                }
            },
            "Step 5": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 + 6 = 19 (left: 6 19 19)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 19 - 6 = 13 (left: 6 13 19) -> 13 + 6 = 19 (left: 6 19 19) -> 19 * 6 = 114 (left: 19 114)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 6 9 21)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 10 11 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 10 11 54) -> 54 / 10 = 5.4 (left: 5.4 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 11 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 11 19) -> 11 + 6 = 17 (left: 17 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 1.3636"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 / 11 = 1.3636 (left: 10 1.3636) -> 10 + 1.3636 = 11.3636",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 / 11 = 1.3636 (left: 10 1.3636) -> 10 + 1.3636 = 11.3636 -> 1.3636 * 10 = 13.636 (left: 13.636 + 10 = 23.636)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 11 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 / 11 =",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 11 = -> 10 / 11 = 0.9090909090909091",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 11"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 11 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 11 90) -> 90 - 11 = 79 (left: 6 79)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "10 1.3636"
                }
            },
            "Step 5": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 / 11 = 1.3636 (left: 10 1.3636) -> 10 / 1.3636 = 7.32 (left: 7.32)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 9 = 15 (left: 10 11 15) -> 15 / 11 = 1.3636 (left: 10 1.3636) -> 10 / 1.3636 = 7.32 (left: 7.32) -> 7 - 3 = 4.32 (left: 4.32)",
                "Pruning": "NA"
            }
        },
        "Input": "6 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "877": {
        "puzzle": "2 4 5 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 2 4 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps as there are not enough numbers provided for any mathematical operations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> There are no possible next steps as there are not enough numbers provided for any mathematical operations. -> There are no possible next steps as there are not enough numbers provided for any mathematical operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 5 + 6 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 / 5 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 / 5 =  -> 11 / 5 = 2.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 6 + 8 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 2 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 2 9 11) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 3 11) -> Input: 4 5 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> There is only one number left, so no further calculations can be made.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> There is only one number left, so no further calculations can be made. -> No further calculations can be made.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 8 = 3 (left: 5 3) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2) -> 1.2 * 2 = 2.4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 8 / 6 = 1.33333 (left: 1.33333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 8 / 6 = 1.33333 (left: 1.33333) -> 1.33333 - 2 = -0.66667",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> Input: 3 7 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 8"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2) -> 2 * 2 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2 8) -> Input: 2",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) ->  -> No input provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 3": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 5 + 8 = 13 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 8 / 6 = 1.3333 (left: 1.3333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 8 / 6 = 1.3333 (left: 1.3333) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 / 2 = 5.5 (left: 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 2 * 4 = 8 (left: 8 16) -> 8 / 16 = 0.5 (left: 0.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> Possible",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> Possible -> It seems like the input is missing. Please provide the input numbers for me to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 6 * 8 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 6 * 8 = 48 (left: 48) -> There are no possible next steps for the number 48 as it is a single number and cannot be combined with any other numbers in the input.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 8 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 8 - 5 = 3 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11) -> 11 / 1.2 = 9.16667 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 8 - 6 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 11"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 5 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 4 16"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 11 = 16 (left: 2 4 16) -> 4 * 2 = 8 (left: 8 16) -> 8 * 16 = 128 (left: 128)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 8"
                }
            },
            "Step 5": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 4 = 8 (left: 5 8 11) -> 11 - 5 = 6 (left: 6 8) -> 8 / 6 = 1.33 (left: 1.33) -> 1.33 * 2 = 2.66",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 2 5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 5 7"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 2 5 7) -> 5 * 2 = 10 (left: 10 7) -> 10 - 7 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> There are no possible next steps from the input 16 as it is the final result.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 11) -> 5 + 11 = 16 (left: 16) -> There are no possible next steps from the input 16 as it is the final result. -> There are no possible next steps from the input 16 as it is the final result.",
                "Pruning": null
            }
        },
        "Input": "2 4 5 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "878": {
        "puzzle": "1 2 5 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 1 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 1 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Input: 3 5 7",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Input: 3 5 7 -> 5 + 7 = 12 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 110"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 - 10 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 110"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 + 100 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "10 100"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 10 90)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 2 15"
                }
            },
            "Step 1": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 - 2 = 13 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 10 = 15 (left: 1 2 15) -> 15 - 2 = 13 (left: 1 13) -> 1 / 13 = 0.07692307692307693 (left: 0.076923",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 * 5 = 5 (left:"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 1 * 5 = 5 (left: -> Possible next steps: -> There are no possible next steps for the input given.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 * 8 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10 100"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 90)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10 100"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 + 100 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "10 100"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 10 90)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> Possible next steps: -> None, the current list is already sorted.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 + 100 = 110 (left: 110)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 110"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 - 10 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 110"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 10 = 15 (left: 1 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11) -> There are no possible next steps with the input \"11\" as there are no other numbers provided to perform arithmetic operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 100 = 1000 (left: 1000)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 110"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 / 10 = 11 (left: 11 110)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 / 10 = 11 (left: 11 110) -> 11 + 110 = 121 (left: 121)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 110"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 2 = 2 (left: 2 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 1 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 1 10 10) -> 10 - 1 = 9 (left: 9 10 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 100 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 * 10 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 110"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 + 10 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "10 100"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 100 = 1000 (left: 1000)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 110"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> Possible next steps: -> There are no more possible next steps with the given numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "10 100"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 / 10 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "1 10"
                }
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 + 10 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 10 90)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 100 - 10 = 90 (left: 10 90) -> 90 / 10 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 110"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 1 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 + 3 = 12 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 5 10"
                }
            },
            "Step 3": {
                "Step": "10 / 2 = 5 (left: 1 5 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 2 = 5 (left: 1 5 10) -> 10 / 1 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "10 100"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 3 * 9 = 27",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 3 * 9 = 27 -> 9 / 3 = 3 (left: 3 = 27)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 5 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 1 / 10 = 0.1 (left: 0.1) -> 0.1 / 0.1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 10"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 - 1 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "10 110"
                }
            },
            "Step 5": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 - 10 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 110"
                }
            },
            "Step 6": {
                "Step": "5 * 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100) -> 10 * 10 = 100 (left: 10 100) -> 100 + 10 = 110 (left: 10 110) -> 110 - 10 = 100 (left: 100)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "10 110"
                }
            }
        },
        "Input": "1 2 5 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "879": {
        "puzzle": "2 2 2 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 / 2 = 2 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 + 2.5 = 6.5 (left: 2.5 6.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 + 2.5 = 6.5 (left: 2.5 6.5) -> 6.5 - 2.5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 + 2.5 = 6.5 (left: 6.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 + 2.5 = 6.5 (left: 6.5) -> 6.5 + 8 = 14.5 (left: 14.5)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "8 80"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5) -> There are no possible next steps with the input \"1.5\" as it is not a valid number or operation in this context.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 4 * 2 = 8 (left: 8 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5 2.5) -> 1.5 + 2.5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "8 80"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 8 + 3 = 11 (left: 3 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 8 + 3 = 11 (left: 3 11) -> 9 - 5 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "4 2.5"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "8 80"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input 3. -> No possible next steps with the input 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5) -> There are no possible next steps with the input 1.5.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 3 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2  -> 4 / 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> Input: 10 5 3",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> Input: 10 5 3 -> 5 * 3 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "8 80"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 3 + 2 = 5 (left: 2 5) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 10) -> 10 * 8 = 80 (left: 8 80)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 2.5 10) -> 2.5 * 10 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "8 80"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 5 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 5 4) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 / 2 = 1 (left: 1 3) -> 1 * 3 = 3 (left: 3) -> 3 + 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 / 2.5 = 1.6 (left: 1.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 / 2.5 = 1.6 (left: 1.6) -> There are no possible next steps for the input 1.6.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 2 5"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 + 2 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 5) -> 5 + 2 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 / 2.5 = 1.6 (left: 1.6 2.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 / 2.5 = 1.6 (left: 1.6 2.5) -> 1.6 + 2.5 = 4.1 (left: 4.1)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 - 2.5 = 1.5 (left: 1.5) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "8 80"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 2 2 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 2 3"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 2 2 3) -> 2 * 2 = 4 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 + 2.5 = 6.5 (left: 6.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 + 2.5 = 6.5 (left: 6.5) -> 8 - 6.5 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "4 2.5"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 2.5"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 2 5) -> 5 / 2 = 2.5 (left: 4 2.5) -> 4 * 2.5 = 10 (left: 10) -> 10 * 10 = 100",
                "Pruning": null
            }
        },
        "Input": "2 2 2 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "880": {
        "puzzle": "6 12 13 13",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 12 * 13 = 156 (left: 19 156)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "13 - 12 = 1 (left: 6 1 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 12 = 1 (left: 6 1  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 12 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 3 + 6 = 9 (left:  -> It seems like there is no additional input provided. If you provide the numbers, I can generate possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 13 13"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> Possible next steps: -> - 8 * 8 = 64 (left: 2 64)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "12 + 6 = 18 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 6 = 18 (left -> 18 / 6 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 / 6 = 2.16666666667 (left: 2.16666666667 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 13 + 6 = 19 (left: 6 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 + 12 = 18 (left: 13 18 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 - 18 = -5 (left: -5 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "19 156"
                }
            },
            "Step 3": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 12 * 13 = 156 (left: 19 156) -> 19 + 156 = 175 (left: 175)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 + 6 = 19 (left: 12 13 19) -> 12 * 13 = 156 (left: 19 156) -> 19 + 156 = 175 (left: 175) -> 1 + 7 + 5 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "19 156"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 6 7  -> 6 / 7 = 0.8571428571428571 (left: 0.8571428571428571)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "6 + 12 = 18 (left: 13 13 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 12 = 18 (left: 13 13 18) -> 18 / 13 = 1.38 (left: 1.38 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 7 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 72 - 13 = 59 (left: 13 59)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 13 13) -> 6 * 13 = 78 (left: 13 78)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 13 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "6 * 12 = 72 (left: 13 13 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 12 = 72 (left: 13 13 72) -> 72 / 13 = 5 (left: 13 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "12 + 6 = 18 (left: 13 13 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 6 = 18 (left: 13 13 18) -> 18 + 13 = 31 (left: 13 31)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 + 6 = 19 (left: 12 13 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "13 18 13"
                }
            },
            "Step 1": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 + 18 = 31 (left: 31 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 12 = 18 (left: 13 18 13) -> 13 + 18 = 31 (left: 31 13) -> 31 * 13 = 403 (left: 403)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 6 13 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 6 13 25) -> 13 * 6 = 78 (left: 78 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 1 + 7 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 13 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 7 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 12 13 13"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 6 12 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 6 12 7) -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Input": "6 12 13 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "881": {
        "puzzle": "3 3 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 1"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 * 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 * 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "6 1"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> 22 + 2 = 24 -> None",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 "
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 9 6  -> 6 + 9 = 15 (left: 15) -> 15 * 2 = 30",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 / 1 = 6 (left: 6) -> 6 * 2 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 + 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 + 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 10 / 2 = 5 (left: 3 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 10 / 2 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 + 1 = 7 (left: 7) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 + 1 = 7 (left: 7)  -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 / 6 = 1.67 (left: 1.67 6) -> 1.67 * 6 = 10.02 (left: 10.02)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 / 6 = 1 (left: 1 10) -> 10 - 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 * 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 * 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 - 6 =  -> 6 - 6 = 0",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "6 1"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 / 1 = 6 (left: 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "6 1"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 * 6 = 60 (left: 6 60) -> 6 + 60 = 66 (left: 66)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 3 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 3 9 10) -> 9 / 3 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 + 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 + 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 3 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 3 4 10) -> 3 * 4 = 12 (left: 12 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 9 - 6 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 + 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 + 1 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 * 16 = 96 (left: 96)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the number 22.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 10 + 6 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22) -> There are no possible next steps with the number 22. -> There are no possible next steps with the number 22.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 6 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 10"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 * 2 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 3 10) -> 3 * 2 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 10"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 10) -> 6 + 6 = 12 (left: 10 12) -> 10 + 12 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 10) -> 10 - 9 = 1 (left: 6 1) -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "882": {
        "puzzle": "3 4 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8 8) -> Input: 2 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 7"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56) -> There are no possible next steps as there are no other numbers given to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 + 3 = 11 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 7"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 - 7 = 1 (left: 1) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 7"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 + 7 = 15 (left: 15) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 + 7 = 15 (left: 15)  -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1.1428571428571428 / 1 = 1.1428571428571428"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = 4 (left: 4 8) -> 4 + 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 8 11"
                }
            },
            "Step 3": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 3 = 11 (left: 4 8 11) -> 8 / 4 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 * 0 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0 12"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1.1428571428571428 / 1 = 1.1428571428571428"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "4 * 3 = 12 (left: 8 12 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 11 + 8 = 19 (left: 12 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 3 7 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 7"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 8 11) -> 8 / 7 = 1.14 (left: 1.14 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 7"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 - 7 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 - 7 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "8 7"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0 12"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 + 3 = 7 (left: 7 8 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 8 - 4 =  -> 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 3": {
                "Step": "4 * 3 = 12 (left: 8 12 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 3 = 12 (left: 8 12 11) -> 12 - 8 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 / 12 = 0 (left: 0 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 / 12 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with only one number."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 8 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 3": {
                "Step": "3 + 8 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 8 = 11 (left: 4 8 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 7"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56) -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 8 = 3 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 8 = 3 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 * 8 = 32 (left: 8 32) -> 32 / 8 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0 12"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 / 4 = 2.75 (left",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 + 12 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 7"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56) -> None, as there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "8 7"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 * 7 = 56 (left: 56) -> There are no possible next steps as there are no other numbers given to perform operations on.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 3 4 11) -> 3 * 4 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "8 7"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 8 4 11) -> 11 - 4 = 7 (left: 8 7) -> 8 / 7 = 1.1428571428571428 (left: 1.1428571428571428) -> 1.1428571428571428 / 1 = 1.1428571428571428",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 * 12 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0 12"
                }
            },
            "Step 6": {
                "Step": "11 - 3 = 8 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 8 12) -> 8 - 8 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "1.1428571428571428 / 1 = 1.1428571428571428"
                }
            }
        },
        "Input": "3 4 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "883": {
        "puzzle": "4 4 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 13) -> 8 / 6 = 1.33 (left: 1.33 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 5 5\nSteps:\n3 + 5 = 8 (left: 3 8 5)\n3 * 5 = 15 (left: 15 8)\n15 - 8 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 5 = 26 (left: 26)\n26 - 3 = 23 (left: 23)\n23 - ",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 2 3 5 7\nSteps:\n2 * 5 = 10 (left: 3 7 10)\n10 - 7 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 + 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 5) - 7) * 3 +",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 4 8\nSteps:\n3 * 4 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (3 * 4) * (8 - 4) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 2 3 5 7\nSteps:\n2 * 7 = 14 (left: 3 5 14)\n5 - 3 = 2 (left: 2 14)\n2 * 14 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((2 * 7) - 3) * 4 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 =  -> 13 - 10 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 / 9 = 1.11111111 (left: 1.11111111)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 5": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 is the only number given, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8 9)\n2 * 8 = 16 (left: 16 9)\n16 - 9 = 7 (left: 7)\n7 + 7 = 14 (left: 14)\n14 + 8 = 22 (left: 22",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: (3 * 8) + (3 * 6) = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> There are multiple ways to obtain 24 using the numbers 4, 4, 6, and 13. Here is one possible solution:\n13 - 4 = 9 (left: 4 6 9)\n9 * 4 = 36 (left: 6 36)\n36 / 6 = 6 (left: 6 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((13 - 4) * ",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 8 18)\n18 + 8 = 26 (left: 26)\nAnswer: ((3 + 3) * 3) + 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 10 / 9 = 1.1111111111111 (left: 1.1111111111111)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 - ",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "6 13 16"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 13 16) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\nAnswer: ((3 * 3) + 8) * 9 = 81",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 5 7 8\nSteps:\n7 + 8 = 15 (left: 3 5 15)\n5 - 3 = 2 (left: 2 15)\n2 * 15 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((7 + 8) - (5 - 3)) * 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 4 13) -> 13 - 4 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> All the inputs have been successfully calculated to obtain 24 using the given numbers and arithmetic operations.",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 + 3 = 19 (left: 19)\n19 + 19 = 24\nAnswer: ((3 * 7) - 5) + 3 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 3 = 18 (left: 8 18)\n18 / 8 = 2.25 (left: 2.25)\n2.25 * 24 = 24 (left: 24)\nAnswer: ((3 * 7) - 3) / 8 * 24 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 + 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((3 * 7) - 8) + 3 + 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 + 5 = 26 (left: 3 26)\n26 - 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 7) + 5 - 3) + 1 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 5 7 8\nSteps:\n7 - 3 = 4 (left: 4 5 8)\n4 + 5 = 9 (left: 9 8)\n9 * 8 = 72 (left: 72)\nAnswer: (7 - 3) + (4 + 5) * 8 = 24",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 4 8\nSteps:\n3 * 4 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\nAnswer: (3 * 4) + (8 - 3) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n3 * 6 = 18 (left: 8 18)\n8 + 18 = 26 (left: 26)\nAnswer: (3 + 3) * (3 * 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> 10 * 10 = 100 (left: 10 100)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 - 8 = -6.5 (left: -6.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + ",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 4 5 7\nSteps:\n4 * 5 = 20 (left: 3 7 20)\n20 + 7 = 27 (left: 3 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((4 * 5) + 7) - 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 + 4 = 17 (left: 10 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> The answer is 4 * (13 - 4) = 24.",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> These are some of the ways to obtain the number 24 using the given input numbers and basic arithmetic operations.",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> There are multiple ways to reach 24 using the numbers 4, 4, 6, and 13. One of the ways is:\n(13 - 4) * 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 * 9 = 27",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 3 * 9 = 27 -> 9 - 3 = 6 (left: 6 = 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 5 7\nSteps:\n5 + 7 = 12 (left: 3 3 12)\n3 * 3 = 9 (left: 9 12)\n12 * 9 = 108 (left: 108)\nAnswer: (3 * 3) * (5 + 7) = 108",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> \nGreat job! You were able to find multiple ways to obtain 24 using the given numbers and basic arithmetic operations. Keep up the good work!",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 13 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 13"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 13) -> 13 - 10 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 8 = 19 (left: 19)\n19 + ",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "13 - 4 = 9 (left: 4 6  -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (13 - 4) = 24 -> Input: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n4 * 3 = 12 (left: 8 12)\n12 + 8 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 + 5) * 4) + 8 = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 4 6 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "884": {
        "puzzle": "4 6 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 10 14)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 7 = 3 (left: 2 3) -> 3 / 2 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * 7 + 10 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 6 / 7 = 0.857 (left: 0.857 10) -> 0.857 * 10 = 8.57 (left: 8.57)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 * 10 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 7 10)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 3 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 7 / 6 = 1.1667 (left: 1.1667 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 7)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 7 10) -> 7 + 10 = 17 (left: 6 17)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: ((6 - 4) * 7) + 10 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 7 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 7 10"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 "
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 7 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (7 + 10) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 10 / 8 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 - 4 = 2 (left: 2 7 10) -> 2 * 7 = 14 (left: 14 10) -> 14 + 10 = 24 (left: 24) -> Answer: (6 - 4) * (2 + 7) = 24"
            }
        },
        "Input": "4 6 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "885": {
        "puzzle": "6 11 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "6 + 11 = 17 (left: 11 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12) -> 11 + 12 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 -> There are no more possible next steps as we have reached the final result of 12.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 1"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1) -> 11 / 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "9.17 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12) -> 11 - 1.83 = 9.17 (left: 9.17 12) -> 9.17 * 12 = 110.04 (left: 110.04)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 -> 12 / 0 = undefined",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83 (left: 1.83 11 12) -> 11 - 1.83 = 9.17 (left: 9.17 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 1"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1) -> 11 * 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "1 11 12"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 / 1 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 / 0 = undefined -> Division by zero is undefined.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 + 6 = 17 (left: 11 12 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 9.1667 - 12 = -2.8333 (left: -2.8333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 1"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1) -> 11 + 1 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "1 12.83333"
                }
            },
            "Step 4": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 / 12 = 1 (left: 1 12.83333) -> 1 + 12.83333 = 13.83333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 + 0 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 + 0 = 12 (left: 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "Division by zero is undefined."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 / 6 = 1 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 / 1.83333 = 6.54545 (left: 6.54545 12) -> 6.54545 * 12 = 78.5454 (left: 78.5454)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 1"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1) -> 11 + 1 = 12 (left: 1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0 12"
                }
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 * 12 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 * 12 = 0 (left: 0) -> No possible next steps as the input is 0.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> Input: 5 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12) -> 12 / 2.2 = 5.4545 (left: 5.4545)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "Division by zero is undefined."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 1.83333 + 11 = 12.83333 (left: 12 12.83333) -> 12 / 12 = 1 (left: 1 12.83333)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 / 0 = undefined",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 / 0 = undefined -> Division by zero is undefined.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 + 0 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 + 0 = 12 (left: 12) -> 12 * 2 = 24",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 1.83333",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 1.83333 -> 12 - 1.83333 = 10.16667",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 1"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1) -> 11 * 1 = 11 (left: 1 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 / 1 -> 11 * 1 = 11 (left: 11 1) -> 11 * 1 = 11 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0 12"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 - 0 = 12 (left: 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "Division by zero is undefined."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1.83333 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 11 = 1 (left: 1.83333 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1.83333 (left: 1.83333 11 12) -> 12 - 11 = 1 (left: 1.83333 1) -> 1.83333 + 1 = 2.83333 (left: 2.83333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 11 - 1.8333 = 9.1667 (left: 9.1667 12) -> 9.1667 + 12 = 21.1667 (left: 21.1667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 / 0 is undefined",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 12 / 0 is undefined -> The operation 12 / 0 is undefined because division by zero is not allowed in mathematics.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "11 / 6 = 1.83 (rounded to 2) (left: 2 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 11 12"
                }
            },
            "Step 1": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 / 6 = 1 (left: 1 11 12) -> 11 * 1 = 11 (left: 11 12) -> 11 * 12 = 132 (left: 132)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.8333 11 12"
                }
            },
            "Step 3": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 12 * 1.8333 = 22 (left: 11 12 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 / 6 = 1.8333 (left: 1.8333 11 12) -> 12 * 1.8333 = 22 (left: 11 12 22) -> 12 + 22 = 34 (left: 11 34)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 5": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 11 = 17 (left: 11 11 12) -> 11 - 11 = 0 (left: 0 12) -> 0 + 12 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null
            }
        },
        "Input": "6 11 11 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "886": {
        "puzzle": "3 6 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 3 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 3 6  -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 6  -> 6 / 6 = 1 (left: 1) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 + 2 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 + 2 = 13 (left: 9 13) -> 9 + 13 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) -> 12 + 8 = 20 (left: 8 20)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 11 - 2 = 9 (left: 9 11) -> 9 + 11 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 9 - 3 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 3 + 6 = 9 (left: 9) -> There are no possible next steps with just the number 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 5 - 3 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 5 - 3 = 2 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 6 ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 1": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 11 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 3": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 - 2 = 8 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 1": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 9 - 2 = 7 (left: 7 11) -> 11 / 7 = 1.57 (left: 1.57)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 / 3 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 1 + 11 = 12 (left: 12)  -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 6 = 9 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 "
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 3 6  -> Input: 5 10 -> 10 - 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 11"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9  -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 - 1 = 10 (left: 10) -> 10 + 2 = 12",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 6 9 11) -> 11 - 6 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 9 11"
                }
            },
            "Step 3": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 3 = 2 (left: 2 9 11) -> 2 + 9 = 11 (left: 11) -> 11 + 2 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "1 11"
                }
            },
            "Step 5": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 6 = 9 (left: 9 9 11) -> 9 / 9 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11) -> No possible next steps.",
                "Pruning": null
            }
        },
        "Input": "3 6 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "887": {
        "puzzle": "5 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 7 = 16 (left: 5 16 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 - 16 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 - 16 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 * 16 = 176 (left: 176)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 * 16 = 176 (left: 176) -> 1 * 7 * 6 = 42 (left: 42)  ",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "27 + 2 = 29"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 5 = 2 (left: 2 9 13) -> 13 - 9 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 + 16 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 + 16 = 27 (left: 27) -> 27 + 2 = 29",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 + 16 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 + 16 = 27 (left: 27) -> 27 - 2 = 25 (left: 2 8 25)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 5 2 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 / 9 = 0.8888888888888888 (left:  -> It seems like you did not provide an input for the calculation. Could you please provide the numbers you would like to use for the next step?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 + 16 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 + 16 = 27 (left: 27) -> 27 - 27 = 0 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 / 16 = 0.6875 (left: 0.6875)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 / 16 = 0.6875 (left: 0.6875) -> There are no possible next steps with the input 0.6875.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 9 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 9 8) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 * 16 = 176 (left: 176)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 * 16 = 176 (left: 176) -> 176 * 2 = 352",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 * 16 = 176 (left: 176)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 * 16 = 176 (left: 176) -> 176 - 7 = 169 (left: 169)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input of -5."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 16 / 11 = 1.4545454545454546 (left: 1.4545454545454546)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 16 / 11 = 1.4545454545454546 (left: 1.4545454545454546) -> 1.4545454545454546 / 2 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "11 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 * 16 = 176 (left: 176)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 * 16 = 176 (left: 176) -> 17 * 6 = 102 (left: 102)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "176 * 2 = 352"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 5 16 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 - 16 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 - 16 = -5 (left: -5) -> There are no possible next steps with just -5 as input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 + 16 = 27 (left: 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 + 16 = 27 (left: 27) -> 27 + 8 = 35 (left: 8)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "0.6875 - 2 = -1.3125"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 / 16 = 0.6875 (left: 0.6875)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 / 16 = 0.6875 (left: 0.6875) -> 0.6875 - 2 = -1.3125",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 * 16 = 176 (left: 176)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 * 16 = 176 (left: 176) -> 176 is a prime number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 9 12 13) -> 12 + 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 35"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 35 - 4 = 31 (left: 31)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 5 7) -> 5 * 7 = 35 (left: 4 35) -> 35 - 4 = 31 (left: 31) -> 31 is a prime number, so there are no possible next steps in terms of basic arithmetic operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 16 - 11 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 16 - 11 = 5 (left: 5) -> There are no possible next steps with the input 5.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 9 = 16 (left: 5 13 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 - 16 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 - 16 = -5 (left: -5) -> -5 - 2 = -7 (left: 2)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "11 16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 5 + 5 = 10 (left: 10 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 5 + 5 = 10 (left: 10 7) -> 10 / 7 = 1.43 (left: 1.43)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "27 - 27 = 0 ("
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.4285714285714284 (left: 2.4285714285714284)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 7 9 13"
                }
            },
            "Step 3": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 / 5 = 1.4 (left: 1.4 9 13) -> 9 - 1.4 = 7.6 (left: 7.6 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "11 16"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 / 16 = 0.6875 (left: 0.6875)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 5 13 16) -> 16 - 5 = 11 (left: 11 16) -> 11 / 16 = 0.6875 (left: 0.6875) -> 0.6875 + 2 = 2.6875 (left: 2.6875)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "176 * 2 = 352"
                }
            }
        },
        "Input": "5 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "888": {
        "puzzle": "2 4 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 12 = 72 (left: 4 72) -> 72 - 4 = 68 (left: 68 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 - 18 = 18 (left: 18 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 - 8 = 28 (left: 8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> None - 36 is a single number and cannot be split into two parts.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "4 * 12 = 48 (left: 2 48 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 12 = 48 (left: 2 48 12) -> 48 / 2 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 4 10  -> 4 * 10 = 40 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "18 + 18 = 36"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 / 6 =  -> 6 - 4 = 2 (left: )",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 * 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There is only one number given, so there are no possible next steps to perform any operations. The result remains 36.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There is only one number given, so there are no possible next steps to perform any operations. The result remains 36. -> N/A",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "18 + 18 = 36"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 2 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 18 = 2 (left: 2 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 2 * 18 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "18 + 18 = 36"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 * 6 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 (left: 2)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "4 6 12"
                }
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> 36 / 4 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "18 + 18 = 36"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 12 12"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 6 12 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 + 2 = 38 -> 2 - 36 = -34 (left: -34)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "2 18"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 4 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 4 + 6 = 10 (left: 10 12) -> 10 / 12 = 0.8333333333333334 (left: 0.8333333333333334)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 * 2 = 72 (left: 72)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "18 18"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 - 4 = 8 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 4 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 / 4 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> 36 / 3 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps for the number 36 as it is already a single number and cannot be further combined or separated using the operations provided.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 4 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 2 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 2 8 12) -> 2 + 8 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps for the input 36 as there are no other numbers provided to perform operations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps for the input 36 as there are no other numbers provided to perform operations with. -> There are no possible next steps for the input 36 as there are no other numbers provided to perform operations with.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps for the number 36.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps for the number 36. -> 36 / 9 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "18 18"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 2 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 / 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 12 - 4 = 8 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input 36.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 4 6 12) -> 6 * 4 = 24 (left: 24 12) -> 24 + 12 = 36 (left: 36) -> There are no possible next steps with the input 36. -> None",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "18 + 18 = 36"
                }
            }
        },
        "Input": "2 4 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "889": {
        "puzzle": "4 9 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 23 - 13 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> There is only one possible next step with the input 36: 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> There is only one possible next step with the input 36: 36 / 2 = 18 -> 36 / 6 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 13) -> 2 + 13 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> There are no possible next steps as there are no other numbers provided for calculations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> There are no possible next steps as there are no other numbers provided for calculations. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 3 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 11 - 2.25 = 8.75 (left: 8.75 12) -> 8.75 * 12 = 105 (left: 105)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 5 11 12) -> 5 + 11 = 16 (left: 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 / 2 = 18 -> 18 - 8 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 * 132 = 1716 (left: 1716)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 + 36 = 48 (left: 11 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 / 2 = 18 -> 5 + 3 =",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "9 * 11 = 99 (left: 4 12 99)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 11 = 99 (left: 4 12 99) -> 99 - 4 = 95 (left: 12 95)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> There is only one number, so there are no possible next steps. -> There are no possible next steps as there is only one number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 13 = -1 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 13 = -1 (left: 11) -> No possible next steps with the input \"11\" as there are no other numbers to operate on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 12 - 11 = 1 (left: 1 13) -> 13 / 1 = 13 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> There is only one possible next step with the input 36:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> There is only one possible next step with the input 36: -> 36 / 2 = 18 (left: 18)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> Input: 3 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2.25 11 12"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 + 2.25 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 12 + 2.25 =  -> 12 + 2.25 = 14.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> 36 / 2 = 18 -> Input: 10 + 5 =",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 12 15"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 9 12 15) -> 15 - 9 = 6 (left: 6 12) -> 6 * 12 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 3": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 4 = 2.25 (left: 2.25 11 12) -> 2.25 + 11 = 13.25 (left: 13.25 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> No possible next steps as there is only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> No possible next steps as there is only one number provided. -> Not applicable.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 9 12 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 8 = 21 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 13 - 12 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> None - 36 is the final result.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> None - 36 is the final result. -> No further steps needed. The final result is 36.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 11 12"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 11 12 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 11 12 36) -> 12 / 11 = 1.09 (left: 1.09 36)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> None - 36 is a single number and cannot be combined with any of the other numbers provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23) -> 13 + 23 = 36 (left: 36) -> None - 36 is a single number and cannot be combined with any of the other numbers provided. -> 36 is a single number and cannot be combined with any of the other numbers provided.",
                "Pruning": null
            }
        },
        "Input": "4 9 11 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "890": {
        "puzzle": "7 8 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 8 = 0.875 (left: 0.875 9 13) -> 13 - 9 = 4 (left: 0.875 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 13 15"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 13 - 9 = 4 (left: 4 15) -> 15 + 4 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 * 56 = 224 (left: 224) -> 22 ^ 4 = 234256 (left",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "1 8 22"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 7 8 22) -> 8 - 7 = 1 (left: 1 8 22) -> 22 / 1 = 22 (left: 8 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 7 8 22) -> 8 - 7 = 1 (left: 1 8 22) -> 22 / 1 = 22 (left: 8 22) -> 22 - 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "4 56"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52) -> 5 - 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "5 + 2 = 7"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 7 13 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 * 9 = 117 (left: 117 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52) -> 52 * 2 = 104 (left: 104",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "4 56"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 8  -> 4 / 8 = 0.5 (left: 0.5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52) -> 5 + 2 = 7 (left: 7) ",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "4 56"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 7 1 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 56 / 13 = 4.3077 (left: 4.3077 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 8 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 4 / 7 = 0.57 (left: 0.57)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 4 / 7 = 0.57 (left: 0.57) -> 0.57 - 2 = -1.43 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "9 13 56"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60) -> 60 / 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "7.2",
                    "Pruned state": "4 56"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14) -> No possible next steps, the input value is already a single number.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 9 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 9 13 15) -> 9 + 13 = 22 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52) -> 5 + 2 = 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 / 4 = 14 (left: 14) -> There are no possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 8 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 3": {
                "Step": "",
                "Pruning": null
            },
            "Step 4": {
                "Step": " -> - 8 - 8 = 0 (left: 2 0)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52) -> 5 * 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "5 + 2 = 7"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 + 8 = 17 (left: 13 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "4 56"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52) -> 5 + 2 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "1 8 22"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 56 - 4 = 52 (left: 52) -> 52 + 2 = 54 (left: 54) ",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 9 13 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 13 = 22 (left: 7 8 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 13 = 22 (left: 7 8 22) -> 8 - 7 = 1 (left: 1 8 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 7 8 4) -> 8 - 4 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "4 56"
                }
            },
            "Step 5": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 8 = 56 (left: 9 13 56) -> 13 - 9 = 4 (left: 4 56) -> 4 + 56 = 60 (left: 60) -> 60 * 2 = 120 (left: 120)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "5 + 2 = 7"
                }
            }
        },
        "Input": "7 8 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "891": {
        "puzzle": "2 6 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 2 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 * 12 = 144 (left: 144)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 * 12 = 144 (left: 144) -> There are no possible next steps for the input 144 as it is a single number and cannot be combined with any other numbers.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 10 - 12 = -2 (left: -2 10 12)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 - 14 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 1 24)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "10 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 - 10 = 2 (left: 2 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 10 12 12) -> 12 - 10 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 12 12 12)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 6 + 12 = 18 (left: 2 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((12 / 2) * 6) - 12 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: (12 / 2) * (6 * 6) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14) -> 12 / 14 = 0.85714285714 (left: 0.85714285714)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((12 / 2) * 6) - 12 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 12 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 12 "
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 / 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 12  -> 12 / 12 = 1 (left: 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24) -> Answer: ((12 / 2) * 6) - 12 = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 10 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 * 6 = 36 (left: 36 12) -> 36 - 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 2 12)"
            }
        },
        "Input": "2 6 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ]
    },
    "892": {
        "puzzle": "3 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 * 2 = 2.66666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 8 / 2 = 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 8 / 2 = 4 -> 8 - 2 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 3 6 9) -> 6 * 3 = 18 (left: 18 9) -> 18 + 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5 -> 0.75 / 2 = 0.375",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 20"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 3 6 20) -> 6 + 3 = 9 (left: 9 20) -> 20 - 9 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 5 + 6 = 11 (left: 11 12) -> 12 - 11 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> There is no possible next step with 0.75 alone.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> There is no possible next step with 0.75 alone. -> None.",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 5 6 12) -> 12 / 6 = 2 (left: 5 2) -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> There is no possible next step with 0.75 as an input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> There is no possible next step with 0.75 as an input. -> 0.75 + 0.75 = 1.5 (left: 1.5)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (left: 4 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 8 * 0.75 = 6 (left: 2 6 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 8 * 0.75 = 6 (left: 2 6 14) -> 14 / 2 = 7 (left: 7 14)",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 1 3 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 * 3 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 3": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 1 + 3 = 4 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 0.75 * 2 = 1.5",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 * 4 = 12 (left: 12) -> 12 * 2 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> Input: 0.75 3",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> Input: 0.75 3 -> 0.75 + 3 = 3.75 (left: 3.75)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 3 6 20)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> There are no possible next steps for the input 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75:",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> There is no possible next step with 0.75.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> There is no possible next step with 0.75. -> There is no possible next step with 0.75.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 6"
                }
            },
            "Step 1": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 4 = 1 (left: 1 3 6) -> 10 - 5 = 5 (left: 5 -> There are no possible next steps with just the number 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 5 6"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 4 11) -> 11 / 3 = 3.67 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> There is no possible next step with 0.75.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> There is no possible next step with 0.75. -> There is no possible next step with 0.75.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 3 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 + 4 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "There is only one possible next step with 0.75:"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 8 - 0.75 = 7.25 (left: 2 7.25 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 3 4  -> 3 / 4 = 0.75 (left: 0.75) -> There is only one possible next step with 0.75: -> 8 - 0.75 = 7.25 (left: 2 7.25 14) -> 2 + 7.25 = 9.25 (left: 9.25 14)",
                "Pruning": null
            }
        },
        "Input": "3 4 5 6",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "893": {
        "puzzle": "6 10 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 + 12 = 24 (left: 24 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 + 12 = 24 (left: 24 24) -> 24 * 24 = 576 (left: 576)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "12 12 24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 2 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 2 24) -> 2 * 24 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 6 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 / 12 = 2.33 (left: 2.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 / 16 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 / 16 = 1 (left: 1) -> There is only one number, so no operations can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 2 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 2 24) -> 2 * 24 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 12 28) -> 12 * 28 = 336 (left: 336)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 / 12 = 1.33 (left: 12 1.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 / 12 = 1.33 (left: 12 1.33) -> 12 / 1.33 = 9.02 (left: 1.33 9.02)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 1 + 24 = 25 (left: 24 25)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 12 + 16 = 28 (left: 28 12) -> 28 + 12 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 * 0 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 * 0 = 0 (left: 0) -> There are no possible next steps for the input 0.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0 16"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 0 / 16 = 0 (left: 0 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 0 / 16 = 0 (left: 0 16) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 16 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "0 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 - 0 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 12 16) -> 12 - 12 = 0 (left: 0 16) -> 16 - 0 = 16 (left: 16) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 + 12 = 24 (left: 24 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 + 12 = 24 (left: 24 24) -> 24 + 24 = 48",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 6  -> 3 * 9 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 24) -> 24 / 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "12 12 24"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 12 2 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 12 2 24) -> 12 * 2 = 24 (left: 24 24)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 / 6 = 2 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 1": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 1.66666666667 * 12 = 20 (left: 12 20) -> 12 + 20 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 1 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 24 / 12 = 2 (left: 1 24) -> 1 / 24 = 0.041666666666666664 (left: 0.041666",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "12 12 24"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> Input: 24 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> Input: 24 24 -> 24 + 24 = 48 (left: 48)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with just one number."
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 / 6 = 1.66666666667 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 10 "
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 6 + 10 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 6 + 10 = 16 (left: 16) -> 16 / 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1.66666666667 12 12"
                }
            },
            "Step 3": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 6 = 1.66666666667 (left: 1.66666666667 12 12) -> 12 - 1.66666666667 = 10.3333333333 (left: 10.3333333333 12) -> 10.3333333333 - 12 = -1.6666666667 (left: -1.6666666667 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 12 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 / 12 = 1 (left: 1 12 24) -> 24 / 12 = 2 (left: 1 2 24)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 6 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 6 6  -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "12 16 12"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 16 12) -> 16 - 12 = 4 (left: 12 4) -> 12 / 4 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> Possible next steps: -> - No input provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "12 - 6 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: 2 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 3": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> Possible",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> Possible -> It looks like you forgot to provide the initial numbers for the next steps. Please provide the numbers for the next calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 12 24"
                }
            },
            "Step 5": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 * 12 = 144 (left: 24 144)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 6 = 2 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 12 24) -> 12 * 12 = 144 (left: 24 144) -> 24 + 144 = 168 (left: 168)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There is only one number, so no operations can be performed."
                }
            }
        },
        "Input": "6 10 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "894": {
        "puzzle": "5 5 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "10 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 10 5 9) -> 10 + 9 = 19 (left: 5 19) -> 19 / 5 = 3.8 (left: 3.8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 + 2 = 3.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> Possible next steps: -> There are no possible next steps for the given input.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> Input: 3 7 -> 7 - 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> There are no possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 / 5 = 2 (left: 9 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 / 5 = 2 (left: 9 2) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> There are no possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25) -> 6.25 * 2 = 12.5 (left: 12.5)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 9 - 5 = 4 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 1 * 5 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 1 * 5 = 5 (left: 5 9) -> 5 * 9 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25) -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "5 10 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 - 5 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 10 - 5 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 5 9"
                }
            },
            "Step 3": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 1 * 5 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 / 5 = 1 (left: 1 5 9) -> 1 * 5 = 5 (left: 5 9) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 / 4 = 6.25 (left: 6.25) -> There are no possible next steps for the input 6.25.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 4 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 + 4 = 9 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 / 5 =",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 4 / 5 = -> 4 / 5 = 0.8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 4 + 25 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 4 + 25 = 29 (left: 29) -> There are no possible next steps with just the number 29.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> 20 + 8 = 28 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 5 4"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 / 5 = 1 (left: 1 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 / 5 = 1 (left: 1 4) -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 10 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 5 4"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 - 4 = 1 (left: 1) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 - 4 = 1 (left: 1) -> 1 / 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 27",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 27 -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 5 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 5 10 9) -> 5 * 10 = 50 (left: 9 50)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 * 4 = 20 (left: 20) -> 20 * 2 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 - 4 = 21 (left: 21) -> 21 - 8 = 13 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 4 "
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left: 5 4  -> 5 / 4 = 1.25 (left: 1.25) -> 1.25 - 2 = -0.75 (left: -0.75)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 5 9"
                }
            },
            "Step 3": {
                "Step": "9 - 5 = 4 (left: 5 5 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "4 25"
                }
            },
            "Step 5": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 / 4 = 6.25 (left: 4 6.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 5 = 4 (left: 5 5 4) -> 5 * 5 = 25 (left: 4 25) -> 25 / 4 = 6.25 (left: 4 6.25) -> 4 * 6.25 = 25 (left: 25)",
                "Pruning": "NA"
            }
        },
        "Input": "5 5 5 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "895": {
        "puzzle": "5 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11) -> 5 / 11 = 0.4545 (left: 0.4545)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 6 + 6 = 12 (left: 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 6 + 6 = 12 (left: 6 12) -> 6 - 12 = -6 (left: -6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "66 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 * 25 = 1650 (left: 1650)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 * 25 = 1650 (left: 1650) -> 16 * 50 = 800 (left: 800 1650)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 + 5 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 + 5 = 11 (left: 11) -> There are no possible next steps for the input 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 - 5 = 1 (left: 1 11) -> 1 * 11 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "66 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 + 25 = 91 (left: 91)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 + 25 = 91 (left: 91) -> 91 + 2 = 93",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 10 / 6 = 1.67 (left: 1.67 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> 11 - 6 = 5 (left: 5 11 11) -> Input: 4 6 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "66 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 / 25 = 2.64 (left: 2.64)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 / 25 = 2.64 (left: 2.64) -> There are no possible next steps for the input 2.64 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Input: 1 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Input: 1 2 -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "66 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 / 25 = 2.64 (left: 2.64)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 / 25 = 2.64 (left: 2.64) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 9 / 3 -> 9 / 3 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 3": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11) -> 11 / 1.2 = 9.17 (left: 9.17)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "66 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 - 25 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 - 25 = 41 (left: 41) -> 41 * 2 = 82 (left: 82)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 6 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 * 5 = 30 (left: 11 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 5 = 30 (left: 11 30) -> 30 / 11 = 2.727272727272727 (left: 2.727272727272727)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6) -> 1.2 * 6 = 7.2 (left: 7.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "66 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 - 25 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 - 25 = 41 (left: 41) -> 41 + 1 = 42",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 6 11 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 11 + 5 = 16 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 5 6 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "66 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 - 25 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 - 25 = 41 (left: 41) -> 41 + 2 = 43",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "5 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 5 = 11 (left: 5 6 11) -> 6 / 5 = 1.2 (left: 1.2 11) -> 11 - 1.2 = 9.8 (left: 9.8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 5 6) -> 5 + 6 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "66 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 + 25 = 91 (left: 91)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 + 25 = 91 (left: 91) -> 91 + 2 = 93",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 / 5 = 1 (left: 1 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 10 11"
                }
            },
            "Step 1": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 11 / 6 = 1.833333333",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 5 = 10 (left: 6 10 11) -> 11 / 6 = 1.833333333 -> 11 + 6 = 17.0 (left: 6 17.0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 * 5 = 25 (left: 6 11 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "66 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 / 25 = 2.64 (left: 2.64)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 / 25 = 2.64 (left: 2.64) -> There are no possible next steps with the input 2.64 as it is a single number and not an equation or expression.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 5 = 11 (left: 5 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 6 11 11) -> Possible next steps: -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 5 6 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 5 6  -> 6 - 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "66 25"
                }
            },
            "Step 5": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 * 25 = 1650 (left: 1650)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 5 = 25 (left: 6 11 25) -> 6 * 11 = 66 (left: 66 25) -> 66 * 25 = 1650 (left: 1650) -> 1 * 6 = 6 (left: 6 5)",
                "Pruning": null
            }
        },
        "Input": "5 5 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "896": {
        "puzzle": "6 8 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 9 48) -> 9 * 9 = 81 (left: 48 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 / 9 = 1 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 15 - 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 15 - 1 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 * 9 = 81 (left: 14 81)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 9 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 9 = 17 (left: 6 9 17) -> 17 - 9 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 + 15 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 + 15 = 16 (left: 16) -> None - the input is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "9 / 9 = 1 (left: 6 8 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 9 = 1 (left: 6 8 1) -> 6 + 8 = 14 (left: 14 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 15 - 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 15 - 1 = 14 (left: 14) -> No possible next steps, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1.33 9 9"
                }
            },
            "Step 3": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9) -> 1.33 + 9 = 10.33 (left: 9 10.33) -> 9 + 10.33 = 19.33 (left: 19.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 * 15 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 * 15 = 15 (left: 15) -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 - 8 = 1 (left: 6 1 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 1": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 * 9 = 9 (left: 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 * 9 = 9 (left: 6 9) -> 9 - 6 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 14 + 9 = 23 (left: 9 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 * 9 = 9 (left: 6 9) -> 9 - 6 = 3 (left: 3) -> 8 / 3 = 2.66666666667 (left: 3 2.66666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 * 9 = 9 (left: 6 9) -> 9 - 6 = 3 (left: 3) -> 8 / 3 = 2.66666666667 (left: 3 2.66666666667) -> 3 + 2.66666666667 = 5.66666666667 (left: 5.66666666667)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "8 / 6 = 1.3333 (left: 1",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 6 = 1.3333 (left: 1 -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "9 * 9 = 81 (left: 6 8 81)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 9 = 81 (left: 6 8 81) -> 6 * 8 = 48 (left: 48 81)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 + 15 = 16 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 + 15 = 16 (left: 15) -> None",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 9 9) -> Input: 2 10 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 + 6 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 + 6 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 + 15 = 16 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 + 15 = 16 (left: 15) -> 15 - 2 = 13 (left: 13)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 9 48)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 9 9 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 9 9 14) -> 9 + 9 = 18 (left: 14 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 1 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 6 1 9) -> 1 + 9 = 10 (left: 6 10) -> 6 - 10 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 15 - 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 15 - 1 = 14 (left: 14) -> No possible next steps, 14 is the final number.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 9 15"
                }
            },
            "Step 1": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 8 * 9 = 72 (left: 72 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 8 * 9 = 72 (left: 72 15) -> 72 / 15 = 4.8 (left: 4.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 9) -> 9 - 3 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 / 15 = 0.067 (left: 0.067)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 / 15 = 0.067 (left: 0.067) -> There is only one number provided (0.067), so there are no possible next steps to perform any operations with other numbers.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "8 / 6 = 1.33 (left: 1.33 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 6 = 1.5 (left: 1.",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 6 = 1.5 (left: 1. -> There are no possible next steps with just the input \"1.\" Please provide additional numbers to continue the calculations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 9"
                }
            },
            "Step 3": {
                "Step": "9 + 6 = 15 (left: 8 9 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "1 15"
                }
            },
            "Step 5": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 * 15 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 6 = 15 (left: 8 9 15) -> 9 - 8 = 1 (left: 1 15) -> 1 * 15 = 15 (left: 15) -> 15 * 2 = 30 (left: 2 15 30)",
                "Pruning": null
            }
        },
        "Input": "6 8 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "897": {
        "puzzle": "3 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 18 6 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (4 - 3)) *",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n4 * 2 = 8 (left: 8 9)\n9 * 8 = 72 (left: 72)\nAnswer: 2 * ((3 + 6) - 4) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 9 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 * 3) * (13 - 9) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (6 * 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 * 13 = 195 (left: 195)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 3 6 10) -> 10 / 3 = 3.33 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 5\nSteps:\n5 + 5 = 10 (left: 2 3 10)\n2 * 3 = 6 (left: 6 10)\n6 * 10 = 60 (left: 60)\nAnswer: (2 * 3) * (5 + 5) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 9\nSteps:\n3 * 9 = 27 (left: 2 6 27)\n27 - 6 = 21 (left: 2 21)\n21 - 2 = 19 (left: 19)\nAnswer: ((2 * 3) + 9) * 6 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 6 * 13 = 78 (left: 9 78) -> 78 / 9 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 4 = 10 (left: 10 6)\n10 * 6 = 60 (left: 60)\nAnswer: (2 * 3) * (4 + 6) = 24",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "9 6 13"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 4 = 10 (left: 10 6)\n10 + 6 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((2 * 3) + 4) + 6 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 10\nSteps:\n2 * 10 = 20 (left: 3 5 20)\n20 / 5 = 4 (left: 3 4)\n4 + 3 = 7 (left: 7)\n7 * 3 = 21 (left: 21)\n21 + 10 = 31 (left: 31)\n31 - 10 = 21 (left: 21)\n21 + ",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 6 = 7 (left: 9 7) -> 9 + 7 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 * 6 = 54 (left: 13 54)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 * 6 = 54 (left: 13 54) -> 13 * 54 = 702 (left: 702)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n5 + 3 = 8 (left: 2 6 8)\n8 * 6 = 48 (left: 2 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((5 + 3) * 6) / 2 = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 9 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 * 3) * (13 - 9) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 9 + 6 = 15 (left: 15 13) -> 15 / 13 = 1.15 (left: 1.15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n5 - 2 = 3 (left: 3 21)\n21 - 3 = 18 (left: 18)\nAnswer: ((3 * 7) - 5) * 2 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n9 * 4 = 36 (left: 2 36)\n36 / 2 = 18 (left: 18)\n18 + 18 = 36 (left: 36)\nAnswer: ((2 + (3 + 6)) * 4) - 4 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n2 * 3 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n5 * 12 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((2 * 3) + 6) * (5 * 12) / 2.5 = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) - 12) * 2 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 / 6 = 1 (left: 1 13) -> 13 - 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n5 * 2 = 10 (left: 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 + 1 = 4 (left: 4 12)\n12 * 4 = 48 (left: 48)\nAnswer: (3 + 1) * (5 + 7) = 48",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 12\nSteps:\n3 * 2 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (3 * 2) + (6 + 12) = 24",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 24 (left: 24)\nAnswer: (3 * 8) - (6 - 2) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 3 13 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 + 9 = 22 (left:  -> Please provide a set of numbers to continue with the calculations.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 13"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 3 6 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 3 6 18) -> 3 + 6 = 9 (left: 9 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 9 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 * 3 - 13) * 6 = 24",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (4 - 3)) +",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 3 7 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 + ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 6 +  -> 6 + 8 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 6\nSteps:\n5 + 3 = 8 (left: 2 6 8)\n8 * 2 = 16 (left: 6 16)\n6 + 16 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((5 + 3) * 2) + (6 + 2) = 24",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "18 6 "
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 3 5 6\nSteps:\n7 - 3 = 4 (left: 4 5 6)\n4 + 6 = 10 (left: 5 10)\n5 * 10 = 50 (left: 50)\n50 / 2 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((7 - 3) + 6) * (5 *",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 5 5 6 7\nSteps:\n5 * 6 = 30 (left: 5 7 30)\n30 - 7 = 23 (left: 5 23)\n23 - 5 = 18 (left: 18)\nAnswer: (5 * 6) - (7 - 5) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 6 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 + 6 = 12 (left: 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 6 13) -> 6 + 6 = 12 (left: 12 13) -> 12 * 13 = 156 (left: 156)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "9 6 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 9 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 9 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 5\nSteps:\n5 * 5 = 25 (left: 2 3 25)\n3 + 25 = 28 (left: 2 28)\n28 - 2 = 26 (left: 26)\nAnswer: (5 * 5) + (3 + 2) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 6 7\nSteps:\n2 * 3 = 6 (left: 6 7 6)\n6 + 6 = 12 (left: 7 12)\n7 * 12 = 84 (left: 84)\nAnswer: (2 * 3) + (6 + 7) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "18 6 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 * 6 = 108 (left: 108) -> 10 * 8 = 80 (left: 80)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 5 9\nSteps:\n5 * 3 = 15 (left: 2 9 15)\n15 - 9 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((5 * 3) - 9) * 2 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 7 3 2 6\nSteps:\n7 - 3 = 4 (left: 4 2 6)\n4 * 2 = 8 (left: 8 6)\n8 * 6 = 48 (left: 48)\nAnswer: (7 - 3) * (2 * 6) = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 13) -> 13 - 9 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 * 3) * (13 - 9) = 24",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 * 3 = 18 (left: 18 6  -> 18 + 6 = 24 (left: 24) -> Answer: (6 * 3) + (13 - 3) = 24 -> Input: 2 3 7 9\nSteps:\n2 * 9 = 18 (left: 3 7 18)\n7 - 3 = 4 (left: 4 18)\n4 * 18 = 72 (left: 72)\nAnswer: 2 * (3 + (7 - 9)) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "898": {
        "puzzle": "6 8 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 11 = 37 (left: 9 37)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 - 11 = 37 (left: 9 37) -> 9 - 37 = -28 (left: -28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (11 - 9) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 6 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 48 / 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 3": {
                "Step": "8 + 9 = 17 (left: 6 11 17)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11  -> 9 - 11 = -2 (left: -2 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (11 - 9) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 9 = 2 (left: 6 2 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 -> 11 / 6 = 1.8333 (left: 1.8333 5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (11 - 9) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 8 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 9 11) -> 9 * 11 = 99 (left: 5 99)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (11 - 9) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "11",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 -> Input: 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (11 - 9) = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 11 48"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (11 - 9) = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 9 = 17 (left: 6 11 17) -> 6 + 11 = 17 (left: 17 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (11 - 9) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "8 + 9 = 17 (left: 6 11 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 =",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = -> 9 - 6 = 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (11 - 9) = 24"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 9 11"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 9 11 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 11 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "6 * 8 = 48 (left: 9 11 48) -> 11 - 9 = 2 (left: 2 48) -> 48 / 2 = 24 (left: 24) -> Answer: (6 * 8) / (11 - 9) = 24"
            }
        },
        "Input": "6 8 9 11",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "899": {
        "puzzle": "1 3 3 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 3 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 * 3 = 3 (left: 3 8)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 1 9 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 - 1 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 - 1 = 2 (left: 2 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 * 3 = 3 (left: 3 8)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 24 - 1 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (11 - 3) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: 3 * (3 * (11 - 3)) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 8 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 + 3 = 4 (left: 4 8)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 4 - 3 = 1 (left: 1 11) -> 11 / 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 1 + 3 = 4 (left: 4 8)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 3 11"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3  -> 3 / 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 - 3 = 8 (left: 1 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 - 1 = 7 (left: 3 7) -> 3 + 7 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 1) * (11 - 3) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 4 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 3 4 11) -> 3 + 4 = 7 (left: 7 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 8 / 3 = 2.67 (left: 1 2.67)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 3 4 11)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "1 3 8"
                }
            },
            "Step 1": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 3 8) -> 3 * 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (11 - 3)) * 1 = 24"
            }
        },
        "Input": "1 3 3 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "1050": {
        "puzzle": "4 10 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 - 13 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.27 (left: 1.27 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.27 (left: 1.27 14) -> 14 / 1.27 = 11.02 (left: 11.02)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 0.8461538461538461"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461) -> 12 * 0.8461538461538461 = 10.153846153846153 (left: 0.8461538461538461 10.153846153846153)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461) -> 12 * 0.8461538461538461 = 10.153846153846153 (left: 0.8461538461538461 10.153846153846153) -> 10.153846153846153 - 0.8461538461538461 = 9.307692307692307 (left: 9.307692307692",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "No possible next steps as there are no more numbers to operate on."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 3 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 40 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 10 = 40 (left: 40 11 13) -> 40 - 11 = 29 (left: 29 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 * 13 = 143 (left: 14 143) -> 14 / 143 = 0.0979 (left: 0.0979)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with just the number 16.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with just the number 16. -> Input: 20 4 5",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 10 13 15) -> 15 / 10 = 1.5 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "11 1.272727272 1.272727272"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 1.272727272 - ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 1.272727272 -  -> 1.272727272 - 8 = -6.727272728 (left: -6.727272728)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "16"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 3"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 7 10 13) -> 13 - 10 = 3 (left: 7 3) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 7 10 13) -> 13 - 10 = 3 (left: 7 3) -> 7 / 3 = 2.33 (left: 2.33) -> There is only one number given, so there are no possible next steps to perform calculations on.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 11 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 13 - 6 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 11 13) -> 13 - 6 = 7 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "16"
                }
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> No possible next steps as there are no more numbers to operate on.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> None, as there is only one number left.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> None, as there is only one number left. -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "11 + 4 = 15 (left: 10 13 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with just one number.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with just one number. -> - Try rearranging the numbers to create different combinations",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.1818181818181819 11 40"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 11 40) -> 1.1818181818181819 * 11 = 13 (left: 13 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 11 40) -> 1.1818181818181819 * 11 = 13 (left: 13 40) -> 13 - 40 = -27 (left: -27)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "Please provide more than one number to evaluate possible next steps."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 7 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 7 10 13) -> 13 - 10 = 3 (left: 7 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "11 1.272727272 1.272727272"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 11 - 1.272727272 = 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272) -> 11 - 1.272727272 = 9 -> Input: 5 * 3 + 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> No possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 + 11 = 25 (left: 13 25) -> 13 * 25 = 325 (left: 325)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> - 16 + 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> - 16 + 2 = 18 -> -16 * 2 = -32 (left: 18 -32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 0.8461538461538461"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461) -> 12 / 0.8461538461538461 = 14.166666666666666 (left: 14.166666666666666)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "16"
                }
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> No possible next steps, the input is already a single number.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 10 = 14 (left: 11 13 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 14 / 11 = 1.272727272 -> 14 / 11 = 1.272727272 (left: 11 1.272727272 1.272727272)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> 16 - 2 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "8.0",
                    "Pruned state": "4 11 3"
                }
            },
            "Step 4": {
                "Step": "13 - 10 = 3 (left: 4 11 3) -> 4 + 11 = 15 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "1.1818181818181819 11 40"
                }
            },
            "Step 5": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 11 40) -> 40 / 11 = 3.6363636363636362 (left: 3.636363",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 11 40) -> 40 / 11 = 3.6363636363636362 (left: 3.636363 -> 3.636363 * 3.636363 = 13.206783 (left: 13.206783)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "No possible next steps as there are no more numbers to operate on."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 10 = 3 (left: 4 11 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 10 = 40 (left: 11 13 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 10 = 40 (left: 11 13 40) -> 13 / 11 = 1.1818181818181819 (left: 1.1818181818181819 11 40)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> There are no possible next steps with only one number provided. -> Please provide more than one number to evaluate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16"
                }
            },
            "Step 5": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> None, as there is only one number left.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 13 - 11 = 2 (left: 2 14) -> 2 + 14 = 16 (left: 16) -> None, as there is only one number left. -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "11 13 14"
                }
            },
            "Step 1": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "12 0.8461538461538461"
                }
            },
            "Step 3": {
                "Step": "4 + 10 = 14 (left: 11 13 14) -> 11 / 13 = 0.8461538461538461 (left: 14 0.8461538461538461) -> 0.8461538461538461 * 14 = 11.999999999999998 (left: 12 0.8461538461538461) -> 12 * 0.8461538461538461 = 10.153846153846153 (left: 10.153846153846153)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "7 3"
                }
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 7 10 13) -> 13 - 10 = 3 (left: 7 3) -> 7 * 3 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "7 3"
                }
            },
            "Step 5": {
                "Step": "11 - 4 = 7 (left: 7 10 13) -> 13 - 10 = 3 (left: 7 3) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 4 = 7 (left: 7 10 13) -> 13 - 10 = 3 (left: 7 3) -> 7 / 3 = 2.33 (left: 2.33) -> 2.33 / 2 = 1.165",
                "Pruning": null
            }
        },
        "Input": "4 10 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1051": {
        "puzzle": "2 6 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 7 8"
                }
            },
            "Step 3": {
                "Step": "2 + 6 = 8 (left: 6 7 8) -> 6 / 7 = "
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 2 1 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 6 7"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 6 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24) -> Answer: ((7 - 2) * 6) - 6 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 - 6 = -1 (left: -1 6) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24) -> Answer: ((7 - 2) * 6) - 6 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 + 7 = 13 (left: 4 13) -> 13 / 4 = 3.25 (left: 3.25)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 6 / 4 = 1.5 (left: 1.5 7)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 7)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 7 - 4 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 + 6 = 9 (left: 7 9)"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 6 5 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 6 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 6 30) -> 6 * 6 = 36 (left: 36 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 * 6 = 24 (left: 7 24)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24) -> Answer: ((7 - 2) * 6) - 6 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 30 - 6 = 24 (left: 24) -> Answer: ((7 - 2) * 6) - 6 = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 6 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 7) -> 4 + 6 = 10 (left: 7 10)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 6 6) -> 6 - 6 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 7) -> 3 * 6 = 18 (left: 7 18)"
            }
        },
        "Input": "2 6 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1052": {
        "puzzle": "7 10 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 10 = 20 (left: 7 20 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 10 = 20 (left: 7 20  -> 7 * 20 = 140 (left: 140)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 8 = 2.75 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 8 = 2.75 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "22"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input of 22.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input of 22. -> There are no possible next steps with the input of 22.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 7 = 70 (left: 70 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 + 8 = 30 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 + 8 = 30 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input 22. -> There are no possible next steps with the input 22.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left:  -> It seems there was no input provided. If you could provide the numbers, I can generate the possible next steps for you.",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 2 = 11 (left: 11) -> 11 + 2 = 13 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> No possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> No possible next steps. -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 -> There are no possible next steps with the input 1.42857142857.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 3": {
                "Step": "12 - 7 = 5 (left: 5 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 7 = 5 (left: 5 10 12) -> 10 - 5 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input 22. -> There are no possible next steps with the input 22.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 7 = 1.42857142857 (left: 1.42857142857 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 10 / 3 = 3.33 (left: 3.33 12) -> 12 - 3.33 = 8.67 (left: 8.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 - 2 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 - 2 = 20 (left: 20) -> 20 - 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "22"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 8 = 2.75 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 8 = 2.75 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 + 8 = 16"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 1 12"
                }
            },
            "Step 1": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 ( -> 1 / 12 = 0.08333333 (left: 0.08333333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 + 2 = 24",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 + 2 = 24 -> 22 * 2 = 44 (left: 44)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "22"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 2 = 11 (left: 11) -> There are no possible next steps with the input 11.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 + 7 = 17 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 1 12"
                }
            },
            "Step 1": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 10 = 1 (left: 7 1 12) -> 1 * 12 = 12 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> None, as there is only one number in the input.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> None, as there is only one number in the input. -> Not enough numbers to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 + 8 = 30 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 + 8 = 30 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 10 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 10 12) -> 12 - 3 = 9 (left: 9 12) -> 9 - 12 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 + 8 = 30 (left: 8 30)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 + 8 = 30 (left: 8 30) -> 8 + 30 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "22"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 2 = 11 (left: 11) -> There is only one possible next step, which is to add 11 to one of the numbers in the previous list:",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 7 = 1.43 (left: 1.43 10 12) -> 10 / 1.43 = 6.993 (left: 6.993 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the number 22.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the number 22. -> There are no possible next steps with the number 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> None",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> None -> No possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 / 10 = 1 (left: 7 1 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 10 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 7 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 7 3 12) -> 12 + 7 = 19 (left: 3 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "22"
                }
            },
            "Step 3": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input 22.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> There are no possible next steps with the input 22. -> There are no possible next steps with the input 22.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "22"
                }
            },
            "Step 5": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 2 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 * 7 = 70 (left: 70 10 12) -> 12 + 10 = 22 (left: 22) -> 22 / 2 = 11 (left: 11) -> There are no possible next steps with the input of 11.",
                "Pruning": null
            }
        },
        "Input": "7 10 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1053": {
        "puzzle": "2 5 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 2 = 10 (left: 10 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 4 + 9 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 4 + 9 = 13 (left: 13) -> 13 / 2 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 / 7 = 1.1428571428571428 (left: 1.142857142857142",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "7 8 9"
                }
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 9 / 8 = ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 9 / 8 =  -> 1. 9 / 8 = 1.125",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 + 7 = 18 (left: 7 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 / 2 = 6 (left: 6 11) -> 11 / 6 = 1.83 (left: 1.83)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 - 9 = -1 (left: 7 -1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 - 9 = -1 (left: 7 -1) -> 7 + -1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 + 35 = 37 (left: 37)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 2 + 35 = 37 (left: 37) -> 37 + 2 = 39",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 7 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 7  -> 5 / 7 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 + 11 = 18 (left: 2 5 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 - 11 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56) -> 56 / 9 = 6.2222 (left: 6.2222)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "7 8 9"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 9 / 7 = 1.2857142857142858 (left: 1.285714285714285",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "7 8 9"
                }
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 9 / 7 = 1 (left: 1 8)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 7 11"
                }
            },
            "Step 3": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 - 7 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 2 = 10 (left: 10 7 11) -> 10 - 7 = 3 (left: 3 11) -> 3 + 11 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 15 - 9 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 5 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 7 11) -> 11 / 7 = 1.57 (left: 1.57 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 - 7 = 1 (left: -> 7 * 1 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "7 8 9"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 - 17 = -10 (left: -10)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 10 / 11 = 0.9091 (left: 0.9091)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 - 8 = -1 (left: -1 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 - 8 = -1 (left: -1 9) -> -1 * 9 = -9 (left: -9)",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "7 8 9"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 * 8 = 56 (left: 9 56) -> 9 + 56 = 65 (left: 65)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "2 + 5 = 7 (left: 7 7 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Possible -> It seems like there was an error in the input. Can you please provide the numbers or operations you would like to work with?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> 12 - 2 = 10 (left: 10 11) -> 3 + 7 = 10 (left: 10 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 * 9 = 72 (left: 7 72)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 * 9 = 72 (left: 7 72) -> 72 - 7 = 65 (left: 65)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 2 35 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 12 11"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "2 35 "
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 7 + 3 = 10 (left: 10 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 2 35  -> 7 + 3 = 10 (left: 10 5) -> 10 / 5 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 - 7 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 12 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 5 = 10 (left: 10 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 5 = 10 (left: 10 7 11) -> 7 * 11 = 77 (left: 10",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 - 8 = -1 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 - 8 = -1 (left: -> 7 * 8 = 56 (left: -1 56)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "7 8 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 2 12 11) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) -> 15 / 9 = 1.67 (left: 1.67)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 8"
                }
            }
        },
        "Input": "2 5 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1054": {
        "puzzle": "4 4 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9) -> 2 * 9 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 / 6 = 1.5 (left: 1.5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 9 / 6 = 1.5 (left: 1.5 9) -> 9 / 1.5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 48"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 + 48 = 57 (left: 48 57)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 + 48 = 57 (left: 48 57) -> 48 * 57 = 2736 (left: 2736)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 16 - 9 = 7 (left: 6 7) -> 6 + 7 = 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 * 6 = 144 (left: 9 144) -> 144 - 9 = 135 (left: 9 135)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 48"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 / 9 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 / 9 = 5 (left: 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> Input: 5 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> Input: 5 2 -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 48"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 / 9 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 / 9 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 + 16 = 22 (left: 9 22) -> 9 * 22 = 198 (left: 198)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 48"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 + 48 = 57 (left: 57)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 + 48 = 57 (left: 57) -> 5 + 7 = 12",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 / 6 = 4 (left: 4 9) -> 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 / 14 = 0.642857142857 (left: 0.642857142857)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 48"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 - 9 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 - 9 = 39 (left: 39) -> 39 is a single number, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 9 = 15 (left: 6 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 - 9 = 15 (left: 6 15) -> 6 + 15 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 * 54 = 1296 (left: 1296)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 48"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> Possible next steps: -> There are no possible next steps with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 9 / 6 = 1.5 (left: 1.5 8) -> 8 - 1.5 = 6.5 (left: 6.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 3": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 + 9 = 33 (left: 6 33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 24 + 9 = 33 (left: 6 33) -> 6 * 33 = 198 (left: 198)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 48"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 / 2 = 24 (left: 9 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 / 2 = 24 (left: 9 24) -> 9 * 24 = 216 (left: 216)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 6 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 6 5) -> 5 + 4 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 6 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 6 9) -> 9 - 1 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 48"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 9 * 48 = 432 (left: 432) -> Input: 1010",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 4 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 9"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 9 10) -> 10 / 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 16 9"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 * 16 = 96 (left: 96 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 16 9) -> 6 * 16 = 96 (left: 96 9) -> 96 * 9 = 864 (left: 864)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 48"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 / 9 = 5.33 (left: 5.33 48)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 / 9 = 5.33 (left: 5.33 48) -> 5.33 + 48 = 53.33 (left: 53.33)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 4 = 24 (left: 24 6 9) -> 6 * 9 = 54 (left: 24 54) -> 24 + 54 = 78 (left: 78)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "6 8 9"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14) -> 9 + 14 = 23 (left: 23)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "9 48"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 / 9 = 5.333333333333333 (left: 9 5.333333333333333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 9) -> 6 * 8 = 48 (left: 9 48) -> 48 / 9 = 5.333333333333333 (left: 9 5.333333333333333) -> 9 * 5.333333333333333 = 47.99999999999999 (left:",
                "Pruning": null
            }
        },
        "Input": "4 4 6 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1055": {
        "puzzle": "6 9 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> Input: 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 - 6 = 6 (left: 6 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84) -> 8 + 4 = 12",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 9 = 0.67 (left: 0.67 9 10 12) -> 12 - 0.67 = 11.33 (left: 9 10 11.33)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96) -> There are no possible next steps with the number 96 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "6 12 19"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 + 6 = 18 (left: 18 19) -> 18 + 19 = 37 (left: 37)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 90 - 12 = 78 (left: 6 78)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96) -> 96 + 2 = 98",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "9 12 16"
                }
            },
            "Step 1": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 6 = 16 (left: 9 12 16) -> 12 - 9 = 3 (left: 3 12 16) -> 12 - 3 = 9 (left: 9 12 16)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96) -> There are no possible next steps with just the number 96.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84)  -> 8 / 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with just the number 96."
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 6 12 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540) -> 540 + 2 = 542",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84) -> 8 / 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with just the number 96."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "10 * 12 = 120 (left: 6 9 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 12 = 120 (left: 6 9  -> 9 / 6 = 1.5 (left: 1.5 9)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96) -> There is only one number, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84) -> 8 / 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "There is only one number, so there are no possible next steps."
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 10 12 54)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 6 * 12 = 72 (left: 72 19)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 10 12 15) -> Input: 22 27 180",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84) -> 8 + 4 = 12",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "10 + 6 = 16 (left: 9 12 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "10 + 12 = 22 (left: 6 9 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 12 = 22 (left: 6 9 22) -> 6 + 9 = 15 (left: 15 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 / 6 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 / 6 = 15 (left: 15) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6 90"
                },
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540) -> 540 / 5 = 108 (left: 108)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps with just the number 96."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 10 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 19 / 6 = 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540) -> 540 - 5 = 535 (left: ",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "9 10 11.33"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 + 90 = 96 (left: 96) -> There are no possible next steps with the input 96.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 10 12"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 6 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 6 12 19) -> 12 * 6 = 72 (left: 72 19)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "6 90"
                }
            },
            "Step 3": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 6 * 90 = 540 (left: 540) -> 540 * 2 = 1080 (left: 1080)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "6 90"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "6 90"
                }
            },
            "Step 5": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 10 = 90 (left: 6 12 90) -> 12 - 6 = 6 (left: 6 90) -> 90 - 6 = 84 (left: 84) -> There are no possible next steps for the input 84 as it is a single number.",
                "Pruning": null
            }
        },
        "Input": "6 9 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1056": {
        "puzzle": "6 9 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 9 = 18 (left: 6 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 3 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 3 12) -> 6 + 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 + 27 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 3": {
                "Step": "12 / 3 = 4 (left: 6 9 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 3 = 4 (left: 6 9 4) -> 6 * 9 = 54 (left: 4 54)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4) -> 4 - 2 = 2 (left",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 3 = 27 (left: 9 12 27)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 * 9 = 54 (left: 9 12 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 9 = 54 (left: 9 12 54) -> 54 - 9 = 45 (left: 12 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 6 3 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 6 3  -> 6 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9) -> 9 * 8 = 72 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 / 9 = 1.33 (left: 1.33 27) -> 27 - 1.33 = 25.67 (left: 25.67)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 + 9 = 21 (left: 21 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 12 + 9 = 21 (left: 21 27) -> 21 / 27 = 0.7777777777777778 (left: 0.7777777777777778)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "30"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> 30 * 2 = 60",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> 30 * 2 = 60 -> 30 / 2 = 15 (left: 15 60)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 15 * 12 = 180 (left: 180)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 12 18) -> Input: 30 6 18 216 1.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "30"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> 30 * 2 = 60 (left: 60)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "30"
                }
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> There is only one possible next step for the number 30:",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12) -> 9 + 12 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 12"
                },
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> Input: 4 9",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> Input: 4 9 -> Input: 3 5 7",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 12 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 12 =  -> 27 - 12 = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 3": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "30"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> 30 * 2 = 60",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> 30 * 2 = 60 -> 30 * 2 = 60 (left: 60 = 60)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 + 12 = 21 (left: 21 27) -> 21 + 27 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 - 3 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 9 / 3 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9) -> 9 + 9 = 18 (left: 9 18)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 12 27"
                }
            },
            "Step 1": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 * 12 = 108 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 9 * 12 = 108 (left: -> 9 + 12 = 21 (left: 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 6 + 9 = 15 (left: 15 12) -> 12 * 15 = 180 (left: 180)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "30"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> There are no possible next steps with the input 30. -> There are no possible next steps with the input 30.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "6 9 12"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 9 = 1.33 (left: 1.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 6 9 12) -> 12 / 9 = 1.33 (left: 1.33 12) -> 1.33 * 12 = 15.96 (left: 15.96)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "30"
                }
            },
            "Step 5": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> 30 + 2 = 32",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 3 = 27 (left: 9 12 27) -> 27 - 9 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30) -> 30 + 2 = 32 -> 30 / 2 = 15 (left: 15 32)",
                "Pruning": null
            }
        },
        "Input": "6 9 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1057": {
        "puzzle": "2 3 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> Possible -> It appears that the input is not clear. Please provide a valid input for the next steps to be determined.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 / 1 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 2 = 6 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 -> 18 * 2 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "18"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 -  12 = 0 (left: 24 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 -  12 = 0 (left: 24 0) -> 24 / 0 = undefined (division by zero is not possible)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 / 6 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 0 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 2 = 16 (left: 2)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 - 8 = 10 (left: 8)",
                "Pruning": {
                    "Idx": "6.0",
                    "Pruned state": "2 6 6"
                }
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 3 + 12 = 15 (left: 12 15) -> 15 / 12 = 1.25 (left: 1.25 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 6 6"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 8) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the number 18.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: 9 12) -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 * 12 = 144 (left: 24 144) -> 24 + 144 = 168 (left: 168)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "18"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1) -> No possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: 2 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "12 + 12 = 24"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 24 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 + 12 = 24 -> 12 / 12 = 1 (left: 24 1) -> 24 * 1 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "18"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 2 = 6 (left: 3 6 12) -> 3 * 6 = 18 (left: 18 12) -> 18 - 12 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "3 8"
                }
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: -> 6 / 2 = 3 (left: 3 8) -> 7 + 9 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: -> 12 / 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> None",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "18"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There is only one possible next step: 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There is only one possible next step: 18. -> There is no possible next step.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "6 6 12"
                }
            },
            "Step 1": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 12 / 6 = 2 (left: 2 6) -> 2 + 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 / 2 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 * 8 = 144 (left: 8)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "6 6 12"
                }
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 6) -> 6 - 2 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (12 - 6) * (6 - 2) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "There are no possible next steps with the input 18."
                }
            }
        },
        "Input": "2 3 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1058": {
        "puzzle": "2 4 4 5",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 4 5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 5"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 44)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 4 * 11 = 44 (left: 44) -> There are no possible next steps with the input of 44.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "15 2"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2.75 5.5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 10 * 2 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 - 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "15 2"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 - 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4 11"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2.75 5.5"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> 2.75 * 2 = 5.5 (left: 2.75 5.5) -> 2.75 + 5.5 = 8.25 (left: 8.25)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2.75 5.5"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 -> There are no possible next steps with the input of 3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "15 2"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2.75 5.5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3 2) -> 3 / 2 = 1.5 (left: 2 1.5 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> 2.75 * 8 = 22 (left: 8)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "15 2"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 - 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "15 2"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 + 2 = 17 (left: 17)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2.75 5.5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 4 5"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 5 + 4 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 4 5) -> 5 + 4 = 9 (left: 4 9) -> 6 + 12 = 18 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 - 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "15 2"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 * 2 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2.75 5.5"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 3 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 / 2 = 2 (left: 2 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 2 + 3 = 5 (left: 4 5) -> 10 - 2 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 / 2 = 7.5 (left: 7.5)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2.75 5.5"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> 2.75 * 2 = 5.5 (left: 2.75 5.5) -> 2.75 * 5.5 = 15.125 (left: 15.125)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2.75 5.5"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 + 7 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> Possible next steps: -> There are no possible next steps for the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 + 4 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 + 4 = 15 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 - 4 = 1 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 6 - 4 = 2 (left: 2 5 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 / 4 = 2.75 (left: 2.75) -> 2.75 * 2 = 5.5 (left: 2.75 5.5)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 8 - 7 = 1 (left: 1 8)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "4 5 8"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 4 5 8) -> 5 - 4 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 3 + 4 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 4 + 11 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 4 + 11 = 15 (left: 15) -> 15 - 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2.75 5.5"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "2 3 4"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> 4 - 2 = 2 (left: 2 3) -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "15 2"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 * 6 = 30 (left: 4 30) -> 10 + 5 = 15 (left: 15 2) -> 15 - 2 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "5.0",
                    "Pruned state": "2 3 4"
                }
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 3 4) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 11"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 5 6) -> 5 + 6 = 11 (left: 4 11) -> 11 - 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Input": "2 4 4 5",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1059": {
        "puzzle": "2 4 4 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 3": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 4 * 2 = 8 (left: 8 10) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 + 2.4 = 12.4 (left: 2.4)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2.4 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 * 10 = 24 (left: 10 24)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 / 4 = 2.5 (left: 2.5 10) -> 10 + 2.5 = 12.5 (left: 2.5 12.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 + 10 = 12.4 (left: 12.4)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2.4 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 - 2.4 = 7.6 (left: 7.6)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Input: 4 5 7"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 + 10 = 12.4 (left: 12.4)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2.4 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Input: 4 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.16666666667 (left: 2.4 4.16666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.16666666667 (left: 2.4 4.16666666667) -> 2.4 / 4.16666666667 = 0.576 (left: ",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10) -> 10 * 10 = 100 (left: 100)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.16666666667 (left: 4.16666666667)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "2.4 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Input: 3 6",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Possible next steps:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.166666666666667 (left: 2.4 4.166666666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.166666666666667 (left: 2.4 4.166666666666667) -> 4.166666666666667 / 2.4 = 1.7361111111111112 (left: 1.7361111111111112",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 8 4 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 + 10 = 12.4 (left: 10)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.16666666667 (left: 4.16666666667)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "2.4 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 3 + 6 = 9 (left",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 2 4 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "2 4 10"
                }
            },
            "Step 1": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 2 = 2 (left: 2 4 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 - 2.4 = 7.6 (left: 7.6)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2.4 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.16666666667 (left: 4.16666666667)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2.4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.166666666666667 (left: 2.4 4.166666666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.166666666666667 (left: 2.4 4.166666666666667) -> 2.4 * 4.166666666666667 = 10.000000000000002 (left: 10.000000000000002)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Input: 4 5 7"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 6 + 4 = 10 (left: 10 10) -> 10 + 10 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 + 10 = 12.4 (left: 12.4)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2.4 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 * 10 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "2.4 10"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 - 2.4 = 7.6 (left: 7.6 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 - 2.4 = 7.6 (left: 7.6 10) -> 7.6 * 10 = 76 (left: 76)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "Input: 4 5 7"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 / 2 = 2 (left: 2 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 + 2 = 12 (left: 4 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 2 = 12 (left: 4 4 12) -> 12 - 4 = 8 (left: 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.16666666667 (left: 4.16666666667)",
                "Pruning": {
                    "Idx": "9.0",
                    "Pruned state": "4 6 10"
                }
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 * 10 = 24 (left: 10 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 2.4 * 10 = 24 (left: 10 24) -> 34 + 100 = 134 (left: 134)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 4 6 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 10 - 4 = 6 (left: 6 10) -> 10 - 6 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "4 6 10"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 + 6 = 10 (left: 10 10) -> 10 - 10 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2.4 10"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.166666667 (left: 4.166666667)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2.4 10"
                }
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 4 6 10) -> 4 * 6 = 24 (left: 24 10) -> 24 / 10 = 2.4 (left: 2.4 10) -> 10 / 2.4 = 4.16666666667 (left: 4.16666666667)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "There are no possible next steps with the given input."
                }
            }
        },
        "Input": "2 4 4 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1060": {
        "puzzle": "3 3 3 4",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 3 3)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 3 4"
                }
            },
            "Step 1": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 / 1 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 / 3 = 1 (left: 1 3 4) -> 3 / 1 = 3 (left: 3 4) -> 4 / 3 = 1.33333333333 (left: 1.33333333333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 12 + 0 = 12 (left: 12)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 3 4"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 4 9) -> 9 / 3 = 3 (left: 3 4) -> Input: 5 10"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 3 3 1)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 4 + 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 6 4"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 6 / 3 = 2 (left: 2 4)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 3 3 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 3 6 4) -> 3 * 6 = 18 (left: 4 18)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 * 3 - 3) * 4 = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 - 3 = 0 (left: 0 3 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 3 + 9 = 12 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 3 4"
                }
            },
            "Step 3": {
                "Step": "4 + 3 = 7 (left: 3 3 7)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 / 3 = 1 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 - 3 = 6 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 / 3 = 3 (left: 3 4)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 3 6 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 9 4"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 3 9 4) -> 9 + 3 = 12 (left: -> 9 - 3 = 6 (left",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 * 12 = 0 (left: 0)"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 3 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 3 4"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 0 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 3 4"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 3 4) -> 3 + 4 = 7 (left: 7)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 3 9 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 3 4"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 0 + 3 = 3 (left: 3 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 0 + 3 = 3 (left: 3 4) -> 4 / 3 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0 12"
                }
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 3 4) -> 3 * 4 = 12 (left: 0 12) -> 12 / 0 = undefined (left: 0 12) -> 0 - 12 = -12 (left: -12)"
            }
        },
        "Input": "3 3 3 4",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1061": {
        "puzzle": "2 2 2 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 / 14 = 0.07142857143 (left: 0.07142857143)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 / 14 = 0.07142857143 (left: 0.07142857143) -> 0.07142857143 / 2 = 0.035714285715",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 2 2 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15) -> No possible next steps with just one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15) -> 15 / 8 = 1.875 (left: 1.875)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "No possible next steps with just one number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 2 + 2 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 1 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 1 13) -> 1 + 13 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1 14"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15) -> 15 - 2 = 13 (left: 8)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0.07142857143 / 2 = 0.035714285715"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 4 / 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2 7) -> 7 - 2 = 5 (left: 4 5) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 14 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 14 15) -> 14 + 15 = 29 (left: 29)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "1 14"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14) -> 14 / 2 = 7",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> Input: 3 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14) -> No possible next steps, the input is already at the target number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15) -> 15 - 8 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "0.07142857143 / 2 = 0.035714285715"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 2 2 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 5 5) -> 2 + 5 = 7 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 2 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 2 7) -> 4 + 2 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 2 2 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 2 7"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 2  -> 4 + 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> There are no possible next steps as the input is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 2 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 2 2 9) -> 2 / 2 = 1 (left: 1 9) -> 1 * 9 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 4 7"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 4 + 7 = 11 (left: 2 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 2 4 7) -> 4 + 7 = 11 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 1 * 14 = 14 (left: 14) -> No further steps can be taken with just one number.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 2 4 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 2 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 + 2 = 7 (left: 2 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 2 5) -> 5 + 2 = 7 (left: 2 7) -> 2 * 7 = 14 (left: 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 14"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 - 1 = 13 (left: 13) -> 13 + 2 = 15 (left: 2 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Resampled state": "1 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 2 14) -> 2 / 2 = 1 (left: 1 14) -> 14 / 1 = 14 (left: 14) -> No possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Input": "2 2 2 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1062": {
        "puzzle": "4 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 - 4 = 5 (left: 5 9) -> 9 - 5 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> There is only one possible next step: 6 * 6 = 36",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> There is only one possible next step: 6 * 6 = 36 -> There is only one possible next step: 6 * 6 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps as there are no more numbers to operate on. The final result is 36.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 4 = 2.25 (left: 2.25 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 * 11 = 110 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 2.25 + 9 = 11.25 (left: 11.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> No possible next steps with a single number input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> No possible next steps with a single number input. -> No possible next steps with a single number input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> 36 / 2 = 18 -> 10 / 2 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "5.2",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> There are no possible next steps with only one number given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> There are no possible next steps with only one number given. -> Please provide more than one number for calculation.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 + 36 = 45 (left: 45)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the input 36.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps for the input 36. -> There are no possible next steps for the input 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> There are no possible next steps with only the number 36.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> There are no possible next steps with only the number 36. -> None",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Input: 5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "10 11 36"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number provided.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> None, as there is only one number provided. -> There are no possible next steps as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 + 2 = 38",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 7 9 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps as there are no other numbers given to perform operations with.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There are no possible next steps as there are no other numbers given to perform operations with. -> N/A",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "36"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 / 2 = 18 -> 36 - 2 = 34 (left: 34)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Input: 5"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 11"
                }
            },
            "Step 1": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 10 + 11 = 21 (left: 21 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 - 6 = 30 (left",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> 36 - 6 = 30 (left -> 36 * 6 = 216 (left: 216)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "36"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 18 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "9.4",
                    "Pruned state": "Input: 5"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 11 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 9 / 4 = 2.25 (left: 2.25 9) -> 5 - 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> None, as there is only one number given. -> Cannot perform any operations with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 4 * 9 = 36 (left: 9 36) -> 9 * 4 = 36 (left: 36) -> There is only one number, so there are no possible next steps. -> There are no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 4 9 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 6 + 12 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 6 + 12 = 18 (left: 12 18) -> 12 * 18 = 216 (left: 216)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> 36 / 2 = 18 -> 36 + 2 = 38 (left: 38 / 2 = 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps. -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 4 = 14 (left: 9 11 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 "
                }
            },
            "Step 1": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 3 + 5 = 8 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 10 = 1 (left: 4 9  -> 3 + 5 = 8 ( -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "36"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> There is only one number given in the input, so there are no possible next steps to calculate.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> There is only one number given in the input, so there are no possible next steps to calculate. -> Input: 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> There are no possible next steps for the input 36 as there are no other numbers provided for calculations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 9 = 36 (left: 10 11 36) -> 36 - 10 = 26 (left: 10 26) -> 10 + 26 = 36 (left: 36) -> There are no possible next steps for the input 36 as there are no other numbers provided for calculations. -> There are no possible next steps for the input 36 as there are no other numbers provided for calculations.",
                "Pruning": null
            }
        },
        "Input": "4 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1063": {
        "puzzle": "7 9 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84) -> 8 * 4 = 32",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 63 = -42 (left: -42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 63 = -42 (left: -42) -> -42 - 8 = -50 (left: -8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "6 3"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857 (left: 12.857 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 63 = -42 (left: -42)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 63 = -42 (left: -42) -> -42 / 2 = -21 (left: 2)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "21 63"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42) -> 42 / 2 = 21",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 3 * 2 = 6 (left: 6 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 5 * 5 = 25 (left: 25 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 5 * 5 = 25 (left: 25 5) -> 25 / 5 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "There are no possible next steps as there are not enough numbers provided for an operation."
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 10 = 1 (left: 7 9 1)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 10 = 19 (left: 7 11 19) -> 7 + 11 = 18 (left: 18 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 - 21 = 42 (left: 42) -> There are no possible next steps as there are not enough numbers provided for an operation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 * 63 = 1323 (left: 1323) -> 132 + 3 = 135 (left: 135)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 * 4 = 32"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 11 * 7 = 77 (left: 77 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 63 = -42 (left: -42)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 - 63 = -42 (left: -42) -> -42 * 2 = -84 (left: -84)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "21 63"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 4 + 10 = 14 (left: 14 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 4 + 10 = 14 (left: 14 5) -> 14 * 5 = 70 (left: 70)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 * 4 = 32"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 + 10 = 19 (left: 7 11 19)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 7 = 17 (left: 9 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 7 = 17 (left: 9 11  -> 9 / 11 = 0.8181818181818182 (left: 0.8181818181818182)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 9 / 7 = 1.2857142857142858 (left: 1.2857142857142858)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84) -> 8 + 4 = 12",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "10 11 63"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 10 53) -> Input: 5 9 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 6 + ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 6 +  -> 6 + 14 = 20",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 + 9 = 16 (left: 10 11 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 21 + 31 = 52 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 5 + 10 = 15 (left: 15) -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 * 10 = 90 (left: 7 11 90)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 10 11 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 63 - 10 = 53 (left: 11 53)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 10 11"
                }
            },
            "Step 3": {
                "Step": "10 * 11 = 110 (left: 7 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 11 = 110 (left: 7 9  -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 21 + 63 = 84 (left: 84) -> 8 / 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "8 * 4 = 32"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "10 + 11 = 21 (left: 7 9 21)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "7 11 90"
                }
            },
            "Step 1": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 * 10 = 90 (left: 7 11 90) -> 90 / 7 = 12.857142857142857 (left: 12.857142857142857 11) -> 12.857142857142857 + 11 = 23.857142857142857 (left: 11 23.857142857142857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "21 63"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 4 + 6 = 10 (left: 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 4 + 6 = 10 (left: 10 10) -> 10 / 10 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "21 63"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "21 63"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 / 21 = 3 (left: 3 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 10 11 63) -> 10 + 11 = 21 (left: 21 63) -> 63 / 21 = 3 (left: 3 21) -> 21 - 3 = 18 (left: 18 21)",
                "Pruning": null
            }
        },
        "Input": "7 9 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1064": {
        "puzzle": "1 4 5 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 4 5 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 7 * 10 = 70 (left: 70)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "5 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 + 5 = 10 (left: 7 10) -> 10 / 7 = 1.42857142857 (left: 1.42857142857)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 7 - ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 7 -  -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1.5 6) -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 3": {
                "Step": "5 + 7 = 12 (left: 1 4 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 7 = 12 (left: 1 4 12) -> 12 - 1 = 11 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6) -> 3 + 6 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 + 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 + 4 = 5 (left: 5 6) -> 5 / 6 = 0.8333 (left: 0.8333)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 5 5 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 5 5 7) -> 7 / 5 = 1.4 (left: 1.4 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 2 = 7 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 / 4 = 1.5 (left: 1 1.5) -> 1 / 1.5 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 1 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1 5) -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 5 - 4 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 6 - 1 = 5 (left: 4 5) -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                }
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 7"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> Input: 3 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "1 4 6"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 + 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 1 4 6) -> 1 + 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 5 "
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 / 5 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 4 5  -> 4 / 5 = 0.8 (left: 0.8) -> 0.8 * 2 = 1.6 (left: 1.6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "5 5 7"
                }
            },
            "Step 4": {
                "Step": "1 + 4 = 5 (left: 5 5 7) -> 5 - 5 = 0 (left: 0 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 4 5  -> Input: 10 2 -> 10 + 2 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Input": "1 4 5 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1065": {
        "puzzle": "3 4 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 3 5 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 3 13 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 3 13 9) -> 13 - 3 = 10 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 + 6 = 10 (left: 9 10) -> 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "27 + 2 = 29"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 4 + 9 = 13 (left: 13 12) -> 13 / 12 = 1.0833333333333333 (left: 1.0833333333333333)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 9 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 9 9 12) -> 12 - 9 = 3 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9 27) -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "27 + 2 = 29"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 9 12) -> 9 - 4 = 5 (left: 5 12) -> 12 / 5 = 2.4 (left: 2.4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 27"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 27",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 27 -> 27 + 2 = 29",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "27 + 2 = 29"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 * 3 = 12 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Input: 4 6 10",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 3 5 9) -> Input: 4 6 10 -> 10 / 4 = 2.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 / 4 =  -> 9 / 4 = 2.25",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 * 3 = 9 (left: 9 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 * 3 = 9 (left: 9 27) -> 27 - 9 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "27 + 2 = 29"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 4 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 27"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 + 27 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "3.0",
                    "Pruned state": "4 6 9"
                }
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 4 * 6 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24 27)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24 27) -> 27 - 24 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "27 + 2 = 29"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 9 * 7 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 27"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 27 - 4 = 23 (left: 23)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 27 - 4 = 23 (left: 23) -> There is only one number, so no possible next steps.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "9 / 4 = 2.25 (left: 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 4 = 2.25 (left: 3  -> 3 + 14 = 17 (left: 8 8 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Resampled state": "4 27"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 5",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 3 * 9 = 27 (left: 4 27) -> 5 -> There is only one possible next step: 5 + 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 27"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "1.33 9"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 4 / 3 = 1.33 (left: 1.33 9) -> Input: 3 4 6",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 4 / 3 = 1.33 (left: 1.33 9) -> Input: 3 4 6 -> 6 / 3 = 2 (left: 2 4)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 4 9 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 7 9 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 7 9 9) -> 7 + 9 = 16 (left: 9 9 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 9"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 4 3 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 4 3 9) -> 4 / 3 = 1.33 (left: 1.33 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 3 24)",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 + 9 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 + 4 = 13 (left: 6 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 9 + 4 = 13 (left: 6 13) -> 13 / 6 = 2.16667 (left: 2.16667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 9 / 3 = 3 (left: 3 27) -> 3 * 3 = 9 (left: 9 27)",
                "Pruning": null
            }
        },
        "Input": "3 4 9 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1066": {
        "puzzle": "3 3 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 - 8) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "2 6 "
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 6 / 2 = 3 (left: 3) -> 3 + 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "2 6"
                }
            },
            "Step 3": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 4 - 2 = 2 (left: 2 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.0",
                    "Pruned state": "6 6 8"
                }
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 6 8) -> 6 * 6 = 36 (left: 8 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> 8 + 5 = 13 (left: 5 13)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 8 - 6 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "4.0",
                    "Pruned state": "2 6 "
                }
            },
            "Step 4": {
                "Step": "8 - 6 = 2 (left: 2 6  -> 2 + 6 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (6 + 3) * 3 * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 / 6 = 1.5 (left: 1.5 8) -> 1.5 * 8 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (8 - 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 + 6 = 15 (left: 8 15) -> 8 * 15 = 120 (left: 120)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 18 "
                }
            },
            "Step 3": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 18 - 3 = 15 (left: 3 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 18 - 3 = 15 (left: 3 15) -> 15 / 3 = 5 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 10 - 5 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 10 - 5 = 5 (left: 5) -> 5 / 5 = 1 (left: 1)  ",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 - 3 = 0 (left: 0 6 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 18 "
                }
            },
            "Step 1": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 + 18 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 3 = 18 (left: 3 18  -> 3 + 18 = 21 (left: 21) -> 21 + 2 = 23",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "9 6 8"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 6 * 8 = 48 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (3 * 6)) - 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 3 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 6 8"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 4 - 2 = 2 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (8 - 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 3 18 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "0 6 8"
                }
            },
            "Step 1": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 - 3 = 0 (left: 0 6 8) -> 8 - 6 = 2 (left: 0 2) -> 2 - 0 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 8"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 3 9 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "3 8"
                }
            },
            "Step 5": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 3 = 9 (left: 3 9 8) -> 9 / 3 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11) -> 11 - 4 = 7 (left: 7)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "6 / 3 = 2 (left: 3 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54) -> 8 - 54 = -46 (left: -46)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (8 - 6) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 6 8"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 * 6 = 54 (left: 8 54) -> 8 + 54 = 62 (left: 62)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                }
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": {
                    "Idx": "8.2",
                    "Pruned state": "24"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (8 - 6) = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 6 8) -> 9 - 6 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 3) * (6 + 8) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1067": {
        "puzzle": "4 4 7 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 4 * 8 = 32 (left: 32 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 - 7 = 1 (left: 1 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 8 - 7 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 / 15 = 1.06667 (left: 1.06667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 / 15 = 1.06667 (left: 1.06667) -> 1.06667 * 2 = 2.13334",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "7 8 16"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16) -> 56 + 16 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 -> 16 / 15 = 1.06666666667 (left: 1.06666666667 31)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3) -> 4 * 3 = 12 (left: 12) -> 12 / 2 = 6 (left: 6 8)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 4  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 / 15 = 1.0666666666666667 (left: 1.0666666666666667)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 / 15 = 1.0666666666666667 (left: 1.0666666666666667) -> 1.0666666666666667 - 2 = -0.9333333333333333",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.06666666667 31"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 -> 16 / 15 = 1.06666666667 (left: 1.06666666667 31) -> 31 - 1.06666666667 = 29.9333333333 (left: 1.06666666667 29.9333333333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 -> 16 / 15 = 1.06666666667 (left: 1.06666666667 31) -> 31 - 1.06666666667 = 29.9333333333 (left: 1.06666666667 29.9333333333) -> 29.9333333333 +",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 8 - 4 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 3": {
                "Step": "7 + 4 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 * 15 = 240 (left: 240)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 * 15 = 240 (left: 240) -> 240 / 30",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 4 4 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 8 8"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 7 8 8) -> 7 * 8 = 56 (left: 8 56) -> 8 * 7 = 56 (left: 56)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 * 15 = 240 (left: 240)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 * 15 = 240 (left: 240) -> There are no possible next steps with the input 240 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 7 8) -> 8 - 1 = 7 (left: 7 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 * 15 = 240 (left: 240)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 * 15 = 240 (left: 240) -> None, since there is only one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "4 3"
                }
            },
            "Step 5": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 4 = 11 (left: 4 8 11) -> 11 - 8 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> 1 * 1 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1.06666666667 31"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 7 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 - 4 = 4 (left: 4 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 (left: 31)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 (left: 31) -> 3 * 1 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "16 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 / 15 = 1.06666666667 (left: 1.06666666667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 / 15 = 1.06666666667 (left: 1.06666666667) -> 1.06666666667 * 2 = 2.13333333334 (left: 2.13333333334)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1.06666666667 31"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 7 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "8 / 4 = 2 (left: 2 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 4 = 2 (left: 2 7  -> 7 - 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 * 15 = 240 (left: 240)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 * 15 = 240 (left: 240) -> 240 - 2 = 238 (left: 2)",
                "Pruning": {
                    "Idx": "4.2",
                    "Pruned state": "16 15"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Resampled state": "16 15"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 - 15 = 1 (left: 1) -> No possible next steps since there is only one number.",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "16 7 8"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 - 8 = -1 (left: 16 -1)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 - 8 = -1 (left: 16 -1) -> 16 + (-1) = 15",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 3": {
                "Step": "8 / 4 = 2 (left: 4 7 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 4 = 2 (left: 4 7  -> 4 + 7 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 5": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3) -> 4 - 3 = 1 (left: 1) -> There are no possible next steps with just one number provided.",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 8"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 7 8 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 7 8 16) -> 7 * 8 = 56 (left: 56 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "4 3"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3) -> 4 / 3 = 1.33333 (left: 1.33333)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 4 4 7) -> 7 - 4 = 3 (left: 4 3) -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 * 2 = 2.66666",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.06666666667 31"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 -> 16 / 15 = 1.06666666667 (left: 1.06666666667 31) -> 31 - 1.06666666667 = 29.9333333333 (left: 29.9333333333)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1.06666666667 31"
                }
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 7 8) -> 7 + 8 = 15 (left: 16 15) -> 16 + 15 = 31 -> 16 / 15 = 1.06666666667 (left: 1.06666666667 31) -> 31 / 1.06666666667 = 29.00000000003 (left: 29.000000000",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1.06666666667 31"
                }
            }
        },
        "Input": "4 4 7 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1068": {
        "puzzle": "3 5 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> 12 - 5.33 = 6.67 (left: 6.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 - 8 = 17 (left: 8)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 - 5) / (3 / 2) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 / 11 = 1.3636363636363635 (left: 1 12) -> 1 + 12 = 13 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 - 5) / (3 / 12) = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 15 11 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 11 12"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 8 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 8 11 12) -> 8 + 11 = 19 (left: 19 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 - 5) / (3 / 2) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "5 + 11 = 16 (left: 3 16 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 12 / 6 = 2 (left: -> 12 - 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 - 5) / (3 / 2) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 + 16 = 19 (left: 12 19) -> 12 / 19 = 0.631578947368421 (left: 0.631578947368421)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 - 3 = 13 (left: 13 12) -> 13 + 12 = 25 (left: 25) -> 25 + 2 = 27 (left: 2)"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 12 - 3 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 - 5) / 3 * 12 = 24"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "11 * 3 = 33 (left: 5 33 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 6 12"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 - 5) / (3 / 12) = 24"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 1": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 16 / 3 = 5.33 (left: 5.33 12) -> Input: 3 9 27",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Resampled state": "3 16 12"
                }
            },
            "Step 3": {
                "Step": "5 + 11 = 16 (left: 3 16 12) -> 3 * 16 = 48 (left: 12 48)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 * 11 = 55 (left: 3 55 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "15 11 12"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 15 11 12) -> 15 - 11 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 12) -> 6 / 3 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (11 - 5) * (3 / 6) * 12 = 24"
            }
        },
        "Input": "3 5 11 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "1069": {
        "puzzle": "4 4 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 6 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 - 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "10 14"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps with the input of -4."
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "6 8 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 6 / 4 = 1.5 (left: 1.5) -> There is only one number given (1.5), so there are no possible next steps to perform any operations.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: 4 * (10 - (6 - 4)) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 27 / 3 = 9 (left: 9)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 4 4 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 * 3 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "7.0",
                    "Pruned state": "6 10 16"
                }
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 6 10 16) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 * 14 = 140 (left: 140) -> 1. 140 + 2 = 142"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 6 10"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 6 10 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 6 10 16) -> 10 + 6 = 16 (left: 6 16 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 9 27"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 3 * 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "10 14"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((4 + 4) + 6) + 10 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 4 6 2.5)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * (4 * 4) = 24",
                "Pruning": {
                    "Idx": "6.2",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * (4 * 6) = 24"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 10"
                }
            },
            "Step 1": {
                "Step": "4 / 4 = 1 (left: 1 6 10) -> 1 + 6 = 7 (left: 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 4 = 1 (left: 1 6 10) -> 1 + 6 = 7 (left: 7 10) -> 10 / 7 = 1.42857 (left: 1.42857)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 3": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 + 14 = 24 (left: 24) -> Answer: ((4 + 4) + 6) + 10 = 24"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "6 + 4 = 10 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 4 + 6 = 10 (left: 10) -> None, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.4",
                    "Resampled state": "3 27"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 10 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 4 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 / 4 = 2 (left: -> 10 - 4 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 - 14 = -4 (left: -4) -> There are no possible next steps with the input of -4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 10 / 14 = 0.7142857142857143 (left: 0.7142857142857143) -> 0.7142857142857143 * 2 = 1.4285714285714286 "
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 6 16 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 10 10"
                }
            },
            "Step 1": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 * 10 = 40 (left: 10 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 4 = 10 (left: 4 10 10) -> 4 * 10 = 40 (left: 10 40) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * (4 * 4) = 24",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3 9 27"
                }
            },
            "Step 4": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * (10 - 4) = 24",
                "Pruning": {
                    "Idx": "8.4",
                    "Pruned state": "3 27"
                }
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 10 - 6 = 4 (left: 4 10) -> 9 / 3 = 3 (left: 3 9 27 -> 9 / 3 = 3 (left: 3 27) -> 3 * 27 = 81 (left: 81)"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 4 10 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 5 * 7 = 35 (left: 35)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 4 6  -> 5 * 7 = 35 (left: 35) -> 35 + 2 = 37",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Resampled state": "24"
                }
            },
            "Step 3": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 - 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (10 - 6) * (10 - 4) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Pruned state": "4 4 10"
                }
            },
            "Step 4": {
                "Step": "10 - 6 = 4 (left: 4 4 10) -> 10 + 4 = 14 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 4 = 8 (left: 6 8 10) -> 6 + 8 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4) -> There are no possible next steps for the input 1.4."
            }
        },
        "Input": "4 4 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "1070": {
        "puzzle": "4 6 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 13 = 11 (left: 9 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 13 = 11 (left: 9 11  -> 9 + 11 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 * 6 = 24 (left: 24 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 * 6 = 24 (left: 24 9) -> 24 / 9 = 2.6666666666666665 (left: 2.6666666666666665)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 6"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 9 13) -> 9 / 1.5 = 6 (left: 6 13",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "3 6 13"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 6 / 3 = 2 (left: 2 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 6 13) -> 6 / 3 = 2 (left: 2 13) -> 13 - 2 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 6"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 6 4)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 13",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 24 - 13 -> 24 - 13 = 11",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10 4) -> 4 * 10 = 40 (left: 4 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 6"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> Input: -> There is no input provided. Please provide an input sequence to generate possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 + 6 = 10 (left: 4 10) -> 15 - 3 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 6"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 4 15 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 + 9 = 15 (left: 4 15) -> 15 / 4 = 3.75 (left: 3.75)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 6 + 5 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 6"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 10 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 4 + 6 = 10 (left: 10 9) -> 10 / 9 = 1.11 (left: 1.11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 9 - 4 = 5 (left: 5 6) -> 5 * 6 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> Input: 3 -> No possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 6"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.666666",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 4 / 6 = 0.666666 -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 6"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 15 - 10 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 9 13 24)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "9 13 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 9 13 24) -> 13 - 9 = 4 (left: 4 13 24) -> 13 / 4 = 3.25 (left: 3.25 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 3 + 9 = ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 3 + 9 =  -> 3 + 9 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 6"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 4 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 4.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 9 13"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 9 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 9 10 13) -> 10 / 9 = 1.11 (left: 1.11 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "4 6"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 6"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 6 4) -> 6 - 4 = 2 (left: 2 4 4) -> 2 + 4 = 6 (left: 4 6) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": "NA"
            }
        },
        "Input": "4 6 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1071": {
        "puzzle": "3 5 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 + 11 = 17 (left: 15 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 / 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 3.666"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 / 3 = 3.666666 -> 11 / 3.666666 = 3 (left: 3 3.666 -> 3 * 3.666 = 10.998 (left: 10.998)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "3 3.666"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 / 3 = 3.666666 -> 11 / 3.666666 = 3 (left: 3 3.666 -> 3 - 3.666 = -0.666 (left: -0.666)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 11 11"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 / 3 = 3.67 (left: 3.67 11) -> 11 / 3.67 = 2.99 (left: 2.99)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 3.666"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 / 3 = 3.666666 -> 11 / 3.666666 = 3 (left: 3 3.666 -> 3 * 3.666 = 10.998 (left: 10.998)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "3 3.666"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 / 3 = 3.666666 -> 11 / 3.666666 = 3 (left: 3 3.666 -> 3 * 3.666 = 10.998 (left: 10.998)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 - 11 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "48 11"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11) -> 48 + 11 = 59 (left: 59)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11) -> 48 + 11 = 59 (left: 59) -> There is only one number given, so there are no possible next steps to calculate.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Resampled state": "3 11 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 * 11 = 33 (left: 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 3 11 30) -> 3 * 11 = 33 (left: 30) -> There are no possible next steps with the input 30.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 * 6 = 18 (left: 18 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 * 6 = 18 (left: 18 11) -> 18 / 11 = 1.6363636363636363 (left: 1.6363636363636363)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "48 11"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11) -> 48 + 11 = 59 (left: 59)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11) -> 48 + 11 = 59 (left: 59) -> 59 + 2 = 61",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 8 + 6 = 14 (left: 11 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 3.666"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 / 3 = 3.666666 -> 11 / 3.666666 = 3 (left: 3 3.666 -> 3 / 3.666 = 0.819672 (left: 0.819672)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "3 3.666"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 / 3 = 3.666666 -> 11 / 3.666666 = 3 (left: 3 3.666 -> 3 * 3.666 = 10.998 (left: 10.998)",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11) -> 11 / 3 = 3.67 (left: 3.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 3.666"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 / 3 = 3.666666 -> 11 / 3.666666 = 3 (left: 3 3.666 -> 3 / 3.666 = 0.818 (left: 0.818)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "3 3.666"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 / 3 = 3.666666 -> 11 / 3.666666 = 3 (left: 3 3.666 -> 3 / 3.666 = 0.818 (left: 0.818)",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 6 * 11 = 66 (left: 15 66) -> 15 * 66 = 990 (left: 990)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 / 3 = 3.666666",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 / 3 = 3.666666 -> 11 / 3.666666 = 3 (left: 3 3.666",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 11"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 / 9 = 1.22 (left: 1.22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 11 / 9 = 1.22 (left: 1.22) -> None. The input only has one number, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 3 11 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 / 3 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 6 / 3 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 5 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 5 11) -> Input: 4 6 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "9 11"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 / 11 \u2248 0.818 (left: 0.818)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 3 + 6 = 9 (left: 9 11) -> 9 / 11 \u2248 0.818 (left: 0.818) -> 0.818 + 1 = 1.818",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 5 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 5 = 8 (left: 6 8 11) -> 6 * 8 = 48 (left: 48 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 6 11"
                }
            },
            "Step 3": {
                "Step": "5 + 3 = 8 (left: 6 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 3 = 8 (left: 6 8 11) -> 6 + 8 = 14 (left: 14 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 3.666"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 / 3 = 3.666666 -> 11 / 3.666666 = 3 (left: 3 3.666 -> 3 / 3.666 = 0.818 (left: 0.818)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "3 3.666"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 / 3 = 3.666666 -> 11 / 3.666666 = 3 (left: 3 3.666 -> 3 / 3.666 = 0.818 (left: 0.818)",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 3 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "6 11 15"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 6 11 15) -> 11 - 6 = 5 (left: 5 15) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 11 11"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 3 11 11) -> 11 - 3 = 8 (left: 8 11) -> 8 + 11 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Resampled state": "3 3.666"
                }
            },
            "Step 5": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 / 3 = 3.666666 -> 11 / 3.666666 = 3 (left: 3 3.666 -> 3 * 3.666 = 10.998 (left: 10.998)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "3 3.666"
                }
            },
            "Step 6": {
                "Step": "11 - 5 = 6 (left: 3 6 11) -> 11 / 3 = 3.666666 -> 11 / 3.666666 = 3 (left: 3 3.666 -> 3 + 3.666 = 6.666 (left: 6.666)",
                "Pruning": "NA"
            }
        },
        "Input": "3 5 6 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1072": {
        "puzzle": "1 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 4 * 5 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 * 5 = 5 (left: 5 5) -> 5 - 5 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 - 6 = 30 (left: )",
                "Pruning": {
                    "Idx": "3.4",
                    "Pruned state": "36"
                }
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There is only one number given, so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 1 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 ^ 12 = 531441 (left: 531441)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 ^ 12 = 531441 (left: 531441) -> 5 * 3 * 1 * 4 * 4 * 1 = 240 (left: 240)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "25"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 is already a single number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 is already a single number, so there are no possible next steps. -> 36 / 2 = 18",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 8 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15) -> 15 + 8 = 23 (left: 8)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "25"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 3 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 * 3 = 36 (left: 3 36) -> 36 - 3 = 33 (left: 33)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "2.5 10"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 1 40 13)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 5 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "25"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 * 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 - 8 = 17 (left: 8)",
                "Pruning": {
                    "Idx": "3.2",
                    "Pruned state": "3 12"
                }
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 2 * 18 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "2.5 10"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "8 * 5 = 40 (left: 1 13 40)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 13 = 3 (left: -> 40 + 13 = 53 (left: 53)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There is only one number, so no operations can be performed.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> There is only one number, so no operations can be performed. -> There is only one number, so no operations can be performed.",
                "Pruning": null
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 - 1 = 4 (left: 4 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 1 = 4 (left: 4 8 13) -> 8 / 4 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 3 9) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 2 / 36 = 0.05555555555555555 (left: 0.055555",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 8 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 - 4 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5 5) -> 3 + 6 = 9 (left: 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Resampled state": "3 12"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15) -> 15 - 8 = 7 (left: 8)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "8 - 1 = 7 (left: 7 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 * 40 = 40 (left: 40 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 1 * 40 = 40 (left: 40 13) -> 40 - 13 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 13 - 1 = 12 (left: 40 12) -> 40 - 12 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 + 2 = 38 (left: 38)",
                "Pruning": {
                    "Idx": "4.4",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 1 5 5)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 1": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 1 + 5 = 6 (left: 5 6) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "1 5 5"
                }
            },
            "Step 3": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 8 = 5 (left: 1 5 5) -> 5 - 1 = 4 (left: 4 5) -> 5 + 4 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36) -> 36 / 2 = 18 -> 36 - 18 = ",
                "Pruning": null
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "1 40 13"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 1 40 13) -> 40 / 1 = 40 (left: 40 13) -> Input: 5 10 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 8 13"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 5 8 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 5 8  -> Input: 10 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2.5 10"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 3 9) -> 10 / 4 = 2.5 (left: 2.5 10) -> 2.5 * 10 = 25 (left: 10 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 5 8 12) -> 8 - 5 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 3 9) -> 10 / 4 = 2.5 (left: 2.5 10) -> 2.5 * 10 = 25 (left: 10 25) -> 25 / 10 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "5.4",
                    "Pruned state": "2.5 10"
                }
            }
        },
        "Input": "1 5 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1073": {
        "puzzle": "3 3 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 * 3 = 12 (left: 12 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 * 3 = 12 (left: 12 3) -> 12 + 3 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 9 4) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 6 / 9 = 0.666666",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 6 / 9 = 0.666666 -> 6 + 9 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 + 13) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 3 4)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 + 13 = 22 (left: 6 22) -> 6 / 22 = 0.27 (left: 0.27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 3 6 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 * 3 = 12 (left: 12 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 4 * 3 = 12 (left: 12 9) -> 12 / 9 = 1.33 (left: 1.33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 9 + 7 = 16 (left: 7 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Resampled state": "3 6 13"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 3 6 13) -> 13 - 3 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 3 6 13) -> 13 - 3 = 10 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 9 - 6 = 3 (left: 3 13) -> 13 / 3 = 4.33333 (left: 4.33333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Resampled state": "3 9 "
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 3 + 9 = 12 (left: 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 3 9  -> 3 + 9 = 12 (left: 9 12) -> 9 / 12 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 + 3 = 7 (left: 3 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 4 + 3 = 7 (left: 3 7) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 = ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 * 4 =  -> 3 * 4 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "6 9 13"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 3 9 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "3 4 9"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 9) -> 3 + 4 = 7 (left: 7 9) -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 * 3 = 9 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 13"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 13) -> 13 - 9 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 3 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 - 3 = 0 (left: 0 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 3 4) -> 3 - 3 = 0 (left: 0 4) -> 4 - 0 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 13) -> 13 - 9 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: (3 + 3) * (9 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 9 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "1074": {
        "puzzle": "7 7 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 3 7 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 10 - 9 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 * 10 = 90 (left: 90)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 / 2 = 9 (left: 9 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 / 2 = 9 (left: 9 14) -> 9 * 14 = 126 (left: 126)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "13 / 2 = 6.5"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 10 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.0",
                    "Resampled state": "9 10 14"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 - 9 = 1 (left: 1 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 10 - 9 = 1 (left: 1 14) -> 1 + 14 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 10 16"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 10 10 16) -> 10 / 10 = 1 (left: 1 10 16) -> 16 - 10 = 6 (left: 1 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 10 10 16) -> 10 / 10 = 1 (left: 1 10 16) -> 16 - 10 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 7 2 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 7 "
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 3 7  -> 9 / 5 = 1 (left: 1 9) -> 9 - 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 10 16"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 10 10 16) -> 10 / 10 = 1 (left: 1 10 16) -> 10 / 1 = 10 (left: 10 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 10 10 16) -> 10 / 10 = 1 (left: 1 10 16) -> 10 / 1 = 10 (left: 10 16) -> 10 + 16 = 26 (left: 26)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "13 / 2 = 6.5"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 7 - 2 = 5 (left: 5 10) -> 27 - 9 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 2 + 18 = 20 (left: 14 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 2 + 18 = 20 (left: 14 20) -> 14 * 20 = 280 (left: 280)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "13 / 2 = 6.5"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 9 10 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 7 9 3) -> 7 - 3 = 4 (left: 4 9) -> Input: 10 3",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 7 9 3) -> 7 - 3 = 4 (left: 4 9) -> Input: 10 3 -> 10 + 3 = 13 (left: 13)",
                "Pruning": {
                    "Idx": "9.2",
                    "Pruned state": "4 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 7 9 3) -> 7 - 3 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 7 9 3) -> 7 - 3 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "13 / 2 = 6.5"
                }
            }
        },
        "Agent 5": {
            "Step 0": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 7 / 2 = 3.5 (left: 3.5 10) -> 10 / 3.5 = 2.857 (left: 2.857 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 - 2 = 16 (left: 16 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 - 2 = 16 (left: 16 14) -> 16 + 14 = 30 (left: 30)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "2 18 14"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "10 - 7 = 3 (left: 7 9 3) -> 7 - 3 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 7 = 3 (left: 7 9 3) -> 7 - 3 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13) -> 13 + 2 = 15 (left: 13 15)",
                "Pruning": null
            }
        },
        "Agent 6": {
            "Step 0": {
                "Step": "7 * 9 = 63 (left: 10 63)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 10 / 2 = 5 (left: 5 10) -> 5 + 10 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 3": {
                "Step": "10 - 7 = 3 (left: 7 9 3) -> 7 - 3 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 7 = 3 (left: 7 9 3) -> 7 - 3 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 13) -> 13 / 2 = 6.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 - 14 = 4 (left: 2 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 - 14 = 4 (left: 2 4) -> 3 * 9 = 27 (left: 27 27)",
                "Pruning": null
            }
        },
        "Agent 7": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 7 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 9 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Resampled state": "5 14"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 14) -> 4",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 9 10 14) -> 14 - 9 = 5 (left: 5 14) -> 4 -> 4 + 4 = 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 - 2 = 16 (left: 2 16 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 - 2 = 16 (left: 2 16 14) -> 14 - 2 = 12 (left: 12 14)",
                "Pruning": null
            }
        },
        "Agent 8": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.0",
                    "Resampled state": "2 7 10"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 7 10) -> 2 + 7 = 9 (left: 9 10) -> 9 - 10 = -1 (left: -1 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "7 2 10"
                }
            },
            "Step 3": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 - 7 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 10 - 7 = 3 (left: 3 10) -> 3 * 10 = 30 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "9.4",
                    "Resampled state": "1 10 16"
                }
            },
            "Step 5": {
                "Step": "7 + 9 = 16 (left: 10 10 16) -> 10 / 10 = 1 (left: 1 10 16) -> 16 - 10 = 6 (left: 1 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 9 = 16 (left: 10 10 16) -> 10 / 10 = 1 (left: 1 10 16) -> 16 - 10 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "7.4",
                    "Pruned state": "4 + 4 = 8"
                }
            }
        },
        "Agent 9": {
            "Step 0": {
                "Step": "9 - 7 = 2 (left: 2 7 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 7 9 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 7 9 3) -> 7 - 3 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 9 10"
                }
            },
            "Step 3": {
                "Step": "7 + 9 = 16 (left: 10 10 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 9 = 16 (left: 10 10 16) -> 10 / 10 = 1 (left: 1 10 16)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Resampled state": "2 18 14"
                }
            },
            "Step 5": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 / 2 = 9 (left: 9 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 7 = 2 (left: 7 2 10) -> 2 + 10 = 12 (left: -> 10 + 8 = 18 (left: 2 18 14) -> 18 / 2 = 9 (left: 9 14) -> 9 * 14 = 126 (left: 126)",
                "Pruning": {
                    "Idx": "6.4",
                    "Pruned state": "13 / 2 = 6.5"
                }
            }
        },
        "Input": "7 7 9 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "Cost": {
        "input_tokens": 698722,
        "output_tokens": 325826.9924603188,
        "total_cost": 0.8381014886904781
    }
}