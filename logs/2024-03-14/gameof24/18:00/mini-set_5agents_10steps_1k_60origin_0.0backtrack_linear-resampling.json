{
    "0": {
        "puzzle": "1 1 4 6",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 1 = 1 (left: 1 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Current state": "4 + 1 = 5 (left: 1 5 6)"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 1 * 5 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Current state": "5 + 1 = 6 (left: 6 6)"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Current state": "6 * 6 = 36 (left: 36)"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Current state": "36 / 2 = 18"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 2 = 18 (left: 18 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Current state": "36 / 2 = 18 (left: 18 18)"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 2 = 18 (left: 18 18) -> 18 + 18 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "4.1",
                    "Current state": "18 + 18 = 36"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Current state": "18 / 18 = 1 (left: 36 1)"
                }
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 36 1) -> 36 + 1 = 37 (left: 37)",
                "Pruning": {
                    "Idx": "2.2",
                    "Current state": "6 - 5 = 1 (left: 1)"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "4 + 1 = 5 (left: 1 5 6)"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 6 - 1 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Current state": "6 / 1 = 6 (left: 6 6)"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 6 / 1 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Current state": "6 + 6 = 12 (left: 12)"
                }
            },
            "Step 9": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 6 / 1 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12) -> 12 - 8 = 4 (left: 4 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 1 = 5 (left: 1 5 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Current state": "4 + 1 = 5 (left: 1 5 6)"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 1 * 5 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Current state": "5 + 1 = 6 (left: 6 6)"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 / 6 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Current state": "6 * 6 = 36 (left: 36)"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 * 2 = 72",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Current state": "36 / 2 = 18"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Current state": "There are no possible next steps with the input of 36."
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> There are no possible next steps with the input of 36. -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Current state": "18 / 18 = 1 (left: 36 1)"
                }
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 36 1) -> 36 - 1 = 35 (left: 35)",
                "Pruning": {
                    "Idx": "3.3",
                    "Current state": "36 / 2 = 18"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "4 + 1 = 5 (left: 1 5 6)"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 / 1 = 5 (left: 6 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Current state": "6 / 1 = 6 (left: 6 6)"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 6 / 1 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Current state": "6 - 6 = 0 (left: 0)"
                }
            },
            "Step 9": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 6 / 1 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 1 2 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Current state": "4 + 1 = 5 (left: 1 5 6)"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Current state": "1 * 5 = 5 (left: 5 6)"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 1 * 5 = 5 (left: 5 6) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Current state": "6 * 6 = 36 (left: 36)"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Current state": "36 / 2 = 18"
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Current state": "18 + 18 = 36"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 1 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Current state": "18 / 18 = 1 (left: 1 36)"
                }
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 1 36) -> 1 + 36 = 37 (left: 37)",
                "Pruning": {
                    "Idx": "4.4",
                    "Current state": "There are no possible next steps with the input of 36."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "4 + 1 = 5 (left: 1 5 6)"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 / 1 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Current state": "6 / 1 = 6 (left: 6 6)"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 6 / 1 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "6 - 6 = 0 (left: 0)"
                }
            },
            "Step 9": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 6 / 1 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0) -> There are no possible next steps with the input 0.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 4 = 2 (left: 1 2 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.1",
                    "Current state": "4 + 1 = 5 (left: 1 5 6)"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 1 * 5 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Current state": "1 * 5 = 5 (left: 5 6)"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 1 * 5 = 5 (left: 5 6) -> 6 - 5 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Current state": "6 * 6 = 36 (left: 36)"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Current state": "There are no possible next steps with the input of 36."
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Current state": "18 + 18 = 36"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 - 18 = 0 (left: 0 36",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Current state": "18 / 18 = 1 (left: 36 1)"
                }
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 36 1) -> 36 + 1 = 37 (left: 37)",
                "Pruning": {
                    "Idx": "2.3",
                    "Current state": "6 - 5 = 1 (left: 1)"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "4 + 1 = 5 (left: 1 5 6)"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 6 / 1 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Current state": "6 / 1 = 6 (left: 6 6)"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 6 / 1 = 6 (left: 6 6) -> 6 + 6 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Current state": "6 - 6 = 0 (left: 0)"
                }
            },
            "Step 9": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 6 / 1 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 1 3 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Current state": "4 + 1 = 5 (left: 1 5 6)"
                }
            },
            "Step 1": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 1 * 5 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Current state": "5 + 1 = 6 (left: 6 6)"
                }
            },
            "Step 2": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Current state": "6 * 6 = 36 (left: 36)"
                }
            },
            "Step 3": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Current state": "There are no possible next steps with the input of 36."
                }
            },
            "Step 4": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> There are no possible next steps with the input of 36. -> There are no possible next steps with the input of 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Current state": "18 + 18 = 36"
                }
            },
            "Step 5": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 / 18 = 1 (left: 36 1)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Current state": "18 - 18 = 0 (left: 0 36"
                }
            },
            "Step 6": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 + 1 = 6 (left: 6 6) -> 6 * 6 = 36 (left: 36) -> 36 / 2 = 18 -> 18 + 18 = 36 -> 18 - 18 = 0 (left: 0 36 -> 36 - 0 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "0.1",
                    "Current state": "4 + 1 = 5 (left: 1 5 6)"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "4 + 1 = 5 (left: 1 5 6)"
                }
            },
            "Step 7": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 6 / 1 = 6 (left: 6 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.1",
                    "Current state": "5 / 1 = 5 (left: 6 5)"
                }
            },
            "Step 8": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 5 / 1 = 5 (left: 6 5) -> 6 / 5 = 1.2 (left: 1.2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Current state": "6 - 6 = 0 (left: 0)"
                }
            },
            "Step 9": {
                "Step": "4 + 1 = 5 (left: 1 5 6) -> 6 / 1 = 6 (left: 6 6) -> 6 - 6 = 0 (left: 0) -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            }
        },
        "Input": "1 1 4 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "1": {
        "puzzle": "1 1 11 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 1 = 1 (left: 1 11 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Current state": "11 / 1 = 11 (left: 1 11 "
                }
            },
            "Step 1": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Current state": "1 + 11 = 12 (left: 12)"
                }
            },
            "Step 2": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 1 + 11 = 12 (left: 12) -> There are no possible next steps as there are no more numbers to operate on. The final sequence is 2 8 8 14 12.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Current state": "There are no possible next steps as there are no more numbers to operate on. The final sequence is 2 8 8 14 12."
                }
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 1 + 11 = 12 (left: 12) -> There are no possible next steps as there are no more numbers to operate on. The final sequence is 2 8 8 14 12. -> There are no more possible next steps as all numbers have been operated on. The final sequence is 2 8 8 14 12.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Current state": "10 * 10 = 100 (left: 10 100 20)"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20) -> 100 - 10 = 90 (left: 10 90)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.3",
                    "Current state": "10 / 2 = 5 (left: 2 5)"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> There are no possible next steps with the input of 10. -> 10 / 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "1.3",
                    "Current state": "11 - 1 = 10 (left: 10)"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.1",
                    "Current state": "11 - 1 = 10 (left: 1 10 11)"
                }
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 1 10 11) -> 10 / 1 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20) -> 20 + 10 = 30 (left: 30 20) -> 30 * 20 = 600 (left: 600)",
                "Pruning": {
                    "Idx": "6.4",
                    "Current state": "11 - 1 = 10 (left: 10)"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20) -> 20 + 10 = 30 (left: 30 20) -> 30 + 20 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "3.1",
                    "Current state": "10 - 10 = 0 (left: 20 0)"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Current state": "10 / 10 = 1 (left: 1 20)"
                }
            },
            "Step 9": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1 20) -> 1 + 20 = 21 (left: 20 21)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 1 = 1 (left: 1 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Current state": "11 / 1 = 11 (left: 1 11 "
                }
            },
            "Step 1": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Current state": "11 - 1 = 10 (left: 10)"
                }
            },
            "Step 2": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 * 2 = 20 (left: 20",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.3",
                    "Current state": "10 + 10 = 20"
                }
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 - 10 = 0 (left: 20 0)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Current state": "10 / 2 = 5 (left: 2 5)"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> There are no possible next steps with the input of 10. -> 10 / 2 = 5 (left: 2 5) -> Input: 3 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Current state": "10 / 2 = 5 (left: 2 5)"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> There are no possible next steps with the input of 10. -> 10 / 2 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.2",
                    "Current state": "11 - 1 = 10 (left: 1 10 11)"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20) -> 20 + 10 = 30 (left: 30 20) -> 30 * 20 = 600 (left: 600)",
                "Pruning": {
                    "Idx": "0.4",
                    "Current state": "1 - 1 = 0 (left: 0 11 11)"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.3",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20) -> 20 + 10 = 30 (left: 30 20) -> 30 / 20 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "2.1",
                    "Current state": "10 * 2 = 20 (left: 20"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20) -> 20 + 10 = 30 (left: 30 20) -> 30 * 20 = 600 (left: 600)",
                "Pruning": {
                    "Idx": "7.3",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Current state": "10 / 10 = 1 (left: 1 20)"
                }
            },
            "Step 9": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1 20) -> 20 - 1 = 19 (left: 1 19)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 1 10 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Current state": "1 * 1 = 1 (left: 1 11 11)"
                }
            },
            "Step 1": {
                "Step": "1 * 1 = 1 (left: 1 11 11) -> Input: 5 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Current state": "Input: 5 5 10"
                }
            },
            "Step 2": {
                "Step": "1 * 1 = 1 (left: 1 11 11) -> Input: 5 5 10 -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Current state": "10 + 10 = 20"
                }
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1 20)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.4",
                    "Current state": "10 * 10 = 100 (left: 10 100 20)"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20) -> 20 + 10 = 30 (left: 30 20)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20) -> 20 + 10 = 30 (left: 30 20) -> 30 / 20 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20) -> 20 + 10 = 30 (left: 30 20) -> 30 / 20 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "4.1",
                    "Current state": "Input: 3 9"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20) -> 20 + 10 = 30 (left: 30 20) -> 30 + 20 = 50 (left: 50)",
                "Pruning": {
                    "Idx": "1.0",
                    "Current state": "11 - 1 = 10 (left: 10)"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "7.3",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20) -> 20 + 10 = 30 (left: 30 20) -> 30 - 20 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.3",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                },
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "8.3",
                    "Current state": "10 / 10 = 1 (left: 1 20)"
                }
            },
            "Step 9": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1 20) -> 20 - 1 = 19 (left: 19 20)",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 1 11 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Current state": "11 / 1 = 11 (left: 1 11 "
                }
            },
            "Step 1": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "11 - 1 = 10 (left: 10)"
                }
            },
            "Step 2": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Current state": "There are no possible next steps with the input of 10."
                }
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> There are no possible next steps with the input of 10. -> 10 / 2 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Current state": "10 / 2 = 5 (left: 2 5)"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> There are no possible next steps with the input of 10. -> 10 / 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "3.3",
                    "Current state": "10 / 2 = 5 (left: 2 5)"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Current state": "10 / 2 = 5 (left: 2 5)"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> There are no possible next steps with the input of 10. -> 10 / 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "4.2",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20) -> 20 + 10 = 30 (left: 30 20) -> 30 / 20 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "5.2",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "6.3",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20) -> 20 + 10 = 30 (left: 30 20) -> 30 - 20 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "5.3",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20) -> 20 + 10 = 30 (left: 30 20) -> 30 / 20 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "3.2",
                    "Current state": "10 / 10 = 1 (left: 1 20)"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.3",
                    "Current state": "10 / 10 = 1 (left: 1 20)"
                }
            },
            "Step 9": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1 20) -> 20 / 1 = 20 (left: 20 20)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 - 1 = 0 (left: 0 11 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Current state": "11 / 1 = 11 (left: 1 11 "
                }
            },
            "Step 1": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Current state": "11 - 1 = 10 (left: 10)"
                }
            },
            "Step 2": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> There are no possible next steps with the input of 10.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Current state": "10 + 10 = 20"
                }
            },
            "Step 3": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Current state": "10 / 2 = 5 (left: 2 5)"
                }
            },
            "Step 4": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> There are no possible next steps with the input of 10. -> 10 / 2 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Current state": "There are no possible next steps as there are no more numbers to operate on. The final sequence is 2 8 8 14 12."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Current state": "10 / 2 = 5 (left: 2 5)"
                }
            },
            "Step 5": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> There are no possible next steps with the input of 10. -> 10 / 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "0.0",
                    "Current state": "1 * 1 = 1 (left: 1 11 11)"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                }
            },
            "Step 6": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20) -> 20 + 10 = 30 (left: 30 20) -> 30 - 20 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.4",
                    "Current state": "11 - 1 = 10 (left: 10)"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.3",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                }
            },
            "Step 7": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20) -> 20 + 10 = 30 (left: 30 20) -> 30 / 20 = 1.5 (left: 1.5)",
                "Pruning": {
                    "Idx": "1.4",
                    "Current state": "11 - 1 = 10 (left: 10)"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.3",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                }
            },
            "Step 8": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 * 10 = 100 (left: 10 100 20) -> 20 + 10 = 30 (left: 30 20) -> 30 - 20 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "7.3",
                    "Current state": "20 + 10 = 30 (left: 30 20)"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.3",
                    "Current state": "10 / 10 = 1 (left: 1 20)"
                }
            },
            "Step 9": {
                "Step": "11 / 1 = 11 (left: 1 11  -> 11 - 1 = 10 (left: 10) -> 10 + 10 = 20 -> 10 / 10 = 1 (left: 1 20) -> 1 * 20 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "6.2",
                    "Current state": "Input: 3 9"
                }
            }
        },
        "Input": "1 1 11 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "2": {
        "puzzle": "1 1 3 8",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 3 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Current state": "3 * 1 = 3 (left: 3 1 8)"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 3 - 1 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "1 * 3 = 3 (left: 3 8)"
                }
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 1 * 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "3 * 8 = 24 (left: 24)"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 1 * 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 1) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "1.1",
                    "Current state": "8 - 1 = 7 (left:"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "3.1",
                    "Current state": "3 * 8 = 24 (left: 24)"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 1 * 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((1 * 3) * 1) * 8 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 1 = 4 (left: 1 4 8)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Current state": "3 + 1 = 4 (left: 1 4 8)"
                }
            },
            "Step 1": {
                "Step": "3 + 1 = 4 (left: 1 4 8) -> 8 - 1 = 7 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "1 * 3 = 3 (left: 3 8)"
                }
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 1 * 3 = 3 (left: 3 8) -> 5 + 5 = 10 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "3 * 8 = 24 (left: 24)"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 1 * 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 1) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Current state": "3 * 8 = 24 (left: 24)"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Current state": "3 * 1 = 3 (left: 3 1 8)"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 1 * 8 = 8 (left: 3 8)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 1 = 3 (left: 3 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Current state": "3 * 1 = 3 (left: 3 1 8)"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 8 - 1 = 7 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "1 * 3 = 3 (left: 3 8)"
                }
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 1 * 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "3 * 8 = 24 (left: 24)"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 1 * 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 1) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "2.0",
                    "Current state": "3 * 8 = 24 (left: 24)"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Current state": "3 * 1 = 3 (left: 3 1 8)"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 8 - 3 = 5 (left: 5 8)"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 3 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Current state": "3 * 1 = 3 (left: 3 1 8)"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 1 * 3 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "1 * 3 = 3 (left: 3 8)"
                }
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 1 * 3 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "3 * 8 = 24 (left: 24)"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 1 * 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * (1 * 3)) * 8 = 24",
                "Pruning": {
                    "Idx": "0.2",
                    "Current state": "3 * 1 = 3 (left: 3 1 8)"
                },
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "3.3",
                    "Current state": "3 * 1 = 3 (left: 3 1 8)"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 8 - 1 = 7 (left: 3 7)"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "3 + 1 = 4 (left: 4 3 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Current state": "3 * 1 = 3 (left: 3 1 8)"
                }
            },
            "Step 1": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 1 + 8 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "1 * 3 = 3 (left: 3 8)"
                }
            },
            "Step 2": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 1 * 3 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Current state": "3 * 8 = 24 (left: 24)"
                }
            },
            "Step 3": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 1 * 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 1) * (3 * 8) = 24",
                "Pruning": {
                    "Idx": "1.0",
                    "Current state": "3 - 1 = 2 (left: 2 8)"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Current state": "3 * 8 = 24 (left: 24)"
                }
            },
            "Step 4": {
                "Step": "3 * 1 = 3 (left: 3 1 8) -> 1 * 3 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: (3 * 1) * (1 * 3) = 24"
            }
        },
        "Input": "1 1 3 8",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "3": {
        "puzzle": "1 1 1 8",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 1 2 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Current state": "1 + 1 = 2 (left: 2 1 8)"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 1 / 8 = 0.125 (left:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Current state": "2 + 1 = 3 (left: 3 8)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Current state": "8 - 1 = 7 (left: 7)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 - 1 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "0.1",
                    "Current state": "1 + 1 = 2 (left: 1 2 8)"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Current state": "1 + 1 = 2 (left: 1 2 8)"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 5 5 10",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Current state": "Input: 3 5 7 9"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 3 5 7 9 -> 7 * 9 = 63 (left: 3 5 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Current state": "3 + 5 = 8 (left: 7 8 9)"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 7 + 8 = 15 (left: 9 15) ",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "8 + 9 = 17 (left: 7 17)"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.2",
                    "Current state": "1 * 2 = 2 (left: 2 8)"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Current state": "2 + 1 = 3 (left: 3 8)"
                }
            },
            "Step 8": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 3 + 8 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "3 * 8 = 24 (left: 24)"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((1 + 1) + 1) * 8 = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 1 2 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Current state": "1 + 1 = 2 (left: 2 1 8)"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Current state": "2 + 1 = 3 (left: 3 8)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "1 + 8 = 9 (left: 8 9)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 - 1 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9) -> 8 / 9 = 0.8888888888888888 (left: 0.8888888888888888)",
                "Pruning": {
                    "Idx": "1.3",
                    "Current state": "2 - 1 = 1 (left: 1 8)"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Current state": "1 + 1 = 2 (left: 1 2 8)"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 3 5 7 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Current state": "Input: 5 5 10"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 5 5 10 -> 10 - 5 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.3",
                    "Current state": "9 - 5 = 4 (left: 3 4 7)"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 3 5 7 9 -> 9 - 5 = 4 (left: 3 4 7) -> 7 - 3 = 4 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "8 + 9 = 17 (left: 7 17)"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.0",
                    "Current state": "3 + 8 = 11 (left: 11)"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Current state": "2 + 1 = 3 (left: 3 8)"
                }
            },
            "Step 8": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "3 * 8 = 24 (left: 24)"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((1 + 1) + 1) * 8 = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Current state": "1 + 1 = 2 (left: 1 2 8)"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> 1 * 2 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "2 - 1 = 1 (left: 1 8)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 - 1 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Current state": "8 - 3 = 5 (left: 5)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with the input 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.0",
                    "Current state": "1 + 1 = 2 (left: 1 2 8)"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 3 5 7 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Current state": "Input: 3 5 7 9"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "5.2",
                    "Current state": "3 + 5 = 8 (left: 7 8 9)"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 9 - 7 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "8 + 9 = 17 (left: 7 17)"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> Input: 3 5 1",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Current state": "2 + 1 = 3 (left: 3 8)"
                }
            },
            "Step 8": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 8 / 3 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "3 * 8 = 24 (left: 24)"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((1 + 1) + 1) * 8 = 24"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Current state": "1 + 1 = 2 (left: 2 1 8)"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 - 1 = 1 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "2 - 1 = 1 (left: 1 8)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 - 1 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Current state": "8 - 1 = 7 (left: 7 8)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 - 1 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7 8) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "2.2",
                    "Current state": "1 + 8 = 9 (left: 8 9)"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Current state": "2 - 1 = 1 (left: 1 8)"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 - 1 = 1 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "4.1",
                    "Current state": "Input: 3 5 7 9"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 3 5 7 9 -> 9 - 5 = 4 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "5.3",
                    "Current state": "9 - 5 = 4 (left: 3 4 7)"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 3 5 7 9 -> 9 - 5 = 4 (left: 3 4 7) -> 7 - 4 = 3 (left: 3 7)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "8 + 9 = 17 (left: 7 17)"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 17 / 7 = 2.428571428571429 (left: 2.428571428571429)",
                "Pruning": {
                    "Idx": "2.1",
                    "Current state": "8 - 3 = 5 (left: 5)"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Current state": "2 + 1 = 3 (left: 3 8)"
                }
            },
            "Step 8": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "3 * 8 = 24 (left: 24)"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((1 + 1) + 1) * 8 = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 1 8)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Current state": "1 + 1 = 2 (left: 2 1 8)"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "2 - 1 = 1 (left: 1 8)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 - 1 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Current state": "8 - 1 = 7 (left: 7 8)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 - 1 = 1 (left: 1 8) -> 8 - 1 = 7 (left: 7 8) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Current state": "2 - 1 = 1 (left: 1 8)"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 - 1 = 1 (left: 1 8) -> 1 + 8 = 9 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Current state": "Input: 3 5 7 9"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 3 5 7 9 -> 5 - 3 = 2 (left: 2 7 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.2",
                    "Current state": "3 + 5 = 8 (left: 7 8 9)"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "8 + 9 = 17 (left: 7 17)"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 1 2 8) -> Input: 3 5 7 9 -> 3 + 5 = 8 (left: 7 8 9) -> 8 + 9 = 17 (left: 7 17) -> 7 + 17 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.1",
                    "Current state": "2 + 1 = 3 (left: 3 8)"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Current state": "2 + 1 = 3 (left: 3 8)"
                }
            },
            "Step 8": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "3 * 8 = 24 (left: 24)"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 1 8) -> 2 + 1 = 3 (left: 3 8) -> 3 * 8 = 24 (left: 24) -> Answer: ((1 + 1) + 1) * 8 = 24"
            }
        },
        "Input": "1 1 1 8",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ]
    },
    "4": {
        "puzzle": "6 6 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 6 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Current state": "6 - 6 = 0 (left: 0 6 6)"
                }
            },
            "Step 1": {
                "Step": "6 - 6 = 0 (left: 0 6 6) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "6 * 6 = 36 (left: 12 36)"
                }
            },
            "Step 2": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 36 / 12 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Current state": "12 * 3 = 36 (left: 36)"
                }
            },
            "Step 3": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Current state": "No possible next steps, as there is only one number (36) given."
                }
            },
            "Step 4": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> No possible next steps, as there is only one number (36) given. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Current state": "There are no possible next steps as there is only one number."
                }
            },
            "Step 5": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> No possible next steps, as there is only one number (36) given. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Current state": "No possible next steps. The result is 36."
                }
            },
            "Step 6": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> No possible next steps. The result is 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "There are no possible next steps as the result is already 36."
                }
            },
            "Step 7": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.0",
                    "Current state": "There are no possible next steps as the result is already 36."
                }
            },
            "Step 8": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "There are no possible next steps as the result is already 36."
                }
            },
            "Step 9": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 6 6 1 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Current state": "6 * 6 = 36 (left: 6 6 36)"
                }
            },
            "Step 1": {
                "Step": "6 * 6 = 36 (left: 6 6 36) -> Input: 2 3 5 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "6 * 6 = 36 (left: 12 36)"
                }
            },
            "Step 2": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 36 / 12 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Current state": "12 * 3 = 36 (left: 36)"
                }
            },
            "Step 3": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Current state": "No possible next steps, as there is only one number (36) given."
                }
            },
            "Step 4": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> No possible next steps, as there is only one number (36) given. -> There are no possible next steps as there is only one number given (36).",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Current state": "No possible next steps as there is only one number."
                }
            },
            "Step 5": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Current state": "No possible next steps. The result is 36."
                }
            },
            "Step 6": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> No possible next steps. The result is 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "There are no possible next steps as the result is already 36."
                }
            },
            "Step 7": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Current state": "There are no possible next steps as the result is already 36."
                }
            },
            "Step 8": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "There are no possible next steps as the result is already 36."
                }
            },
            "Step 9": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 6 6 36)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Current state": "6 - 6 = 0 (left: 0 6 6)"
                }
            },
            "Step 1": {
                "Step": "6 - 6 = 0 (left: 0 6 6) -> 4 + 5 = 9 (left:",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "6 * 6 = 36 (left: 12 36)"
                }
            },
            "Step 2": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 36 = 432 (left: 432)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Current state": "12 * 3 = 36 (left: 36)"
                }
            },
            "Step 3": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> No possible next steps, as there is only one number (36) given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Current state": "36 / 2 = 18"
                }
            },
            "Step 4": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18 -> 18 / 2 = 9 (left: 9)",
                "Pruning": {
                    "Idx": "3.0",
                    "Current state": "There is only one number, so there are no possible next steps. The result is 36."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.2",
                    "Current state": "There is only one number, so there are no possible next steps. The result is 36."
                }
            },
            "Step 5": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.2",
                    "Current state": "No possible next steps. The result is 36."
                }
            },
            "Step 6": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> No possible next steps. The result is 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "There are no possible next steps as the result is already 36."
                }
            },
            "Step 7": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> There are no possible next steps as the result is already 36. -> N/A",
                "Pruning": {
                    "Idx": "5.3",
                    "Current state": "There are no possible next steps as there is only one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Current state": "There are no possible next steps as the result is already 36."
                }
            },
            "Step 8": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "There are no possible next steps as the result is already 36."
                }
            },
            "Step 9": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36.",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 + 6 = 12 (left: 6 6 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Current state": "6 + 6 = 12 (left: 6 6 12)"
                }
            },
            "Step 1": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "6 * 6 = 36 (left: 12 36)"
                }
            },
            "Step 2": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 + 36 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Current state": "12 * 3 = 36 (left: 36)"
                }
            },
            "Step 3": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Current state": "No possible next steps, as there is only one number (36) given."
                }
            },
            "Step 4": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> No possible next steps, as there is only one number (36) given. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Current state": "There are no possible next steps as there is only one number."
                }
            },
            "Step 5": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> No possible next steps, as there is only one number (36) given. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Current state": "No possible next steps. The result is 36."
                }
            },
            "Step 6": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> No possible next steps. The result is 36.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "There are no possible next steps as the result is already 36."
                }
            },
            "Step 7": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "7.3",
                    "Current state": "There are no possible next steps as the result is already 36."
                }
            },
            "Step 8": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36.",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "There are no possible next steps as the result is already 36."
                }
            },
            "Step 9": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36.",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "6 - 6 = 0 (left: 0 6 6)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.3",
                    "Current state": "6 + 6 = 12 (left: 6 6 12)"
                }
            },
            "Step 1": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "6 * 6 = 36 (left: 12 36)"
                }
            },
            "Step 2": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Current state": "12 * 3 = 36 (left: 36)"
                }
            },
            "Step 3": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.4",
                    "Current state": "No possible next steps as there is only one number."
                }
            },
            "Step 4": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> No possible next steps as there is only one number. -> No possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Current state": "There are no possible next steps as there is only one number."
                }
            },
            "Step 5": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> No possible next steps, as there is only one number (36) given. -> There are no possible next steps as there is only one number. -> There are no possible next steps as there is only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.2",
                    "Current state": "No possible next steps. The result is 36."
                }
            },
            "Step 6": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> There are no possible next steps as the result is already 36.",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "There are no possible next steps as the result is already 36."
                }
            },
            "Step 7": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> There are no possible next steps as the result is already 36. -> None",
                "Pruning": {
                    "Idx": "5.0",
                    "Current state": "There are no possible next steps as there is only one number."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.3",
                    "Current state": "There are no possible next steps as the result is already 36."
                }
            },
            "Step 8": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36. -> None",
                "Pruning": {
                    "Idx": "6.1",
                    "Current state": "No possible next steps. The result is 36."
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Current state": "There are no possible next steps as the result is already 36."
                }
            },
            "Step 9": {
                "Step": "6 + 6 = 12 (left: 6 6 12) -> 6 * 6 = 36 (left: 12 36) -> 12 * 3 = 36 (left: 36) -> There is only one number, so there are no possible next steps. The result is 36. -> No possible next steps. The result is 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36. -> There are no possible next steps as the result is already 36.",
                "Pruning": null
            }
        },
        "Input": "6 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "5": {
        "puzzle": "1 1 2 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 / 2 = 6 (left: 1 2 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Current state": "1 + 1 = 2 (left: 2 2 12)"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 12 * 2 = 24 (left: 2 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Current state": "2 / 2 = 1 (left: 1 2 12)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 - 1 = 11 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Current state": "12 / 2 = 6 (left: 1 6)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.3",
                    "Current state": "12 / 2 = 6 (left: 1 6)"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Current state": "12 / 2 = 6 (left: 1 6)"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "0.2",
                    "Current state": "1 + 1 = 2 (left: 2 2 12)"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.0",
                    "Current state": "1 + 1 = 2 (left: 2 2 12)"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 * 2 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Current state": "1 + 2 = 3 (left: 3 12)"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 1 + 2 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.0",
                    "Current state": "12 * 2 = 24 (left: 2 24)"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Current state": "2 + 2 = 4 (left: 4 12)"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 + 2 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Current state": "4 * 12 = 48 (left: 48)"
                }
            },
            "Step 8": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 + 2 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 48 / 2 = 24",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "1 + 2 = 3 (left: 3 12)"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 1 + 2 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 2 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Current state": "1 + 1 = 2 (left: 2 2 12)"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.1",
                    "Current state": "2 / 2 = 1 (left: 1 2 12)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 1 + 2 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Current state": "12 / 2 = 6 (left: 1 6)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.1",
                    "Current state": "1 + 2 = 3 (left: 3 12)"
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Current state": "12 / 2 = 6 (left: 1 6)"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "2.4",
                    "Current state": "2 + 12 = 14 (left: 1 14)"
                },
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.4",
                    "Current state": "2 / 2 = 1 (left: 1 12)"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 12) -> 1 + 12 = 13 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Current state": "1 + 2 = 3 (left: 3 12)"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 1 + 2 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.4",
                    "Current state": "2 + 2 = 4 (left: 4 12)"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "2 + 2 = 4 (left: 4 12)"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 + 2 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Current state": "4 * 12 = 48 (left: 48)"
                }
            },
            "Step 8": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 + 2 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 48 / 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.1",
                    "Current state": "1 + 2 = 3 (left: 3 12)"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "8.0",
                    "Current state": "48 / 2 = 24"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 + 2 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 48 / 2 = 24 -> 24 / 2 = 12 (left",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 2 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.1",
                    "Current state": "1 + 1 = 2 (left: 2 2 12)"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 * 2 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Current state": "2 / 2 = 1 (left: 1 2 12)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> Input: 3 5 7 9",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.3",
                    "Current state": "12 / 2 = 6 (left: 1 6)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": {
                    "Idx": "0.2",
                    "Current state": "1 + 1 = 2 (left: 2 2 12)"
                },
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Current state": "1 + 2 = 3 (left: 3 12)"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 1 + 2 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "2.1",
                    "Current state": "1 + 2 = 3 (left: 3 12)"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.4",
                    "Current state": "2 / 2 = 1 (left: 1 12)"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Current state": "1 + 2 = 3 (left: 3 12)"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 1 + 2 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "5.2",
                    "Current state": "12 - 1 = 11 (left: 11)"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.2",
                    "Current state": "12 - 1 = 11 (left: 11)"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "2.0",
                    "Current state": "12 - 1 = 11 (left:"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Current state": "4 * 12 = 48 (left: 48)"
                }
            },
            "Step 8": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 + 2 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "1 + 2 = 3 (left: 3 12)"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 1 + 2 = 3 (left: 3 12) -> 12",
                "Pruning": {
                    "Idx": "8.0",
                    "Current state": "48 / 2 = 24"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Current state": "1 + 1 = 2 (left: 2 2 12)"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 12 / 2 = 6 (left: 2 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Current state": "2 / 2 = 1 (left: 1 2 12)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Current state": "12 / 2 = 6 (left: 1 6)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.3",
                    "Current state": "12 / 2 = 6 (left: 2 6)"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "3.2",
                    "Current state": "1 + 1 = 2 (left: 2 2 12)"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 12 - 2 = 10 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "4.3",
                    "Current state": "12 - 2 = 10 (left: 2 10)"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 12 - 2 = 10 (left: 2 10) -> 2 + 10 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Current state": "1 + 2 = 3 (left: 3 12)"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 1 + 2 = 3 (left: 3 12) -> 3 * 12 = 36 (left: 36)",
                "Pruning": {
                    "Idx": "1.3",
                    "Current state": "12 / 2 = 6 (left: 2 6)"
                },
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Current state": "2 + 2 = 4 (left: 4 12)"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 + 2 = 4 (left: 4 12) -> 4 + 12 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Current state": "4 * 12 = 48 (left: 48)"
                }
            },
            "Step 8": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 + 2 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 48 / 8 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "4.1",
                    "Current state": "2 + 12 = 14 (left: 1 14)"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "1 + 2 = 3 (left: 3 12)"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 1 + 2 = 3 (left: 3 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Current state": "1 + 1 = 2 (left: 2 2 12)"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 + 2 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Current state": "2 / 2 = 1 (left: 1 2 12)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 2 + 12 = 14 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Current state": "12 / 2 = 6 (left: 1 6)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 12 / 2 = 6 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.0",
                    "Current state": "12 * 2 = 24 (left: 2 24)"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Current state": "1 + 1 = 2 (left: 2 2 12)"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "4.1",
                    "Current state": "2 + 12 = 14 (left: 1 14)"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 2 + 12 = 14 (left: 1 14) -> 1 * 14 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "3.1",
                    "Current state": "1 + 2 = 3 (left: 3 12)"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Current state": "1 + 2 = 3 (left: 3 12)"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 / 2 = 1 (left: 1 2 12) -> 1 + 2 = 3 (left: 3 12) -> 3 + 12 = 15 (left: 15)",
                "Pruning": {
                    "Idx": "1.4",
                    "Current state": "2 + 2 = 4 (left: 4 12)"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Current state": "2 + 2 = 4 (left: 4 12)"
                }
            },
            "Step 7": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 + 2 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "7.4",
                    "Current state": "4 * 12 = 48 (left: 48)"
                }
            },
            "Step 8": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 + 2 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.0",
                    "Current state": "48 / 2 = 24"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 2 12) -> 2 + 2 = 4 (left: 4 12) -> 4 * 12 = 48 (left: 48) -> 48 / 2 = 24 -> 48 / 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "8.0",
                    "Current state": "48 / 2 = 24"
                }
            }
        },
        "Input": "1 1 2 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "6": {
        "puzzle": "1 2 2 6",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Current state": "2 * 2 = 4 (left: 4 6)"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 6) -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "6 - 4 = 2 (left: 1 2)"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "2 / 1 = 2 (left: 2)"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.2",
                    "Current state": "2 / 1 = 2 (left: 2)"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Current state": "6 - 4 = 2 (left: 1 2)"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Current state": "1 + 2 = 3 (left: 3)"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Current state": "3 * 8 = 24 (left: 8 24)"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 8 + 24 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "3.1",
                    "Current state": "2 - 1 = 1 (left: 1)"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Current state": "24 / 8 = 3 (left: 3 8)"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 * 12 = 60",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Current state": "5 + 2 = 7 (left: 7)"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 2 5  -> 5 + 2 = 7 (left: 7) -> 8 / 7 = 1.14 (left: 1 1.14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "12 - 5 = 7 (left: 7 * 12)"
                }
            },
            "Step 9": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 * 12 = 60 -> 12 - 5 = 7 (left: 7 * 12) -> 7 * 12 = 84",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 1 2 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Current state": "2 * 2 = 4 (left: 1 4 6)"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 4 - 1 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "6 - 4 = 2 (left: 1 2)"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.3",
                    "Current state": "2 / 1 = 2 (left: 2)"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.4",
                    "Current state": "2 - 1 = 1 (left: 1)"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "3.3",
                    "Current state": "6 - 4 = 2 (left: 1 2)"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Current state": "1 + 2 = 3 (left: 3)"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.0",
                    "Current state": "3 * 8 = 24 (left: 8 24)"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "6 - 1 = 5 (left: 2 5 "
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 7) ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Current state": "5 * 12 = 60"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 * 12 = 60 -> 12 - 5 = 7 (left: 7 * 12)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "12 - 5 = 7 (left: 7 * 12)"
                }
            },
            "Step 9": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 * 12 = 60 -> 12 - 5 = 7 (left: 7 * 12) -> 7 * 12 = 84",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 1 4 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Current state": "2 * 2 = 4 (left: 4 6)"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 6) -> 4 + 6 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "6 - 4 = 2 (left: 1 2)"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.1",
                    "Current state": "2 - 1 = 1 (left: 1)"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1) -> No possible next steps with only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Current state": "6 - 4 = 2 (left: 1 2)"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.3",
                    "Current state": "2 - 1 = 1 (left: 1)"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Current state": "3 * 8 = 24 (left: 8 24)"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 8 - 24 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "4.3",
                    "Current state": "2 - 1 = 1 (left: 1)"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "6 - 1 = 5 (left: 2 5 "
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 2 5  -> 5 + 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.0",
                    "Current state": "5 * 12 = 60"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 * 12 = 60 -> 12 - 5 = 7 (left: 7 = 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "12 - 5 = 7 (left: 7 * 12)"
                }
            },
            "Step 9": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 * 12 = 60 -> 12 - 5 = 7 (left: 7 * 12) -> 7 * 12 = 84",
                "Pruning": null
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Current state": "2 * 2 = 4 (left: 1 4 6)"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "6 - 4 = 2 (left: 1 2)"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "2 / 1 = 2 (left: 2)"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "1.3",
                    "Current state": "6 - 4 = 2 (left: 1 2)"
                },
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "3.3",
                    "Current state": "6 - 4 = 2 (left: 1 2)"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Current state": "1 * 2 = 2 (left: 2)"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2) -> 2 + 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Current state": "3 * 8 = 24 (left: 8 24)"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 8 - 24 = -16 (left: -16)",
                "Pruning": {
                    "Idx": "4.4",
                    "Current state": "1 * 2 = 2 (left: 2)"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "6.4",
                    "Current state": "6 - 1 = 5 (left: 2 5 "
                }
            },
            "Step 7": {
                "Step": "6 - 1 = 5 (left: 2 5  -> 2 + 5 = 7 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "7.0",
                    "Current state": "5 * 12 = 60"
                }
            },
            "Step 8": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 * 12 = 60 -> 5 + 12 = 17 (left: 17 12 60)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "12 - 5 = 7 (left: 7 * 12)"
                }
            },
            "Step 9": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 * 12 = 60 -> 12 - 5 = 7 (left: 7 * 12) -> 7 * 12 = 84",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Current state": "2 * 2 = 4 (left: 1 4 6)"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "6 - 4 = 2 (left: 1 2)"
                }
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 2 - 1 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.3",
                    "Current state": "2 / 1 = 2 (left: 2)"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 2 / 1 = 2 (left: 2) -> 2 * 2 = 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.3",
                    "Current state": "6 - 4 = 2 (left: 1 2)"
                }
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Current state": "1 * 2 = 2 (left: 2)"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 * 2 = 2 (left: 2) -> 2 / 2 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.0",
                    "Current state": "1 + 2 = 3 (left: 3)"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.0",
                    "Current state": "3 * 8 = 24 (left: 8 24)"
                }
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 - 8 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.3",
                    "Current state": "6 - 1 = 5 (left: 2 5 "
                },
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Current state": "24 / 8 = 3 (left: 3 8)"
                }
            },
            "Step 7": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": {
                    "Idx": "4.0",
                    "Current state": "1 * 2 = 2 (left: 2)"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Current state": "5 + 2 = 7 (left: 7)"
                }
            },
            "Step 8": {
                "Step": "6 - 1 = 5 (left: 2 5  -> 5 + 2 = 7 (left: 7) -> 7 + 1 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "8.1",
                    "Current state": "12 - 5 = 7 (left: 7 * 12)"
                }
            },
            "Step 9": {
                "Step": "2 * 2 = 4 (left: 1 4 6) -> 6 - 4 = 2 (left: 1 2) -> 1 + 2 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 5 * 12 = 60 -> 12 - 5 = 7 (left: 7 * 12) -> 7 * 12 = 84",
                "Pruning": null
            }
        },
        "Input": "1 2 2 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "7": {
        "puzzle": "1 1 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 1 11 12)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Current state": "10 + 1 = 11 (left: 1 11 12)"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 1 11 12) -> 11 - 1 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "2 * 10 = 20 (left: 10 12 20)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 * 10 = 20 (left: 10 12 20) -> 20 / 10 = 2 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Current state": "12 / 10 = 1.2 (left: 1.2 20)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 * 10 = 20 (left: 10 12 20) -> 12 / 10 = 1.2 (left: 1.2 20) -> 1.2 + 20 = 21.2 (left: 21.2)",
                "Pruning": {
                    "Idx": "0.3",
                    "Current state": "12 - 10 = 2 (left: 1 1 2)"
                },
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "3.0",
                    "Current state": "12 - 10 = 2 (left: 1 1 2)"
                }
            },
            "Step 4": {
                "Step": "12 - 10 = 2 (left: 1 1 2) -> 1 - 1 = 0 (left: 0 2)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "4.2",
                    "Current state": "10 + 2 = 12 (left: 2 12 12)"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 10 + 2 = 12 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Current state": "12 - 2 = 10 (left: 10 12)"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 10 + 2 = 12 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 / 12 = 0.8333 (left: 0.8333)",
                "Pruning": {
                    "Idx": "4.0",
                    "Current state": "1 - 1 = 0 (left: 0 2)"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "6.0",
                    "Current state": "1 - 1 = 0 (left: 0 2)"
                }
            },
            "Step 7": {
                "Step": "12 - 10 = 2 (left: 1 1 2) -> 1 - 1 = 0 (left: 0 2) -> 2 / 0 = undefined (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Current state": "9 / 3 = 3 (left: 3 4)"
                }
            },
            "Step 8": {
                "Step": "12 - 10 = 2 (left: 1 1 2) -> 1 - 1 = 0 (left: 0 2) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.1",
                    "Current state": "20 + 10 = 30 (left: 12 30)"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "8.2",
                    "Current state": "12 / 10 = 1.2 (left: 1.2 20)"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 * 10 = 20 (left: 10 12 20) -> 12 / 10 = 1.2 (left: 1.2 20) -> 1.2 / 20 = 0.06 (left: 0.06)",
                "Pruning": {
                    "Idx": "6.2",
                    "Current state": "22 * 120 = 2640"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 1 = 1 (left: 1 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Current state": "1 + 1 = 2 (left: 2 10 12)"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 10 / 2 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "2 * 10 = 20 (left: 10 12 20)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 * 10 = 20 (left: 10 12 20) -> 20 + 10 = 30 (left: 12 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Current state": "12 / 10 = 1.2 (left: 1.2 20)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 * 10 = 20 (left: 10 12 20) -> 12 / 10 = 1.2 (left: 1.2 20) -> 1.2 + 20 = 21.2 (left: 21.2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Current state": "1 + 1 = 2 (left: 2 10 12)"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Current state": "1 + 1 = 2 (left: 2 10 12)"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.4",
                    "Current state": "12 - 10 = 2 (left: 2 12)"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 12 - 10 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Current state": "12 - 2 = 10 (left: 10 12)"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 10 + 2 = 12 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "0.0",
                    "Current state": "10 + 1 = 11 (left: 1 11 12)"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "6.0",
                    "Current state": "1 - 1 = 0 (left: 0 2)"
                }
            },
            "Step 7": {
                "Step": "12 - 10 = 2 (left: 1 1 2) -> 1 - 1 = 0 (left: 0 2) -> 3 + 5 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Current state": "9 / 3 = 3 (left: 3 4)"
                }
            },
            "Step 8": {
                "Step": "12 - 10 = 2 (left: 1 1 2) -> 1 - 1 = 0 (left: 0 2) -> 9 / 3 = 3 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": {
                    "Idx": "2.3",
                    "Current state": "20 - 10 = 10 (left: 10 12)"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Current state": "12 / 10 = 1.2 (left: 1.2 20)"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 * 10 = 20 (left: 10 12 20) -> 12 / 10 = 1.2 (left: 1.2 20) -> 1.2 + 20 = 21.2 (left: 21.2)",
                "Pruning": {
                    "Idx": "3.3",
                    "Current state": "3 + 9 = 12"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Current state": "10 + 1 = 11 (left: 1 11 12)"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 1 11 12) -> 1 * 11 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "2 * 10 = 20 (left: 10 12 20)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 * 10 = 20 (left: 10 12 20) -> 12 / 10 = 1.2 (left: 1.2 20)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "12 / 10 = 1.2 (left: 1.2 20)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 * 10 = 20 (left: 10 12 20) -> 12 / 10 = 1.2 (left: 1.2 20) -> 20 - 1.2 = 18.8 (left: 1.2 18.8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.1",
                    "Current state": "1 + 1 = 2 (left: 2 10 12)"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 10 + 2 = 12 (left: 2 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Current state": "10 + 2 = 12 (left: 2 12 12)"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 10 + 2 = 12 (left: 2 12 12) -> 2 * 12 = 24 (left: 12 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Current state": "12 - 2 = 10 (left: 10 12)"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 10 + 2 = 12 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 22 * 120 = 2640",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Current state": "1 - 1 = 0 (left: 0 2)"
                }
            },
            "Step 7": {
                "Step": "12 - 10 = 2 (left: 1 1 2) -> 1 - 1 = 0 (left: 0 2) -> 0 - 2 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.4",
                    "Current state": "9 / 3 = 3 (left: 3 4)"
                }
            },
            "Step 8": {
                "Step": "12 - 10 = 2 (left: 1 1 2) -> 1 - 1 = 0 (left: 0 2) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.4",
                    "Current state": "12 / 10 = 1.2 (left: 1.2 20)"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "8.2",
                    "Current state": "12 / 10 = 1.2 (left: 1.2 20)"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 * 10 = 20 (left: 10 12 20) -> 12 / 10 = 1.2 (left: 1.2 20) -> 20 / 1.2 = 16.666666666666668 (left: 16.666666666666668)",
                "Pruning": {
                    "Idx": "6.2",
                    "Current state": "22 * 120 = 2640"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 1 1 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Current state": "1 + 1 = 2 (left: 2 10 12)"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 * 10 = 20 (left: 10 12 20)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "2 * 10 = 20 (left: 10 12 20)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 * 10 = 20 (left: 10 12 20) -> 20 - 10 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "12 / 10 = 1.2 (left: 1.2 20)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 * 10 = 20 (left: 10 12 20) -> 12 / 10 = 1.2 (left: 1.2 20) -> 3 + 9 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.1",
                    "Current state": "1 + 1 = 2 (left: 2 10 12)"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 10 - 2 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Current state": "10 + 2 = 12 (left: 2 12 12)"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 10 + 2 = 12 (left: 2 12 12) -> 2 + 12 = 14 (left: 12 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "5.4",
                    "Current state": "12 - 2 = 10 (left: 10 12)"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 10 + 2 = 12 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> 10 - 12 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "1.4",
                    "Current state": "1 + 1 = 2 (left: 2 2)"
                },
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.0",
                    "Current state": "1 - 1 = 0 (left: 0 2)"
                }
            },
            "Step 7": {
                "Step": "12 - 10 = 2 (left: 1 1 2) -> 1 - 1 = 0 (left: 0 2) -> 2 / 0 is undefined",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.4",
                    "Current state": "9 / 3 = 3 (left: 3 4)"
                }
            },
            "Step 8": {
                "Step": "12 - 10 = 2 (left: 1 1 2) -> 1 - 1 = 0 (left: 0 2) -> 9 / 3 = 3 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": {
                    "Idx": "2.1",
                    "Current state": "20 + 10 = 30 (left: 12 30)"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Current state": "12 / 10 = 1.2 (left: 1.2 20)"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 * 10 = 20 (left: 10 12 20) -> 12 / 10 = 1.2 (left: 1.2 20) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.3",
                    "Current state": "12 - 10 = 2 (left: 1 1 2)"
                }
            },
            "Step 1": {
                "Step": "12 - 10 = 2 (left: 1 1 2) -> 1 + 1 = 2 (left: 2 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "2 * 10 = 20 (left: 10 12 20)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 * 10 = 20 (left: 10 12 20) -> 12 / 10 = 1.2 (left: 1.2 20)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Current state": "12 / 10 = 1.2 (left: 1.2 20)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 * 10 = 20 (left: 10 12 20) -> 12 / 10 = 1.2 (left: 1.2 20) -> 1.2 + 20 = 21.2 (left: 21.2)",
                "Pruning": {
                    "Idx": "2.3",
                    "Current state": "20 - 10 = 10 (left: 10 12)"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.1",
                    "Current state": "1 + 1 = 2 (left: 2 10 12)"
                }
            },
            "Step 4": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 12 - 10 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "4.2",
                    "Current state": "10 + 2 = 12 (left: 2 12 12)"
                }
            },
            "Step 5": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 10 + 2 = 12 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Current state": "12 - 2 = 10 (left: 10 12)"
                }
            },
            "Step 6": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 10 + 2 = 12 (left: 2 12 12) -> 12 - 2 = 10 (left: 10 12) -> Input: 22 120 2 1.2",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.0",
                    "Current state": "1 - 1 = 0 (left: 0 2)"
                }
            },
            "Step 7": {
                "Step": "12 - 10 = 2 (left: 1 1 2) -> 1 - 1 = 0 (left: 0 2) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "7.4",
                    "Current state": "9 / 3 = 3 (left: 3 4)"
                }
            },
            "Step 8": {
                "Step": "12 - 10 = 2 (left: 1 1 2) -> 1 - 1 = 0 (left: 0 2) -> 9 / 3 = 3 (left: 3 4) -> 3 - 4 = -1 (left: -1)",
                "Pruning": {
                    "Idx": "5.1",
                    "Current state": "12 - 2 = 10 (left: 10)"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.2",
                    "Current state": "12 / 10 = 1.2 (left: 1.2 20)"
                }
            },
            "Step 9": {
                "Step": "1 + 1 = 2 (left: 2 10 12) -> 2 * 10 = 20 (left: 10 12 20) -> 12 / 10 = 1.2 (left: 1.2 20) -> 1.2 + 20 = 21.2 (left: 21.2)",
                "Pruning": {
                    "Idx": "3.3",
                    "Current state": "3 + 9 = 12"
                }
            }
        },
        "Input": "1 1 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "8": {
        "puzzle": "2 2 10 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Current state": "2 + 2 = 4 (left: 4 10 10)"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Current state": "10 / 4 = 2.5 (left: 2.5 10 10)"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 2.5 * 10 = 25 (left: 10 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "10 - 6 = 4 (left: 4 10 10)"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.0",
                    "Current state": "10 / 4 = 2.5 (left: 2.5 10 10)"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 2.5 + 10 = 12.5 (left: 10 12.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.1",
                    "Current state": "2.5 + 10 = 12.5 (left: 10 12.5)"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 2.5 + 10 = 12.5 (left: 10 12.5) -> 10 * 12.5 = 125 (left: 125)",
                "Pruning": {
                    "Idx": "3.3",
                    "Current state": "10 / 4 = 2.5 (left: 2.5 10)"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Current state": "10 - 6 = 4 (left: 4 10 10)"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Current state": "4 + 10 = 14 (left: 10 10 14)"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 / 10 = 1.4 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Current state": "14 - 10 = 4 (left: 4 14)"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 - 10 = 4 (left: 4 14) -> 14 / 4 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "6.2",
                    "Current state": "10 / 4 = 2.5 (left: 2.5 10 10)"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Current state": "14 - 4 = 10 (left: 10 14)"
                }
            },
            "Step 9": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 - 10 = 4 (left: 4 14) -> 14 - 4 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 14 24)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Current state": "2 + 2 = 4 (left: 4 10 10)"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Current state": "10 - 4 = 6 (left: 6 10 10)"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 6 * 10 = 60 (left: 10 10 60)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "10 - 6 = 4 (left: 4 10 10)"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "3.2",
                    "Current state": "10 / 4 = 2.5 (left: 2.5 10 10)"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 2.5 + 10 = 12.5 (left: 10 12.5)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "4.0",
                    "Current state": "2.5 + 10 = 12.5 (left: 10 12.5)"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 2.5 + 10 = 12.5 (left: 10 12.5) -> 10 * 12.5 = 125 (left: 125)",
                "Pruning": {
                    "Idx": "3.2",
                    "Current state": "10 / 4 = 2.5 (left: 2.5 10 10)"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Current state": "10 - 6 = 4 (left: 4 10 10)"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "6.1",
                    "Current state": "4 + 10 = 14 (left: 10 10 14)"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 + 10 = 24 (left: 10 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "7.2",
                    "Current state": "14 - 10 = 4 (left: 4 14)"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 - 10 = 4 (left: 4 14) -> 14 - 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "4.1",
                    "Current state": "2.5 + 10 = 12.5 (left: 10 12.5)"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "8.4",
                    "Current state": "14 - 4 = 10 (left: 10 14)"
                }
            },
            "Step 9": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 - 10 = 4 (left: 4 14) -> 14 - 4 = 10 (left: 10 14) -> Possible next steps:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 2 10 ",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Current state": "2 + 2 = 4 (left: 4 10 10)"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Current state": "10 - 4 = 6 (left: 6 10 10)"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "10 - 6 = 4 (left: 4 10 10)"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "3.2",
                    "Current state": "10 / 4 = 2.5 (left: 2.5 10 10)"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 2.5 + 10 = 12.5 (left: 10 12.5)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "4.2",
                    "Current state": "2.5 + 10 = 12.5 (left: 10 12.5)"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 2.5 + 10 = 12.5 (left: 10 12.5) -> 10 * 12.5 = 125 (left: 125)",
                "Pruning": {
                    "Idx": "3.0",
                    "Current state": "10 / 4 = 2.5 (left: 2.5 10 10)"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.4",
                    "Current state": "10 - 6 = 4 (left: 4 10 10)"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Current state": "4 + 10 = 14 (left: 10 10 14)"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 - 10 = 4 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "7.2",
                    "Current state": "14 - 10 = 4 (left: 4 14)"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 - 10 = 4 (left: 4 14) -> 14 - 4 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "6.2",
                    "Current state": "10 / 4 = 2.5 (left: 2.5 10 10)"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Current state": "14 - 4 = 10 (left: 10 14)"
                }
            },
            "Step 9": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 - 10 = 4 (left: 4 14) -> 14 - 4 = 10 (left: 10 14) -> 14 - 10 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "8.3",
                    "Current state": "2.5 + 10 = 12.5 (left: 10 12.5)"
                }
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Current state": "2 + 2 = 4 (left: 4 10 10)"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.1",
                    "Current state": "10 / 4 = 2.5 (left: 2.5 10 10)"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 2.5 * 10 = 25 (left: 10 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "10 - 6 = 4 (left: 4 10 10)"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "3.2",
                    "Current state": "10 / 4 = 2.5 (left: 2.5 10 10)"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 10 * 2.5 = 25 (left: 10 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.0",
                    "Current state": "2.5 + 10 = 12.5 (left: 10 12.5)"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 2.5 + 10 = 12.5 (left: 10 12.5) -> 12.5 / 10 = 1.25 (left: 1.25)",
                "Pruning": {
                    "Idx": "4.1",
                    "Current state": "2.5 + 10 = 12.5 (left: 10 12.5)"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "5.1",
                    "Current state": "10 / 4 = 2.5 (left: 2.5 10 10)"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 10 - 2.5 = 7.5 (left: 2.5 7.5 10",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "6.1",
                    "Current state": "4 + 10 = 14 (left: 10 10 14)"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 10 * 10 = 100 (left: 100 14)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Current state": "14 - 10 = 4 (left: 4 14)"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 - 10 = 4 (left: 4 14) -> 4 + 14 = 18 (left: 18)",
                "Pruning": {
                    "Idx": "4.0",
                    "Current state": "2.5 + 10 = 12.5 (left: 10 12.5)"
                },
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "8.4",
                    "Current state": "14 - 4 = 10 (left: 10 14)"
                }
            },
            "Step 9": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 - 10 = 4 (left: 4 14) -> 14 - 4 = 10 (left: 10 14) -> 10 + 14 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "3.3",
                    "Current state": "10 / 4 = 2.5 (left: 2.5 10)"
                }
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 10 10)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Current state": "2 + 2 = 4 (left: 4 10 10)"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Current state": "10 - 4 = 6 (left: 6 10 10)"
                }
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 6 + 10 = 16 (left: 10 10 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "10 - 6 = 4 (left: 4 10 10)"
                }
            },
            "Step 3": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "3.0",
                    "Current state": "10 / 4 = 2.5 (left: 2.5 10 10)"
                }
            },
            "Step 4": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 2.5 * 10 = 25 (left: 10 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "4.1",
                    "Current state": "2.5 + 10 = 12.5 (left: 10 12.5)"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 / 4 = 2.5 (left: 2.5 10 10) -> 2.5 + 10 = 12.5 (left: 10 12.5) -> 10 * 12.5 = 125 (left: 125)",
                "Pruning": {
                    "Idx": "2.2",
                    "Current state": "10 - 6 = 4 (left: 4 10 10)"
                },
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "5.4",
                    "Current state": "10 - 6 = 4 (left: 4 10 10)"
                }
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "6.1",
                    "Current state": "4 + 10 = 14 (left: 10 10 14)"
                }
            },
            "Step 7": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 * 10 = 140 (left: 10 140)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "7.2",
                    "Current state": "14 - 10 = 4 (left: 4 14)"
                }
            },
            "Step 8": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 - 10 = 4 (left: 4 14) -> 14 - 4 = 10 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "8.4",
                    "Current state": "14 - 4 = 10 (left: 10 14)"
                }
            },
            "Step 9": {
                "Step": "2 + 2 = 4 (left: 4 10 10) -> 10 - 4 = 6 (left: 6 10 10) -> 10 - 6 = 4 (left: 4 10 10) -> 4 + 10 = 14 (left: 10 10 14) -> 14 - 10 = 4 (left: 4 14) -> 14 - 4 = 10 (left: 10 14) -> 14 - 10 = 4 (left: 4 14)",
                "Pruning": null
            }
        },
        "Input": "2 2 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "9": {
        "puzzle": "1 1 1 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 1 1 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.1",
                    "Current state": "1 + 1 = 2 (left: 1 2 12)"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 1 + 2 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "2 * 12 = 24 (left: 1 24)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "1 * 24 = 24 (left: 24)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 1 * 24 = 24 (left: 24) -> Answer: (1 + 1) * (1 * 12) = 24"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 1 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.3",
                    "Current state": "1 + 1 = 2 (left: 1 2 12)"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Current state": "2 + 1 = 3 (left: 3 12)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 + 1 = 3 (left: 3 12) -> 12 - 3 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "1 * 24 = 24 (left: 24)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 1 * 24 = 24 (left: 24) -> Answer: 1 * (1 + (1 * 12)) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 1 = 1 (left: 1 1 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.3",
                    "Current state": "1 + 1 = 2 (left: 1 2 12)"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 + 1 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "2 * 12 = 24 (left: 1 24)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 1 * 24 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Current state": "1 + 24 = 25 (left: 25)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 1 + 24 = 25 (left: 25) -> There is only one possible step: 25 - 25 = 0"
            }
        },
        "Agent 3": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 1 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Current state": "1 + 1 = 2 (left: 1 2 12)"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.3",
                    "Current state": "2 * 12 = 24 (left: 1 24)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 10 / 5 = 2 (left: 2 10",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "1 * 24 = 24 (left: 24)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 1 * 24 = 24 (left: 24) -> Answer: (1 + 1) * (1 + 12) = 24"
            }
        },
        "Agent 4": {
            "Step 0": {
                "Step": "1 + 1 = 2 (left: 1 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.1",
                    "Current state": "1 + 1 = 2 (left: 1 2 12)"
                }
            },
            "Step 1": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 + 12 = 14 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "1.1",
                    "Current state": "12 - 2 = 10 (left: 1 10)"
                }
            },
            "Step 2": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 12 - 2 = 10 (left: 1 10) -> 10 / 1 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Current state": "1 * 24 = 24 (left: 24)"
                }
            },
            "Step 3": {
                "Step": "1 + 1 = 2 (left: 1 2 12) -> 2 * 12 = 24 (left: 1 24) -> 1 * 24 = 24 (left: 24) -> Answer: (1 + 1) * (1 * 12) = 24"
            }
        },
        "Input": "1 1 1 12",
        "Verifications": [
            {
                "r": 1
            },
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 1
            }
        ]
    },
    "Cost": {
        "input_tokens": 136713,
        "output_tokens": 47723.00000000002,
        "total_cost": 0.13994100000000004
    }
}