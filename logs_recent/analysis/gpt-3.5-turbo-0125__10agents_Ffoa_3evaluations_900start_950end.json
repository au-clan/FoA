{
    "900": {
        "input": "4 5 6 10",
        "step_1": {
            "steps": [
                "10 - 4 = 6 (left: 6 5 10)",
                "6 - 4 = 2 (left: 2 5 10)",
                "4 * 5 = 20 (left: 6 10 20)",
                "6 - 4 = 2 (left: 2 5 10)",
                "5 - 6 = -1 (left: 4 -1 10)",
                "4 * 5 = 20 (left: 6 20 10)",
                "4 + 5 = 9 (left: 6 9 10)",
                "4 + 5 = 9 (left: 6 9 10)",
                "10 / 4 = 2.5 (left: 5 6 2.5)",
                "6 - 4 = 2 (left: 2 5 10)"
            ],
            "values": [
                22.0,
                2.001,
                22.0,
                1.002,
                21.001,
                2.0,
                2.0,
                3.0,
                3.0,
                2.001
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 1.2",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 1.4",
                "6 <- INIT",
                "7 <- 1.0",
                "8 <- 1.5",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "4 * 5 = 20 (left: 6 20 10)",
                "4 * 5 = 20 (left: 6 10 20)",
                "",
                "",
                "",
                "5 - 6 = -1 (left: 4 -1 10)",
                "",
                "10 - 4 = 6 (left: 6 5 10)",
                "4 * 5 = 20 (left: 6 20 10)",
                "4 * 5 = 20 (left: 6 10 20)"
            ]
        },
        "step_2": {
            "steps": [
                "4 * 5 = 20 (left: 6 20 10)\n10 / 6 = 1.67 (left: 1.67 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)",
                "4 + 5 = 9 (left: 6 9 10)",
                "10 - 6 = 4 (left: 4 5 10)",
                "5 + 6 = 11 (left: 4 11 10)",
                "5 - 6 = -1 (left: 4 -1 10)\n4 / (-1) = -4 (left: -4 10)",
                "3 + 4 = 7 (left: 2 7 8)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)",
                "4 * 5 = 20 (left: 6 20 10)\n15 - 3 = 12 (left: 3 9 12)",
                "4 * 5 = 20 (left: 6 10 20)\n20 / 10 = 2 (left: 6 2 20)"
            ],
            "values": [
                0.001,
                20.002,
                3.0,
                40.0,
                1.002,
                1.001,
                1.002,
                1.001,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 1.2",
                "2 <- 1.4",
                "3 <- 2.3",
                "4 <- 2.3",
                "5 <- INIT",
                "6 <- 1.4",
                "7 <- 2.1",
                "8 <- 1.4",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)",
                "4 * 5 = 20 (left: 6 10 20)",
                "5 - 6 = -1 (left: 4 -1 10)",
                "10 - 6 = 4 (left: 4 5 10)",
                "10 - 6 = 4 (left: 4 5 10)",
                "",
                "5 - 6 = -1 (left: 4 -1 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)",
                "5 - 6 = -1 (left: 4 -1 10)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)",
                "4 * 5 = 20 (left: 6 10 20)\n10 * 2 = 20 (left: 6 20)",
                "5 - 6 = -1 (left: 4 -1 10)\n-1 - 10 = -11 (left: -11 4)",
                "10 - 6 = 4 (left: 4 5 10)\n27 / 9 = 3 (left: 3 3)",
                "10 - 6 = 4 (left: 4 5 10)\n9 / 3 = 3 (left: 3)",
                "10 - 6 = 4 (left: 4 5 10)",
                "5 - 6 = -1 (left: 4 -1 10)\n9 - 3 = 6 (left: 6 6)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)",
                "5 - 6 = -1 (left: 4 -1 10)\nInput: 3 6 1 2",
                "6 / 4 = 1.5 (left: 1.5 4 10)"
            ],
            "values": [
                60.0,
                0.002,
                0.003,
                0.0,
                0.002,
                2.001,
                0.003,
                60.0,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 3.9",
                "2 <- 3.0",
                "3 <- 2.5",
                "4 <- 3.7",
                "5 <- 1.4",
                "6 <- 3.7",
                "7 <- INIT",
                "8 <- 2.1",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)",
                "6 / 4 = 1.5 (left: 1.5 4 10)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)",
                "5 - 6 = -1 (left: 4 -1 10)\n4 / (-1) = -4 (left: -4 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)",
                "5 - 6 = -1 (left: 4 -1 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)",
                "",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)",
                "5 - 6 = -1 (left: 4 -1 10)"
            ]
        },
        "step_4": {
            "steps": [
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n10 / 11 = 0.909 (left: 0.909)",
                "6 / 4 = 1.5 (left: 1.5 4 10)\n4 + 1.5 = 5.5 (left: 5.5 10)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "5 - 6 = -1 (left: 4 -1 10)\n4 / (-1) = -4 (left: -4 10)\n-4 / 10 = -0.4 (left: -0.4)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n12 + 192 = 204 (left: 204)",
                "5 - 6 = -1 (left: 4 -1 10)\n4 + (-1) = 3 (left: 3 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 / 12 = 16 (left: 16 192)",
                "4 * 5 = 20 (left: 6 20 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 - 8 = 16 (left: 16 8 12)",
                "5 - 6 = -1 (left: 4 -1 10)\n4 / (-1) = -4 (left: -4 10)"
            ],
            "values": [
                0.003,
                1.0,
                0.001,
                0.001,
                0.001,
                0.003,
                20.002,
                3.0,
                22.0,
                2.001
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 3.0",
                "2 <- 1.4",
                "3 <- 3.7",
                "4 <- 4.6",
                "5 <- 3.7",
                "6 <- 3.7",
                "7 <- 3.0",
                "8 <- 3.0",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)",
                "5 - 6 = -1 (left: 4 -1 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 / 12 = 16 (left: 16 192)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)",
                "10 - 6 = 4 (left: 4 5 10)"
            ]
        },
        "step_5": {
            "steps": [
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n12 / 8 = 1.5 (left: 1.5 12)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "5 - 6 = -1 (left: 4 -1 10)\n3 * 6 = 18 (left: 18 9)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 / 12 = 16 (left: 16)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 / 12 = 16 (left: 16 192)\n16 * 192 = 3072 (left: 3072)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 - 12 = 180 (left: 180)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 / 16 = 12 (left: 12)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "10 - 6 = 4 (left: 4 5 10)\n10 - 4 = 6 (left: 6 5)"
            ],
            "values": [
                0.002,
                0.002,
                0.003,
                0.002,
                0.002,
                20.002,
                0.003,
                0.002,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 4.8",
                "2 <- 3.0",
                "3 <- 4.7",
                "4 <- 3.0",
                "5 <- 3.7",
                "6 <- 5.5",
                "7 <- 4.8",
                "8 <- 3.0",
                "9 <- 2.1"
            ],
            "resampled_steps": [
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 - 8 = 16 (left: 16 8 12)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)",
                "4 * 5 = 20 (left: 6 20 10)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 - 12 = 180 (left: 180)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 - 8 = 16 (left: 16 8 12)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)"
            ]
        },
        "step_6": {
            "steps": [
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)\nPossible next steps:",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 - 8 = 16 (left: 16 8 12)\n16 - 8 = 8 (left: 8 8 12)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "4 * 5 = 20 (left: 6 20 10)\n9 - 4 = 5 (left: 5 18 6)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 / 12 = 16 (left: 16)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 - 12 = 180 (left: 180)\n- 180 - 20 = 160",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 - 8 = 16 (left: 16 8 12)\n12 - 8 = 4 (left: 4 8)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 / 12 = 2 (left: 2 8 12)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                3.0,
                0.002,
                0.003,
                0.003,
                0.002,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 5.5",
                "1 <- 3.7",
                "2 <- 2.3",
                "3 <- 2.1",
                "4 <- 2.1",
                "5 <- 3.7",
                "6 <- 4.8",
                "7 <- 4.9",
                "8 <- 4.6",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 - 12 = 180 (left: 180)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)",
                "10 - 6 = 4 (left: 4 5 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 - 8 = 16 (left: 16 8 12)",
                "5 - 6 = -1 (left: 4 -1 10)\n4 / (-1) = -4 (left: -4 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 / 12 = 16 (left: 16 192)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)"
            ]
        },
        "step_7": {
            "steps": [
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 - 12 = 180 (left: 180)\nThere is only one possible next step for the input 180:",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n12 * 16 = 192 (left: 192)",
                "10 - 6 = 4 (left: 4 5 10)\n4 * 5 = 20 (left: 20 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 + 8 = 32 (left: 12 32)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n12 + 192 = 204 (left: 204)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 - 8 = 16 (left: 16 8 12)\n16 + 8 = 24 (left: 8 12 24)",
                "5 - 6 = -1 (left: 4 -1 10)\n4 / (-1) = -4 (left: -4 10)\n-4 * 10 = -40 (left: -40)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 / 12 = 16 (left: 16 192)\n16 + 192 = 208 (left: 208)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)\n1 * 10 = 10 (left: 10)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                60.0,
                0.003,
                0.003,
                1.001,
                0.002,
                0.002,
                0.001
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 3.0",
                "2 <- 3.7",
                "3 <- 7.3",
                "4 <- 1.4",
                "5 <- 3.7",
                "6 <- 7.3",
                "7 <- 4.8",
                "8 <- 2.1",
                "9 <- 7.3"
            ],
            "resampled_steps": [
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)",
                "5 - 6 = -1 (left: 4 -1 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 - 8 = 16 (left: 16 8 12)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)"
            ]
        },
        "step_8": {
            "steps": [
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)\n1 - 10 = -9 (left: -9)",
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)\n1 - 10 = -9 (left: -9)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n12 * 16 = 192 (left: 192)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)\n8 - 0.3333333333333333 = 7.666666666666667 (left: 7.666666666666667 12)",
                "5 - 6 = -1 (left: 4 -1 10)\n-1 * 10 = -10 (left: 4 -10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n12 * 16 = 192 (left: 192)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)\n8 * 12 = 96 (left: 0.3333333333333333 96)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 - 8 = 16 (left: 16 8 12)\nInput: 4 12",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 / 8 = 3 (left: 3 12)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)\n0.3333333333333333 * 8 = 2.6666666666666665 (left: 2.6666666666666665 12)"
            ],
            "values": [
                0.002,
                0.003,
                0.002,
                3.0,
                0.003,
                0.003,
                1.001,
                0.003,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 4.6",
                "2 <- 7.3",
                "3 <- 5.5",
                "4 <- 5.5",
                "5 <- 4.8",
                "6 <- 5.5",
                "7 <- 3.7",
                "8 <- 3.7",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 / 12 = 16 (left: 16 192)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 - 12 = 180 (left: 180)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 - 12 = 180 (left: 180)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 - 8 = 16 (left: 16 8 12)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 - 12 = 180 (left: 180)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)"
            ]
        },
        "step_9": {
            "steps": [
                "10 - 4 = 6 (left: 6 5 10)\n6 + 5 = 11 (left: 11 10)\n11 - 10 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 / 12 = 16 (left: 16 192)\n16 + 192 = 208 (left: 192 208)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)\n12 / 8 = 1.5 (left: 0.3333333333333333 1.5 12)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 - 12 = 180 (left: 180)\nThere is only one number, so there are no possible next steps for this input.",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 - 12 = 180 (left: 180)\nThere are no possible next steps for the number 180.",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 - 8 = 16 (left: 16 8 12)\n16 + 8 = 24 (left: 12 24)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 - 12 = 180 (left: 180)\n180 / 2 = 90",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n12 * 16 = 192 (left: 192)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n12 * 8 = 96 (left: 96)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n12 + 192 = 204 (left: 204)"
            ],
            "values": [
                0.002,
                0.003,
                3.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 4.6",
                "1 <- 9.2",
                "2 <- 8.3",
                "3 <- 7.6",
                "4 <- 2.3",
                "5 <- 3.7",
                "6 <- 7.3",
                "7 <- 7.3",
                "8 <- 4.6",
                "9 <- 7.3"
            ],
            "resampled_steps": [
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 / 12 = 16 (left: 16 192)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)\n12 / 8 = 1.5 (left: 0.3333333333333333 1.5 12)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)\n8 - 0.3333333333333333 = 7.666666666666667 (left: 7.666666666666667 12)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 - 8 = 16 (left: 16 8 12)\n16 + 8 = 24 (left: 8 12 24)",
                "10 - 6 = 4 (left: 4 5 10)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 / 12 = 16 (left: 16 192)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)"
            ]
        },
        "step_10": {
            "steps": [
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 / 12 = 16 (left: 16 192)\n16 + 192 = 208 (left: 192 208)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)\n12 / 8 = 1.5 (left: 0.3333333333333333 1.5 12)\n1.5 - 0.3333333333333333 = 1.1666666666666667 (left: 1.1666666666666667 12)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)\n8 - 0.3333333333333333 = 7.666666666666667 (left: 7.666666666666667 12)\n12 - 7.666666666666667 = 4.333333333333333 (left: 4.333333333333333 12)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 - 8 = 16 (left: 16 8 12)\n16 + 8 = 24 (left: 8 12 24)\n24 / 12 = 2 (left: 8 2)",
                "10 - 6 = 4 (left: 4 5 10)\n3 + 6 = 9 (left: 9 9 12)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n12 + 192 = 204 (left: 204)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)\nInput: 7 7.666666666666667 12",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)\n12 / 8 = 1.5 (left: 0.3333333333333333 1.5)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n24 * 8 = 192 (left: 12 192)\n192 / 12 = 16 (left: 16 192)\n192 - 16 = 176 (left: 176)",
                "4 * 5 = 20 (left: 6 10 20)\n4 * 6 = 24 (left: 24 8 12)\n8 / 24 = 0.3333333333333333 (left: 0.3333333333333333 8 12)\n0.3333333333333333 * 8 = 2.6666666666666665 (left: 2.6666666666666665 12)"
            ],
            "values": [
                20.001,
                0.003,
                0.001,
                1.001,
                3.0,
                0.003,
                0.003,
                1.001,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.052846500000000005
    },
    "901": {
        "input": "1 2 4 7",
        "step_1": {
            "steps": [
                "7 - 2 = 5 (left: 1 4 5)",
                "7 - 4 = 3 (left: 1 2 3)",
                "7 - 1 = 6 (left: 2 4 6)",
                "4 - 2 = 2 (left: 1 2 7)",
                "Possible next steps:",
                "1 + 2 = 3 (left: 3 4 7)",
                "2 * 4 = 8 (left: 1 8 7)",
                "2 * 4 = 8 (left: 1 8 7)",
                "9 - 3 = 6 (left: 3 5 6)",
                "7 - 1 = 6 (left: 2 4 6)"
            ],
            "values": [
                2.001,
                0.003,
                1.002,
                3.0,
                0.003,
                3.0,
                1.002,
                2.001,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.7",
                "2 <- 1.5",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "2 * 4 = 8 (left: 1 8 7)",
                "1 + 2 = 3 (left: 3 4 7)",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "1 + 2 = 3 (left: 3 4 7)",
                "2 * 4 = 8 (left: 1 8 7)\n7 / 1 = 7 (left: 7 7)",
                "1 + 2 = 3 (left: 3 4 7)\n7 - 4 = 3 (left: 3 7)",
                "2 + 4 = 6 (left: 1 6 7)",
                "7 - 4 = 3 (left: 1 2 3)",
                "4 - 2 = 2 (left: 1 2 7)",
                "7 - 1 = 6 (left: 2 4 6)",
                "1 + 2 = 3 (left: 3 4 7)",
                "2 * 4 = 8 (left: 1 8 7)",
                "2 * 4 = 8 (left: 1 8 7)"
            ],
            "values": [
                3.0,
                0.002,
                0.0,
                1.002,
                2.001,
                2.001,
                1.002,
                3.0,
                1.002,
                3.0
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 1.7",
                "2 <- 1.0",
                "3 <- INIT",
                "4 <- 1.8",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 1.0",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 4 7)",
                "2 * 4 = 8 (left: 1 8 7)",
                "7 - 2 = 5 (left: 1 4 5)",
                "",
                "9 - 3 = 6 (left: 3 5 6)",
                "",
                "",
                "",
                "7 - 2 = 5 (left: 1 4 5)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "1 + 2 = 3 (left: 3 4 7)\n3 / 7 = 0.429 (left: 0.429)",
                "2 * 4 = 8 (left: 1 8 7)\n7 - 1 = 6 (left: 6)",
                "7 - 2 = 5 (left: 1 4 5)\n6 * 3 = 18 (left: 9 18)",
                "1 + 2 = 3 (left: 3 4 7)",
                "9 - 3 = 6 (left: 3 5 6)\n9 - 4 = 5 (left: 5 9 11)",
                "7 - 1 = 6 (left: 2 4 6)",
                "7 - 1 = 6 (left: 2 4 6)",
                "4 + 2 = 6 (left: 1 6 7)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)",
                "7 / 1 = 7 (left: 2 4 7)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                3.0,
                3.0,
                0.003,
                1.002,
                1.002,
                41.0,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 3.4",
                "2 <- 3.8",
                "3 <- 2.7",
                "4 <- INIT",
                "5 <- 3.8",
                "6 <- INIT",
                "7 <- 3.8",
                "8 <- 3.8",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "",
                "9 - 3 = 6 (left: 3 5 6)\n9 - 4 = 5 (left: 5 9 11)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)",
                "1 + 2 = 3 (left: 3 4 7)",
                "",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)",
                "",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)",
                "9 - 3 = 6 (left: 3 5 6)"
            ]
        },
        "step_4": {
            "steps": [
                "4 + 1 = 5 (left: 2 5 7)",
                "9 - 3 = 6 (left: 3 5 6)\n9 - 4 = 5 (left: 5 9 11)\n6 / 3 = 2 (left: 2 9)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)\n4 + 5 = 9 (left: 9)",
                "1 + 2 = 3 (left: 3 4 7)\n7 - 4 = 3 (left: 3)",
                "2 + 4 = 6 (left: 1 6 7)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)\n4 - 5 = -1 (left: -1)",
                "4 - 2 = 2 (left: 1 2 7)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)\n4 - 5 = -1 (left: -1)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)",
                "9 - 3 = 6 (left: 3 5 6)\n6 - 4 = 2 (left: 2 4 6)"
            ],
            "values": [
                3.0,
                0.001,
                0.001,
                0.003,
                20.002,
                0.0,
                1.002,
                0.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 3.8",
                "2 <- INIT",
                "3 <- 3.8",
                "4 <- 3.8",
                "5 <- 3.9",
                "6 <- 4.4",
                "7 <- 3.8",
                "8 <- 3.4",
                "9 <- 3.8"
            ],
            "resampled_steps": [
                "2 + 4 = 6 (left: 1 6 7)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)",
                "",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)",
                "7 / 1 = 7 (left: 2 4 7)",
                "2 + 4 = 6 (left: 1 6 7)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)",
                "9 - 3 = 6 (left: 3 5 6)\n9 - 4 = 5 (left: 5 9 11)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)"
            ]
        },
        "step_5": {
            "steps": [
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)",
                "8 - 5 = 3 (left: 3 6 8)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)\n4 + 5 = 9 (left: 9)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)\n5 / 4 = 1.25 (left: 1.25)",
                "7 / 1 = 7 (left: 2 4 7)\n4 * 2 = 8 (left: 8 7)",
                "2 + 4 = 6 (left: 1 6 7)\n1 + 6 = 7 (left: 7 7)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)\n9 / 3 = 3 (left: 3)",
                "9 - 3 = 6 (left: 3 5 6)\n9 - 4 = 5 (left: 5 9 11)\n10 - 7 = 3 (left: 3 7 15)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)\n5 / 4 = 1.25 (left: 1.25)"
            ],
            "values": [
                40.001,
                20.0,
                0.003,
                0.002,
                0.002,
                20.002,
                0.003,
                0.002,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 5.8",
                "1 <- 4.4",
                "2 <- 5.0",
                "3 <- 4.4",
                "4 <- 5.0",
                "5 <- 2.0",
                "6 <- 5.8",
                "7 <- 5.0",
                "8 <- 5.0",
                "9 <- 5.1"
            ],
            "resampled_steps": [
                "9 - 3 = 6 (left: 3 5 6)\n9 - 4 = 5 (left: 5 9 11)\n10 - 7 = 3 (left: 3 7 15)",
                "2 + 4 = 6 (left: 1 6 7)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)",
                "2 + 4 = 6 (left: 1 6 7)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)",
                "1 + 2 = 3 (left: 3 4 7)",
                "9 - 3 = 6 (left: 3 5 6)\n9 - 4 = 5 (left: 5 9 11)\n10 - 7 = 3 (left: 3 7 15)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)"
            ]
        },
        "step_6": {
            "steps": [
                "9 - 3 = 6 (left: 3 5 6)\n9 - 4 = 5 (left: 5 9 11)\n10 - 7 = 3 (left: 3 7 15)\n15 / 3 = 5 (left: 5 15)",
                "2 + 4 = 6 (left: 1 6 7)\n6 / 1 = 6 (left: 6 6)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 7)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "1 + 2 = 3 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "9 - 3 = 6 (left: 3 5 6)\n9 - 4 = 5 (left: 5 9 11)\n10 - 7 = 3 (left: 3 7 15)\n7 / 3 = 2 (left: 2 15)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 2 = 22 (left: 2)"
            ],
            "values": [
                0.003,
                20.002,
                60.0,
                0.003,
                60.0,
                20.0,
                0.002,
                0.0,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 3.8",
                "1 <- 3.8",
                "2 <- 6.4",
                "3 <- 5.0",
                "4 <- 5.0",
                "5 <- 2.4",
                "6 <- 6.2",
                "7 <- 6.4",
                "8 <- 5.0",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)",
                "7 - 4 = 3 (left: 1 2 3)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)",
                ""
            ]
        },
        "step_7": {
            "steps": [
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)\n5 / 4 = 1.25 (left: 1.25)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)\n4 / 5 = 0.8 (left: 0.8)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 + 6 = 12",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "7 - 4 = 3 (left: 1 2 3)\n1 * 2 = 2 (left: 2 3)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nNone, since there is only one number provided.",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "4 + 7 = 11 (left: 1 2 11)"
            ],
            "values": [
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                40.0,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 5.8",
                "1 <- 3.8",
                "2 <- 5.8",
                "3 <- 6.2",
                "4 <- 7.5",
                "5 <- 6.2",
                "6 <- 5.5",
                "7 <- 6.2",
                "8 <- 5.0",
                "9 <- 6.4"
            ],
            "resampled_steps": [
                "9 - 3 = 6 (left: 3 5 6)\n9 - 4 = 5 (left: 5 9 11)\n10 - 7 = 3 (left: 3 7 15)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)",
                "9 - 3 = 6 (left: 3 5 6)\n9 - 4 = 5 (left: 5 9 11)\n10 - 7 = 3 (left: 3 7 15)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "7 - 4 = 3 (left: 1 2 3)\n1 * 2 = 2 (left: 2 3)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "7 / 1 = 7 (left: 2 4 7)\n4 * 2 = 8 (left: 8 7)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)"
            ]
        },
        "step_8": {
            "steps": [
                "9 - 3 = 6 (left: 3 5 6)\n9 - 4 = 5 (left: 5 9 11)\n10 - 7 = 3 (left: 3 7 15)\n7 / 3 = 2 (left: 2 15)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)\n4 + 5 = 9 (left: 9)",
                "9 - 3 = 6 (left: 3 5 6)\n9 - 4 = 5 (left: 5 9 11)\n10 - 7 = 3 (left: 3 7 15)\n3 * 7 = 21 (left: 21 15)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nThere are no possible next steps for the number 36 as it is a single number and not a calculation involving multiple numbers.",
                "7 - 4 = 3 (left: 1 2 3)\n1 * 2 = 2 (left: 2 3)\n2 + 3 = 5",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 * 8 = 288 (left: 8)",
                "7 / 1 = 7 (left: 2 4 7)\n4 * 2 = 8 (left: 8 7)\n8 + 7 = 15 (left: 15)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nNone. This is the final result as there are no more numbers to operate on.",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nThere are no possible next steps with only one number provided."
            ],
            "values": [
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                0.0,
                0.003,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 7.5",
                "1 <- 5.0",
                "2 <- 6.2",
                "3 <- 7.5",
                "4 <- 3.8",
                "5 <- 6.4",
                "6 <- 7.5",
                "7 <- 6.5",
                "8 <- 7.5",
                "9 <- 6.2"
            ],
            "resampled_steps": [
                "7 - 4 = 3 (left: 1 2 3)\n1 * 2 = 2 (left: 2 3)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "7 - 4 = 3 (left: 1 2 3)\n1 * 2 = 2 (left: 2 3)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "7 - 4 = 3 (left: 1 2 3)\n1 * 2 = 2 (left: 2 3)",
                "1 + 2 = 3 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)",
                "7 - 4 = 3 (left: 1 2 3)\n1 * 2 = 2 (left: 2 3)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)"
            ]
        },
        "step_9": {
            "steps": [
                "7 - 4 = 3 (left: 1 2 3)\n1 * 2 = 2 (left: 2 3)\n5 * 10 = 50 (left: 50)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nNone - there is only one number provided.",
                "7 - 4 = 3 (left: 1 2 3)\n1 * 2 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 - 8 = 28 (left: 28)",
                "7 - 4 = 3 (left: 1 2 3)\n1 * 2 = 2 (left: 2 3)\n3 / 2 = 1.5 (left: 1.5)",
                "1 + 2 = 3 (left: 3 4 7)\n4 - 3 = 1 (left: 1 7)\n7 * 1 = 7 (left: 7)",
                "7 - 4 = 3 (left: 1 2 3)\n1 * 2 = 2 (left: 2 3)\n3 - 2 = 1 (left: 1)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nNo possible next steps, as there is only one number."
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                0.001,
                0.002,
                0.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 6.2",
                "1 <- 5.1",
                "2 <- 1.8",
                "3 <- 6.2",
                "4 <- 6.2",
                "5 <- 6.4",
                "6 <- 7.5",
                "7 <- 6.4",
                "8 <- 6.2",
                "9 <- 6.1"
            ],
            "resampled_steps": [
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)",
                "9 - 3 = 6 (left: 3 5 6)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "7 - 4 = 3 (left: 1 2 3)\n1 * 2 = 2 (left: 2 3)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 + 4 = 6 (left: 1 6 7)\n6 / 1 = 6 (left: 6 6)"
            ]
        },
        "step_10": {
            "steps": [
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nThere are no possible next steps for the number 36.",
                "7 - 2 = 5 (left: 1 4 5)\n1 * 4 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\nThere are no possible next steps with the number 20.",
                "9 - 3 = 6 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 + 2 = 38",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 + 2 = 38",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nThere is only one number, so there are no possible next steps.",
                "7 - 4 = 3 (left: 1 2 3)\n1 * 2 = 2 (left: 2 3)\n3 / 2 = 1.5 (left: 1.5)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 4 = 9 (left: 9)",
                "2 + 4 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nNo next steps possible with a single number.",
                "2 + 4 = 6 (left: 1 6 7)\n6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                0.002,
                0.003,
                0.001
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.1071275
    },
    "902": {
        "input": "2 5 8 11",
        "step_1": {
            "steps": [
                "5 * 8 = 40 (left: 2 40 11)",
                "5 + 8 = 13 (left: 2 13 11)",
                "11 - 2 = 9 (left: 9 8 11)",
                "8 - 2 = 6 (left: 5 6 11)",
                "5 + 2 = 7 (left: 7 8 11)",
                "8 + 5 = 13 (left: 2 13 11)",
                "12 - 10 = 2 (left: 4 2 16)",
                "8 + 2 = 10 (left: 5 10 11)",
                "11^2 = 121 (left: 2 5 121)",
                "9 - 3 = 6 (left: 6 9 12)"
            ],
            "values": [
                1.002,
                1.002,
                3.0,
                22.0,
                1.002,
                0.003,
                40.001,
                1.001,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 1.3",
                "2 <- 1.3",
                "3 <- INIT",
                "4 <- 1.3",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 1.3",
                "8 <- 1.9",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "12 - 10 = 2 (left: 4 2 16)",
                "8 - 2 = 6 (left: 5 6 11)",
                "8 - 2 = 6 (left: 5 6 11)",
                "",
                "8 - 2 = 6 (left: 5 6 11)",
                "",
                "",
                "8 - 2 = 6 (left: 5 6 11)",
                "9 - 3 = 6 (left: 6 9 12)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "12 - 10 = 2 (left: 4 2 16)\n4 + 2 = 6 (left: 6 16)",
                "8 - 2 = 6 (left: 5 6 11)\n5 + 6 = 11 (left: 11)",
                "8 - 2 = 6 (left: 5 6 11)\n5 * 6 = 30 (left: 30 11)",
                "2 + 5 = 7 (left: 7 8 11)",
                "8 - 2 = 6 (left: 5 6 11)\n12 - 3 = 9 (left: 9 12)",
                "2 + 5 = 7 (left: 7 8 11)",
                "Possible next steps:",
                "8 - 2 = 6 (left: 5 6 11)\nInput: 4 7 11",
                "9 - 3 = 6 (left: 6 9 12)\n6 + 9 = 15 (left: 12 15)",
                "11 - 2 = 9 (left: 5 8 9)"
            ],
            "values": [
                0.003,
                0.001,
                0.003,
                3.0,
                0.002,
                3.0,
                0.003,
                0.003,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 2.3",
                "2 <- INIT",
                "3 <- 1.6",
                "4 <- INIT",
                "5 <- 1.6",
                "6 <- 1.1",
                "7 <- 1.6",
                "8 <- INIT",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "9 - 3 = 6 (left: 6 9 12)",
                "2 + 5 = 7 (left: 7 8 11)",
                "",
                "12 - 10 = 2 (left: 4 2 16)",
                "",
                "12 - 10 = 2 (left: 4 2 16)",
                "5 + 8 = 13 (left: 2 13 11)",
                "12 - 10 = 2 (left: 4 2 16)",
                "",
                "12 - 10 = 2 (left: 4 2 16)"
            ]
        },
        "step_3": {
            "steps": [
                "9 - 3 = 6 (left: 6 9 12)\n12 - 6 = 6 (left: 9 6)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)",
                "2 + 5 = 7 (left: 7 8 11)",
                "12 - 10 = 2 (left: 4 2 16)\n9 * 3 = 27 (left: 5 6 27)",
                "8 + 2 = 10 (left: 10 10 11)",
                "12 - 10 = 2 (left: 4 2 16)\n2 * 16 = 32 (left: 4 32)",
                "5 + 8 = 13 (left: 2 13 11)\n3 * 2 = 6 (left: 6 7 10)",
                "12 - 10 = 2 (left: 4 2 16)\n7 - 5 = 2 (left: 2 7)",
                "5 * 2 = 10 (left: 10 8 11)",
                "12 - 10 = 2 (left: 4 2 16)\nPossible next steps:"
            ],
            "values": [
                0.002,
                0.002,
                2.001,
                2.001,
                0.003,
                1.002,
                3.0,
                0.002,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- 3.8",
                "1 <- INIT",
                "2 <- 1.6",
                "3 <- 3.2",
                "4 <- INIT",
                "5 <- 1.3",
                "6 <- 1.3",
                "7 <- 2.9",
                "8 <- 2.5",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "5 * 2 = 10 (left: 10 8 11)",
                "",
                "12 - 10 = 2 (left: 4 2 16)",
                "2 + 5 = 7 (left: 7 8 11)",
                "",
                "8 - 2 = 6 (left: 5 6 11)",
                "8 - 2 = 6 (left: 5 6 11)",
                "11 - 2 = 9 (left: 5 8 9)",
                "2 + 5 = 7 (left: 7 8 11)",
                "12 - 10 = 2 (left: 4 2 16)"
            ]
        },
        "step_4": {
            "steps": [
                "5 * 2 = 10 (left: 10 8 11)\n2 + 18 = 20 (left: 8 20)",
                "2 + 5 = 7 (left: 7 8 11)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 4 12)",
                "2 + 5 = 7 (left: 7 8 11)\n8 - 4 = 4 (left: 1 4 8)",
                "5 * 2 = 10 (left: 10 8 11)",
                "8 - 2 = 6 (left: 5 6 11)\n9 / 3 = 3 (left: 3 27)",
                "8 - 2 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)",
                "11 - 2 = 9 (left: 5 8 9)\n5 * 8 = 40 (left: 9 40)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)"
            ],
            "values": [
                0.003,
                2.001,
                0.002,
                0.003,
                2.0,
                20.002,
                20.0,
                0.003,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 4.8",
                "2 <- 4.9",
                "3 <- 4.8",
                "4 <- 4.8",
                "5 <- 4.8",
                "6 <- 1.3",
                "7 <- 4.9",
                "8 <- 4.9",
                "9 <- 4.9"
            ],
            "resampled_steps": [
                "8 - 2 = 6 (left: 5 6 11)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)",
                "8 - 2 = 6 (left: 5 6 11)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)"
            ]
        },
        "step_5": {
            "steps": [
                "8 - 2 = 6 (left: 5 6 11)\nInput: 3 7 10",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 ^ 8 = 6561 (left: 6561)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "8 - 2 = 6 (left: 5 6 11)\n6 / 3 = 2 (left: 2 6)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)"
            ],
            "values": [
                0.003,
                60.0,
                60.0,
                0.0,
                0.003,
                0.001,
                0.001,
                60.0,
                0.001,
                0.001
            ],
            "resampled": [
                "0 <- 4.6",
                "1 <- 4.9",
                "2 <- 5.7",
                "3 <- 5.7",
                "4 <- 4.6",
                "5 <- 5.1",
                "6 <- 5.1",
                "7 <- 5.1",
                "8 <- 5.2",
                "9 <- 4.6"
            ],
            "resampled_steps": [
                "8 - 2 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "8 - 2 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "8 - 2 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)"
            ]
        },
        "step_6": {
            "steps": [
                "8 - 2 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (12 - (8 - 5)) = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((8 - 5) - 2) * 11 = 24",
                "8 - 2 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 * (12 - (10 - 4))) = 24",
                "8 - 2 = 6 (left: 5 6 11)\n6 - 5 = 1 (left: 1 11)\n1 * 11 = 11 (left: 11)"
            ],
            "values": [
                0.003,
                0.003,
                40.001,
                60.0,
                0.001,
                60.0,
                60.0,
                60.0,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 4.9",
                "1 <- 6.6",
                "2 <- 5.1",
                "3 <- 5.7",
                "4 <- 6.3",
                "5 <- 6.6",
                "6 <- 5.2",
                "7 <- 4.9",
                "8 <- 3.8",
                "9 <- 6.5"
            ],
            "resampled_steps": [
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((8 - 5) - 2) * 11 = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)",
                "5 * 2 = 10 (left: 10 8 11)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24"
            ]
        },
        "step_7": {
            "steps": [
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 5) * (11 + 2) = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((8 - 5) - 2) * 11 = 24\nInput: 3 5 7 9\nSteps:\n7 - 3 = 4 (left: 4 5 9)\n4 + 5 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((7 - 3) + 5) * 9 - 3) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (2 * (12 - 10)) * 8 = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "5 * 2 = 10 (left: 10 8 11)\n8 * 11 = 88 (left: 10 88)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 + 8 = 18 (left: 18)\n18 / 2 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((7 - 3) + 6 + 8) + ((3 * 9) - 3) = 24"
            ],
            "values": [
                0.002,
                60.0,
                60.0,
                60.0,
                60.0,
                20.0,
                0.003,
                0.001,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 7.1",
                "2 <- 4.8",
                "3 <- 6.7",
                "4 <- 5.7",
                "5 <- 7.1",
                "6 <- 7.1",
                "7 <- 7.2",
                "8 <- 6.2",
                "9 <- 4.5"
            ],
            "resampled_steps": [
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 5) * (11 + 2) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (12 - (8 - 5)) = 24",
                "8 - 2 = 6 (left: 5 6 11)\n9 / 3 = 3 (left: 3 27)"
            ]
        },
        "step_8": {
            "steps": [
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 5) * (11 + 2) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 1 2 3 4\nSteps:\n3 * 4 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((1 * (2 * 3)) + 4) - 1 = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 6 7 9\nSteps:\n6 * 3 = 18 (left: 7 9 18)\n7 + 9 = 16 (left: 16 18)\n16 + 18 = 24 (left: 24)\nAnswer: ((6 * 3) + (7 + 9)) = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (12 - (8 - 5)) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 1 3 7 9\nSteps:\n1 * 7 = 7 (left: 3 9 7)\n9 - 3 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n13 + 1 = 14 (left: 14)\n14 * 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((1 * 7) + (9 - 3)) + (1 + 4) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 6\nSteps:\n3 * 4 = 12 (left: 3 6 12)\n6 - 3 = 3 (left: 3 12)\n3 * 12 = 36 (left: 36)\nAnswer: (3 * 4) * (6 - 3) = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (12 - (8 - 5)) = 24\nInput: 3 6 7 8\nSteps:\n6 + 7 = 13 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n10 * 8 = 80 (left: 80)\n80 / 10 = 24 (left: 24)\nAnswer: ((6 + 7) - 3) * 8 = 24",
                "8 - 2 = 6 (left: 5 6 11)\n9 / 3 = 3 (left: 3 27)\n27 / 3 = 9 (left: 3 9)"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 8.3",
                "1 <- 7.4",
                "2 <- 6.2",
                "3 <- 8.5",
                "4 <- 6.7",
                "5 <- 7.1",
                "6 <- 8.0",
                "7 <- 8.1",
                "8 <- 4.8",
                "9 <- 8.5"
            ],
            "resampled_steps": [
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 6 7 9\nSteps:\n6 * 3 = 18 (left: 7 9 18)\n7 + 9 = 16 (left: 16 18)\n16 + 18 = 24 (left: 24)\nAnswer: ((6 * 3) + (7 + 9)) = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((8 - 5) - 2) * 11 = 24\nInput: 3 5 7 9\nSteps:\n7 - 3 = 4 (left: 4 5 9)\n4 + 5 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((7 - 3) + 5) * 9 - 3) = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (12 - (8 - 5)) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 5) * (11 + 2) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 1 2 3 4\nSteps:\n3 * 4 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((1 * (2 * 3)) + 4) - 1 = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 6 7 9\nSteps:\n6 * 3 = 18 (left: 7 9 18)\n7 + 9 = 16 (left: 16 18)\n16 + 18 = 24 (left: 24)\nAnswer: ((6 * 3) + (7 + 9)) = 24\nInput: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 * 3 = 21 (left: 21 7)\n21 - 7 = 14 (left: 14)\n14 + 7 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 + 4) * 7) + 3 = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((8 - 5) - 2) * 11 = 24\nInput: 3 5 7 9\nSteps:\n7 - 3 = 4 (left: 4 5 9)\n4 + 5 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((7 - 3) + 5) * 9 - 3) = 24\nInput: 3 6 8 9\nSteps:\n6 * 3 = 18 (left: 8 9 18)\n18 - 9 = 9 (left: 8 9)\n8 * 9 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((6 * 3) - 9) * 8 = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (12 - (8 - 5)) = 24\nInput: 3 6 6 7\nSteps:\n6 * 3 = 18 (left: 6 7 18)\n7 - 6 = 1 (left: 1 18)\n1 * 18 = 18 (left: 18)\nAnswer: (6 * 3) + (7 - 6) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n8 - 6 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 4) - 6) * 3 = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 6 7 9\nSteps:\n6 * 3 = 18 (left: 7 9 18)\n9 - 7 = 2 (left: 2 18)\n2 * 18 = 36 (left: 36)\nAnswer: (6 * 3) - (9 - 7) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 6 6 7 8\nSteps:\n6 + 7 = 13 (left: 6 8 13)\n13 - 8 = 5 (left: 5 6)\n5 * 6 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((6 + 7) - 8) * 6 = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 5) * (11 + 2) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n2 + 9 = 11 (left: 11 18)\n11 * 18 = 198 (left: 198)\nAnswer: (2 + 9) * (6 * 3) = 198",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 1 2 3 4\nSteps:\n3 * 4 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((1 * (2 * 3)) + 4) - 1 = 24\nInput: 6 6 7 8\nSteps:\n6 + 8 = 14 (left: 6 7 14)\n6 + 7 = 13 (left: 13 14)\n13 - 14 = -1 (left: -1)\n-1 * -1 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: ((6 + 8) * (6 + 7)) - 24 = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n4 + 5 = 9 (left: 5)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24\nInput: 2 3 6 9\nSteps:\n6 / 3 = 2 (left: 2 9 2)\n2 * 9 = 18 (left: 18 2)\n18 - 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((6 / 3) * 9) + (2 + 8) = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                40.0,
                60.0,
                60.0,
                60.0,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 9.9",
                "1 <- 8.2",
                "2 <- 7.5",
                "3 <- 8.0",
                "4 <- 9.5",
                "5 <- 9.7",
                "6 <- 8.6",
                "7 <- 8.6",
                "8 <- 9.1",
                "9 <- 8.3"
            ],
            "resampled_steps": [
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24\nInput: 2 3 6 9\nSteps:\n6 / 3 = 2 (left: 2 9 2)\n2 * 9 = 18 (left: 18 2)\n18 - 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((6 / 3) * 9) + (2 + 8) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 5) * (11 + 2) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 6 6 7 8\nSteps:\n6 + 7 = 13 (left: 6 8 13)\n13 - 8 = 5 (left: 5 6)\n5 * 6 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((6 + 7) - 8) * 6 = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 1 2 3 4\nSteps:\n3 * 4 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((1 * (2 * 3)) + 4) - 1 = 24\nInput: 6 6 7 8\nSteps:\n6 + 8 = 14 (left: 6 7 14)\n6 + 7 = 13 (left: 13 14)\n13 - 14 = -1 (left: -1)\n-1 * -1 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: ((6 + 8) * (6 + 7)) - 24 = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 1 3 7 9\nSteps:\n1 * 7 = 7 (left: 3 9 7)\n9 - 3 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n13 + 1 = 14 (left: 14)\n14 * 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((1 * 7) + (9 - 3)) + (1 + 4) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 1 3 7 9\nSteps:\n1 * 7 = 7 (left: 3 9 7)\n9 - 3 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n13 + 1 = 14 (left: 14)\n14 * 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((1 * 7) + (9 - 3)) + (1 + 4) = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((8 - 5) - 2) * 11 = 24\nInput: 3 5 7 9\nSteps:\n7 - 3 = 4 (left: 4 5 9)\n4 + 5 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((7 - 3) + 5) * 9 - 3) = 24\nInput: 3 6 8 9\nSteps:\n6 * 3 = 18 (left: 8 9 18)\n18 - 9 = 9 (left: 8 9)\n8 * 9 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((6 * 3) - 9) * 8 = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 6 7 9\nSteps:\n6 * 3 = 18 (left: 7 9 18)\n7 + 9 = 16 (left: 16 18)\n16 + 18 = 24 (left: 24)\nAnswer: ((6 * 3) + (7 + 9)) = 24"
            ]
        },
        "step_10": {
            "steps": [
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24\nInput: 2 3 6 9\nSteps:\n6 / 3 = 2 (left: 2 9 2)\n2 * 9 = 18 (left: 18 2)\n18 - 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((6 / 3) * 9) + (2 + 8) = 24\nInput: 2 2 3 12\nSteps:\n2 * 3 = 6 (left: 2 6 12)\n6 + 2 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\n96 / 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 2) * (12 / 4) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 - 1 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (3 - 1) * (5 + 7) = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 5) * (11 + 2) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 6 6 6 6\nSteps:\n6 * 6 = 36 (left: 6 6 36)\n6 - 6 = 0 (left: 0 36)\n0 + 36 = 36 (left: 36)\nAnswer: (6 * 6) - (6 + 6) = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 6 6 7 8\nSteps:\n6 + 7 = 13 (left: 6 8 13)\n13 - 8 = 5 (left: 5 6)\n5 * 6 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((6 + 7) - 8) * 6 = 24\nInput: 2 3 5 8\nSteps:\n2 * 5 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 5) - 8) * 3 = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 1 2 3 4\nSteps:\n3 * 4 = 12 (left: 1 2 12)\n2 * 12 = 24 (left: 1 24)\n1 + 24 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((1 * (2 * 3)) + 4) - 1 = 24\nInput: 6 6 7 8\nSteps:\n6 + 8 = 14 (left: 6 7 14)\n6 + 7 = 13 (left: 13 14)\n13 - 14 = -1 (left: -1)\n-1 * -1 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: ((6 + 8) * (6 + 7)) - 24 = 24\nInput: 3 4 5 6\nSteps:\n3 * 4 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n11 + 12 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 * 4) + (5 + 6)) + 1 = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 1 3 7 9\nSteps:\n1 * 7 = 7 (left: 3 9 7)\n9 - 3 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n13 + 1 = 14 (left: 14)\n14 * 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((1 * 7) + (9 - 3)) + (1 + 4) = 24\nInput: 2 3 6 9\nSteps:\n6 - 3 = 3 (left: 2 9 3)\n3 * 9 = 27 (left: 2 27)\n2 * 27 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((6 - 3) * 9) - 3 = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + (3 + 1) = 24\nInput: 1 3 7 9\nSteps:\n1 * 7 = 7 (left: 3 9 7)\n9 - 3 = 6 (left: 6 7)\n6 + 7 = 13 (left: 13)\n13 + 1 = 14 (left: 14)\n14 * 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((1 * 7) + (9 - 3)) + (1 + 4) = 24\nInput: 5 6 7 8\nSteps:\n6 + 8 = 14 (left: 5 7 14)\n7 - 5 = 2 (left: 2 14)\n2 * 14 = 28 (left: 28)\n28 / 7 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((6 + 8) / (7 - 5)) * (6) = 24",
                "12 - 10 = 2 (left: 4 2 16)\n16 - 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((8 - 5) - 2) * 11 = 24\nInput: 3 5 7 9\nSteps:\n7 - 3 = 4 (left: 4 5 9)\n4 + 5 = 9 (left: 9 9)\n9 * 9 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((7 - 3) + 5) * 9 - 3) = 24\nInput: 3 6 8 9\nSteps:\n6 * 3 = 18 (left: 8 9 18)\n18 - 9 = 9 (left: 8 9)\n8 * 9 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((6 * 3) - 9) * 8 = 24\nInput: 4 7 8 9\nSteps:\n7 + 9 = 16 (left: 4 8 16)\n8 - 4 = 4 (left: 4 16)\n4 * 16 = 64 (left: 64)\n64 / 8 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((7 + 9) * (8 - 4)) * 3 = 24",
                "2 + 5 = 7 (left: 7 8 11)\n11 - 8 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 + 5) * (11 - 8) = 24\nInput: 3 6 7 9\nSteps:\n6 * 3 = 18 (left: 7 9 18)\n7 + 9 = 16 (left: 16 18)\n16 + 18 = 24 (left: 24)\nAnswer: ((6 * 3) + (7 + 9)) = 24\nInput: 2 3 5 6\nSteps:\n5 + 6 = 11 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((5 + 6) - 3) * (2 * 8) = 24"
            ],
            "values": [
                20.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.1674525
    },
    "903": {
        "input": "3 4 4 13",
        "step_1": {
            "steps": [
                "13 + 3 = 16 (left: 4 4 16)",
                "13 / 3 = 4.33 (left: 4.33 4 13)",
                "3 + 4 = 7 (left: 4 7 13)",
                "3 * 4 = 12 (left: 12 4 13)",
                "4 / 3 = 1.33 (left: 1.33 4 13)",
                "3 + 4 = 7 (left: 4 7 13)",
                "13 - 4 = 9 (left: 3 4 9)",
                "4 / 3 \u2248 1.33 (left: 1.33 4 13)",
                "13 / 3 = 4.33 (left: 4.33 4 13)",
                "13 / 3 = 4.33 (left: 4.33 4 13)"
            ],
            "values": [
                1.001,
                2.0,
                22.0,
                2.001,
                3.0,
                21.001,
                22.0,
                3.0,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.5",
                "5 <- 1.5",
                "6 <- 1.9",
                "7 <- 1.9",
                "8 <- 1.8",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                "3 + 4 = 7 (left: 4 7 13)",
                "3 + 4 = 7 (left: 4 7 13)",
                "13 / 3 = 4.33 (left: 4.33 4 13)",
                "13 / 3 = 4.33 (left: 4.33 4 13)",
                "13 / 3 = 4.33 (left: 4.33 4 13)",
                "3 + 4 = 7 (left: 4 7 13)"
            ]
        },
        "step_2": {
            "steps": [
                "13 - 4 = 9 (left: 3 4 9)",
                "13 - 3 = 10 (left: 4 4 10)",
                "3 + 4 = 7 (left: 4 7 13)",
                "13 / 3 = 4.333... (left: 4.333... 4 13)",
                "3 + 4 = 7 (left: 4 7 13)\n7 - 4 = 3 (left: 3 13)",
                "3 + 4 = 7 (left: 4 7 13)\n13 / 4 = 3.25 (left: 3.25 13)",
                "13 / 3 = 4.33 (left: 4.33 4 13)\n4 * 4 = 16 (left: 16 13)",
                "13 / 3 = 4.33 (left: 4.33 4 13)\n5 + 3 = 8 (left: 7 8 2)",
                "13 / 3 = 4.33 (left: 4.33 4 13)\n5 / 25 = 0.2 (left: 0.2 3)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)"
            ],
            "values": [
                22.0,
                40.0,
                20.002,
                3.0,
                0.003,
                0.003,
                0.003,
                2.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 2.0",
                "2 <- 2.1",
                "3 <- 2.1",
                "4 <- 2.1",
                "5 <- 1.2",
                "6 <- 1.5",
                "7 <- 1.6",
                "8 <- 2.0",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 4 = 9 (left: 3 4 9)",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 3 = 10 (left: 4 4 10)",
                "3 + 4 = 7 (left: 4 7 13)",
                "3 + 4 = 7 (left: 4 7 13)",
                "13 - 4 = 9 (left: 3 4 9)",
                "13 - 4 = 9 (left: 3 4 9)",
                "13 - 4 = 9 (left: 3 4 9)"
            ]
        },
        "step_3": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10)\n7 - 5 = 2 (left: 2 2 9)",
                "13 - 4 = 9 (left: 3 4 9)\n5 + 10 = 15 (left: 15)",
                "13 - 3 = 10 (left: 4 4 10)\n4 - 4 = 0 (left: 0 10)",
                "13 - 3 = 10 (left: 4 4 10)\n4 * 4 = 16 (left: 16 10)",
                "13 - 3 = 10 (left: 4 4 10)\n10 + 4 = 14 (left: 4 14)",
                "3 + 4 = 7 (left: 4 7 13)\n4 * 7 = 28 (left: 28 13)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 4 = 9 (left: 7 9)",
                "13 - 4 = 9 (left: 3 4 9)\n9 / 4 = 2.25 (left: 3 2.25)",
                "13 - 4 = 9 (left: 3 4 9)\nInput: 5 6 7",
                "13 - 4 = 9 (left: 3 4 9)\n4 / 3 = 1.33 (left: 1.33 9)"
            ],
            "values": [
                21.001,
                0.001,
                0.0,
                0.003,
                0.001,
                0.002,
                1.002,
                2.001,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 2.1",
                "2 <- 1.5",
                "3 <- 2.1",
                "4 <- 2.1",
                "5 <- 1.6",
                "6 <- 1.6",
                "7 <- 2.1",
                "8 <- 2.1",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "3 + 4 = 7 (left: 4 7 13)",
                "13 - 3 = 10 (left: 4 4 10)",
                "3 + 4 = 7 (left: 4 7 13)",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 4 = 9 (left: 3 4 9)",
                "13 - 4 = 9 (left: 3 4 9)",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 3 = 10 (left: 4 4 10)",
                "3 + 4 = 7 (left: 4 7 13)"
            ]
        },
        "step_4": {
            "steps": [
                "3 + 4 = 7 (left: 4 7 13)\n3 * 5 = 15 (left: 15 9 11)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)",
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)",
                "13 - 4 = 9 (left: 3 4 9)\n7 - 6 = 1 (left: 5 1 8)",
                "13 - 4 = 9 (left: 3 4 9)\n9 / 3 = 3 (left: 3 4)",
                "13 - 3 = 10 (left: 4 4 10)\n7 - 3 = 4 (left: 5 4)",
                "13 - 3 = 10 (left: 4 4 10)\n12 - 9 = 3 (left: 3 6 12)",
                "3 + 4 = 7 (left: 4 7 13)\n9 - 5 = 4 (left: 3 4)"
            ],
            "values": [
                0.003,
                60.0,
                60.0,
                21.0,
                60.0,
                2.001,
                40.0,
                22.0,
                2.001,
                41.0
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 4.2",
                "2 <- 4.4",
                "3 <- 1.5",
                "4 <- 4.4",
                "5 <- 2.1",
                "6 <- 4.1",
                "7 <- INIT",
                "8 <- 4.2",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)",
                "3 + 4 = 7 (left: 4 7 13)",
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)",
                "13 - 3 = 10 (left: 4 4 10)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)"
            ]
        },
        "step_5": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)\n10 - 1 = 9 (left: 9)",
                "13 - 3 = 10 (left: 4 4 10)\n4 - 4 = 0 (left: 0 10)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "3 * 4 = 12 (left: 4 12 13)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)\n1 + 10 = 11 (left: 11)"
            ],
            "values": [
                0.0,
                0.003,
                0.0,
                60.0,
                0.002,
                40.0,
                0.003,
                3.0,
                0.002,
                0.001
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 4.6",
                "2 <- 4.7",
                "3 <- 5.5",
                "4 <- 5.3",
                "5 <- 5.3",
                "6 <- 5.3",
                "7 <- 5.5",
                "8 <- 3.0",
                "9 <- 5.5"
            ],
            "resampled_steps": [
                "13 - 4 = 9 (left: 3 4 9)",
                "13 - 4 = 9 (left: 3 4 9)\n9 / 3 = 3 (left: 3 4)",
                "13 - 3 = 10 (left: 4 4 10)\n7 - 3 = 4 (left: 5 4)",
                "13 - 3 = 10 (left: 4 4 10)\n4 - 4 = 0 (left: 0 10)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)\n4 - 4 = 0 (left: 0 10)",
                "13 - 3 = 10 (left: 4 4 10)\n7 - 5 = 2 (left: 2 2 9)",
                "13 - 3 = 10 (left: 4 4 10)\n4 - 4 = 0 (left: 0 10)"
            ]
        },
        "step_6": {
            "steps": [
                "13 - 4 = 9 (left: 3 4 9)\nPossible next steps:",
                "13 - 4 = 9 (left: 3 4 9)\n9 / 3 = 3 (left: 3 4)\n3 + 4 = 7 (left: 7)",
                "13 - 3 = 10 (left: 4 4 10)\n7 - 3 = 4 (left: 5 4)\n5 * 4 = 20 (left: 20)",
                "13 - 3 = 10 (left: 4 4 10)\n4 - 4 = 0 (left: 0 10)\n10 / 0 = undefined",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n3 - 5 = -2 (left: -2 5)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "13 - 3 = 10 (left: 4 4 10)\n4 - 4 = 0 (left: 0 10)\n10 * 0 = 0 (left: 0)",
                "13 - 3 = 10 (left: 4 4 10)\n7 - 5 = 2 (left: 2 2 9)\n2 + 2 = 4 (left: 4 9)",
                "13 - 3 = 10 (left: 4 4 10)\n4 - 4 = 0 (left: 0 10)\n10 / 0 = undefined (left: 10)"
            ],
            "values": [
                0.003,
                0.001,
                20.002,
                0.003,
                1.002,
                2.001,
                0.001,
                0.003,
                21.0,
                0.003
            ],
            "resampled": [
                "0 <- 6.2",
                "1 <- 4.8",
                "2 <- 5.3",
                "3 <- 1.5",
                "4 <- 2.3",
                "5 <- 4.3",
                "6 <- 5.3",
                "7 <- 5.3",
                "8 <- 6.8",
                "9 <- 4.1"
            ],
            "resampled_steps": [
                "13 - 3 = 10 (left: 4 4 10)\n7 - 3 = 4 (left: 5 4)\n5 * 4 = 20 (left: 20)",
                "13 - 3 = 10 (left: 4 4 10)\n12 - 9 = 3 (left: 3 6 12)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "3 + 4 = 7 (left: 4 7 13)",
                "13 / 3 = 4.333... (left: 4.333... 4 13)",
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)\n7 - 5 = 2 (left: 2 2 9)\n2 + 2 = 4 (left: 4 9)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)"
            ]
        },
        "step_7": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10)\n7 - 3 = 4 (left: 5 4)\n5 * 4 = 20 (left: 20)\n20 - 8 = 12 (left: 12)",
                "13 - 3 = 10 (left: 4 4 10)\n12 - 9 = 3 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n3 * 5 = 15 (left: 1 15 7)",
                "3 + 4 = 7 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)",
                "13 / 3 = 4.333... (left: 4.333... 4 13)\n4.333... + 4 = 8.333... (left: 8.333... 13)",
                "13 - 3 = 10 (left: 4 4 10)\n10 / 4 = 2.5 (left: 2.5 4)\n4 - 2.5 = 1.5 (left: 1.5)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "13 - 3 = 10 (left: 4 4 10)\n7 - 5 = 2 (left: 2 2 9)\n2 + 2 = 4 (left: 4 9)\n5 / 3 = 1.67 (left: 1.67 5 7)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n9 - 3 = 6 (left: 6)"
            ],
            "values": [
                0.003,
                60.0,
                2.0,
                60.0,
                0.003,
                0.002,
                40.0,
                0.002,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 5.3",
                "1 <- 4.4",
                "2 <- 2.2",
                "3 <- 6.4",
                "4 <- 4.6",
                "5 <- 4.6",
                "6 <- 6.8",
                "7 <- 4.1",
                "8 <- 5.5",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)",
                "3 + 4 = 7 (left: 4 7 13)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)",
                "13 - 4 = 9 (left: 3 4 9)\n9 / 3 = 3 (left: 3 4)",
                "13 - 4 = 9 (left: 3 4 9)\n9 / 3 = 3 (left: 3 4)",
                "13 - 3 = 10 (left: 4 4 10)\n7 - 5 = 2 (left: 2 2 9)\n2 + 2 = 4 (left: 4 9)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)\n4 - 4 = 0 (left: 0 10)",
                "13 - 4 = 9 (left: 3 4 9)\n9 / 4 = 2.25 (left: 3 2.25)"
            ]
        },
        "step_8": {
            "steps": [
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 3 = 10 (left: 4 4 10)\n4 / 4 = 1 (left: 1 10)\n10 / 1 = 10 (left: 10)",
                "3 + 4 = 7 (left: 4 7 13)\n12 / 3 = 4 (left: 4 9 12)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 / 6 = 0.6666666666666666 (left: 0.6666666666666666)\nThere are no possible next steps with the input 0.6666666666666666.",
                "13 - 4 = 9 (left: 3 4 9)\n9 / 3 = 3 (left: 3 4)\n3 + 4 = 7 (left: 7)",
                "13 - 4 = 9 (left: 3 4 9)\n9 / 3 = 3 (left: 3 4)\n3 / 4 = 0.75 (left: 0.75)",
                "13 - 3 = 10 (left: 4 4 10)\n7 - 5 = 2 (left: 2 2 9)\n2 + 2 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25 9)",
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "13 - 3 = 10 (left: 4 4 10)\n4 - 4 = 0 (left: 0 10)\n0 * 10 = 0 (left: 0)",
                "13 - 4 = 9 (left: 3 4 9)\n9 / 4 = 2.25 (left: 3 2.25)\n3 - 2.25 = 0.75 (left: 0.75)"
            ],
            "values": [
                60.0,
                0.002,
                41.0,
                0.003,
                0.002,
                0.002,
                3.0,
                0.0,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 7.3",
                "2 <- 4.2",
                "3 <- 4.9",
                "4 <- 5.3",
                "5 <- 7.3",
                "6 <- 8.0",
                "7 <- 7.6",
                "8 <- 5.5",
                "9 <- 7.1"
            ],
            "resampled_steps": [
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "3 + 4 = 7 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "3 + 4 = 7 (left: 4 7 13)\n9 - 5 = 4 (left: 3 4)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "3 + 4 = 7 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 3 = 10 (left: 4 4 10)\n4 - 4 = 0 (left: 0 10)",
                "13 - 3 = 10 (left: 4 4 10)\n12 - 9 = 3 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)"
            ]
        },
        "step_9": {
            "steps": [
                "13 - 3 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "3 + 4 = 7 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n9 - 3 = 6 (left: 6)",
                "3 + 4 = 7 (left: 4 7 13)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "3 + 4 = 7 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (3 + 4) * 13 = 24",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 + 4) * (4 * 13) = 24",
                "13 - 3 = 10 (left: 4 4 10)\n4 - 4 = 0 (left: 0 10)\n0 + 10 = 10 (left: 10)",
                "13 - 3 = 10 (left: 4 4 10)\n12 - 9 = 3 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n12 + 2 = 14 (left: 2 14)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.003,
                60.0,
                60.0,
                60.0,
                20.002,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 9.6",
                "1 <- 4.6",
                "2 <- 4.2",
                "3 <- 7.1",
                "4 <- 9.7",
                "5 <- 2.2",
                "6 <- 9.5",
                "7 <- 9.6",
                "8 <- 8.2",
                "9 <- 4.9"
            ],
            "resampled_steps": [
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (3 + 4) * 13 = 24",
                "13 - 4 = 9 (left: 3 4 9)\n9 / 3 = 3 (left: 3 4)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)",
                "13 - 3 = 10 (left: 4 4 10)\n12 - 9 = 3 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 + 4) * (4 * 13) = 24",
                "3 + 4 = 7 (left: 4 7 13)",
                "3 + 4 = 7 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (3 + 4) * 13 = 24",
                "3 + 4 = 7 (left: 4 7 13)\n12 / 3 = 4 (left: 4 9 12)",
                "3 + 4 = 7 (left: 4 7 13)\n9 - 5 = 4 (left: 3 4)"
            ]
        },
        "step_10": {
            "steps": [
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (3 + 4) * 13 = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 6 + 4 = 24",
                "13 - 4 = 9 (left: 3 4 9)\n9 / 3 = 3 (left: 3 4)\n3 + 4 = 7 (left: 7)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 3 = 10 (left: 4 4 10)\n12 - 9 = 3 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 + 4) * (4 * 13) = 24\nInput: 2 3 5 7\nSteps:\n5 + 7 = 12 (left: 2 3 12)\n12 - 3 = 9 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((5 + 7) - 3) * 2 + 6 = 24",
                "3 + 4 = 7 (left: 4 7 13)\n3 * 5 = 15 (left: 1 15 7)",
                "3 + 4 = 7 (left: 4 7 13)\n4 + 7 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((3 + 4) + 4) + 13 = 24",
                "3 + 4 = 7 (left: 4 7 13)\n13 - 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (3 + 4) * 13 = 24\nInput: 2 2 6 8\nSteps:\n2 + 8 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n4 * 2 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: (2 + 8) * (6 - 2) = 24",
                "3 + 4 = 7 (left: 4 7 13)\n12 / 3 = 4 (left: 4 9 12)\n12 - 9 = 3 (left: 4 3)",
                "3 + 4 = 7 (left: 4 7 13)\n9 - 5 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.2231585
    },
    "904": {
        "input": "6 7 8 9",
        "step_1": {
            "steps": [
                "7 * 8 = 56 (left: 6 9 56)",
                "8 - 9 = -1 (left: 6 7 -1)",
                "6 + 7 = 13 (left: 8 9 13)",
                "6 / 7 = 0.857 (left: 0.857 8 9)",
                "8 * 9 = 72 (left: 6 7 72)",
                "6 - 7 = -1 (left: -1 8 9)",
                "6 / 7 = 0.857 (left: 0.857 8 9)",
                "9 + 6 = 15 (left: 7 8 15)",
                "9 - 6 = 3 (left: 7 8 3)",
                "6 / 7 = 0.8571428571428571 (left: 8 9 0.8571428571428571)"
            ],
            "values": [
                2.001,
                3.0,
                2.001,
                3.0,
                1.002,
                2.001,
                3.0,
                3.0,
                3.0,
                2.001
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.6",
                "4 <- 1.1",
                "5 <- 1.7",
                "6 <- INIT",
                "7 <- 1.7",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "8 * 9 = 72 (left: 6 7 72)",
                "",
                "",
                "6 / 7 = 0.857 (left: 0.857 8 9)",
                "8 - 9 = -1 (left: 6 7 -1)",
                "9 + 6 = 15 (left: 7 8 15)",
                "",
                "9 + 6 = 15 (left: 7 8 15)",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "8 * 9 = 72 (left: 6 7 72)\n72 / 7 = 10 (left: 6 10)",
                "8 + 9 = 17 (left: 6 7 17)",
                "5 * 7 = 35 (left: 3 9 35)",
                "6 / 7 = 0.857 (left: 0.857 8 9)\n9 / 8 = 1.125 (left: 0.857 1.125)",
                "8 - 9 = -1 (left: 6 7 -1)\n6 / 7 = 0.857 (left: 0.857 -1)",
                "9 + 6 = 15 (left: 7 8 15)\n15 - 8 = 7 (left: 7 15)",
                "6 - 7 = -1 (left: -1 8 9)",
                "9 + 6 = 15 (left: 7 8 15)\n7 + 8 = 15 (left: 15)",
                "6 / 7 = 0.857 (left: 0.857 8 9)",
                "9 - 7 = 2 (left: 6 2 8)"
            ],
            "values": [
                0.003,
                0.003,
                2.0,
                2.001,
                0.003,
                0.003,
                1.002,
                0.003,
                3.0,
                1.001
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 1.7",
                "2 <- INIT",
                "3 <- 1.8",
                "4 <- 2.9",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 1.2",
                "8 <- 1.3",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "6 / 7 = 0.857 (left: 0.857 8 9)\n9 / 8 = 1.125 (left: 0.857 1.125)",
                "9 + 6 = 15 (left: 7 8 15)",
                "",
                "9 - 6 = 3 (left: 7 8 3)",
                "9 - 7 = 2 (left: 6 2 8)",
                "",
                "",
                "6 + 7 = 13 (left: 8 9 13)",
                "6 / 7 = 0.857 (left: 0.857 8 9)",
                "7 * 8 = 56 (left: 6 9 56)"
            ]
        },
        "step_3": {
            "steps": [
                "6 / 7 = 0.857 (left: 0.857 8 9)\n9 / 8 = 1.125 (left: 0.857 1.125)\n0.857 + 1.125 = 1.982 (left: 1.982)",
                "9 + 6 = 15 (left: 7 8 15)\n7 / 8 = 0.875 (left: 0.875 15)",
                "3 + 5 = 8 (left: 7 9 8)",
                "9 - 6 = 3 (left: 7 8 3)\n8 - 7 = 1 (left: 1 3)",
                "9 - 7 = 2 (left: 6 2 8)\n5 + 7 = 12 (left: 3 12 9)",
                "8 + 9 = 17 (left: 6 7 17)",
                "7 - 6 = 1 (left: 1 8 9)",
                "6 + 7 = 13 (left: 8 9 13)\n9 - 8 = 1 (left: 1 13)",
                "6 / 7 = 0.857 (left: 0.857 8 9)\n8 / 0.857 = 9.33 (left: 9.33 9)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)"
            ],
            "values": [
                0.003,
                2.001,
                22.0,
                0.001,
                1.001,
                2.001,
                0.003,
                0.003,
                2.001,
                20.002
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 3.9",
                "2 <- 3.2",
                "3 <- 3.9",
                "4 <- 3.1",
                "5 <- 3.9",
                "6 <- 3.2",
                "7 <- 1.3",
                "8 <- 3.2",
                "9 <- 3.2"
            ],
            "resampled_steps": [
                "8 - 9 = -1 (left: 6 7 -1)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)",
                "3 + 5 = 8 (left: 7 9 8)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)",
                "9 + 6 = 15 (left: 7 8 15)\n7 / 8 = 0.875 (left: 0.875 15)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)",
                "3 + 5 = 8 (left: 7 9 8)",
                "6 / 7 = 0.857 (left: 0.857 8 9)",
                "3 + 5 = 8 (left: 7 9 8)",
                "3 + 5 = 8 (left: 7 9 8)"
            ]
        },
        "step_4": {
            "steps": [
                "8 - 9 = -1 (left: 6 7 -1)\n-1 + 6 = 5 (left: 6 7 5)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)\n54 - 56 = -2 (left: -2)",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)\n54 / 56 = 0.9642857142857143 (left: 0.9642857142857143)",
                "9 + 6 = 15 (left: 7 8 15)\n7 / 8 = 0.875 (left: 0.875 15)\n0.875 * 15 = 13.125 (left: 13.125)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)\n54 - 56 = -2 (left: -2)",
                "3 + 5 = 8 (left: 7 9 8)\n9 - 7 = 2 (left: 2 8)",
                "6 / 7 = 0.857 (left: 0.857 8 9)\n6 - 3 = 3 (left: 5 3 1)",
                "3 + 5 = 8 (left: 7 9 8)\n9 + 8 = 17 (left: 17)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)"
            ],
            "values": [
                3.0,
                0.001,
                40.001,
                0.003,
                0.003,
                0.002,
                0.002,
                0.003,
                0.003,
                41.0
            ],
            "resampled": [
                "0 <- 4.9",
                "1 <- 4.2",
                "2 <- 4.0",
                "3 <- 4.9",
                "4 <- 4.2",
                "5 <- 3.9",
                "6 <- 4.2",
                "7 <- 4.2",
                "8 <- 3.9",
                "9 <- 3.2"
            ],
            "resampled_steps": [
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)",
                "8 - 9 = -1 (left: 6 7 -1)\n-1 + 6 = 5 (left: 6 7 5)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)",
                "3 + 5 = 8 (left: 7 9 8)"
            ]
        },
        "step_5": {
            "steps": [
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)\nInput: 24 128 8 2 0.5 24",
                "8 - 9 = -1 (left: 6 7 -1)\n-1 + 6 = 5 (left: 6 7 5)\n9 - 3 = 6 (left: 8 6)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)\n54 + 56 = 110 (left: 110)",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)\n8 - 16 = -8 (left: -8)",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)\n54 + 56 = 110 (left: 110)",
                "3 + 5 = 8 (left: 7 9 8)\n6 + 3 = 9 (left: 5 9)"
            ],
            "values": [
                0.0,
                0.003,
                20.002,
                0.001,
                0.0,
                0.003,
                0.0,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 1.1",
                "2 <- 4.9",
                "3 <- 1.8",
                "4 <- 1.9",
                "5 <- 3.9",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 4.2",
                "9 <- 4.2"
            ],
            "resampled_steps": [
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)",
                "8 - 9 = -1 (left: 6 7 -1)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)",
                "9 - 6 = 3 (left: 7 8 3)",
                "6 / 7 = 0.8571428571428571 (left: 8 9 0.8571428571428571)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)",
                "",
                "",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)"
            ]
        },
        "step_6": {
            "steps": [
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)\n8 / 16 = 0.5 (left: 0.5)",
                "8 - 9 = -1 (left: 6 7 -1)\n6 - 7 = -1 (left: -1 -1)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8 8)",
                "9 - 6 = 3 (left: 7 8 3)\n8 * 3 = 24 (left: 7 24)",
                "6 / 7 = 0.8571428571428571 (left: 8 9 0.8571428571428571)\n8 + 9 = 17 (left: 17 0.8571428571428571)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)\n54 + 56 = 110 (left: 110)",
                "8 / 9 = 0.889 (left: 6 7 0.889)",
                "7 + 8 = 15 (left: 6 9 15)",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2)",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)\n16 / 8 = 2 (left: 2)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.002,
                3.0,
                0.003,
                3.0,
                21.001,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 4.9",
                "1 <- 6.7",
                "2 <- 4.9",
                "3 <- 6.7",
                "4 <- 3.9",
                "5 <- 4.9",
                "6 <- 1.7",
                "7 <- 4.2",
                "8 <- 4.9",
                "9 <- 4.9"
            ],
            "resampled_steps": [
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)",
                "7 + 8 = 15 (left: 6 9 15)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)",
                "7 + 8 = 15 (left: 6 9 15)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)",
                "9 + 6 = 15 (left: 7 8 15)",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)"
            ]
        },
        "step_7": {
            "steps": [
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)\n8 / 1 = 8 (left: 8)",
                "7 + 8 = 15 (left: 6 9 15)\n10 + 4 = 14 (left: 14 16)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "7 + 8 = 15 (left: 6 9 15)\n13 - 8 = 5 (left: 3 5)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)\n54 - 56 = -2 (left: -2)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "9 + 6 = 15 (left: 7 8 15)\n15 - 7 = 8 (left: 8 15)",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)"
            ],
            "values": [
                0.002,
                1.001,
                0.001,
                0.003,
                0.002,
                0.001,
                0.002,
                0.003,
                0.001,
                0.001
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- INIT",
                "2 <- 4.9",
                "3 <- 6.7",
                "4 <- 3.2",
                "5 <- 3.2",
                "6 <- 4.9",
                "7 <- 4.9",
                "8 <- 4.9",
                "9 <- 4.9"
            ],
            "resampled_steps": [
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)",
                "",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)",
                "7 + 8 = 15 (left: 6 9 15)",
                "3 + 5 = 8 (left: 7 9 8)",
                "3 + 5 = 8 (left: 7 9 8)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)"
            ]
        },
        "step_8": {
            "steps": [
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)\n54 - 56 = -2 (left: -2)",
                "7 + 8 = 15 (left: 6 9 15)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "7 + 8 = 15 (left: 6 9 15)\n9 / 6 = 1.5 (left: 1.5)",
                "3 + 5 = 8 (left: 7 9 8)\n9 / 7 = 1.2857 (left: 1.2857 8)",
                "3 + 5 = 8 (left: 7 9 8)\n8 + 7 = 15 (left: 9 15)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)\n8 / 1 = 8 (left: 8)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)\n8 / 1 = 8 (left: 8)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)"
            ],
            "values": [
                0.001,
                2.001,
                0.0,
                0.001,
                1.001,
                20.002,
                0.002,
                0.002,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 3.9",
                "2 <- 3.9",
                "3 <- 6.7",
                "4 <- 8.5",
                "5 <- 4.9",
                "6 <- 3.9",
                "7 <- 8.1",
                "8 <- 4.9",
                "9 <- 4.9"
            ],
            "resampled_steps": [
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)",
                "7 + 8 = 15 (left: 6 9 15)",
                "3 + 5 = 8 (left: 7 9 8)\n8 + 7 = 15 (left: 9 15)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)",
                "7 + 8 = 15 (left: 6 9 15)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)"
            ]
        },
        "step_9": {
            "steps": [
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)\n16 - 8 = 8 (left: 8)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)\n56 / 54 = 1.037 (left: 1.037)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)\n54 - 56 = -2 (left: -2)",
                "7 + 8 = 15 (left: 6 9 15)\n13 - 5 = 8 (left: 8 8 8)",
                "3 + 5 = 8 (left: 7 9 8)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8 8)",
                "7 * 8 = 56 (left: 6 9 56)\n6 * 9 = 54 (left: 54 56)\n54 + 56 = 110 (left: 110)",
                "7 + 8 = 15 (left: 6 9 15)\n15 - 9 = 6 (left: 6)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7 8)",
                "3 + 5 = 8 (left: 7 9 8)\n8 - 7 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)"
            ],
            "values": [
                0.003,
                0.003,
                0.001,
                20.001,
                60.0,
                0.002,
                0.002,
                0.003,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 1.9",
                "2 <- 6.7",
                "3 <- 1.7",
                "4 <- 9.4",
                "5 <- 4.2",
                "6 <- 4.2",
                "7 <- 9.4",
                "8 <- 9.3",
                "9 <- 9.4"
            ],
            "resampled_steps": [
                "8 - 9 = -1 (left: 6 7 -1)\n-1 + 6 = 5 (left: 6 7 5)\n9 - 3 = 6 (left: 8 6)",
                "6 / 7 = 0.8571428571428571 (left: 8 9 0.8571428571428571)",
                "7 + 8 = 15 (left: 6 9 15)",
                "9 + 6 = 15 (left: 7 8 15)",
                "3 + 5 = 8 (left: 7 9 8)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)",
                "3 + 5 = 8 (left: 7 9 8)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)",
                "7 + 8 = 15 (left: 6 9 15)\n13 - 5 = 8 (left: 8 8 8)",
                "3 + 5 = 8 (left: 7 9 8)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)"
            ]
        },
        "step_10": {
            "steps": [
                "8 - 9 = -1 (left: 6 7 -1)\n-1 + 6 = 5 (left: 6 7 5)\n9 - 3 = 6 (left: 8 6)\n8 / 6 = 1.33 (left: 1.33)",
                "6 / 7 = 0.8571428571428571 (left: 8 9 0.8571428571428571)\n8 / 9 = 0.8888888888888888 (left: 0.8888888888888888 9 0.8571428571428571)",
                "7 + 8 = 15 (left: 6 9 15)\n6 + 9 = 15 (left: 15)",
                "9 + 6 = 15 (left: 7 8 15)\n8 - 7 = 1 (left: 1 15)",
                "3 + 5 = 8 (left: 7 9 8)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((6 + 7) + 8) + 9 = 24",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)\n8 - 16 = -8 (left: -8)",
                "3 + 5 = 8 (left: 7 9 8)\n7 + 9 = 16 (left: 8 16)\n8 / 16 = 0.5 (left: 0.5)",
                "3 + 5 = 8 (left: 7 9 8)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((6 + 7) + 8) + 9 = 24",
                "7 + 8 = 15 (left: 6 9 15)\n13 - 5 = 8 (left: 8 8 8)\n8 / 8 = 1 (left: 1 8)",
                "3 + 5 = 8 (left: 7 9 8)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((6 + 7) + 8) + 9 = 24"
            ],
            "values": [
                0.003,
                3.0,
                0.003,
                0.002,
                60.0,
                0.003,
                0.001,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.27745600000000004
    },
    "905": {
        "input": "1 11 11 13",
        "step_1": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13)",
                "13 - 11 = 2 (left: 1 11 2)",
                "1 + 11 = 12 (left: 11 12 13)",
                "13 - 1 = 12 (left: 11 11 12)",
                "13 - 11 = 2 (left: 11 11 2)",
                "13 - 1 = 12 (left: 11 11 12)",
                "11 - 1 = 10 (left: 10 11 13)",
                "1 + 11 = 12 (left: 11 12 13)",
                "11 - 1 = 10 (left: 10 11 13)",
                "1 + 11 = 12 (left: 11 11 13)"
            ],
            "values": [
                21.001,
                22.0,
                41.0,
                0.003,
                60.0,
                0.003,
                1.002,
                40.001,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.6",
                "2 <- 1.4",
                "3 <- 1.7",
                "4 <- INIT",
                "5 <- 1.6",
                "6 <- 1.7",
                "7 <- INIT",
                "8 <- 1.0",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "1 + 11 = 12 (left: 11 12 13)",
                "11 - 1 = 10 (left: 10 11 13)",
                "13 - 11 = 2 (left: 11 11 2)",
                "1 + 11 = 12 (left: 11 12 13)",
                "",
                "11 - 1 = 10 (left: 10 11 13)",
                "1 + 11 = 12 (left: 11 12 13)",
                "",
                "1 + 11 = 12 (left: 11 12 13)",
                "13 - 11 = 2 (left: 11 11 2)"
            ]
        },
        "step_2": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 10 13)",
                "13 - 11 = 2 (left: 11 11 2)\n10 / 20 = 0.5 (left: 5 0.5)",
                "1 + 11 = 12 (left: 11 12 13)\n12 + 13 = 25 (left: 11 25)",
                "13 - 1 = 12 (left: 11 11 12)",
                "11 - 1 = 10 (left: 10 11 13)\n13 - 10 = 3 (left: 3 11)",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 3 = 4 (left: 4 5 9)",
                "11 / 1 = 11 (left: 11 11 13)",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)",
                "13 - 11 = 2 (left: 11 11 2)\n11 * 2 = 22 (left: 11 22)"
            ],
            "values": [
                60.0,
                0.003,
                20.001,
                0.003,
                0.003,
                0.0,
                3.0,
                0.003,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 2.8",
                "2 <- 1.7",
                "3 <- 2.0",
                "4 <- 2.2",
                "5 <- 2.0",
                "6 <- 2.8",
                "7 <- 2.8",
                "8 <- 2.8",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "13 - 11 = 2 (left: 11 11 2)",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)",
                "1 + 11 = 12 (left: 11 12 13)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "13 - 11 = 2 (left: 11 11 2)\n10 / 20 = 0.5 (left: 5 0.5)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)",
                "1 + 11 = 12 (left: 11 12 13)"
            ]
        },
        "step_3": {
            "steps": [
                "13 - 11 = 2 (left: 11 11 2)\n7 - 5 = 2 (left: 2 3 1)",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)\n3 * 6 = 18 (left: 7 18)",
                "1 + 11 = 12 (left: 11 12 13)\n11 + 12 = 23 (left: 13)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "13 - 11 = 2 (left: 11 11 2)\n10 / 20 = 0.5 (left: 5 0.5)\n5 - 0.5 = 4.5 (left: 0.5)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)\n7 - 3 = 4 (left: 4 7)",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)\n3 * 6 = 18 (left: 18 7)",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)\n3 + 6 = 9 (left: 7 9)",
                "1 + 11 = 12 (left: 11 12 13)\nInput: 4 5 9"
            ],
            "values": [
                1.002,
                0.003,
                0.003,
                0.003,
                1.001,
                60.0,
                1.002,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 2.8",
                "2 <- 1.1",
                "3 <- INIT",
                "4 <- 3.5",
                "5 <- 1.4",
                "6 <- 3.5",
                "7 <- 2.8",
                "8 <- 1.1",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)",
                "13 - 11 = 2 (left: 1 11 2)",
                "",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "13 - 11 = 2 (left: 11 11 2)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)",
                "13 - 11 = 2 (left: 1 11 2)",
                "13 - 11 = 2 (left: 11 11 2)\n7 - 5 = 2 (left: 2 3 1)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)\nInput: 5 10 15",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)\n9 / 4 = 2.25 (left: 2.25 12)",
                "13 - 11 = 2 (left: 1 11 2)\n6 - 5 = 1 (left: 3 4 1)",
                "11 - 1 = 10 (left: 10 11 13)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "13 - 11 = 2 (left: 11 11 2)\n11 * 2 = 22 (left: 11 22)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)\n7 / 3 = 2 (left: 2 7)",
                "13 - 11 = 2 (left: 1 11 2)\n6 / 3 = 2 (left: 2)",
                "13 - 11 = 2 (left: 11 11 2)\n7 - 5 = 2 (left: 2 3 1)\n3 - 2 = 1 (left: 1 1)"
            ],
            "values": [
                0.003,
                0.003,
                2.001,
                1.002,
                60.0,
                0.003,
                60.0,
                0.0,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 2.2",
                "2 <- 2.2",
                "3 <- 2.0",
                "4 <- 4.6",
                "5 <- 2.0",
                "6 <- 3.5",
                "7 <- 3.5",
                "8 <- 2.8",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "13 - 11 = 2 (left: 11 11 2)\n10 / 20 = 0.5 (left: 5 0.5)",
                "13 - 11 = 2 (left: 11 11 2)\n10 / 20 = 0.5 (left: 5 0.5)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ]
        },
        "step_5": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24",
                "13 - 11 = 2 (left: 11 11 2)\n10 / 20 = 0.5 (left: 5 0.5)\n5 / 0.5 = 10 (left: 10)",
                "13 - 11 = 2 (left: 11 11 2)\n10 / 20 = 0.5 (left: 5 0.5)\n5 + 0.5 = 5.5 (left: 0.5)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3 10)\n2 * 10 = 20 (left: 20 3)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * (10 + 3 + 1) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)\n6 / 3 = 2 (left: 2 7)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24"
            ],
            "values": [
                60.0,
                0.003,
                0.0,
                0.0,
                60.0,
                60.0,
                60.0,
                60.0,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 5.6",
                "1 <- 2.8",
                "2 <- 5.6",
                "3 <- 5.0",
                "4 <- 5.9",
                "5 <- 4.4",
                "6 <- 5.7",
                "7 <- 1.7",
                "8 <- 5.6",
                "9 <- 5.9"
            ],
            "resampled_steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24"
            ]
        },
        "step_6": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (4 * 6) * (3 + 5) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n7 - 4 = 3 (left: 3 6 7)\nPossible next steps:",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n6 - 3 = 3 (left: 3 27)\n3 * 27 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\nAnswer: ((3 * 9) - 6) / 3 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24\nInput: 2 3 4 12\nSteps:\n4 * 3 = 12 (left: 2 12 12)\n12 / 12 = 1 (left: 2 1)\n2 * 1 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((2 * 3) / 4) * 12 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n8 - 6 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 / 6 = 3 (left: 3 18)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 * 3) * (8 - 6)) * 3 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48)\n6 + 48 = 54 (left: 54)\n54 - 8 = 46 (left: 46)\n46 / 6 = 24 (left: 24)\nAnswer: (((3 + 3) * 8) + 6) - 8) / 6 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n6 - 3 = 3 (left: 3 9)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 9 = 18 (left: 18)\n18 / 9 = 2 (left: 2 18)\n2 * 9 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 27 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: ((3 * 3) * 9) - ((9 / 9) * (3 * 3)) + 24 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 + 6) * (8 - 3) = 24"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                0.003,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 6.6",
                "2 <- 6.3",
                "3 <- 2.0",
                "4 <- 6.0",
                "5 <- 4.4",
                "6 <- 6.3",
                "7 <- 4.6",
                "8 <- 5.6",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "13 - 11 = 2 (left: 11 11 2)\n10 / 20 = 0.5 (left: 5 0.5)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24\nInput: 2 3 4 12\nSteps:\n4 * 3 = 12 (left: 2 12 12)\n12 / 12 = 1 (left: 2 1)\n2 * 1 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((2 * 3) / 4) * 12 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (4 * 6) * (3 + 5) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24\nInput: 2 3 4 12\nSteps:\n4 * 3 = 12 (left: 2 12 12)\n12 / 12 = 1 (left: 2 1)\n2 * 1 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((2 * 3) / 4) * 12 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "13 - 11 = 2 (left: 1 11 2)"
            ]
        },
        "step_7": {
            "steps": [
                "13 - 11 = 2 (left: 11 11 2)\n10 / 20 = 0.5 (left: 5 0.5)\n5 - 0.5 = 4.5 (left: 4.5)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 24\nAnswer: ((3 * 8) * (6 - 3)) = 24\nInput: 2 3 4 6\nSteps:\n4 + 6 = 10 (left: 2 3 10)\n2 * 3 = 6 (left: 6 10)\n10 - 6 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((2 * 3) + (4 - 6)) * 6 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24\nInput: 2 3 4 12\nSteps:\n4 * 3 = 12 (left: 2 12 12)\n12 / 12 = 1 (left: 2 1)\n2 * 1 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((2 * 3) / 4) * 12 = 24\nInput: 6 6 6 8\nSteps:\n6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 + 6) * (6 - 8) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (4 * 6) * (3 + 5) = 24\nInput: 2 3 4 5\nSteps:\n3 * 5 = 15 (left: 2 4 15)\n4 + 2 = 6 (left: 6 15)\n6 * 15 = 90 (left: 90)\nAnswer: (3 * 5) * (4 + 2) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n1 * 3 = 3 (left: 3)\n3 * 3 * 7 = 63\nAnswer: ((3 + 5) - 7) * 3 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24\nInput: 2 3 4 12\nSteps:\n4 * 3 = 12 (left: 2 12 12)\n12 / 12 = 1 (left: 2 1)\n2 * 1 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((2 * 3) / 4) * 12 = 24\nInput: 2 4 5 6\nSteps:\n4 + 6 = 10 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n5 * 2 = 10 (left: 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((2 + 6) - 5) * 2) * 10 / 4 - 1 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3 10)\n2 * 10 = 20 (left: 20 3)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 7) * (10 - 8)) + 1 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n7 - 3 = 4 (left: 3 4 8)\n4 + 3 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 24 (left: 24)\nAnswer: ((7 - 3) + 3) * 8 / 2 = 24",
                "13 - 11 = 2 (left: 1 11 2)\nPossible next steps:"
            ],
            "values": [
                0.002,
                40.0,
                40.0,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0,
                40.0,
                0.003
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 4.2",
                "2 <- 5.7",
                "3 <- 7.5",
                "4 <- 7.8",
                "5 <- 7.2",
                "6 <- 5.6",
                "7 <- 5.4",
                "8 <- 6.0",
                "9 <- 6.5"
            ],
            "resampled_steps": [
                "13 - 11 = 2 (left: 11 11 2)",
                "13 - 11 = 2 (left: 1 11 2)\n6 - 5 = 1 (left: 3 4 1)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n1 * 3 = 3 (left: 3)\n3 * 3 * 7 = 63\nAnswer: ((3 + 5) - 7) * 3 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n7 - 3 = 4 (left: 3 4 8)\n4 + 3 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 24 (left: 24)\nAnswer: ((7 - 3) + 3) * 8 / 2 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24\nInput: 2 3 4 12\nSteps:\n4 * 3 = 12 (left: 2 12 12)\n12 / 12 = 1 (left: 2 1)\n2 * 1 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((2 * 3) / 4) * 12 = 24\nInput: 6 6 6 8\nSteps:\n6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 + 6) * (6 - 8) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3 10)\n2 * 10 = 20 (left: 20 3)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * (10 + 3 + 1) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (4 * 6) * (3 + 5) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48)\n6 + 48 = 54 (left: 54)\n54 - 8 = 46 (left: 46)\n46 / 6 = 24 (left: 24)\nAnswer: (((3 + 3) * 8) + 6) - 8) / 6 = 24"
            ]
        },
        "step_8": {
            "steps": [
                "13 - 11 = 2 (left: 11 11 2)\n9 - 7 = 2 (left: 2 2)",
                "13 - 11 = 2 (left: 1 11 2)\n6 - 5 = 1 (left: 3 4 1)\n8 / 6 = 1.33 (left: 1.33)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 8 18)\n18 - 8 = 10 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) - 8 + 18 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n1 * 3 = 3 (left: 3)\n3 * 3 * 7 = 63\nAnswer: ((3 + 5) - 7) * 3 = 24\nThere is no solution to obtain 24 using the numbers 3, 3, 5, and 7.",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n7 - 3 = 4 (left: 3 4 8)\n4 + 3 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 24 (left: 24)\nAnswer: ((7 - 3) + 3) * 8 / 2 = 24\nInput: 2 5 6 8\nSteps:\n5 * 6 = 30 (left: 2 8 30)\n30 - 8 = 22 (left: 2 22)\n22 / 2 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\nAnswer: ((5 * 6) - 8) / 2 * 2 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24\nInput: 2 3 4 12\nSteps:\n4 * 3 = 12 (left: 2 12 12)\n12 / 12 = 1 (left: 2 1)\n2 * 1 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((2 * 3) / 4) * 12 = 24\nInput: 6 6 6 8\nSteps:\n6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 + 6) * (6 - 8) = 24\nInput: 2 3 5 7\nSteps:\n5 + 7 = 12 (left: 2 3 12)\n3 * 12 = 36 (left: 2 36)\n36 / 2 = 18 (left: 18)\n18 - 5 = 13 (left: 13)\n13 + 7 = 20 (left: 20)\n20 / 3 = 6.66666666667 (left: 6.66666666667)\n6.66666666667 * 2 = 13.3333333333 (left: 13.3333333333)\n13.3333333333 * 12 = 160 (left: 160)\n160 / 20 = 8 (left: 8)\n8 - 6.66666666667 = 1.33333333333 (left: 1.33333333333)\n1.33333333333 + 13.3333333333 = 14.6666666667 (left: 14.6666666667)\n14.6666666667 + 18 = 32.6666666667 (left: 32.6666666667)\n32.6666666667 - 3 = 29.6666666667 (left: 29.6666666667)\n29.6666666667 + 2 = 31.6666666667 (left: 31.6666666667)\n31.6666666667 + 5 = 36.6666666667 (left: 36.6666666667)\n36.6666666667 + 7 = 43.6666666667 (left: 43.6666666667)\n43.6666666667 - 8 = 35.6666666667 (left: 35.6666666667)\n35.6666666667 * 6 = 214 (left: 214)\n214 / 3 = 71.3333333333 (left: 71.3333333333)\n71.3333333333 - 5 = 66.3333333333 (left: 66.3333333333)\n66.3333333333 - 7 = 59.3333333333 (left: 59.3333333333)\n59.3333333333 + 8 = 67.3333333333 (left: 67.3333333333)\n67.3333333333 * 2 = 134.666666667 (left: 134.666666667)\n134.666666667 / 3 = 44.8888888889 (left: 44.8888888889)\n44.8888888889 - 5 = 39.888888888",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 8 9\n\n3 * 9 = 27 (left: 3 8 27)\n27 - 8 = 19 (left: 3 19)\n19 - 3 = 16 (left: 16)\n16 + 8 = 24 (left: 24) \n\nAnswer: ((3 * 9) - 8) + 16 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3 10)\n2 * 10 = 20 (left: 20 3)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * (10 + 3 + 1) = 24\nInput: 2 3 5 6\nSteps:\n5 + 6 = 11 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((5 + 6) - 3) * 2 + 8 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (4 * 6) * (3 + 5) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\nAnswer: (2 * 6) * (3 * 4) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48)\n6 + 48 = 54 (left: 54)\n54 - 8 = 46 (left: 46)\n46 / 6 = 24 (left: 24)\nAnswer: (((3 + 3) * 8) + 6) - 8) / 6 = 24\nInput: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 + 6 = 12 (left: 12 4)\n12 * 4 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((2 * 3) + 4) * 6 / 2 = 24"
            ],
            "values": [
                1.002,
                0.001,
                40.0,
                0.003,
                60.0,
                60.0,
                40.0,
                60.0,
                60.0,
                20.0
            ],
            "resampled": [
                "0 <- 6.2",
                "1 <- 6.4",
                "2 <- 8.2",
                "3 <- 7.6",
                "4 <- 5.5",
                "5 <- 7.4",
                "6 <- 2.0",
                "7 <- 5.6",
                "8 <- 7.4",
                "9 <- 7.2"
            ],
            "resampled_steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n6 - 3 = 3 (left: 3 27)\n3 * 27 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\nAnswer: ((3 * 9) - 6) / 3 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n8 - 6 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 / 6 = 3 (left: 3 18)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 * 3) * (8 - 6)) * 3 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 8 18)\n18 - 8 = 10 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) - 8 + 18 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24\nInput: 2 3 4 12\nSteps:\n4 * 3 = 12 (left: 2 12 12)\n12 / 12 = 1 (left: 2 1)\n2 * 1 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((2 * 3) / 4) * 12 = 24\nInput: 2 4 5 6\nSteps:\n4 + 6 = 10 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n5 * 2 = 10 (left: 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((2 + 6) - 5) * 2) * 10 / 4 - 1 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (4 * 6) * (3 + 5) = 24\nInput: 2 3 4 5\nSteps:\n3 * 5 = 15 (left: 2 4 15)\n4 + 2 = 6 (left: 6 15)\n6 * 15 = 90 (left: 90)\nAnswer: (3 * 5) * (4 + 2) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (4 * 6) * (3 + 5) = 24\nInput: 2 3 4 5\nSteps:\n3 * 5 = 15 (left: 2 4 15)\n4 + 2 = 6 (left: 6 15)\n6 * 15 = 90 (left: 90)\nAnswer: (3 * 5) * (4 + 2) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24\nInput: 2 3 4 12\nSteps:\n4 * 3 = 12 (left: 2 12 12)\n12 / 12 = 1 (left: 2 1)\n2 * 1 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((2 * 3) / 4) * 12 = 24\nInput: 6 6 6 8\nSteps:\n6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 + 6) * (6 - 8) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n6 - 3 = 3 (left: 3 27)\n3 * 27 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\nAnswer: ((3 * 9) - 6) / 3 = 24\nInput: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n4 * 2 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((3 + 6) * 2) / 3 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n8 - 6 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 / 6 = 3 (left: 3 18)\n3 * 8 = 24 (left: 24)\nAnswer: ((3 * 3) * (8 - 6)) * 3 = 24\nInput: 2 3 5 6\nSteps:\n5 + 3 = 8 (left: 2 6 8)\n8 - 6 = 2 (left: 2 2)\n2 * 2 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((5 + 3) - 6) * (2 * 2) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 8 18)\n18 - 8 = 10 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) - 8 + 18 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n2 * 9 = 18 (left: 18)\nAnswer: (2 * 9) - (6 * 3) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24\nInput: 2 3 4 12\nSteps:\n4 * 3 = 12 (left: 2 12 12)\n12 / 12 = 1 (left: 2 1)\n2 * 1 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((2 * 3) / 4) * 12 = 24\nInput: 2 4 5 6\nSteps:\n4 + 6 = 10 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n5 * 2 = 10 (left: 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((2 + 6) - 5) * 2) * 10 / 4 - 1 = 24\nInput: 1 2 5 10\nSteps:\n2 * 10 = 20 (left: 1 5 20)\n20 - 5 = 15 (left: 1 15)\n15 - 1 = 14 (left: 14)\n14 + 10 = 24 (left: 24)\nAnswer: ((1 * 2) * 10 - 5) + 10 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (4 * 6) * (3 + 5) = 24\nInput: 2 3 4 5\nSteps:\n3 * 5 = 15 (left: 2 4 15)\n4 + 2 = 6 (left: 6 15)\n6 * 15 = 90 (left: 90)\nAnswer: (3 * 5) * (4 + 2) = 24\nInput: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((6 + 6) + (6 - 6)) * 6 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nOverall, there are multiple ways to obtain the number 24 using the given input numbers and following the rules of only choosing two numbers at each step.",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (4 * 6) * (3 + 5) = 24\nInput: 2 3 4 5\nSteps:\n3 * 5 = 15 (left: 2 4 15)\n4 + 2 = 6 (left: 6 15)\n6 * 15 = 90 (left: 90)\nAnswer: (3 * 5) * (4 + 2) = 24\nInput: 7 8 9 12\nSteps:\n8 + 12 = 20 (left: 7 9 20)\n9 - 7 = 2 (left: 2 20)\n2 * 20 = 40 (left: 40)\nAnswer: (8 + 12) * (9 - 7) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24\nInput: 2 3 4 12\nSteps:\n4 * 3 = 12 (left: 2 12 12)\n12 / 12 = 1 (left: 2 1)\n2 * 1 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((2 * 3) / 4) * 12 = 24\nInput: 6 6 6 8\nSteps:\n6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 + 6) * (6 - 8) = 24\nInput: 2 6 6 8\nSteps:\n6 + 6 = 12 (left: 2 8 12)\n12 - 8 = 4 (left: 2 4)\n4 * 6 = 24 (left: 24)\nAnswer: (2 + 6) * (6 - 8) = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                0.003,
                60.0,
                60.0,
                40.0
            ],
            "resampled": [
                "0 <- 6.5",
                "1 <- 9.5",
                "2 <- 7.6",
                "3 <- 9.0",
                "4 <- 9.4",
                "5 <- 6.2",
                "6 <- 8.2",
                "7 <- 6.0",
                "8 <- 6.0",
                "9 <- 8.5"
            ],
            "resampled_steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48)\n6 + 48 = 54 (left: 54)\n54 - 8 = 46 (left: 46)\n46 / 6 = 24 (left: 24)\nAnswer: (((3 + 3) * 8) + 6) - 8) / 6 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (4 * 6) * (3 + 5) = 24\nInput: 2 3 4 5\nSteps:\n3 * 5 = 15 (left: 2 4 15)\n4 + 2 = 6 (left: 6 15)\n6 * 15 = 90 (left: 90)\nAnswer: (3 * 5) * (4 + 2) = 24\nInput: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((6 + 6) + (6 - 6)) * 6 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24\nInput: 2 3 4 12\nSteps:\n4 * 3 = 12 (left: 2 12 12)\n12 / 12 = 1 (left: 2 1)\n2 * 1 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((2 * 3) / 4) * 12 = 24\nInput: 2 4 5 6\nSteps:\n4 + 6 = 10 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n5 * 2 = 10 (left: 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((2 + 6) - 5) * 2) * 10 / 4 - 1 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n6 - 3 = 3 (left: 3 27)\n3 * 27 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\nAnswer: ((3 * 9) - 6) / 3 = 24\nInput: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n4 * 2 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((3 + 6) * 2) / 3 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n6 - 3 = 3 (left: 3 27)\n3 * 27 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\nAnswer: ((3 * 9) - 6) / 3 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 8 18)\n18 - 8 = 10 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) - 8 + 18 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (4 * 6) * (3 + 5) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (4 * 6) * (3 + 5) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24\nInput: 2 3 4 12\nSteps:\n4 * 3 = 12 (left: 2 12 12)\n12 / 12 = 1 (left: 2 1)\n2 * 1 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((2 * 3) / 4) * 12 = 24\nInput: 6 6 6 8\nSteps:\n6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 + 6) * (6 - 8) = 24\nInput: 2 3 5 7\nSteps:\n5 + 7 = 12 (left: 2 3 12)\n3 * 12 = 36 (left: 2 36)\n36 / 2 = 18 (left: 18)\n18 - 5 = 13 (left: 13)\n13 + 7 = 20 (left: 20)\n20 / 3 = 6.66666666667 (left: 6.66666666667)\n6.66666666667 * 2 = 13.3333333333 (left: 13.3333333333)\n13.3333333333 * 12 = 160 (left: 160)\n160 / 20 = 8 (left: 8)\n8 - 6.66666666667 = 1.33333333333 (left: 1.33333333333)\n1.33333333333 + 13.3333333333 = 14.6666666667 (left: 14.6666666667)\n14.6666666667 + 18 = 32.6666666667 (left: 32.6666666667)\n32.6666666667 - 3 = 29.6666666667 (left: 29.6666666667)\n29.6666666667 + 2 = 31.6666666667 (left: 31.6666666667)\n31.6666666667 + 5 = 36.6666666667 (left: 36.6666666667)\n36.6666666667 + 7 = 43.6666666667 (left: 43.6666666667)\n43.6666666667 - 8 = 35.6666666667 (left: 35.6666666667)\n35.6666666667 * 6 = 214 (left: 214)\n214 / 3 = 71.3333333333 (left: 71.3333333333)\n71.3333333333 - 5 = 66.3333333333 (left: 66.3333333333)\n66.3333333333 - 7 = 59.3333333333 (left: 59.3333333333)\n59.3333333333 + 8 = 67.3333333333 (left: 67.3333333333)\n67.3333333333 * 2 = 134.666666667 (left: 134.666666667)\n134.666666667 / 3 = 44.8888888889 (left: 44.8888888889)\n44.8888888889 - 5 = 39.888888888"
            ]
        },
        "step_10": {
            "steps": [
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 8\nSteps:\n3 + 3 = 6 (left: 6 6 8)\n6 * 8 = 48 (left: 48)\n6 + 48 = 54 (left: 54)\n54 - 8 = 46 (left: 46)\n46 / 6 = 24 (left: 24)\nAnswer: (((3 + 3) * 8) + 6) - 8) / 6 = 24\nInput: 2 3 3 4\nSteps:\n3 + 3 = 6 (left: 2 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: (2 * (3 + 3)) * 4 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (4 * 6) * (3 + 5) = 24\nInput: 2 3 4 5\nSteps:\n3 * 5 = 15 (left: 2 4 15)\n4 + 2 = 6 (left: 6 15)\n6 * 15 = 90 (left: 90)\nAnswer: (3 * 5) * (4 + 2) = 24\nInput: 6 6 6 6\nSteps:\n6 + 6 = 12 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)\n0 + 12 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((6 + 6) + (6 - 6)) * 6 = 24\nInput: 2 3 4 6\n\n3 * 4 = 12 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\n\nAnswer: ((3 * 4) - 6) * 2 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24\nInput: 2 3 4 12\nSteps:\n4 * 3 = 12 (left: 2 12 12)\n12 / 12 = 1 (left: 2 1)\n2 * 1 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((2 * 3) / 4) * 12 = 24\nInput: 2 4 5 6\nSteps:\n4 + 6 = 10 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n5 * 2 = 10 (left: 10)\n10 * 10 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((2 + 6) - 5) * 2) * 10 / 4 - 1 = 24\nInput: 3 5 6 7\nSteps:\n6 * 3 = 18 (left: 5 7 18)\n18 - 7 = 11 (left: 5 11)\n11 - 5 = 6 (left: 6)\n6 * 5 = 30 (left: 30)\n30 / 3 = 10 (left: 10)\n10 - 4 = 24 (left: 24)\nAnswer: (((3 * 6) - 7) - 5) * 5 / 3 - 4 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n6 - 3 = 3 (left: 3 27)\n3 * 27 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\nAnswer: ((3 * 9) - 6) / 3 = 24\nInput: 2 3 4 6\nSteps:\n3 + 6 = 9 (left: 2 4 9)\n4 * 2 = 8 (left: 8 9)\n8 * 9 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((3 + 6) * 2) / 3 = 24\nInput: 2 2 6 9\nSteps:\n2 * 2 = 4 (left: 4 6 9)\n4 * 6 = 24 (left: 24 9)\n24 - 9 = 15 (left: 15)\nAnswer: (2 * 2) * (6 - 9) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 5 6 7\nSteps:\n3 * 7 = 21 (left: 5 6 21)\n5 + 6 = 11 (left: 11 21)\n11 + 21 = 32 (left: 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((3 * 7) + (5 + 6)) - 8 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 6 9\nSteps:\n3 * 9 = 27 (left: 3 6 27)\n6 - 3 = 3 (left: 3 27)\n3 * 27 = 81 (left: 81)\n81 / 3 = 27 (left: 27)\nAnswer: ((3 * 9) - 6) / 3 = 24\nInput: 7 7 7 7\nSteps:\n7 + 7 = 14 (left: 7 7 14)\n7 * 7 = 49 (left: 49 14)\n49 - 14 = 35 (left: 35)\n35 / 7 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((7 + 7) * 7) - 14) / 7 - 1 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 3 8\nSteps:\n3 + 3 = 6 (left: 3 6 8)\n6 * 3 = 18 (left: 8 18)\n18 - 8 = 10 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: ((3 + 3) * 3) - 8 + 18 = 24\nInput: 2 3 5 6\nSteps:\n5 + 6 = 11 (left: 2 3 11)\n3 * 11 = 33 (left: 2 33)\n33 - 2 = 31 (left: 31)\n31 - 7 = 24 (left: 24)\nAnswer: ((5 + 6) * 3) - 2 - 7 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (4 * 6) * (3 + 5) = 24\nInput: 7 8 9 3\nSteps:\n7 + 9 = 16 (left: 8 3 16)\n16 - 8 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (7 + 9) * (8 - 3) = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\nAnswer: (4 * 6) * (3 + 5) = 24\nInput: 2 3 5 6\nSteps:\n3 + 5 = 8 (left: 2 6 8)\n8 - 6 = 2 (left: 2 2)\n2 * 2 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((2 + 3) - 5) * 6 = 24",
                "1 + 11 = 12 (left: 11 12 13)\n13 - 11 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (1 + 11) * (11 - 13) = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 + 7) - 8) * 3 = 24\nInput: 2 3 4 12\nSteps:\n4 * 3 = 12 (left: 2 12 12)\n12 / 12 = 1 (left: 2 1)\n2 * 1 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((2 * 3) / 4) * 12 = 24\nInput: 6 6 6 8\nSteps:\n6 + 6 = 12 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 + 6) * (6 - 8) = 24\nInput: 2 3 5 7\nSteps:\n5 + 7 = 12 (left: 2 3 12)\n3 * 12 = 36 (left: 2 36)\n36 / 2 = 18 (left: 18)\n18 - 5 = 13 (left: 13)\n13 + 7 = 20 (left: 20)\n20 / 3 = 6.66666666667 (left: 6.66666666667)\n6.66666666667 * 2 = 13.3333333333 (left: 13.3333333333)\n13.3333333333 * 12 = 160 (left: 160)\n160 / 20 = 8 (left: 8)\n8 - 6.66666666667 = 1.33333333333 (left: 1.33333333333)\n1.33333333333 + 13.3333333333 = 14.6666666667 (left: 14.6666666667)\n14.6666666667 + 18 = 32.6666666667 (left: 32.6666666667)\n32.6666666667 - 3 = 29.6666666667 (left: 29.6666666667)\n29.6666666667 + 2 = 31.6666666667 (left: 31.6666666667)\n31.6666666667 + 5 = 36.6666666667 (left: 36.6666666667)\n36.6666666667 + 7 = 43.6666666667 (left: 43.6666666667)\n43.6666666667 - 8 = 35.6666666667 (left: 35.6666666667)\n35.6666666667 * 6 = 214 (left: 214)\n214 / 3 = 71.3333333333 (left: 71.3333333333)\n71.3333333333 - 5 = 66.3333333333 (left: 66.3333333333)\n66.3333333333 - 7 = 59.3333333333 (left: 59.3333333333)\n59.3333333333 + 8 = 67.3333333333 (left: 67.3333333333)\n67.3333333333 * 2 = 134.666666667 (left: 134.666666667)\n134.666666667 / 3 = 44.8888888889 (left: 44.8888888889)\n44.8888888889 - 5 = 39.888888888\nAnswer: ((5 + 7) * 3) - 2 = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                20.0,
                60.0,
                60.0,
                60.0,
                40.0,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.3397485
    },
    "906": {
        "input": "1 8 10 11",
        "step_1": {
            "steps": [
                "1 / 8 = 0.125 (left: 0.125 10 11)",
                "8 - 1 = 7 (left: 7 8 11)",
                "10 - 1 = 9 (left: 8 9 11)",
                "8 - 1 = 7 (left: 7 10 11)",
                "8 / 1 = 8 (left: 8 10 11)",
                "10 + 1 = 11 (left: 8 11)",
                "11 - 1 = 10 (left: 8 10 10)",
                "10 + 1 = 11 (left: 8 11)",
                "7 + 5 = 12 (left: 3 12 9)",
                "8 - 1 = 7 (left: 7 10 11)"
            ],
            "values": [
                2.001,
                3.0,
                3.0,
                1.002,
                1.002,
                0.001,
                2.001,
                0.003,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.9",
                "2 <- INIT",
                "3 <- 1.4",
                "4 <- 1.8",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 1.8",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "8 - 1 = 7 (left: 7 10 11)",
                "",
                "8 / 1 = 8 (left: 8 10 11)",
                "7 + 5 = 12 (left: 3 12 9)",
                "",
                "",
                "7 + 5 = 12 (left: 3 12 9)",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "10 + 1 = 11 (left: 8 11 11)",
                "8 - 1 = 7 (left: 7 10 11)\n7 + 10 = 17 (left: 11 17)",
                "8 / 1 = 8 (left: 8 10 11)",
                "8 / 1 = 8 (left: 8 10 11)\n8 / 10 = 0.8 (left: 11)",
                "7 + 5 = 12 (left: 3 12 9)\n10 / 5 = 2 (left: 5 2 2)",
                "10 - 8 = 2 (left: 1 10 2)",
                "5 / 3 = 1.67 (left: 1.67 7 8)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)",
                "10 - 1 = 9 (left: 1 9 10)",
                "1 + 8 = 9 (left: 9 10 11)"
            ],
            "values": [
                2.001,
                0.003,
                1.002,
                0.002,
                2.001,
                2.0,
                1.002,
                60.0,
                1.001,
                2.001
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 1.8",
                "2 <- 2.7",
                "3 <- INIT",
                "4 <- 1.8",
                "5 <- INIT",
                "6 <- 2.7",
                "7 <- INIT",
                "8 <- 2.8",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "10 - 1 = 9 (left: 8 9 11)",
                "7 + 5 = 12 (left: 3 12 9)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)",
                "",
                "7 + 5 = 12 (left: 3 12 9)",
                "",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)",
                "",
                "10 - 1 = 9 (left: 1 9 10)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)"
            ]
        },
        "step_3": {
            "steps": [
                "10 - 1 = 9 (left: 8 9 11)\n8 + 9 = 17 (left: 11)",
                "7 + 5 = 12 (left: 3 12 9)\n3 * 3 = 9 (left: 9)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n20 - 5 = 15 (left: 15)",
                "5 + 8 = 13 (left: 13 13 4)",
                "7 + 5 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)",
                "7 + 3 = 10 (left: 5 10 9)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n5 * 20 = 100 (left: 100)",
                "10 - 1 = 9 (left: 8 9 11)",
                "10 - 1 = 9 (left: 1 9 10)\n1 + 9 = 10 (left: 10)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\nInput: 3 9 27"
            ],
            "values": [
                0.001,
                0.002,
                0.003,
                0.003,
                20.001,
                3.0,
                0.002,
                3.0,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 3.7",
                "1 <- 2.7",
                "2 <- INIT",
                "3 <- 2.7",
                "4 <- 2.7",
                "5 <- 3.5",
                "6 <- 3.4",
                "7 <- 3.4",
                "8 <- 3.1",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "10 - 1 = 9 (left: 8 9 11)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)",
                "",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)",
                "7 + 3 = 10 (left: 5 10 9)",
                "7 + 5 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)",
                "7 + 5 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)",
                "7 + 5 = 12 (left: 3 12 9)\n3 * 3 = 9 (left: 9)",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "10 - 1 = 9 (left: 8 9 11)\n11 - 9 = 2 (left: 8)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n20 - 5 = 15 (left: 15 20)",
                "1 * 8 = 8 (left: 8 10 11)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n3 + 9 = 12 (left: 12 27)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n16 + 64 = 80 (left: 4 16 80)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)",
                "7 + 5 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)\n7 - 3 = 4 (left: 4 9)",
                "7 + 5 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)\n4 * 9 = 36 (left: 9)",
                "7 + 5 = 12 (left: 3 12 9)\n3 * 3 = 9 (left: 9)\nThere are no possible next steps as there are not enough numbers provided for any mathematical operations.",
                "1 * 8 = 8 (left: 8 10 11)"
            ],
            "values": [
                0.001,
                0.003,
                0.003,
                0.003,
                2.001,
                41.0,
                20.001,
                0.002,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 2.7",
                "2 <- 3.4",
                "3 <- 4.5",
                "4 <- 2.7",
                "5 <- 2.7",
                "6 <- 1.2",
                "7 <- 4.5",
                "8 <- 4.5",
                "9 <- 4.6"
            ],
            "resampled_steps": [
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)",
                "7 + 5 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)",
                "10 - 1 = 9 (left: 8 9 11)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)",
                "7 + 5 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)\n7 - 3 = 4 (left: 4 9)"
            ]
        },
        "step_5": {
            "steps": [
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n27 - 9 = 18 (left: 3 18 27)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n5 * 20 = 100 (left: 100)",
                "7 + 5 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)\n9 - 4 = 5 (left: 5)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25 4)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n5 + 20 = 25 (left: 25)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n5 + 20 = 25 (left: 20 25)",
                "10 - 1 = 9 (left: 8 9 11)\n8 * 9 = 72 (left: 11)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 + 9 = 13 (left: 9)",
                "7 + 5 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)\n7 - 3 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25 9)"
            ],
            "values": [
                21.001,
                0.001,
                0.002,
                3.0,
                0.002,
                0.003,
                0.001,
                40.0,
                0.001,
                2.001
            ],
            "resampled": [
                "0 <- 4.5",
                "1 <- INIT",
                "2 <- 2.5",
                "3 <- 1.2",
                "4 <- 4.5",
                "5 <- 4.5",
                "6 <- 4.4",
                "7 <- 5.0",
                "8 <- 3.4",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)",
                "",
                "10 - 8 = 2 (left: 1 10 2)",
                "10 - 1 = 9 (left: 8 9 11)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n16 + 64 = 80 (left: 4 16 80)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n27 - 9 = 18 (left: 3 18 27)",
                "7 + 5 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)"
            ]
        },
        "step_6": {
            "steps": [
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "11 - 10 = 1 (left: 1 8 11)",
                "10 - 8 = 2 (left: 1 10 2)\n1 * 10 = 10 (left: 10 2)",
                "10 - 1 = 9 (left: 8 9 11)\n9 - 8 = 1 (left: 1 11)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n6 * 9 = 54 (left: 3 54)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\nPossible next steps:",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n16 + 64 = 80 (left: 4 16 80)\n80 - 4 = 76 (left: 16 76)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n27 - 9 = 18 (left: 3 18 27)\n27 - 3 = 24 (left: 18 24)",
                "7 + 5 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)\n7 / 3 = 2.333 (left: 2.333 7)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n5 * 20 = 100 (left: 100) "
            ],
            "values": [
                40.0,
                2.001,
                1.002,
                0.001,
                0.003,
                0.003,
                0.003,
                1.002,
                1.002,
                0.001
            ],
            "resampled": [
                "0 <- 5.7",
                "1 <- 4.5",
                "2 <- 5.0",
                "3 <- 5.7",
                "4 <- 5.7",
                "5 <- 4.5",
                "6 <- 5.7",
                "7 <- 2.7",
                "8 <- 5.7",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n27 - 9 = 18 (left: 3 18 27)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)"
            ]
        },
        "step_7": {
            "steps": [
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 - 2 = 34 (left: 34)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 + 9 = 13 (left: 9)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n27 - 9 = 18 (left: 3 18 27)\n27 - 18 = 9 (left: 3 9)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 / 2 = 18",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\nThere are no possible next steps with the number 36 as the input.",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 / 4 = 9 (left: 9)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n5 / 20 = 0.25 (left: 0.25 20)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 / 2 = 18",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n9 / 3 = 3 (left: 3 9)"
            ],
            "values": [
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                0.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 5.7",
                "1 <- 4.9",
                "2 <- 5.7",
                "3 <- 5.7",
                "4 <- 4.9",
                "5 <- 5.0",
                "6 <- 4.5",
                "7 <- 5.3",
                "8 <- 4.5",
                "9 <- 5.0"
            ],
            "resampled_steps": [
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "1 * 8 = 8 (left: 8 10 11)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "1 * 8 = 8 (left: 8 10 11)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n27 - 9 = 18 (left: 3 18 27)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25 4)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n27 - 9 = 18 (left: 3 18 27)"
            ]
        },
        "step_8": {
            "steps": [
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 + 2 = 38",
                "1 * 8 = 8 (left: 8 10 11)\n10 / 11 = 0.909 (left: 8 0.909)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 / 2 = 18",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\nThere are no possible next steps with the input of 36.",
                "1 * 8 = 8 (left: 8 10 11)\n8 + 10 = 18 (left: 11 18)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n27 - 9 = 18 (left: 3 18 27)\n18 / 3 = 6 (left: 6 6 27)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25 4)\n2.25 * 4 = 9 (left: 4)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 + 9 = 13 (left: 9)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n27 - 9 = 18 (left: 3 18 27)\n27 / 3 = 9 (left: 9 18)"
            ],
            "values": [
                0.003,
                2.0,
                0.003,
                0.003,
                0.003,
                1.002,
                0.002,
                0.003,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 4.5",
                "1 <- 2.7",
                "2 <- 5.7",
                "3 <- 4.5",
                "4 <- 4.5",
                "5 <- 1.4",
                "6 <- 5.7",
                "7 <- 2.7",
                "8 <- 2.7",
                "9 <- 4.6"
            ],
            "resampled_steps": [
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)",
                "8 / 1 = 8 (left: 8 10 11)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)",
                "7 + 5 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)\n7 - 3 = 4 (left: 4 9)"
            ]
        },
        "step_9": {
            "steps": [
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n3 * 5 = 15 (left: 7 15)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n20 + 5 = 25 (left: 25)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 / 2 = 18",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 9 36)",
                "8 / 1 = 8 (left: 8 10 11)\n10 - 11 = -1 (left: 8 -1)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 + 2 = 38",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n5 - 3 = 2 (left: 10 2)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n5 + 20 = 25 (left: 25)",
                "7 + 5 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)\n7 - 3 = 4 (left: 4 9)\n15 + 5 = 20 (left: 10 20)"
            ],
            "values": [
                0.002,
                20.002,
                0.003,
                40.0,
                0.003,
                0.002,
                0.003,
                2.001,
                20.002,
                0.003
            ],
            "resampled": [
                "0 <- 4.6",
                "1 <- 9.3",
                "2 <- 2.7",
                "3 <- 8.1",
                "4 <- 5.0",
                "5 <- 3.4",
                "6 <- 2.7",
                "7 <- 6.0",
                "8 <- 2.7",
                "9 <- 4.5"
            ],
            "resampled_steps": [
                "7 + 5 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)\n7 - 3 = 4 (left: 4 9)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)",
                "1 * 8 = 8 (left: 8 10 11)\n10 / 11 = 0.909 (left: 8 0.909)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n27 - 9 = 18 (left: 3 18 27)",
                "7 + 5 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)"
            ]
        },
        "step_10": {
            "steps": [
                "7 + 5 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)\n7 - 3 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25)",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\nNone - only one number provided.",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n9 * 3 = 27 (left: 27 18)",
                "1 * 8 = 8 (left: 8 10 11)\n10 / 11 = 0.909 (left: 8 0.909)\n8 - 0.909 = 7.091 (left: 7.091)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\n27 - 9 = 18 (left: 3 18 27)\n3 * 9 = 27 (left: 9 18 27)",
                "7 + 5 = 12 (left: 3 12 9)\n12 / 3 = 4 (left: 4 9)\n4 + 9 = 13 (left: 13)",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\nInput: 3 9 27",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 / 2 = 18",
                "7 + 5 = 12 (left: 3 12 9)\n20 / 4 = 5 (left: 5 20)\nPossible next steps:",
                "7 + 3 = 10 (left: 5 10 9)\n9 - 5 = 4 (left: 4 9)\nPossible next steps:"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.39578250000000004
    },
    "907": {
        "input": "2 3 6 9",
        "step_1": {
            "steps": [
                "3 * 2 = 6 (left: 6 6 9)",
                "Possible next steps:",
                "9 / 3 = 3 (left: 2 3 6)",
                "6 / 3 = 2 (left: 2 2 9)",
                "2 * 3 = 6 (left: 6 6 9)",
                "Input: 4 5 7 9",
                "6 + 4 = 10 (left: 5 8 10)",
                "10 / 5 = 2 (left: 2 2 12)",
                "9 / 3 = 3 (left: 2 3 6)",
                "6 / 2 = 3 (left: 3 3 9)"
            ],
            "values": [
                3.0,
                0.003,
                21.001,
                3.0,
                3.0,
                0.003,
                3.0,
                20.002,
                41.0,
                2.0
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.3",
                "2 <- 1.6",
                "3 <- 1.2",
                "4 <- INIT",
                "5 <- 1.8",
                "6 <- INIT",
                "7 <- 1.0",
                "8 <- 1.8",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "10 / 5 = 2 (left: 2 2 12)",
                "6 / 3 = 2 (left: 2 2 9)",
                "6 + 4 = 10 (left: 5 8 10)",
                "9 / 3 = 3 (left: 2 3 6)",
                "",
                "9 / 3 = 3 (left: 2 3 6)",
                "",
                "3 * 2 = 6 (left: 6 6 9)",
                "9 / 3 = 3 (left: 2 3 6)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)",
                "6 + 4 = 10 (left: 5 8 10)\n12 - 3 = 9 (left: 9 12)",
                "9 / 3 = 3 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)",
                "10 / 5 = 2 (left: 4 2 15)",
                "9 / 3 = 3 (left: 2 3 6)\n4 / 2 = 2 (left: 1 2)",
                "6 / 2 = 3 (left: 3 3 9)",
                "3 * 2 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 9 36)",
                "9 / 3 = 3 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)",
                "9 - 6 = 3 (left: 2 3 3)"
            ],
            "values": [
                0.003,
                40.0,
                0.003,
                1.002,
                2.001,
                0.003,
                2.001,
                20.001,
                0.002,
                2.0
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 2.1",
                "2 <- 2.1",
                "3 <- 1.2",
                "4 <- 2.1",
                "5 <- 1.8",
                "6 <- INIT",
                "7 <- 1.8",
                "8 <- 1.2",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "10 / 5 = 2 (left: 2 2 12)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)",
                "9 / 3 = 3 (left: 2 3 6)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)",
                "9 / 3 = 3 (left: 2 3 6)",
                "",
                "9 / 3 = 3 (left: 2 3 6)",
                "9 / 3 = 3 (left: 2 3 6)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n4 * 9 = 36 (left: 9)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25 9)",
                "9 / 3 = 3 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n7 / 3 = 2.33 (left: 2.33 5)",
                "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)",
                "6 + 3 = 9 (left: 2 9 9)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)",
                "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)",
                "3 * 3 = 9 (left: 6 9 9)"
            ],
            "values": [
                1.002,
                0.003,
                3.0,
                0.002,
                1.001,
                21.0,
                0.003,
                60.0,
                2.0,
                22.0
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 3.9",
                "2 <- 3.7",
                "3 <- 1.8",
                "4 <- 1.7",
                "5 <- 3.5",
                "6 <- 3.7",
                "7 <- 1.8",
                "8 <- 1.7",
                "9 <- 2.1"
            ],
            "resampled_steps": [
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)",
                "3 * 3 = 9 (left: 6 9 9)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)",
                "9 / 3 = 3 (left: 2 3 6)",
                "10 / 5 = 2 (left: 2 2 12)",
                "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)",
                "9 / 3 = 3 (left: 2 3 6)",
                "10 / 5 = 2 (left: 2 2 12)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)"
            ]
        },
        "step_4": {
            "steps": [
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n4 * 9 = 36 (left: 9)",
                "3 * 3 = 9 (left: 6 9 9)\n9 / 9 = 1 (left: 6 9 1)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)\n6 * 8 = 48 (left: 4 48)",
                "9 / 3 = 3 (left: 2 3 6)\n2 + 3 = 5 (left: 5 6)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)",
                "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)\n7 + 3 = 10 (left: 1 5 10)",
                "9 / 3 = 3 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)",
                "10 / 5 = 2 (left: 2 2 12)\n6 - 4 = 2 (left: 1 4 2)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n4 * 9 = 36 (left: 9 36)"
            ],
            "values": [
                0.002,
                1.002,
                0.003,
                0.0,
                20.002,
                20.0,
                0.003,
                0.003,
                2.001,
                0.002
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 2.3",
                "2 <- 1.8",
                "3 <- 2.1",
                "4 <- 3.7",
                "5 <- 1.7",
                "6 <- 3.7",
                "7 <- 3.7",
                "8 <- 4.5",
                "9 <- 1.7"
            ],
            "resampled_steps": [
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25 9)",
                "9 / 3 = 3 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)",
                "9 / 3 = 3 (left: 2 3 6)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)",
                "10 / 5 = 2 (left: 2 2 12)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)",
                "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)",
                "10 / 5 = 2 (left: 2 2 12)"
            ]
        },
        "step_5": {
            "steps": [
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25 9)\n2.25 + 9 = 11.25 (left: 11.25)",
                "9 / 3 = 3 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)\n2 - 3 = -1 (left: -1)",
                "9 / 3 = 3 (left: 2 3 6)\n3 + 2 = 5 (left: 5 6)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n6 / 3 = 2 (left: 2 6)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)\n12 - 7 = 5 (left: 5 10 12)",
                "10 / 5 = 2 (left: 2 2 12)\n12 - 2 = 10 (left: 2 10 12)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)\n1 + 5 = 6 (left: 5 6 9)",
                "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 * 8 = 144 (left: 8 144)",
                "10 / 5 = 2 (left: 2 2 12)\n2 + 2 = 4 (left: 4 12)"
            ],
            "values": [
                0.001,
                0.0,
                0.003,
                2.001,
                1.002,
                0.003,
                0.003,
                3.0,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 2.7",
                "2 <- 4.4",
                "3 <- 3.5",
                "4 <- 1.8",
                "5 <- 1.7",
                "6 <- 3.9",
                "7 <- 3.0",
                "8 <- 2.1",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)",
                "3 * 2 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 9 36)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)",
                "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)",
                "9 / 3 = 3 (left: 2 3 6)",
                "10 / 5 = 2 (left: 2 2 12)",
                "3 * 3 = 9 (left: 6 9 9)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)"
            ]
        },
        "step_6": {
            "steps": [
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n9 - 4 = 5 (left: 5)",
                "3 * 2 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 9 36)\n36 / 9 = 4 (left: 4 36)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n16 - 3 = 13 (left: 13 8)",
                "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)\n3 + 6 = 9 (left: 9)",
                "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)",
                "3 * 3 = 9 (left: 6 9 9)\n9 / 6 = 1.5 (left: 1.5 9 9)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n9 + 4 = 13 (left: 4)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)"
            ],
            "values": [
                0.001,
                0.003,
                0.002,
                0.003,
                2.0,
                0.003,
                3.0,
                0.002,
                0.002,
                0.001
            ],
            "resampled": [
                "0 <- 3.7",
                "1 <- 2.1",
                "2 <- 4.4",
                "3 <- 4.4",
                "4 <- 3.7",
                "5 <- 3.5",
                "6 <- 3.9",
                "7 <- 1.7",
                "8 <- 2.1",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)",
                "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)",
                "3 * 3 = 9 (left: 6 9 9)",
                "10 / 5 = 2 (left: 2 2 12)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)"
            ]
        },
        "step_7": {
            "steps": [
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)\n8 / 4 = 2 (left: 2 2)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n4 + 9 = 13 (left: 13)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)\n6 + 8 = 14 (left: 4 14)",
                "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)\n6 / 3 = 2 (left: 2)",
                "3 * 3 = 9 (left: 6 9 9)\n6 * 9 = 54 (left: 9 9 54)",
                "10 / 5 = 2 (left: 2 2 12)\n12 / 2 = 6 (left: 2 6)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n4 + 9 = 13 (left: 9 13)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)\n5 - 3 = 2 (left: 2 7 9)"
            ],
            "values": [
                2.0,
                0.002,
                0.003,
                60.0,
                0.002,
                0.002,
                1.002,
                2.0,
                0.002,
                1.001
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 7.9",
                "2 <- 7.3",
                "3 <- 2.1",
                "4 <- 2.1",
                "5 <- 2.7",
                "6 <- 3.5",
                "7 <- 3.5",
                "8 <- 7.3",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)\n5 - 3 = 2 (left: 2 7 9)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)",
                "3 * 2 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 9 36)",
                "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)",
                "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)"
            ]
        },
        "step_8": {
            "steps": [
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)\n5 - 3 = 2 (left: 2 7 9)\n9 * 2 = 18 (left: 7 18)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n9 - 4 = 5 (left: 5)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n9 - 4 = 5 (left: 5 9)",
                "3 * 2 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 9 36)\n36 - 9 = 27 (left: 27)",
                "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)\n3 + 6 = 9 (left: 9)",
                "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)\n3 + 6 = 9 (left: 9)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)"
            ],
            "values": [
                0.003,
                0.003,
                60.0,
                0.001,
                0.003,
                20.001,
                0.003,
                0.002,
                20.0,
                0.003
            ],
            "resampled": [
                "0 <- 5.3",
                "1 <- 3.7",
                "2 <- 8.2",
                "3 <- 2.1",
                "4 <- 2.7",
                "5 <- 3.7",
                "6 <- 6.4",
                "7 <- 8.2",
                "8 <- 7.3",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n6 / 3 = 2 (left: 2 6)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)",
                "3 * 2 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 9 36)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)",
                "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)",
                "3 * 2 = 6 (left: 6 6 9)"
            ]
        },
        "step_9": {
            "steps": [
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n6 / 3 = 2 (left: 2 6)\n6 - 2 = 4 (left: 4)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)\n10 - 20 = -10 (left: -10 30 40)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((10 / 5) * 2) * (12 / 4) = 24",
                "6 / 3 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n4 * 9 = 36 (left: 9)",
                "3 * 2 = 6 (left: 6 6 9)\n6 * 6 = 36 (left: 9 36)\n25 * 5 = 125 (left: 5 125)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)",
                "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 6)\n6 - 3 = 3 (left: 3)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((10 / 5) * 2) * (12 / 4) = 24",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)",
                "3 * 2 = 6 (left: 6 6 9)\nInput: 3 9 15 54"
            ],
            "values": [
                0.003,
                41.0,
                0.003,
                0.003,
                21.001,
                0.001,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 8.2",
                "2 <- 9.1",
                "3 <- 8.2",
                "4 <- 8.2",
                "5 <- 3.9",
                "6 <- 9.1",
                "7 <- 3.9",
                "8 <- 8.2",
                "9 <- 8.2"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 2 3 6)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)\n10 - 20 = -10 (left: -10 30 40)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "3 * 3 = 9 (left: 6 9 9)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)\n10 - 20 = -10 (left: -10 30 40)",
                "3 * 3 = 9 (left: 6 9 9)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)"
            ]
        },
        "step_10": {
            "steps": [
                "9 / 3 = 3 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((2 * (10 / 5)) * 2) * 8 = 24",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)\n10 - 20 = -10 (left: -10 30 40)\n30 + 40 = 70 (left: -10 70)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((10 / 5) * 2) * (12 / 4) = 24",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((10 / 5) * 2) * (12 / 4) = 24",
                "3 * 3 = 9 (left: 6 9 9)\n21 / 3 = 7 (left: 7 7)",
                "9 / 3 = 3 (left: 2 3 6)\n8 - 4 = 4 (left: 4 6 8)\n10 - 20 = -10 (left: -10 30 40)\n-10 - 30 = -40 (left: -40 40)",
                "3 * 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((10 / 5) * 2) * (12 / 4) = 24",
                "10 / 5 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n12 / 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: ((2 / 5) * 2) * (3 * 8) = 24"
            ],
            "values": [
                0.001,
                0.003,
                0.0,
                0.003,
                0.003,
                0.003,
                3.0,
                0.003,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.45320650000000007
    },
    "908": {
        "input": "1 3 5 9",
        "step_1": {
            "steps": [
                "2 * 6 = 12 (left: 4 10 12)",
                "5 * 3 = 15 (left: 1 15 9)",
                "5 + 9 = 14 (left: 1 3 14)",
                "1 + 3 = 4 (left: 4 5 9)",
                "3 * 5 = 15 (left: 1 15 9)",
                "6 - 3 = 3 (left: 3 4 12)",
                "1 + 3 = 4 (left: 4 5 9)",
                "3 + 5 = 8 (left: 1 8 9)",
                "1 * 5 = 5 (left: 5 3 9)",
                "1 + 3 = 4 (left: 4 5 9)"
            ],
            "values": [
                2.001,
                1.002,
                1.002,
                2.001,
                0.003,
                41.0,
                3.0,
                0.003,
                60.0,
                3.0
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 1.8",
                "2 <- INIT",
                "3 <- 1.5",
                "4 <- 1.5",
                "5 <- 1.8",
                "6 <- 1.5",
                "7 <- 1.5",
                "8 <- INIT",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "1 * 5 = 5 (left: 5 3 9)",
                "1 * 5 = 5 (left: 5 3 9)",
                "",
                "6 - 3 = 3 (left: 3 4 12)",
                "6 - 3 = 3 (left: 3 4 12)",
                "1 * 5 = 5 (left: 5 3 9)",
                "6 - 3 = 3 (left: 3 4 12)",
                "6 - 3 = 3 (left: 3 4 12)",
                "",
                "1 * 5 = 5 (left: 5 3 9)"
            ]
        },
        "step_2": {
            "steps": [
                "1 * 5 = 5 (left: 5 3 9)\n3 * 9 = 27 (left: 5 27)",
                "1 * 5 = 5 (left: 5 3 9)\n7 * 3 = 21 (left: 6 21)",
                "1 * 5 = 5 (left: 5 3 9)",
                "6 - 3 = 3 (left: 3 4 12)\n12 / 4 = 3 (left: 3 3 12)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)",
                "1 * 5 = 5 (left: 5 3 9)\n3 + 5 = 8 (left: 8 9)",
                "6 - 3 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)",
                "6 - 3 = 3 (left: 3 4 12)\n4 + 3 = 7 (left: 7 12)",
                "1 * 3 = 3 (left: 3 5 9)",
                "1 * 5 = 5 (left: 5 3 9)\n9 / 5 = 1.8 (left: 1.8 9)"
            ],
            "values": [
                0.002,
                0.002,
                60.0,
                0.003,
                60.0,
                0.003,
                40.001,
                0.003,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.8",
                "2 <- 2.4",
                "3 <- 2.4",
                "4 <- INIT",
                "5 <- 2.6",
                "6 <- 2.4",
                "7 <- 2.2",
                "8 <- 2.2",
                "9 <- 2.4"
            ],
            "resampled_steps": [
                "",
                "1 * 5 = 5 (left: 5 3 9)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)",
                "",
                "6 - 3 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)",
                "1 * 5 = 5 (left: 5 3 9)",
                "1 * 5 = 5 (left: 5 3 9)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)"
            ]
        },
        "step_3": {
            "steps": [
                "5 + 9 = 14 (left: 1 3 14)",
                "1 * 5 = 5 (left: 5 3 9)\n5 - 3 = 2 (left: 2 9)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "1 - 3 = -2 (left: -2 5 9)",
                "6 - 3 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "1 * 5 = 5 (left: 5 3 9)\nPossible next steps:",
                "1 * 5 = 5 (left: 5 3 9)\n3 / 9 = 0.33 (left: 0.33 9)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)"
            ],
            "values": [
                0.003,
                0.001,
                0.002,
                60.0,
                40.001,
                0.003,
                0.002,
                0.002,
                0.002,
                0.001
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 1.8",
                "2 <- 1.5",
                "3 <- 2.4",
                "4 <- 3.4",
                "5 <- 1.5",
                "6 <- 3.3",
                "7 <- 2.4",
                "8 <- 2.4",
                "9 <- 2.4"
            ],
            "resampled_steps": [
                "1 * 5 = 5 (left: 5 3 9)",
                "1 * 5 = 5 (left: 5 3 9)",
                "6 - 3 = 3 (left: 3 4 12)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)",
                "1 - 3 = -2 (left: -2 5 9)",
                "6 - 3 = 3 (left: 3 4 12)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)"
            ]
        },
        "step_4": {
            "steps": [
                "1 * 5 = 5 (left: 5 3 9)\n3 + 9 = 12 (left: 5 12)",
                "1 * 5 = 5 (left: 5 3 9)\n9 - 5 = 4 (left: 4 9)",
                "6 - 3 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "1 - 3 = -2 (left: -2 5 9)\n9 - 5 = 4 (left: -2 4)",
                "6 - 3 = 3 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n5 + 10 = 15 (left: 15)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)"
            ],
            "values": [
                21.0,
                40.0,
                20.002,
                60.0,
                2.001,
                1.001,
                60.0,
                0.002,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 4.3",
                "2 <- 3.4",
                "3 <- 4.6",
                "4 <- 4.3",
                "5 <- 4.0",
                "6 <- 4.1",
                "7 <- 4.1",
                "8 <- 1.8",
                "9 <- 4.0"
            ],
            "resampled_steps": [
                "6 - 3 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "1 - 3 = -2 (left: -2 5 9)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "1 * 5 = 5 (left: 5 3 9)\n3 + 9 = 12 (left: 5 12)",
                "1 * 5 = 5 (left: 5 3 9)\n9 - 5 = 4 (left: 4 9)",
                "1 * 5 = 5 (left: 5 3 9)\n9 - 5 = 4 (left: 4 9)",
                "1 * 5 = 5 (left: 5 3 9)",
                "1 * 5 = 5 (left: 5 3 9)\n3 + 9 = 12 (left: 5 12)"
            ]
        },
        "step_5": {
            "steps": [
                "6 - 3 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 - 3) * (12 - 4) = 24",
                "1 - 3 = -2 (left: -2 5 9)\n-2 - 5 = -7 (left: -7 9)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 - 3) * (4 + 12) = 24",
                "1 * 5 = 5 (left: 5 3 9)\n3 + 9 = 12 (left: 5 12)\n12 - 5 = 7 (left: 7)",
                "1 * 5 = 5 (left: 5 3 9)\n9 - 5 = 4 (left: 4 9)\n9 - 4 = 5 (left: 5 9)",
                "1 * 5 = 5 (left: 5 3 9)\n9 - 5 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25 9)",
                "1 * 5 = 5 (left: 5 3 9)\n10 - 4 = 6 (left: 6 6 10)",
                "1 * 5 = 5 (left: 5 3 9)\n3 + 9 = 12 (left: 5 12)\n12 - 5 = 7 (left: 7)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                60.0,
                0.003,
                0.002,
                0.003,
                2.001,
                41.0,
                0.001
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- 3.3",
                "2 <- 3.4",
                "3 <- 4.6",
                "4 <- 4.3",
                "5 <- 4.6",
                "6 <- 4.1",
                "7 <- 4.2",
                "8 <- 5.3",
                "9 <- 4.3"
            ],
            "resampled_steps": [
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "1 - 3 = -2 (left: -2 5 9)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24",
                "1 * 5 = 5 (left: 5 3 9)\n9 - 5 = 4 (left: 4 9)",
                "6 - 3 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)"
            ]
        },
        "step_6": {
            "steps": [
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 - 3) * (4 + 12) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 - 3) * (4 + 12) = 24",
                "1 - 3 = -2 (left: -2 5 9)\nPossible next steps:",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 - 3) * (4 + 12) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 5 7 8\nSteps:\n3 * 8 = 24 (left: 5 7 24)\n7 - 5 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (7 - 5) = 24",
                "1 * 5 = 5 (left: 5 3 9)\n9 - 5 = 4 (left: 4 9)\n4 + 9 = 13 (left: 13)",
                "6 - 3 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nThere is no solution for the input provided.",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - 3) * 8 = 24"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                60.0,
                0.003,
                60.0,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 3.3",
                "2 <- 2.2",
                "3 <- 4.3",
                "4 <- 5.3",
                "5 <- 5.8",
                "6 <- 6.3",
                "7 <- 2.8",
                "8 <- 2.8",
                "9 <- 6.3"
            ],
            "resampled_steps": [
                "1 - 3 = -2 (left: -2 5 9)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "1 * 5 = 5 (left: 5 3 9)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24",
                "1 * 5 = 5 (left: 5 3 9)\n10 - 4 = 6 (left: 6 6 10)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24",
                "1 * 3 = 3 (left: 3 5 9)",
                "1 * 3 = 3 (left: 3 5 9)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24"
            ]
        },
        "step_7": {
            "steps": [
                "1 - 3 = -2 (left: -2 5 9)\n3 + 6 = 9 (left: 9 9)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 - 3) * (4 + 12) = 24",
                "1 * 5 = 5 (left: 5 3 9)\n5 + 3 = 8 (left: 8 9)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - 3) * 8 = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nInput: 2 4 7 9\nSteps:\n2 * 9 = 18 (left: 4 7 18)\n7 + 4 = 11 (left: 11 18)\n11 + 18 = 29 (left: 29)\nAnswer: ((2 * 9) + (7 + 4)) = 24",
                "1 * 5 = 5 (left: 5 3 9)\n10 - 4 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n2 * 6 = 12 (left: 12 15)\n15 - 12 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((2 * 6) - (3 * 5)) * (3 + 3)) - 6 = 24",
                "1 * 3 = 3 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)",
                "1 * 3 = 3 (left: 3 5 9)\n9 - 3 = 6 (left: 5 6)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 * 2 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (3 * 8) + (6 * 2) = 24"
            ],
            "values": [
                0.003,
                0.003,
                2.001,
                0.003,
                60.0,
                40.0,
                60.0,
                0.003,
                0.003,
                40.0
            ],
            "resampled": [
                "0 <- 7.9",
                "1 <- 4.1",
                "2 <- 4.3",
                "3 <- 7.6",
                "4 <- 7.5",
                "5 <- 6.5",
                "6 <- 6.3",
                "7 <- 7.4",
                "8 <- 4.0",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 * 2 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (3 * 8) + (6 * 2) = 24",
                "1 * 5 = 5 (left: 5 3 9)\n9 - 5 = 4 (left: 4 9)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n2 * 6 = 12 (left: 12 15)\n15 - 12 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((2 * 6) - (3 * 5)) * (3 + 3)) - 6 = 24",
                "1 * 5 = 5 (left: 5 3 9)\n10 - 4 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 5 7 8\nSteps:\n3 * 8 = 24 (left: 5 7 24)\n7 - 5 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (7 - 5) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nInput: 2 4 7 9\nSteps:\n2 * 9 = 18 (left: 4 7 18)\n7 + 4 = 11 (left: 11 18)\n11 + 18 = 29 (left: 29)\nAnswer: ((2 * 9) + (7 + 4)) = 24",
                "1 * 5 = 5 (left: 5 3 9)\n3 + 9 = 12 (left: 5 12)",
                ""
            ]
        },
        "step_8": {
            "steps": [
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 * 2 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (3 * 8) + (6 * 2) = 24\nInput: 2 2 6 8\nSteps:\n2 * 8 = 16 (left: 2 6 16)\n6 + 2 = 8 (left: 8 16)\n8 * 2 = 16 (left: 16)\nAnswer: (2 * 8) - (6 + 2) = 24",
                "1 * 5 = 5 (left: 5 3 9)\n9 - 5 = 4 (left: 4 9)\nInput: 6 3 12",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 - 3) * (4 + 12) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n2 * 6 = 12 (left: 12 15)\n15 - 12 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((2 * 6) - (3 * 5)) * (3 + 3)) - 6 = 24\nInput: 2 4 6 9\nSteps:\n2 * 9 = 18 (left: 4 6 18)\n4 + 6 = 10 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 / 4 = 7 (left: 7)\n7 * 6 = 42 (left: 42)\n42 - 18 = 24 (left: 24)\nAnswer: (((2 * 9) + (4 + 6)) * (10 / 4)) - 18 = 24",
                "1 * 5 = 5 (left: 5 3 9)\n10 - 4 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)\n0 + 10 = 10 (left: 10)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 5 7 8\nSteps:\n3 * 8 = 24 (left: 5 7 24)\n7 - 5 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (7 - 5) = 24\nInput: 2 4 6 8\nSteps:\n4 * 6 = 24 (left: 2 8 24)\n2 * 8 = 16 (left: 16 24)\n16 + 24 = 40 (left: 40)\nAnswer: (4 * 6) - (2 * 8) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 1 2 3 8\nSteps:\n2 + 8 = 10 (left: 1 3 10)\n3 * 10 = 30 (left: 1 30)\n30 - 1 = 29 (left: 29)\n29 / 3 = 9.67 (left: 9.67)\n9.67 * 3 = 29 (left: 29)\nAnswer: ((2 + 8) * 3) - 1 = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nInput: 2 4 7 9\nSteps:\n2 * 9 = 18 (left: 4 7 18)\n7 + 4 = 11 (left: 11 18)\n11 + 18 = 29 (left: 29)\nAnswer: ((2 * 9) + (7 + 4)) = 24\nInput: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n6 * 4 = 24 (left: 24)\nAnswer: ((5 + 7) * 6) - 12 = 24",
                "1 * 5 = 5 (left: 5 3 9)\n3 + 9 = 12 (left: 5 12)\n5 + 12 = 17 (left: 17)",
                "3 + 5 = 8 (left: 1 8 9)"
            ],
            "values": [
                60.0,
                0.003,
                0.003,
                40.0,
                0.002,
                60.0,
                60.0,
                60.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 8.6",
                "1 <- 8.6",
                "2 <- 7.4",
                "3 <- 8.3",
                "4 <- 7.6",
                "5 <- 7.4",
                "6 <- 7.4",
                "7 <- 7.5",
                "8 <- 8.7",
                "9 <- 7.5"
            ],
            "resampled_steps": [
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 1 2 3 8\nSteps:\n2 + 8 = 10 (left: 1 3 10)\n3 * 10 = 30 (left: 1 30)\n30 - 1 = 29 (left: 29)\n29 / 3 = 9.67 (left: 9.67)\n9.67 * 3 = 29 (left: 29)\nAnswer: ((2 + 8) * 3) - 1 = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 1 2 3 8\nSteps:\n2 + 8 = 10 (left: 1 3 10)\n3 * 10 = 30 (left: 1 30)\n30 - 1 = 29 (left: 29)\n29 / 3 = 9.67 (left: 9.67)\n9.67 * 3 = 29 (left: 29)\nAnswer: ((2 + 8) * 3) - 1 = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nInput: 2 4 7 9\nSteps:\n2 * 9 = 18 (left: 4 7 18)\n7 + 4 = 11 (left: 11 18)\n11 + 18 = 29 (left: 29)\nAnswer: ((2 * 9) + (7 + 4)) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n2 * 6 = 12 (left: 12 15)\n15 - 12 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((2 * 6) - (3 * 5)) * (3 + 3)) - 6 = 24\nInput: 2 4 6 9\nSteps:\n2 * 9 = 18 (left: 4 6 18)\n4 + 6 = 10 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 / 4 = 7 (left: 7)\n7 * 6 = 42 (left: 42)\n42 - 18 = 24 (left: 24)\nAnswer: (((2 * 9) + (4 + 6)) * (10 / 4)) - 18 = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n2 * 6 = 12 (left: 12 15)\n15 - 12 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((2 * 6) - (3 * 5)) * (3 + 3)) - 6 = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nInput: 2 4 7 9\nSteps:\n2 * 9 = 18 (left: 4 7 18)\n7 + 4 = 11 (left: 11 18)\n11 + 18 = 29 (left: 29)\nAnswer: ((2 * 9) + (7 + 4)) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nInput: 2 4 7 9\nSteps:\n2 * 9 = 18 (left: 4 7 18)\n7 + 4 = 11 (left: 11 18)\n11 + 18 = 29 (left: 29)\nAnswer: ((2 * 9) + (7 + 4)) = 24",
                "1 * 5 = 5 (left: 5 3 9)\n10 - 4 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nInput: 2 4 7 9\nSteps:\n2 * 9 = 18 (left: 4 7 18)\n7 + 4 = 11 (left: 11 18)\n11 + 18 = 29 (left: 29)\nAnswer: ((2 * 9) + (7 + 4)) = 24\nInput: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n6 * 4 = 24 (left: 24)\nAnswer: ((5 + 7) * 6) - 12 = 24",
                "1 * 5 = 5 (left: 5 3 9)\n10 - 4 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)"
            ]
        },
        "step_9": {
            "steps": [
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 1 2 3 8\nSteps:\n2 + 8 = 10 (left: 1 3 10)\n3 * 10 = 30 (left: 1 30)\n30 - 1 = 29 (left: 29)\n29 / 3 = 9.67 (left: 9.67)\n9.67 * 3 = 29 (left: 29)\nAnswer: ((2 + 8) * 3) - 1 = 24\nThere is no solution for the input numbers 1, 2, 3, and 8 to obtain 24 using the given arithmetic operations.",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 1 2 3 8\nSteps:\n2 + 8 = 10 (left: 1 3 10)\n3 * 10 = 30 (left: 1 30)\n30 - 1 = 29 (left: 29)\n29 / 3 = 9.67 (left: 9.67)\n9.67 * 3 = 29 (left: 29)\nAnswer: ((2 + 8) * 3) - 1 = 24\nThere is no way to obtain 24 using the numbers 1, 2, 3, and 8 with basic arithmetic operations.",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nInput: 2 4 7 9\nSteps:\n2 * 9 = 18 (left: 4 7 18)\n7 + 4 = 11 (left: 11 18)\n11 + 18 = 29 (left: 29)\nAnswer: ((2 * 9) + (7 + 4)) = 24\nInput: 3 3 4 7\nSteps:\n3 * 7 = 21 (left: 3 4 21)\n4 - 3 = 1 (left: 1 21)\n1 * 21 = 21 (left: 21)\nAnswer: (3 * 7) - (4 - 3) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n2 * 6 = 12 (left: 12 15)\n15 - 12 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((2 * 6) - (3 * 5)) * (3 + 3)) - 6 = 24\nInput: 2 4 6 9\nSteps:\n2 * 9 = 18 (left: 4 6 18)\n4 + 6 = 10 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 / 4 = 7 (left: 7)\n7 * 6 = 42 (left: 42)\n42 - 18 = 24 (left: 24)\nAnswer: (((2 * 9) + (4 + 6)) * (10 / 4)) - 18 = 24\nInput: 2 3 7 9\nSteps:\n7 - 3 = 4 (left: 2 4 9)\n4 * 9 = 36 (left: 2 36)\n2 * 36 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((7 - 3) * 9) / (2 * 36) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n2 * 6 = 12 (left: 12 15)\n15 - 12 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((2 * 6) - (3 * 5)) * (3 + 3)) - 6 = 24\nInput: 3 5 7 8\nSteps:\n7 + 8 = 15 (left: 3 5 15)\n3 * 5 = 15 (left: 15 15)\n15 + 15 = 30 (left: 30)\n30 / 30 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: ((7 + 8) * (3 * 5)) / 30 = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nInput: 2 4 7 9\nSteps:\n2 * 9 = 18 (left: 4 7 18)\n7 + 4 = 11 (left: 11 18)\n11 + 18 = 29 (left: 29)\nAnswer: ((2 * 9) + (7 + 4)) = 24\nInput: 3 3 4 8\nSteps:\n3 * 8 = 24 (left: 3 4 24)\n3 + 4 = 7 (left: 7 24)\n7 * 24 = 168 (left: 168)\nAnswer: (3 * 8) + (3 + 4) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nInput: 2 4 7 9\nSteps:\n2 * 9 = 18 (left: 4 7 18)\n7 + 4 = 11 (left: 11 18)\n11 + 18 = 29 (left: 29)\nAnswer: ((2 * 9) + (7 + 4)) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\nAnswer: (3 * 7) - (5 - 3) = 24",
                "1 * 5 = 5 (left: 5 3 9)\n10 - 4 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)\n0 + 10 = 10 (left: 10)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nInput: 2 4 7 9\nSteps:\n2 * 9 = 18 (left: 4 7 18)\n7 + 4 = 11 (left: 11 18)\n11 + 18 = 29 (left: 29)\nAnswer: ((2 * 9) + (7 + 4)) = 24\nInput: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n6 * 4 = 24 (left: 24)\nAnswer: ((5 + 7) * 6) - 12 = 24\nInput: 1 2 3 4\nSteps:\n1 * 2 = 2 (left: 3 4 2)\n3 + 4 = 7 (left: 7 2)\n7 * 2 = 14 (left: 14)\n14 + 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: (((1 * 2) + (3 + 4)) + 2) + 8 = 24",
                "1 * 5 = 5 (left: 5 3 9)\n10 - 4 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)\n10 - 0 = 10 (left: 10)"
            ],
            "values": [
                20.002,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                0.003,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 7.9",
                "1 <- 7.4",
                "2 <- 9.8",
                "3 <- 7.5",
                "4 <- 9.6",
                "5 <- 9.4",
                "6 <- 9.3",
                "7 <- 8.6",
                "8 <- 7.6",
                "9 <- 5.8"
            ],
            "resampled_steps": [
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 * 2 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (3 * 8) + (6 * 2) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nInput: 2 4 7 9\nSteps:\n2 * 9 = 18 (left: 4 7 18)\n7 + 4 = 11 (left: 11 18)\n11 + 18 = 29 (left: 29)\nAnswer: ((2 * 9) + (7 + 4)) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nInput: 2 4 7 9\nSteps:\n2 * 9 = 18 (left: 4 7 18)\n7 + 4 = 11 (left: 11 18)\n11 + 18 = 29 (left: 29)\nAnswer: ((2 * 9) + (7 + 4)) = 24\nInput: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n6 * 4 = 24 (left: 24)\nAnswer: ((5 + 7) * 6) - 12 = 24\nInput: 1 2 3 4\nSteps:\n1 * 2 = 2 (left: 3 4 2)\n3 + 4 = 7 (left: 7 2)\n7 * 2 = 14 (left: 14)\n14 + 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: (((1 * 2) + (3 + 4)) + 2) + 8 = 24",
                "1 * 5 = 5 (left: 5 3 9)\n10 - 4 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nInput: 2 4 7 9\nSteps:\n2 * 9 = 18 (left: 4 7 18)\n7 + 4 = 11 (left: 11 18)\n11 + 18 = 29 (left: 29)\nAnswer: ((2 * 9) + (7 + 4)) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\nAnswer: (3 * 7) - (5 - 3) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n2 * 6 = 12 (left: 12 15)\n15 - 12 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((2 * 6) - (3 * 5)) * (3 + 3)) - 6 = 24\nInput: 3 5 7 8\nSteps:\n7 + 8 = 15 (left: 3 5 15)\n3 * 5 = 15 (left: 15 15)\n15 + 15 = 30 (left: 30)\n30 / 30 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: ((7 + 8) * (3 * 5)) / 30 = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n2 * 6 = 12 (left: 12 15)\n15 - 12 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((2 * 6) - (3 * 5)) * (3 + 3)) - 6 = 24\nInput: 2 4 6 9\nSteps:\n2 * 9 = 18 (left: 4 6 18)\n4 + 6 = 10 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 / 4 = 7 (left: 7)\n7 * 6 = 42 (left: 42)\n42 - 18 = 24 (left: 24)\nAnswer: (((2 * 9) + (4 + 6)) * (10 / 4)) - 18 = 24\nInput: 2 3 7 9\nSteps:\n7 - 3 = 4 (left: 2 4 9)\n4 * 9 = 36 (left: 2 36)\n2 * 36 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((7 - 3) * 9) / (2 * 36) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 1 2 3 8\nSteps:\n2 + 8 = 10 (left: 1 3 10)\n3 * 10 = 30 (left: 1 30)\n30 - 1 = 29 (left: 29)\n29 / 3 = 9.67 (left: 9.67)\n9.67 * 3 = 29 (left: 29)\nAnswer: ((2 + 8) * 3) - 1 = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n2 * 6 = 12 (left: 12 15)\n15 - 12 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((2 * 6) - (3 * 5)) * (3 + 3)) - 6 = 24",
                "1 * 5 = 5 (left: 5 3 9)\n10 - 4 = 6 (left: 6 6 10)"
            ]
        },
        "step_10": {
            "steps": [
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 * 2 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (3 * 8) + (6 * 2) = 24\nInput: 2 4 6 9\nSteps:\n4 * 6 = 24 (left: 2 9 24)\n2 * 9 = 18 (left: 18 24)\n18 + 24 = 42 (left: 42)\nAnswer: (4 * 6) + (2 * 9) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nInput: 2 4 7 9\nSteps:\n2 * 9 = 18 (left: 4 7 18)\n7 + 4 = 11 (left: 11 18)\n11 + 18 = 29 (left: 29)\nAnswer: ((2 * 9) + (7 + 4)) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 24 = 216 (left: 216)\nAnswer: (3 * 8) + (6 - 3) * 3 = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nInput: 2 4 7 9\nSteps:\n2 * 9 = 18 (left: 4 7 18)\n7 + 4 = 11 (left: 11 18)\n11 + 18 = 29 (left: 29)\nAnswer: ((2 * 9) + (7 + 4)) = 24\nInput: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n18 - 12 = 6 (left: 6 18)\n6 * 4 = 24 (left: 24)\nAnswer: ((5 + 7) * 6) - 12 = 24\nInput: 1 2 3 4\nSteps:\n1 * 2 = 2 (left: 3 4 2)\n3 + 4 = 7 (left: 7 2)\n7 * 2 = 14 (left: 14)\n14 + 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: (((1 * 2) + (3 + 4)) + 2) + 8 = 24\nInput: 2 4 5 6\nSteps:\n5 + 6 = 11 (left: 2 4 11)\n4 * 11 = 44 (left: 44)\n2 * 44 = 88 (left: 88)\n88 / 4 = 22 (left: 22)\nAnswer: ((2 * (5 + 6)) * 4) / 4 = 24",
                "1 * 5 = 5 (left: 5 3 9)\n10 - 4 = 6 (left: 6 6 10)\n6 - 6 = 0 (left: 0 10)\n0 * 10 = 0 (left: 0)",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) * (6 - 2) = 24\nInput: 2 4 7 9\nSteps:\n2 * 9 = 18 (left: 4 7 18)\n7 + 4 = 11 (left: 11 18)\n11 + 18 = 29 (left: 29)\nAnswer: ((2 * 9) + (7 + 4)) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\nAnswer: (3 * 7) - (5 - 3) = 24\nInput: 2 4 6 8\nSteps:\n6 - 2 = 4 (left: 4 4 8)\n4 * 8 = 32 (left: 4 32)\n4 - 4 = 0 (left: 0 32)\n0 + 32 = 32 (left: 32)\nAnswer: ((6 - 2) * 8) + (4 - 4) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n2 * 6 = 12 (left: 12 15)\n15 - 12 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((2 * 6) - (3 * 5)) * (3 + 3)) - 6 = 24\nInput: 3 5 7 8\nSteps:\n7 + 8 = 15 (left: 3 5 15)\n3 * 5 = 15 (left: 15 15)\n15 + 15 = 30 (left: 30)\n30 / 30 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: ((7 + 8) * (3 * 5)) / 30 = 24\nInput: 2 4 7 9\nSteps:\n4 * 7 = 28 (left: 2 9 28)\n9 - 2 = 7 (left: 7 28)\n7 * 28 = 196 (left: 196)\n196 / 8 = 24 (left: 24)\nAnswer: ((4 * 7) + (9 - 2)) / 8 = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n2 * 6 = 12 (left: 12 15)\n15 - 12 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((2 * 6) - (3 * 5)) * (3 + 3)) - 6 = 24\nInput: 2 4 6 9\nSteps:\n2 * 9 = 18 (left: 4 6 18)\n4 + 6 = 10 (left: 10 18)\n10 + 18 = 28 (left: 28)\n28 / 4 = 7 (left: 7)\n7 * 6 = 42 (left: 42)\n42 - 18 = 24 (left: 24)\nAnswer: (((2 * 9) + (4 + 6)) * (10 / 4)) - 18 = 24\nInput: 2 3 7 9\nSteps:\n7 - 3 = 4 (left: 2 4 9)\n4 * 9 = 36 (left: 2 36)\n2 * 36 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((7 - 3) * 9) / (2 * 36) = 24\nInput: 2 5 7 9\nSteps:\n5 * 7 = 35 (left: 2 9 35)\n9 - 2 = 7 (left: 7 35)\n35 - 7 = 28 (left: 28)\n28 / 7 = 4 (left: 4 28)\n4 * 9 = 36 (left: 36)\n36 - 35 = 1 (left: 1 36)\n1 * 24 = 24 (left: 24)\nAnswer: ((5 * 7) - (9 - 2)) * (4 - (36 - 35)) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 1 2 3 8\nSteps:\n2 + 8 = 10 (left: 1 3 10)\n3 * 10 = 30 (left: 1 30)\n30 - 1 = 29 (left: 29)\n29 / 3 = 9.67 (left: 9.67)\n9.67 * 3 = 29 (left: 29)\nAnswer: ((2 + 8) * 3) - 1 = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (3 * 8) - (6 - 2) = 24",
                "6 - 3 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 - (5 / 1)) = 24\nInput: 3 4 5 6\nSteps:\n4 + 6 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((4 + 6) * 3) - 5 = 24\nInput: 2 3 5 6\nSteps:\n3 * 5 = 15 (left: 2 6 15)\n2 * 6 = 12 (left: 12 15)\n15 - 12 = 3 (left: 3)\n3 * 3 = 9 (left: 9)\n9 * 6 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((2 * 6) - (3 * 5)) * (3 + 3)) - 6 = 24\nInput: 2 2 6 8\nSteps:\n2 + 8 = 10 (left: 2 6 10)\n2 * 6 = 12 (left: 10 12)\n12 - 10 = 2 (left: 2)\n2 * 2 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((2 + 8) * (2 * 6)) - 10 = 24",
                "1 * 5 = 5 (left: 5 3 9)\n10 - 4 = 6 (left: 6 6 10)\n10 / 6 = 1.67 (left: 1.67 6)"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                0.001
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.5115525
    },
    "909": {
        "input": "3 3 7 12",
        "step_1": {
            "steps": [
                "12 - 7 = 5 (left: 3 5 7)",
                "3 * 3 = 9 (left: 9 7 12)",
                "3 * 3 = 9 (left: 9 7 12)",
                "3 * 7 = 21 (left: 21 3 12)",
                "12 - 7 = 5 (left: 3 5 12)",
                "7 - 3 = 4 (left: 4 3 12)",
                "7 - 3 = 4 (left: 3 4 12)",
                "3 - 3 = 0 (left: 0 7 12)",
                "3 * 7 = 21 (left: 21 12)",
                "12 - 3 = 9 (left: 3 7 9)"
            ],
            "values": [
                3.0,
                3.0,
                3.0,
                21.0,
                1.002,
                60.0,
                41.0,
                1.002,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 1.5",
                "2 <- 1.5",
                "3 <- 1.5",
                "4 <- 1.6",
                "5 <- 1.3",
                "6 <- 1.5",
                "7 <- 1.6",
                "8 <- 1.6",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 3 4 12)",
                "7 - 3 = 4 (left: 4 3 12)",
                "7 - 3 = 4 (left: 4 3 12)",
                "7 - 3 = 4 (left: 4 3 12)",
                "7 - 3 = 4 (left: 3 4 12)",
                "3 * 7 = 21 (left: 21 3 12)",
                "7 - 3 = 4 (left: 4 3 12)",
                "7 - 3 = 4 (left: 3 4 12)",
                "7 - 3 = 4 (left: 3 4 12)",
                "7 - 3 = 4 (left: 3 4 12)"
            ]
        },
        "step_2": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)",
                "7 - 3 = 4 (left: 4 3 12)\n3 / 4 = 0.75 (left: 0.75 12)",
                "7 - 3 = 4 (left: 4 3 12)\n2 - 1 = 1 (left: 1 8)",
                "7 - 3 = 4 (left: 4 3 12)\n4 / 3 = 1.33 (left: 1.33 12)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 12 = 48 (left: 3 48)",
                "3 * 7 = 21 (left: 21 3 12)\n12 - 3 = 9 (left: 21 9)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)",
                "7 - 3 = 4 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 3 4 12)\n14 - 5 = 9 (left: 7 9)"
            ],
            "values": [
                1.001,
                0.002,
                60.0,
                1.002,
                20.002,
                0.002,
                20.002,
                0.003,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- INIT",
                "2 <- 2.2",
                "3 <- 1.3",
                "4 <- 2.4",
                "5 <- 1.6",
                "6 <- INIT",
                "7 <- 1.5",
                "8 <- 2.2",
                "9 <- 2.4"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "",
                "7 - 3 = 4 (left: 4 3 12)\n2 - 1 = 1 (left: 1 8)",
                "3 * 7 = 21 (left: 21 3 12)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 12 = 48 (left: 3 48)",
                "7 - 3 = 4 (left: 3 4 12)",
                "",
                "7 - 3 = 4 (left: 4 3 12)",
                "7 - 3 = 4 (left: 4 3 12)\n2 - 1 = 1 (left: 1 8)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 12 = 48 (left: 3 48)"
            ]
        },
        "step_3": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "3 + 3 = 6 (left: 6 7 12)",
                "7 - 3 = 4 (left: 4 3 12)\n2 - 1 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "3 * 7 = 21 (left: 21 3 12)\n12 - 3 = 9 (left: 9 12)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 12 = 48 (left: 3 48)\n48 / 3 = 16 (left: 16)",
                "7 - 3 = 4 (left: 3 4 12)\n5 * 5 = 25 (left: 25 20)",
                "7 / 3 = 2 (left: 2 3 12)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 4 3 12)\n2 - 1 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 12 = 48 (left: 3 48)\n3 * 48 = 144 (left: 144)"
            ],
            "values": [
                20.0,
                2.001,
                0.002,
                0.003,
                0.003,
                0.003,
                2.001,
                40.001,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 2.8",
                "2 <- 1.6",
                "3 <- 3.0",
                "4 <- 2.6",
                "5 <- 1.5",
                "6 <- 2.6",
                "7 <- 2.4",
                "8 <- 2.2",
                "9 <- 3.1"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 3 4 12)\n4 * 12 = 48 (left: 3 48)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 3 4 12)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)",
                "7 - 3 = 4 (left: 4 3 12)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 12 = 48 (left: 3 48)",
                "7 - 3 = 4 (left: 4 3 12)\n2 - 1 = 1 (left: 1 8)",
                "3 + 3 = 6 (left: 6 7 12)"
            ]
        },
        "step_4": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12)\n4 * 12 = 48 (left: 3 48)\n3 * 48 = 144 (left: 144)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "7 - 3 = 4 (left: 3 4 12)\n12 / 3 = 4 (left: 4 12)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\nThere are no possible next steps as there are no numbers provided in the input.",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)\n4 + 36 = 40 (left: 40)",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)\n4 + 36 = 40 (left: 40)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 12 = 48 (left: 3 48)\n48 - 3 = 45 (left: 45)",
                "7 - 3 = 4 (left: 4 3 12)\n2 - 1 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "3 + 3 = 6 (left: 6 7 12)\n12 / 6 = 2 (left: 7 2)"
            ],
            "values": [
                0.003,
                0.002,
                0.002,
                0.003,
                0.003,
                20.002,
                0.003,
                0.003,
                0.0,
                1.001
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 2.8",
                "2 <- 2.2",
                "3 <- 2.8",
                "4 <- 1.5",
                "5 <- 2.8",
                "6 <- 3.0",
                "7 <- 1.6",
                "8 <- 2.6",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 4 3 12)\n2 - 1 = 1 (left: 1 8)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 4 3 12)\n2 - 1 = 1 (left: 1 8)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 4 3 12)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "7 - 3 = 4 (left: 3 4 12)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)",
                "7 - 3 = 4 (left: 4 3 12)"
            ]
        },
        "step_5": {
            "steps": [
                "7 - 3 = 4 (left: 4 3 12)\n2 - 1 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "7 - 3 = 4 (left: 4 3 12)\n2 - 1 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "7 - 3 = 4 (left: 4 3 12)\nPossible next steps:",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\nThere are no possible next steps as there is no input provided.",
                "7 - 3 = 4 (left: 3 4 12)\n18 / 6 = 3 (left: 5 3)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)\n36 / 4 = 9 (left: 9)",
                "7 - 3 = 4 (left: 4 3 12)\n5 + 2 = 7 (left: 7 9 3)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.002,
                0.003,
                0.002,
                0.003,
                2.001,
                0.002,
                2.001
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 3.1",
                "2 <- 3.0",
                "3 <- 2.6",
                "4 <- 3.7",
                "5 <- 2.2",
                "6 <- 3.7",
                "7 <- 1.5",
                "8 <- 3.7",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "3 * 7 = 21 (left: 21 3 12)",
                "3 + 3 = 6 (left: 6 7 12)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 4 3 12)\n2 - 1 = 1 (left: 1 8)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 4 3 12)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 3 4 12)"
            ]
        },
        "step_6": {
            "steps": [
                "3 * 7 = 21 (left: 21 3 12)\n21 - 3 = 18 (left: 18 12)",
                "3 + 3 = 6 (left: 6 7 12)\n12 / 3 = 4 (left: 4 12)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\nThere are no possible next steps as there is no input provided.",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)\n36 - 4 = 32 (left: 4 32)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24",
                "7 - 3 = 4 (left: 4 3 12)\n2 - 1 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24",
                "7 - 3 = 4 (left: 4 3 12)\n2 * 7 = 14 (left: 5 8 14)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24",
                "7 - 3 = 4 (left: 3 4 12)\n3 + 4 = 7 (left: 7 12)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                0.003,
                3.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.7",
                "1 <- 1.3",
                "2 <- 2.6",
                "3 <- 4.5",
                "4 <- 1.5",
                "5 <- 1.1",
                "6 <- 4.5",
                "7 <- 2.6",
                "8 <- 1.6",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)",
                "3 * 7 = 21 (left: 21 3 12)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 4 3 12)",
                "3 * 3 = 9 (left: 9 7 12)",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)",
                "7 - 3 = 4 (left: 3 4 12)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)"
            ]
        },
        "step_7": {
            "steps": [
                "7 - 3 = 4 (left: 4 3 12)\n3 * 4 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "3 * 7 = 21 (left: 21 3 12)\nPossible next steps:",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)\n36 / 4 = 9 (left: 9)",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 3 12)\n5 - 3 = 2 (left: 2 10 3)",
                "3 * 3 = 9 (left: 9 7 12)\n12 / 9 = 1.3333333333333333 (left: 1.3333333333333333)",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "7 - 3 = 4 (left: 4 3 12)\n3 * 12 = 36 (left: 4 36)\n36 - 4 = 32 (left: 32)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)"
            ],
            "values": [
                60.0,
                0.003,
                0.002,
                60.0,
                60.0,
                0.0,
                0.003,
                0.003,
                40.001,
                60.0
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 7.4",
                "2 <- 7.8",
                "3 <- 7.3",
                "4 <- 7.3",
                "5 <- 7.3",
                "6 <- 7.4",
                "7 <- 7.8",
                "8 <- 7.3",
                "9 <- 7.9"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 3 4 12)",
                "7 - 3 = 4 (left: 4 3 12)\n5 - 3 = 2 (left: 2 10 3)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 - 3 = 4 (left: 4 3 12)\n5 - 3 = 2 (left: 2 10 3)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)"
            ]
        },
        "step_8": {
            "steps": [
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)",
                "7 - 3 = 4 (left: 4 3 12)\n5 - 3 = 2 (left: 2 10 3)\n10 / 2 = 5 (left: 5 3)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 3) * 3 + 12 = 24",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 3) * (3 * 12) = 24",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 3) * (3 * 12) = 24",
                "7 - 3 = 4 (left: 4 3 12)\n5 - 3 = 2 (left: 2 10 3)\n10 - 4 = 6 (left: 6 2)",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "7 - 3 = 4 (left: 4 3 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (7 - 3) * (3 * 12) = 24",
                "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((3 + 3) - 7) * 12 = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.5530360000000001
    },
    "910": {
        "input": "4 5 7 9",
        "step_1": {
            "steps": [
                "4 + 7 = 11 (left: 5 9)",
                "3 * 8 = 24 (left: 6 9)",
                "9 - 5 = 4 (left: 4 4)",
                "6 * 9 = 54 (left: 3 12 54)",
                "7 + 9 = 16 (left: 4 5 16)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "4 + 5 = 9 (left: 7 9)",
                "Possible next steps:",
                "9 - 5 = 4 (left: 4 7)",
                "5 * 7 = 35 (left: 4 9 35)"
            ],
            "values": [
                0.003,
                0.003,
                1.001,
                2.001,
                0.001,
                2.001,
                0.002,
                0.003,
                0.003,
                1.001
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "6 * 9 = 54 (left: 3 12 54)",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "6 * 9 = 54 (left: 3 12 54)\n3 * 12 = 36 (left: 36 54)",
                "4 + 5 = 9 (left: 7 9)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "5 / 7 = 0.714 (left: 4 0.714 9)",
                "4 / 5 = 0.8 (left: 0.8 7 9)",
                "4 - 5 = -1 (left: -1 7 9)",
                "4 + 5 = 9 (left: 7 9)",
                "5 * 7 = 35 (left: 4 35 9)",
                "7 * 9 = 63 (left: 4 5)",
                "9 - 5 = 4 (left: 4 4 9)"
            ],
            "values": [
                0.003,
                1.002,
                60.0,
                2.0,
                2.001,
                2.001,
                0.002,
                1.002,
                2.001,
                22.0
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 2.9",
                "2 <- INIT",
                "3 <- 2.4",
                "4 <- 2.2",
                "5 <- 2.2",
                "6 <- 2.2",
                "7 <- 1.9",
                "8 <- 2.2",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "7 - 9 = -2 (left: 4 5 -2)",
                "9 - 5 = 4 (left: 4 4 9)",
                "",
                "4 / 5 = 0.8 (left: 0.8 7 9)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "5 * 7 = 35 (left: 4 9 35)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "7 - 9 = -2 (left: 4 5 -2)"
            ]
        },
        "step_3": {
            "steps": [
                "7 - 9 = -2 (left: 4 5 -2)\n-2 - 4 = -6 (left: -6)",
                "9 - 5 = 4 (left: 4 4 9)\nInput: 7 3 5",
                "5 + 7 = 12 (left: 4 9)",
                "4 / 5 = 0.8 (left: 0.8 7 9)\n9 / 0.8 = 11.25 (left: 7 11.25)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 - 4 = 1 (left: 1 -2)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 / 5 = 0.8 (left: 0.8 -2)",
                "7 - 9 = -2 (left: 4 5 -2)\n-2 * 4 = -8 (left: -8)",
                "5 * 7 = 35 (left: 4 9 35)\n9 / 4 = 2.25 (left: 2.25 35)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -1 -2)",
                "7 - 9 = -2 (left: 4 5 -2)\n-2 + 4 = 2 (left: 4 5 2)"
            ],
            "values": [
                0.003,
                0.003,
                40.0,
                2.001,
                0.003,
                0.002,
                0.001,
                1.001,
                20.002,
                1.002
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 2.8",
                "2 <- 3.2",
                "3 <- 2.2",
                "4 <- 3.2",
                "5 <- 2.2",
                "6 <- 3.8",
                "7 <- INIT",
                "8 <- 3.2",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "7 - 9 = -2 (left: 4 5 -2)",
                "7 * 9 = 63 (left: 4 5)",
                "5 + 7 = 12 (left: 4 9)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "5 + 7 = 12 (left: 4 9)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -1 -2)",
                "",
                "5 + 7 = 12 (left: 4 9)",
                "7 - 9 = -2 (left: 4 5 -2)"
            ]
        },
        "step_4": {
            "steps": [
                "7 - 9 = -2 (left: 4 5 -2)\n5 + (-2) = 3 (left: 4 3)",
                "7 * 9 = 63 (left: 4 5)\n5 / 4 = 1.25 (left: 1.25)",
                "5 + 7 = 12 (left: 4 9)\n7 / 3 = 2.333 (left: 2.333 11)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 / 4 = 1.25 (left: -2 1.25)",
                "5 + 7 = 12 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25)",
                "7 - 9 = -2 (left: 4 5 -2)\n-2 / 4 = -0.5 (left: -0.5 5)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -1 -2)\n-1 - 2 = -3 (left: -3)",
                "4 + 7 = 11 (left: 5 9)",
                "5 + 7 = 12 (left: 4 9)\nPossible next steps:",
                "7 - 9 = -2 (left: 4 5 -2)\n-2 / 4 = -0.5 (left: -0.5)"
            ],
            "values": [
                22.0,
                0.002,
                1.001,
                2.001,
                0.003,
                0.002,
                0.001,
                0.003,
                0.003,
                1.0
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 3.8",
                "2 <- 3.2",
                "3 <- 2.2",
                "4 <- 3.2",
                "5 <- 2.2",
                "6 <- INIT",
                "7 <- 2.2",
                "8 <- INIT",
                "9 <- 3.8"
            ],
            "resampled_steps": [
                "9 - 5 = 4 (left: 4 4 9)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -1 -2)",
                "5 + 7 = 12 (left: 4 9)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "5 + 7 = 12 (left: 4 9)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "",
                "7 - 9 = -2 (left: 4 5 -2)",
                "",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -1 -2)"
            ]
        },
        "step_5": {
            "steps": [
                "9 - 5 = 4 (left: 4 4 9)\nPossible next steps:",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -1 -2)\n-2 - (-1) = -1 (left: -1)",
                "5 + 7 = 12 (left: 4 9)\n9 + 4 = 13 (left: 4)",
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)",
                "5 + 7 = 12 (left: 4 9)\n4 - 9 = -5 (left: 9)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 / 4 = 1.25 (left: -2 1.25)",
                "4 + 7 = 11 (left: 5 9)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 / 4 = 1.25 (left: -2 1.25)",
                "5 * 9 = 45 (left: 4 7)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -1 -2)\n-1 - 2 = -3 (left: -3)"
            ],
            "values": [
                0.003,
                0.0,
                0.002,
                40.0,
                0.003,
                1.001,
                0.003,
                0.003,
                0.002,
                0.0
            ],
            "resampled": [
                "0 <- 5.3",
                "1 <- 3.2",
                "2 <- 2.2",
                "3 <- 2.2",
                "4 <- 5.3",
                "5 <- 2.3",
                "6 <- 3.2",
                "7 <- 5.3",
                "8 <- 2.2",
                "9 <- 4.0"
            ],
            "resampled_steps": [
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)",
                "5 + 7 = 12 (left: 4 9)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)",
                "5 / 7 = 0.714 (left: 4 0.714 9)",
                "5 + 7 = 12 (left: 4 9)",
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 + (-2) = 3 (left: 4 3)"
            ]
        },
        "step_6": {
            "steps": [
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)\n-2 + 10 = 8 (left: 8)",
                "5 + 7 = 12 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 + 5 = 9 (left: -2 9)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 - 4 = 1 (left: 1 -2)",
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)\n-2 + 10 = 8 (left: 8)",
                "5 / 7 = 0.714 (left: 4 0.714 9)\n14 / 2 = 7 (left: 7 7)",
                "5 + 7 = 12 (left: 4 9)\nInput: 5 12",
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)\n10 - (-2) = 12 (left: 12)",
                "7 - 9 = -2 (left: 4 5 -2)\n10 - 3 = 7 (left: 7 2)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 + (-2) = 3 (left: 4 3)\n4 - 3 = 1 (left: 1)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.0",
                "1 <- 3.2",
                "2 <- 5.3",
                "3 <- 2.2",
                "4 <- 2.2",
                "5 <- 2.2",
                "6 <- 5.3",
                "7 <- 3.8",
                "8 <- 4.0",
                "9 <- 3.2"
            ],
            "resampled_steps": [
                "7 - 9 = -2 (left: 4 5 -2)\n5 + (-2) = 3 (left: 4 3)",
                "5 + 7 = 12 (left: 4 9)",
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -1 -2)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 + (-2) = 3 (left: 4 3)",
                "5 + 7 = 12 (left: 4 9)"
            ]
        },
        "step_7": {
            "steps": [
                "7 - 9 = -2 (left: 4 5 -2)\n5 + (-2) = 3 (left: 4 3)\n4 + 3 = 7 (left: 7)",
                "5 + 7 = 12 (left: 4 9)\n9 - 4 = 5 (left: 5 9)",
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)\n-2 - 10 = -12 (left: -12)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 * 5 = 20 (left: -2 20)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -2 -1)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 / 4 = 1.25 (left: -2 1.25)",
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)\n-2 * 10 = -20 (left: -20)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -1 -2)\n-2 - (-1) = -1 (left: -1)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 + (-2) = 3 (left: 4 3)\n3 - 4 = -1 (left: -1)",
                "5 + 7 = 12 (left: 4 9)\n4 * 9 = 36 (left: 36)"
            ],
            "values": [
                0.002,
                1.002,
                0.0,
                20.001,
                41.0,
                0.003,
                0.001,
                0.0,
                0.0,
                20.0
            ],
            "resampled": [
                "0 <- 7.9",
                "1 <- 2.2",
                "2 <- 3.2",
                "3 <- 5.3",
                "4 <- 7.4",
                "5 <- 2.2",
                "6 <- 4.0",
                "7 <- 7.3",
                "8 <- 5.3",
                "9 <- 1.3"
            ],
            "resampled_steps": [
                "5 + 7 = 12 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "5 + 7 = 12 (left: 4 9)",
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -2 -1)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 + (-2) = 3 (left: 4 3)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 * 5 = 20 (left: -2 20)",
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)",
                "6 * 9 = 54 (left: 3 12 54)"
            ]
        },
        "step_8": {
            "steps": [
                "5 + 7 = 12 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 / 3 = 12 (left: 12)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 + -2 = 3 (left: 4 3)",
                "5 + 7 = 12 (left: 4 9)\n5 * 7 = 35 (left: 7 35)",
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)\n-2 * 10 = -20 (left: -20)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -2 -1)\n-2 - 1 = -3 (left: -3)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 - 4 = 1 (left: 1 -2)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 + (-2) = 3 (left: 4 3)\n4 - 3 = 1 (left: 1)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 * 5 = 20 (left: -2 20)\n20 - (-2) = 22 (left: 22)",
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)\n-2 + 10 = 8 (left: 8)",
                "6 * 9 = 54 (left: 3 12 54)\n54 / 3 = 18 (left: 12 18)"
            ],
            "values": [
                0.003,
                2.001,
                0.003,
                0.003,
                0.003,
                1.0,
                0.003,
                0.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 2.9",
                "2 <- 2.9",
                "3 <- 7.4",
                "4 <- 7.3",
                "5 <- 7.4",
                "6 <- 2.9",
                "7 <- 8.5",
                "8 <- 3.8",
                "9 <- 4.0"
            ],
            "resampled_steps": [
                "7 * 9 = 63 (left: 4 5)",
                "9 - 5 = 4 (left: 4 4 9)",
                "9 - 5 = 4 (left: 4 4 9)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -2 -1)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 * 5 = 20 (left: -2 20)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -2 -1)",
                "9 - 5 = 4 (left: 4 4 9)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 - 4 = 1 (left: 1 -2)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -1 -2)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 + (-2) = 3 (left: 4 3)"
            ]
        },
        "step_9": {
            "steps": [
                "7 * 9 = 63 (left: 4 5)\n6 + 3 = 9 (left: 9)",
                "9 - 5 = 4 (left: 4 4 9)\nInput: 3 5 7",
                "9 - 5 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -2 -1)\n-2 / -1 = 2 (left: 2)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 * 5 = 20 (left: -2 20)\n-2 / 20 = -0.1 (left: -0.1)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -2 -1)\n-1 - -2 = 1 (left: 1)",
                "9 - 5 = 4 (left: 4 4 9)\n5 - 3 = 2 (left: 2 7)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 - 4 = 1 (left: 1 -2)\n1 - (-2) = 3 (left: -2 3)",
                "7 - 9 = -2 (left: 4 5 -2)\n4 - 5 = -1 (left: -1 -2)\n-1 - 2 = -3 (left: -3)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 + (-2) = 3 (left: 4 3)\n4 + 3 = 7 (left: 7)"
            ],
            "values": [
                0.001,
                0.003,
                20.002,
                0.001,
                0.0,
                0.003,
                0.003,
                22.0,
                0.0,
                0.002
            ],
            "resampled": [
                "0 <- 5.3",
                "1 <- 9.2",
                "2 <- 9.2",
                "3 <- 2.2",
                "4 <- 9.7",
                "5 <- INIT",
                "6 <- 9.2",
                "7 <- 5.3",
                "8 <- 9.7",
                "9 <- 9.2"
            ],
            "resampled_steps": [
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)",
                "9 - 5 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)",
                "9 - 5 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)",
                "7 - 9 = -2 (left: 4 5 -2)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 - 4 = 1 (left: 1 -2)\n1 - (-2) = 3 (left: -2 3)",
                "",
                "9 - 5 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)",
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 - 4 = 1 (left: 1 -2)\n1 - (-2) = 3 (left: -2 3)",
                "9 - 5 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)"
            ]
        },
        "step_10": {
            "steps": [
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)\n-2 - 10 = -12 (left: -12)",
                "9 - 5 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)\n5 - 4 = 1 (left: 1)",
                "9 - 5 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)",
                "7 - 9 = -2 (left: 4 5 -2)\n6 + 3 = 9 (left: 2 9)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 - 4 = 1 (left: 1 -2)\n1 - (-2) = 3 (left: -2 3)\n-2 * 3 = -6 (left: -6)",
                "7 + 9 = 16 (left: 4 5 16)",
                "9 - 5 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)\n4 + 5 = 9 (left: 9)",
                "7 - 9 = -2 (left: 4 5 -2)\n3 - 5 = -2 (left: -2 10)\n-2 - 10 = -12 (left: -12)",
                "7 - 9 = -2 (left: 4 5 -2)\n5 - 4 = 1 (left: 1 -2)\n1 - (-2) = 3 (left: -2 3)\n-2 * 3 = -6 (left: -6)",
                "9 - 5 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)"
            ],
            "values": [
                0.001,
                0.002,
                0.001,
                0.001,
                0.0,
                1.002,
                0.002,
                0.001,
                0.002,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.606152
    },
    "911": {
        "input": "1 2 8 13",
        "step_1": {
            "steps": [
                "13 - 1 = 12 (left: 2 8 12)",
                "13 - 2 = 11 (left: 1 8 11)",
                "1 + 2 = 3 (left: 3 8 13)",
                "13 - 1 = 12 (left: 2 8 12)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "13 - 1 = 12 (left: 2 8 12)",
                "8 - 2 = 6 (left: 1 6 13)",
                "13 - 2 = 11 (left: 1 8 11)",
                "1 * 2 = 2 (left: 2 8 13)"
            ],
            "values": [
                1.002,
                1.002,
                60.0,
                1.002,
                60.0,
                60.0,
                1.002,
                2.001,
                2.001,
                1.002
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 1.2",
                "2 <- 1.5",
                "3 <- INIT",
                "4 <- 1.2",
                "5 <- 1.4",
                "6 <- 1.4",
                "7 <- 1.4",
                "8 <- 1.5",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)"
            ]
        },
        "step_2": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 8 = 5 (left: 3 5)",
                "1 + 2 = 3 (left: 3 8 13)\n13 / 4 = 3.25 (left: 3.25 9)",
                "8 - 2 = 6 (left: 1 6 13)",
                "1 + 2 = 3 (left: 3 8 13)\n8 - 3 = 5 (left: 5 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 24 13)",
                "1 + 2 = 3 (left: 3 8 13)\n9 / 5 = 1.8 (left: 1.8 12)",
                "1 + 2 = 3 (left: 3 8 13)\n13 + 3 = 16 (left: 8 16)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n7 / 4 = 1.75 (left: 1.75 11)"
            ],
            "values": [
                20.002,
                0.002,
                1.001,
                0.003,
                0.003,
                0.003,
                0.002,
                20.002,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- 1.4",
                "3 <- 1.5",
                "4 <- 2.7",
                "5 <- 1.4",
                "6 <- 2.8",
                "7 <- 2.7",
                "8 <- 2.0",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 + 3 = 16 (left: 8 16)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 + 3 = 16 (left: 8 16)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)",
                "1 + 2 = 3 (left: 3 8 13)"
            ]
        },
        "step_3": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 8 = 5 (left: 3 5)",
                "1 + 2 = 3 (left: 3 8 13)\n13 + 3 = 16 (left: 8 16)\n8 * 16 = 128 (left: 128)",
                "1 + 2 = 3 (left: 3 8 13)\n13 / 3 = 4.33 (left: 4.33 8)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 2 = 3 (left: 3 8 13)\n13 + 3 = 16 (left: 8 16)\nInput: 24 128 8 2 24 -8 0.5",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n10 - 8 = 2 (left: 2)",
                "1 + 2 = 3 (left: 3 8 13)\n8 / 3 = 2.67 (left: 2.67 13)"
            ],
            "values": [
                60.0,
                60.0,
                2.0,
                0.002,
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 3.1",
                "2 <- 3.0",
                "3 <- 1.2",
                "4 <- 1.2",
                "5 <- 2.0",
                "6 <- 3.1",
                "7 <- 1.2",
                "8 <- 3.1",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 8 13)\n13 + 3 = 16 (left: 8 16)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13)\n13 + 3 = 16 (left: 8 16)\nInput: 24 8 128 2",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 2 = 3 (left: 3 8 13)\n4 + 5 = 9 (left: 9)",
                "1 + 2 = 3 (left: 3 8 13)\n9 - 5 = 4 (left: 4 14)",
                "1 + 2 = 3 (left: 3 8 13)\n11 / 4 = 2.75 (left: 2.75 7)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "1 + 2 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 24 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n18 - 2 = 16 (left: 16)"
            ],
            "values": [
                0.003,
                0.003,
                0.0,
                0.003,
                2.001,
                40.0,
                0.001,
                0.003,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 4.5",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- 4.5",
                "5 <- 4.5",
                "6 <- 2.8",
                "7 <- 1.4",
                "8 <- 1.4",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)"
            ]
        },
        "step_5": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13)\n8 - 3 = 5 (left: 5 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\nThere are no possible next steps with the input of 18.",
                "1 + 2 = 3 (left: 3 8 13)\n3 * 8 =24 (left: 24 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 24 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\nThere are no possible next steps with the number 18.",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\nNone - 18 is the final result.",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 2 = 3 (left: 3 8 13)\n8 - 3 = 5 (left: 5 13)",
                "1 + 2 = 3 (left: 3 8 13)\n8 - 3 = 5 (left: 5 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                0.002,
                0.002,
                0.0
            ],
            "resampled": [
                "0 <- 4.5",
                "1 <- 2.0",
                "2 <- 3.0",
                "3 <- 2.8",
                "4 <- 1.2",
                "5 <- 3.1",
                "6 <- 3.0",
                "7 <- 1.4",
                "8 <- 4.5",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)",
                "1 + 2 = 3 (left: 3 8 13)"
            ]
        },
        "step_6": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 - 8 = 10 (left: 10)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n4 + 8 = 12 (left: 12 14)",
                "1 + 2 = 3 (left: 3 8 13)\nInput: 4 7 11",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 2 = 3 (left: 3 8 13)\n4 + 6 = 10 (left: 10)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "1 + 2 = 3 (left: 3 8 13)\nInput: 6 9 15",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\nNone",
                "1 + 2 = 3 (left: 3 8 13)\n13 / 3 = 4.33333333333 (left: 4.33333333333 8)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                60.0,
                0.003,
                1.001
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 1.4",
                "2 <- 2.8",
                "3 <- 6.7",
                "4 <- 3.1",
                "5 <- 1.4",
                "6 <- 3.1",
                "7 <- 3.1",
                "8 <- 6.7",
                "9 <- 6.7"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)"
            ]
        },
        "step_7": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13)\n13 - 8 = 5 (left: 5 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13)\n8 / 3 = 2.66666666667 (left: 2.66666666667 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\nInput: 3 7"
            ],
            "values": [
                0.003,
                60.0,
                0.003,
                0.002,
                60.0,
                1.002,
                40.0,
                60.0,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 7.1",
                "2 <- 2.8",
                "3 <- 3.1",
                "4 <- 7.1",
                "5 <- 2.0",
                "6 <- 3.0",
                "7 <- 6.7",
                "8 <- 6.7",
                "9 <- 7.1"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)"
            ]
        },
        "step_8": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 24 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 / 13 = 0.846 (left: 0.846)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)",
                "1 + 2 = 3 (left: 3 8 13)\nPossible next steps:",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 / 13 \u2248 0.846 (left: 0.846)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.0,
                0.002,
                0.0,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 6.7",
                "1 <- 7.6",
                "2 <- 6.7",
                "3 <- 3.0",
                "4 <- 6.7",
                "5 <- 1.4",
                "6 <- 3.0",
                "7 <- 3.1",
                "8 <- 7.6",
                "9 <- 4.5"
            ],
            "resampled_steps": [
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)"
            ]
        },
        "step_9": {
            "steps": [
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 2) + 8) + 13 = 24",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 + 2 = 3 (left: 3 8 13)\n8 - 3 = 5 (left: 5 13)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n13 / 11 = 1.1818181818181819 (left: 1.1818181818181819)",
                "1 + 2 = 3 (left: 3 8 13)\n3 * 8 = 24 (left: 24 13)",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 + 2 = 3 (left: 3 8 13)\n3 + 8 = 11 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((1 + 2) + 8) + 13 = 24",
                "1 + 2 = 3 (left: 3 8 13)\n13 - 3 = 10 (left: 8 10)\n8 + 10 = 18 (left: 18)\n18 - 8 = 10 (left: 10)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "cost": 0.6543680000000001
    },
    "912": {
        "input": "4 6 6 9",
        "step_1": {
            "steps": [
                "9 - 6 = 3 (left: 4 3 6)",
                "6 / 4 = 1.5 (left: 1.5 6 9)",
                "9 - 6 = 3 (left: 4 6 3)",
                "6 - 4 = 2 (left: 2 6 9)",
                "9 - 6 = 3 (left: 4 6 3)",
                "5 - 3 = 2 (left: 2 5 10)",
                "9 / 4 = 2.25 (left: 2.25 6 6)",
                "4 + 6 = 10 (left: 6 6 9)",
                "9 - 6 = 3 (left: 4 6 3)",
                "6 / 4 = 1.5 (left: 1.5 6 9)"
            ],
            "values": [
                21.001,
                21.0,
                3.0,
                1.002,
                60.0,
                2.001,
                3.0,
                3.0,
                22.0,
                2.0
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.4",
                "2 <- 1.3",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 1.0",
                "8 <- 1.8",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "9 - 6 = 3 (left: 4 3 6)",
                "9 - 6 = 3 (left: 4 6 3)",
                "6 - 4 = 2 (left: 2 6 9)",
                "",
                "",
                "",
                "",
                "9 - 6 = 3 (left: 4 3 6)",
                "9 - 6 = 3 (left: 4 6 3)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "9 - 6 = 3 (left: 4 3 6)\n3 + 6 = 9 (left: 4 9)",
                "9 - 6 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 4 3)",
                "6 - 4 = 2 (left: 2 6 9)\n9 - 2 = 7 (left: 6 7)",
                "9 - 4 = 5 (left: 6 6 5)",
                "9 - 6 = 3 (left: 4 3 6)",
                "11 - 3 = 8 (left: 8 7 7)",
                "6 - 4 = 2 (left: 2 6 9)",
                "9 - 6 = 3 (left: 4 3 6)\n3 * 6 = 18 (left: 4 18)",
                "9 - 6 = 3 (left: 4 6 3)\n4 + 6 = 10 (left: 3 10)",
                "6 - 4 = 2 (left: 2 6 9)"
            ],
            "values": [
                20.002,
                2.001,
                0.003,
                3.0,
                2.0,
                3.0,
                2.001,
                0.003,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.1",
                "2 <- 2.4",
                "3 <- 1.4",
                "4 <- 1.8",
                "5 <- 1.4",
                "6 <- 1.8",
                "7 <- 1.1",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "4 + 6 = 10 (left: 6 6 9)",
                "6 / 4 = 1.5 (left: 1.5 6 9)",
                "9 - 6 = 3 (left: 4 3 6)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 6 3)",
                "6 / 4 = 1.5 (left: 1.5 6 9)",
                "",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)",
                "6 / 4 = 1.5 (left: 1.5 6 9)\n6 - 1.5 = 4.5 (left: 4.5 9)",
                "9 - 6 = 3 (left: 4 3 6)\n4 / 3 = 1.33 (left: 1.33 6)",
                "9 - 6 = 3 (left: 4 6 3)\n5 + 7 = 12 (left: 2 9 12)",
                "9 - 6 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)",
                "9 - 6 = 3 (left: 4 6 3)\n4 + 6 = 10 (left: 3 10)",
                "9 - 6 = 3 (left: 4 6 3)\n4 + 2 = 6 (left: 10 6)",
                "6 / 4 = 1.5 (left: 1.5 6 9)\n9 / 1.5 = 6 (left: 6 9)",
                "4 + 6 = 10 (left: 6 6 9)",
                "9 - 4 = 5 (left: 6 6 5)"
            ],
            "values": [
                60.0,
                0.003,
                0.003,
                3.0,
                20.001,
                0.003,
                0.003,
                0.003,
                2.001,
                2.001
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 1.4",
                "2 <- 3.0",
                "3 <- 3.0",
                "4 <- 3.0",
                "5 <- 3.3",
                "6 <- INIT",
                "7 <- 3.3",
                "8 <- 2.0",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "9 - 6 = 3 (left: 4 3 6)\n3 + 6 = 9 (left: 4 9)",
                "9 - 6 = 3 (left: 4 6 3)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)",
                "9 - 6 = 3 (left: 4 6 3)\n5 + 7 = 12 (left: 2 9 12)",
                "",
                "9 - 6 = 3 (left: 4 6 3)\n5 + 7 = 12 (left: 2 9 12)",
                "9 - 6 = 3 (left: 4 3 6)\n3 + 6 = 9 (left: 4 9)",
                "9 - 6 = 3 (left: 4 3 6)"
            ]
        },
        "step_4": {
            "steps": [
                "9 - 6 = 3 (left: 4 3 6)\n3 + 6 = 9 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25 9)",
                "9 - 6 = 3 (left: 4 6 3)\n9 * 2 = 18 (left: 5 18)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 / 9 = 4 (left: 4)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 / 9 = 4 (left: 4)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 / 9 = 4 (left: 4)",
                "9 - 6 = 3 (left: 4 6 3)\n5 + 7 = 12 (left: 2 9 12)\n9 + 2 = 11 (left: 11 12)",
                "6 - 4 = 2 (left: 2 6 9)",
                "9 - 6 = 3 (left: 4 6 3)\n5 + 7 = 12 (left: 2 9 12)\n9 - 2 = 7 (left: 7 12)",
                "9 - 6 = 3 (left: 4 3 6)\n3 + 6 = 9 (left: 4 9)\n4 + 9 = 13 (left: 9)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)"
            ],
            "values": [
                3.0,
                1.002,
                0.002,
                0.0,
                0.002,
                0.003,
                2.0,
                1.001,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 4.9",
                "1 <- 4.9",
                "2 <- INIT",
                "3 <- 4.9",
                "4 <- 1.4",
                "5 <- 4.9",
                "6 <- 1.4",
                "7 <- 4.9",
                "8 <- 4.9",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "9 - 6 = 3 (left: 4 6 3)"
            ]
        },
        "step_5": {
            "steps": [
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n1 + 6 = 7",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "6 / 4 = 1.5 (left: 1.5 6 9)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "9 - 6 = 3 (left: 4 6 3)\nInput: 9 2 5",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "9 - 6 = 3 (left: 4 6 3)\n6 - 4 = 2 (left: 2 3)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "9 - 6 = 3 (left: 4 6 3)\n4 + 6 = 10 (left: 3 10)"
            ],
            "values": [
                0.003,
                0.003,
                3.0,
                0.002,
                0.003,
                0.001,
                0.002,
                0.002,
                0.001,
                0.001
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 4.9",
                "2 <- 4.9",
                "3 <- 1.8",
                "4 <- 2.0",
                "5 <- 1.4",
                "6 <- 4.1",
                "7 <- 3.0",
                "8 <- 1.8",
                "9 <- 2.5"
            ],
            "resampled_steps": [
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 3 6)\n3 + 6 = 9 (left: 4 9)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 6 3)\n9 * 2 = 18 (left: 5 18)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)",
                "9 - 6 = 3 (left: 4 6 3)",
                "11 - 3 = 8 (left: 8 7 7)"
            ]
        },
        "step_6": {
            "steps": [
                "9 - 6 = 3 (left: 4 6 3)\n6 - 3 = 3 (left: 3)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "9 - 6 = 3 (left: 4 6 3)\n6 / 4 = 1.5 (left: 1.5 3)",
                "9 - 6 = 3 (left: 4 3 6)\n3 + 6 = 9 (left: 4 9)\n9 - 4 = 5 (left: 5 9)",
                "9 - 6 = 3 (left: 4 6 3)\n5 + 9 = 14 (left: 2 7 14)",
                "9 - 6 = 3 (left: 4 6 3)\n9 * 2 = 18 (left: 5 18)\n18 * 5 = 90 (left: 90)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "9 - 6 = 3 (left: 4 6 3)\n5 / 1 = 5 (left: 5 3)",
                "11 - 3 = 8 (left: 8 7 7)\n7 / 8 = 0.875 (left: 0.875)"
            ],
            "values": [
                0.0,
                0.003,
                0.002,
                0.001,
                0.003,
                1.002,
                0.003,
                60.0,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 6.7",
                "1 <- 6.7",
                "2 <- 6.7",
                "3 <- 6.7",
                "4 <- 3.0",
                "5 <- 6.7",
                "6 <- 6.7",
                "7 <- 2.5",
                "8 <- 4.9",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "11 - 3 = 8 (left: 8 7 7)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "9 - 6 = 3 (left: 4 6 3)"
            ]
        },
        "step_7": {
            "steps": [
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\n27 * 3 = 81 (left: 81)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\n27 * 2 = 54",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\n27 + 2 = 29",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\n27 + 2 = 29",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\nThere are no possible next steps with just one number provided.",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\nThere are no possible next steps with the number 27 given.",
                "11 - 3 = 8 (left: 8 7 7)\n7 + 7 = 14 (left: 8 14)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "9 - 6 = 3 (left: 4 6 3)\n2 * 3 = 6 (left: 5 6 3)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                20.002,
                0.003,
                0.003,
                1.002,
                0.001,
                1.002
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.4",
                "2 <- 7.4",
                "3 <- 1.3",
                "4 <- 6.7",
                "5 <- 6.7",
                "6 <- 3.0",
                "7 <- 3.0",
                "8 <- 7.4",
                "9 <- 6.7"
            ],
            "resampled_steps": [
                "9 - 6 = 3 (left: 4 3 6)",
                "9 - 6 = 3 (left: 4 6 3)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "6 - 4 = 2 (left: 2 6 9)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)"
            ]
        },
        "step_8": {
            "steps": [
                "9 - 6 = 3 (left: 4 3 6)\n10 + 15 = 25 (left: 5 25)",
                "9 - 6 = 3 (left: 4 6 3)\n5 / 3 = 1.6666666666666667 (left: 1.6666666666666667 7)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\n27 - 8 = 19 (left: 8)",
                "6 - 4 = 2 (left: 2 6 9)\n5 / 3 = 1 (left: 1 7)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\n27 - 2 = 25 (left: 2)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\n27 - 2 = 25 (left: 2)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 * 9 = 324 (left: 324)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n9 + 36 = 45 (left: 45)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\n27 + 2 = 29",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\n27 + 2 = 29"
            ],
            "values": [
                0.001,
                1.0,
                0.003,
                40.0,
                0.001,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 6.7",
                "1 <- 4.9",
                "2 <- 6.7",
                "3 <- 3.0",
                "4 <- 6.7",
                "5 <- 3.0",
                "6 <- 8.3",
                "7 <- INIT",
                "8 <- 1.4",
                "9 <- 6.7"
            ],
            "resampled_steps": [
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)",
                "6 - 4 = 2 (left: 2 6 9)\n5 / 3 = 1 (left: 1 7)",
                "",
                "9 - 6 = 3 (left: 4 6 3)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)"
            ]
        },
        "step_9": {
            "steps": [
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\n27 * 8 = 216 (left: 8) ",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\nThere are no possible next steps with only one number provided.",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n9 - 36 = -27 (left: -27)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\nThere are no possible next steps with just the number 27.",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "6 - 4 = 2 (left: 2 6 9)\n5 / 3 = 1 (left: 1 7)\n1 * 7 = 7 (left: 7)",
                "4 + 6 = 10 (left: 6 6 9)",
                "9 - 6 = 3 (left: 4 6 3)\n4 / 3 = 1.33 (left: 1.33)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\n27 - 2 = 25 (left: 25)"
            ],
            "values": [
                0.002,
                0.001,
                0.003,
                0.002,
                0.003,
                20.001,
                0.0,
                3.0,
                0.003,
                20.0
            ],
            "resampled": [
                "0 <- 6.7",
                "1 <- 8.3",
                "2 <- 4.9",
                "3 <- 4.9",
                "4 <- 9.9",
                "5 <- 1.4",
                "6 <- 8.1",
                "7 <- 3.3",
                "8 <- 6.7",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "6 - 4 = 2 (left: 2 6 9)\n5 / 3 = 1 (left: 1 7)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\n27 - 2 = 25 (left: 25)",
                "9 - 6 = 3 (left: 4 6 3)",
                "9 - 6 = 3 (left: 4 6 3)\n5 / 3 = 1.6666666666666667 (left: 1.6666666666666667 7)",
                "9 - 6 = 3 (left: 4 6 3)\n5 + 7 = 12 (left: 2 9 12)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)"
            ]
        },
        "step_10": {
            "steps": [
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\n27 + 2 = 29",
                "6 - 4 = 2 (left: 2 6 9)\n5 / 3 = 1 (left: 1 7)\n7 - 1 = 6 (left: 6)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "9 - 6 = 3 (left: 4 3 6)\n4 - 3 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\n27 - 2 = 25 (left: 25)\n25 + 25 = 50",
                "9 - 6 = 3 (left: 4 6 3)\nPossible next steps:",
                "9 - 6 = 3 (left: 4 6 3)\n5 / 3 = 1.6666666666666667 (left: 1.6666666666666667 7)\n0.5 / 0.2 = 2.5 (left: 2.5)",
                "9 - 6 = 3 (left: 4 6 3)\n5 + 7 = 12 (left: 2 9 12)\nInput: 3 5 7 8",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 - 9 = 27 (left: 27)\n27 / 27 = 1 (left: )",
                "4 + 6 = 10 (left: 6 6 9)\n6 * 6 = 36 (left: 36 9)\n36 * 9 = 324 (left: 324)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.0,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.7073925
    },
    "913": {
        "input": "1 4 4 8",
        "step_1": {
            "steps": [
                "4 + 1 = 5 (left: 4 5 8)",
                "4 / 1 = 4 (left: 4 4 8)",
                "4 * 1 = 4 (left: 4 4 8)",
                "1 + 4 = 5 (left: 4 5 8)",
                "8 - 4 = 4 (left: 1 4 4)",
                "4 - 1 = 3 (left: 3 4 8)",
                "1 + 4 = 5 (left: 4 5 8)",
                "4 * 1 = 4 (left: 4 4 8)",
                "4 + 1 = 5 (left: 4 5 8)",
                "8 - 4 = 4 (left: 1 4 4)"
            ],
            "values": [
                2.001,
                22.0,
                3.0,
                3.0,
                0.001,
                0.003,
                3.0,
                41.0,
                3.0,
                21.001
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.7",
                "2 <- INIT",
                "3 <- 1.7",
                "4 <- 1.7",
                "5 <- 1.1",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 1.1",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "4 * 1 = 4 (left: 4 4 8)",
                "4 * 1 = 4 (left: 4 4 8)",
                "",
                "4 * 1 = 4 (left: 4 4 8)",
                "4 * 1 = 4 (left: 4 4 8)",
                "4 / 1 = 4 (left: 4 4 8)",
                "",
                "",
                "4 / 1 = 4 (left: 4 4 8)",
                "4 * 1 = 4 (left: 4 4 8)"
            ]
        },
        "step_2": {
            "steps": [
                "4 * 1 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 8 8)",
                "4 * 1 = 4 (left: 4 4 8)\nPossible next steps:",
                "8 - 4 = 4 (left: 1 4 4)",
                "4 * 1 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 8 8)",
                "4 * 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 7)",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 4 2)",
                "8 - 4 = 4 (left: 1 4 4)",
                "4 + 4 = 8 (left: 4 8 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "4 * 1 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 8)"
            ],
            "values": [
                0.003,
                0.003,
                3.0,
                0.003,
                0.003,
                21.001,
                20.002,
                41.0,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 2.8",
                "2 <- 2.8",
                "3 <- 1.7",
                "4 <- 2.7",
                "5 <- 2.7",
                "6 <- 2.6",
                "7 <- INIT",
                "8 <- 2.5",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "4 * 1 = 4 (left: 4 4 8)",
                "4 + 4 = 8 (left: 4 8 8)",
                "4 + 4 = 8 (left: 4 8 8)",
                "8 - 4 = 4 (left: 1 4 4)",
                "",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 4 2)",
                "4 / 1 = 4 (left: 4 4 8)"
            ]
        },
        "step_3": {
            "steps": [
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n8 / 1 = 8 (left: 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "4 * 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 4 2)",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)",
                "4 + 4 = 8 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)",
                "8 - 4 = 4 (left: 1 4 4)\n4 / 1 = 4 (left: 4 4)",
                "4 * 1 = 4 (left: 4 4 8)",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 4 2)\n4 * 2 = 8 (left: 8)",
                "4 / 1 = 4 (left: 4 4 8)\n3 * 5 = 15 (left: 15 7)"
            ],
            "values": [
                0.002,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.002,
                3.0,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.7",
                "2 <- 2.7",
                "3 <- 2.8",
                "4 <- 2.6",
                "5 <- 2.6",
                "6 <- INIT",
                "7 <- 2.8",
                "8 <- 2.2",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "4 * 1 = 4 (left: 4 4 8)",
                "4 * 1 = 4 (left: 4 4 8)",
                "4 + 4 = 8 (left: 4 8 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "8 - 4 = 4 (left: 1 4 4)",
                "8 - 4 = 4 (left: 1 4 4)",
                "",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "8 - 4 = 4 (left: 1 4 4)",
                "4 + 4 = 8 (left: 4 8 8)"
            ]
        },
        "step_4": {
            "steps": [
                "4 * 1 = 4 (left: 4 4 8)\n4 - 4 = 0 (left: 0 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 + 8 = 9",
                "8 - 4 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 4 4)",
                "8 - 4 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 1 3 4)",
                "4 / 1 = 4 (left: 4 4 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "8 - 4 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)",
                "4 + 4 = 8 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)"
            ],
            "values": [
                1.002,
                20.002,
                60.0,
                0.003,
                0.003,
                2.001,
                41.0,
                0.001,
                21.001,
                2.001
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- INIT",
                "2 <- 4.1",
                "3 <- 2.8",
                "4 <- 1.9",
                "5 <- 1.9",
                "6 <- 2.5",
                "7 <- 2.5",
                "8 <- 3.7",
                "9 <- 4.2"
            ],
            "resampled_steps": [
                "4 * 1 = 4 (left: 4 4 8)",
                "",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "8 - 4 = 4 (left: 1 4 4)",
                "8 - 4 = 4 (left: 1 4 4)",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 4 2)",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 4 2)",
                "4 * 1 = 4 (left: 4 4 8)",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)"
            ]
        },
        "step_5": {
            "steps": [
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "8 - 4 = 4 (left: 1 4 4)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 - 8 = 8 (left: 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "8 - 4 = 4 (left: 1 4 4)\n4 / 1 = 4 (left: 4 4)",
                "8 - 4 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 3 4)",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 4 2)\n4 / 2 = 2 (left: 2)",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 4 2)\n4 - 2 = 2 (left: 2)",
                "4 * 1 = 4 (left: 4 4 8)\n3 + 5 = 8 (left: 1 8 7)",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)"
            ],
            "values": [
                60.0,
                20.002,
                0.002,
                0.002,
                0.003,
                3.0,
                0.003,
                0.002,
                1.002,
                0.001
            ],
            "resampled": [
                "0 <- 4.6",
                "1 <- 4.2",
                "2 <- 1.1",
                "3 <- 5.0",
                "4 <- 4.6",
                "5 <- 4.6",
                "6 <- 5.0",
                "7 <- 1.7",
                "8 <- 1.9",
                "9 <- 5.0"
            ],
            "resampled_steps": [
                "4 / 1 = 4 (left: 4 4 8)",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)",
                "4 / 1 = 4 (left: 4 4 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "4 / 1 = 4 (left: 4 4 8)",
                "4 / 1 = 4 (left: 4 4 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "4 * 1 = 4 (left: 4 4 8)",
                "8 - 4 = 4 (left: 1 4 4)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)"
            ]
        },
        "step_6": {
            "steps": [
                "4 / 1 = 4 (left: 4 4 8)\nPossible next steps:",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "4 / 1 = 4 (left: 4 4 8)\nInput: 3 3 9",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "4 / 1 = 4 (left: 4 4 8)\n3 + 6 = 9 (left: 9 9 12)",
                "4 / 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "4 * 1 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 8)",
                "8 - 4 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 3 4 4)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 + 8 = 9 (left: 8 9)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                0.003,
                1.002,
                1.002,
                0.002,
                0.001,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 6.8",
                "1 <- 4.5",
                "2 <- 4.2",
                "3 <- 1.9",
                "4 <- 5.1",
                "5 <- 2.7",
                "6 <- 5.0",
                "7 <- 4.6",
                "8 <- 2.8",
                "9 <- 4.6"
            ],
            "resampled_steps": [
                "8 - 4 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 3 4 4)",
                "8 - 4 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 1 3 4)",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)",
                "8 - 4 = 4 (left: 1 4 4)",
                "8 - 4 = 4 (left: 1 4 4)",
                "4 + 4 = 8 (left: 4 8 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "4 / 1 = 4 (left: 4 4 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "4 / 1 = 4 (left: 4 4 8)"
            ]
        },
        "step_7": {
            "steps": [
                "8 - 4 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 3 4 4)\n4 / 3 = 1.33 (left: 1.33 4)",
                "8 - 4 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 1 3 4)\n4 / 1 = 4 (left: 4 4)",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "8 - 4 = 4 (left: 1 4 4)\n4 / 1 = 4 (left: 4 4)",
                "8 - 4 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)",
                "4 + 4 = 8 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 * 8 = 8 (left: 8)",
                "4 / 1 = 4 (left: 4 4 8)\nInput: 10 5 2",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n8 - 1 = 7 (left: 7)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)"
            ],
            "values": [
                1.0,
                0.002,
                60.0,
                0.003,
                40.001,
                3.0,
                0.003,
                0.003,
                0.002,
                40.001
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 4.8",
                "2 <- 2.8",
                "3 <- 7.4",
                "4 <- 7.2",
                "5 <- 2.8",
                "6 <- 5.5",
                "7 <- 7.9",
                "8 <- 1.7",
                "9 <- 7.2"
            ],
            "resampled_steps": [
                "8 - 4 = 4 (left: 1 4 4)",
                "8 - 4 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "8 - 4 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "8 - 4 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 3 4)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "4 * 1 = 4 (left: 4 4 8)",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ]
        },
        "step_8": {
            "steps": [
                "8 - 4 = 4 (left: 1 4 4)\n4 / 1 = 4 (left: 4 4)",
                "8 - 4 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 - 5 = -1 (left: -1)",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "8 - 4 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 + 4) * (8 - 4) = 24",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 + 8 = 9 (left: 8)",
                "8 - 4 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 3 4)\n10 + 5 = 15 (left: 15)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)",
                "4 * 1 = 4 (left: 4 4 8)\nPossible next steps:",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 + 4) * (8 - 4) = 24"
            ],
            "values": [
                2.001,
                0.0,
                0.003,
                0.003,
                60.0,
                0.001,
                0.003,
                21.001,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 7.2",
                "1 <- 2.6",
                "2 <- 5.0",
                "3 <- 5.0",
                "4 <- 1.2",
                "5 <- 7.4",
                "6 <- 2.8",
                "7 <- 1.1",
                "8 <- 8.4",
                "9 <- 8.4"
            ],
            "resampled_steps": [
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "8 - 4 = 4 (left: 1 4 4)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "4 * 1 = 4 (left: 4 4 8)",
                "8 - 4 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)",
                "4 / 1 = 4 (left: 4 4 8)",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 + 4) * (8 - 4) = 24",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 + 4) * (8 - 4) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 + 4) * (4 * 6) = 24",
                "8 - 4 = 4 (left: 1 4 4)\n5 / 5 = 1 (left: 1 9)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n8 / 1 = 8 (left: 8 8)",
                "4 * 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n8 / 1 = 8 (left: 8)",
                "4 * 1 = 4 (left: 4 4 8)\n7 - 1 = 6 (left: 3 5 6)",
                "8 - 4 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n10 - 2 = 8 (left: 8 3)",
                "4 / 1 = 4 (left: 4 4 8)\n4 / 4 = 1 (left: 1 8)\n1 + 8 = 9 (left: 9)",
                "4 / 1 = 4 (left: 4 4 8)\nPossible next steps:",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 + 4) * (8 - 4) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\nAnswer: (3 * 7) - (5 + 3) = 24",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 + 4) * (8 - 4) = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 - 3 = 4 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((3 + 4) * 5) + 4 = 24"
            ],
            "values": [
                0.003,
                60.0,
                0.003,
                0.002,
                2.001,
                60.0,
                0.003,
                0.003,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 4.8",
                "1 <- 8.9",
                "2 <- 4.2",
                "3 <- 4.1",
                "4 <- 8.7",
                "5 <- 7.2",
                "6 <- 7.2",
                "7 <- 9.5",
                "8 <- 9.1",
                "9 <- 9.1"
            ],
            "resampled_steps": [
                "8 - 4 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 + 4) * (8 - 4) = 24",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "8 - 4 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n10 - 2 = 8 (left: 8 3)",
                "8 - 4 = 4 (left: 1 4 4)\n5 / 5 = 1 (left: 1 9)",
                "8 - 4 = 4 (left: 1 4 4)\n5 / 5 = 1 (left: 1 9)"
            ]
        },
        "step_10": {
            "steps": [
                "8 - 4 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n10 * 2 = 20 (left: 20)",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 + 4) * (8 - 4) = 24\nInput: 3 3 4 6\nSteps:\n3 + 4 = 7 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (3 + 4) * 6 = 24",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n12 + 4 = 16 (left: 16 2)",
                "4 * 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 * 8 = 128 (left: 8 128)",
                "4 / 1 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 16 8)\n16 + 8 = 24 (left: 8 24)\n8 * 3 = 24 (left: 24)",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 + 4) * (8 - 8) = 24",
                "4 + 4 = 8 (left: 4 8 8)\n6 - 2 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 + 4) * (4 * 6) = 24",
                "8 - 4 = 4 (left: 1 4 4)\n1 + 4 = 5 (left: 4 5)\n10 - 2 = 8 (left: 8 3)\n8 - 3 = 5 (left: 5)",
                "8 - 4 = 4 (left: 1 4 4)\n5 / 5 = 1 (left: 1 9)\n9 / 1 = 9 (left: 9)",
                "8 - 4 = 4 (left: 1 4 4)\n5 / 5 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8)"
            ],
            "values": [
                0.001,
                40.0,
                0.003,
                60.0,
                60.0,
                0.003,
                0.003,
                0.002,
                0.002,
                0.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.7595445000000001
    },
    "914": {
        "input": "1 5 10 11",
        "step_1": {
            "steps": [
                "5 * 1 = 5 (left: 5 10 11)",
                "5 * 1 = 5 (left: 5 10 11)",
                "5 * 10 = 50 (left: 1 50 11)",
                "5 * 1 = 5 (left: 5 10 11)",
                "10 + 1 = 11 (left: 5 10 11)",
                "10 + 1 = 11 (left: 5 11 11)",
                "5 * 10 = 50 (left: 1 50 11)",
                "10 / 1 = 10 (left: 5 10 11)",
                "1 * 5 = 5 (left: 5 10 11)",
                "1 * 5 = 5 (left: 5 10 11)"
            ],
            "values": [
                2.001,
                1.001,
                21.001,
                3.0,
                2.001,
                1.002,
                1.001,
                3.0,
                2.001,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.7",
                "3 <- 1.2",
                "4 <- INIT",
                "5 <- 1.3",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 1.2",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "10 / 1 = 10 (left: 5 10 11)",
                "5 * 10 = 50 (left: 1 50 11)",
                "",
                "5 * 1 = 5 (left: 5 10 11)",
                "",
                "",
                "5 * 10 = 50 (left: 1 50 11)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "11 - 1 = 10 (left: 5 10 10)",
                "11 - 5 = 6 (left: 1 6 10)",
                "10 / 1 = 10 (left: 5 10 11)\n8 - 3 = 5 (left: 5 8 13)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)",
                "10 - 1 = 9 (left: 9 10 11)",
                "5 * 1 = 5 (left: 5 10 11)\n10 - 5 = 5 (left: 5 11)",
                "11 - 1 = 10 (left: 5 10 10)",
                "1 * 5 = 5 (left: 5 10 11)",
                "5 * 10 = 50 (left: 1 50 11)\n1 + 50 = 51 (left: 11 51)",
                "7 + 4 = 11 (left: 10 11 15)"
            ],
            "values": [
                2.001,
                3.0,
                3.0,
                20.002,
                1.002,
                1.002,
                20.002,
                3.0,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 2.6",
                "2 <- INIT",
                "3 <- 2.6",
                "4 <- INIT",
                "5 <- 2.3",
                "6 <- INIT",
                "7 <- 2.6",
                "8 <- 1.2",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)",
                "11 - 1 = 10 (left: 5 10 10)",
                "",
                "11 - 1 = 10 (left: 5 10 10)",
                "",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)",
                "",
                "11 - 1 = 10 (left: 5 10 10)",
                "5 * 10 = 50 (left: 1 50 11)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)"
            ]
        },
        "step_3": {
            "steps": [
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n9 - 3 = 6 (left: 3 6 8)",
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10 10)",
                "11 - 1 = 10 (left: 5 10 11)",
                "11 - 1 = 10 (left: 5 10 10)\n5 * 10 = 50 (left: 10 50)",
                "1 + 5 = 6 (left: 6 10 11)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 - 27 = 54 (left: 27 54)",
                "11 - 5 = 6 (left: 1 6 10)",
                "11 - 1 = 10 (left: 5 10 10)\n5 + 10 = 15 (left: 10 15)",
                "5 * 10 = 50 (left: 1 50 11)\n11 + 1 = 12 (left: 50 12)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)"
            ],
            "values": [
                3.0,
                2.001,
                3.0,
                20.0,
                2.001,
                40.001,
                1.002,
                0.003,
                1.0,
                40.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 3.9",
                "2 <- 2.3",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 3.9",
                "6 <- 3.9",
                "7 <- 3.5",
                "8 <- 3.9",
                "9 <- 2.4"
            ],
            "resampled_steps": [
                "",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)",
                "",
                "",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 - 27 = 54 (left: 27 54)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)",
                "10 - 1 = 9 (left: 9 10 11)"
            ]
        },
        "step_4": {
            "steps": [
                "11 / 5 = 2.2 (left: 1 2.2 10)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n27 + 81 = 108 (left: 108 108)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)",
                "6 + 9 = 15 (left: 3 15 12)",
                "3 + 6 = 9 (left: 9 12)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n27 + 81 = 108 (left: 108)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\nInput: 4 5 20",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 - 27 = 54 (left: 27 54)\n27 + 54 = 81 (left: 81)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n3 * 6 = 18 (left: 18 18)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)"
            ],
            "values": [
                2.0,
                0.003,
                60.0,
                1.001,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- INIT",
                "2 <- 3.5",
                "3 <- 4.2",
                "4 <- 4.2",
                "5 <- 3.9",
                "6 <- 4.9",
                "7 <- 4.9",
                "8 <- 4.2",
                "9 <- 2.5"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 5 10 10)",
                "",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 - 27 = 54 (left: 27 54)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)",
                "5 * 1 = 5 (left: 5 10 11)\n10 - 5 = 5 (left: 5 11)"
            ]
        },
        "step_5": {
            "steps": [
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)",
                "1 * 5 = 5 (left: 5 10 11)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 - 27 = 54 (left: 27 54)\n27 - 54 = -27 (left: -27)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)\n729 * 81 = 59049 (left: 59049)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)\n729 - 81 = 648 (left: 648)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n81 - 27 = 54 (left: 54 108)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\nInput: 4 7 28",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n5 + 5 = 10 (left: 10 25)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)\n729 / 81 = 9 (left: 9)",
                "5 * 1 = 5 (left: 5 10 11)\n10 - 5 = 5 (left: 5 11)\n3 * 9 = 27 (left: 27)"
            ],
            "values": [
                21.0,
                3.0,
                0.0,
                0.001,
                0.003,
                20.002,
                0.003,
                0.003,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 3.9",
                "2 <- 3.5",
                "3 <- 3.9",
                "4 <- 4.9",
                "5 <- 5.0",
                "6 <- 4.9",
                "7 <- 4.2",
                "8 <- 3.9",
                "9 <- 3.2"
            ],
            "resampled_steps": [
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 - 27 = 54 (left: 27 54)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)",
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)",
                "11 - 1 = 10 (left: 5 10 11)"
            ]
        },
        "step_6": {
            "steps": [
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 3 = 81 (left: 27 81)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n81 - 27 = 54 (left: 54 108)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 - 27 = 54 (left: 27 54)\n27 + 54 = 81 (left: 81)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n108 / 27 = 4 (left: 4 108)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n9 - 3 = 6 (left: 3 6 27)",
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)\n3 * 9 = 27 (left: 27 27)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n3 + 6 = 9 (left: 9)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)\n729 + 81 = 810 (left: 810)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n27 * 3 = 81 (left: 81 81 108)",
                "11 - 1 = 10 (left: 5 10 11)\n3 * 9 = 27 (left: 2 7 27)"
            ],
            "values": [
                0.003,
                40.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                0.003,
                1.002,
                2.001
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 6.1",
                "2 <- 4.2",
                "3 <- 3.9",
                "4 <- 4.9",
                "5 <- 5.0",
                "6 <- 2.3",
                "7 <- 3.1",
                "8 <- 4.2",
                "9 <- 5.1"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n81 - 27 = 54 (left: 54 108)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)",
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)",
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10 10)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)",
                "1 * 5 = 5 (left: 5 10 11)"
            ]
        },
        "step_7": {
            "steps": [
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n81 - 27 = 54 (left: 54 108)\n108 - 54 = 54 (left: 54)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)\n729 + 81 = 810 (left: 810)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n27 * 4 = 108 (left: 81 108)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n6 + 18 = 24 (left: 3 24)",
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 / 27 = 1 (left: 1 81)",
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10 10)\n5 + 10 = 15 (left: 10 15)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)\n81 * 729 = 59049 (left: 59049)",
                "1 * 5 = 5 (left: 5 10 11)\n10 / 5 = 2 (left: 2 11)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.003,
                20.002,
                0.003,
                0.003,
                0.003,
                20.001,
                1.001
            ],
            "resampled": [
                "0 <- 7.4",
                "1 <- 7.4",
                "2 <- 2.6",
                "3 <- 1.2",
                "4 <- 6.1",
                "5 <- 2.1",
                "6 <- 5.5",
                "7 <- 2.1",
                "8 <- 5.0",
                "9 <- 4.2"
            ],
            "resampled_steps": [
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n6 + 18 = 24 (left: 3 24)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n6 + 18 = 24 (left: 3 24)",
                "11 - 1 = 10 (left: 5 10 10)",
                "5 * 10 = 50 (left: 1 50 11)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n81 - 27 = 54 (left: 54 108)",
                "11 - 5 = 6 (left: 1 6 10)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n81 - 27 = 54 (left: 54 108)",
                "11 - 5 = 6 (left: 1 6 10)",
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)"
            ]
        },
        "step_8": {
            "steps": [
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n6 + 18 = 24 (left: 3 24)\n3 * 24 = 72 (left: 72)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n6 + 18 = 24 (left: 3 24)\n24 / 3 = 8 (left: 8)",
                "11 - 1 = 10 (left: 5 10 10)\n10 / 5 = 2 (left: 2 10 10)",
                "5 * 10 = 50 (left: 1 50 11)\n11 + 1 = 12 (left: 12 50)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n81 - 27 = 54 (left: 54 108)\n5 * 10 = 50 (left: 50 20)",
                "11 - 5 = 6 (left: 1 6 10)\n3 * 9 = 27 (left: 15 15 27)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n81 - 27 = 54 (left: 54 108)\n54 + 108 = 162 (left: 162)",
                "11 - 5 = 6 (left: 1 6 10)\n10 - 6 = 4 (left: 1 4)",
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)\n9 - 6 = 3 (left: 3 9)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)\n729 / 81 = 9 (left: 9)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.002,
                21.0,
                1.002,
                0.003,
                60.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 4.9",
                "2 <- 5.0",
                "3 <- 5.0",
                "4 <- 4.9",
                "5 <- 3.5",
                "6 <- 8.4",
                "7 <- 3.5",
                "8 <- 4.9",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)",
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)",
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 - 27 = 54 (left: 27 54)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n81 - 27 = 54 (left: 54 108)\n5 * 10 = 50 (left: 50 20)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 - 27 = 54 (left: 27 54)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)"
            ]
        },
        "step_9": {
            "steps": [
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)\n729 / 81 = 9 (left: 9 81)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n5 + 5 = 10 (left: 10 25)",
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)\n27 - 9 = 18 (left: 3 18 27)",
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)\n10 - 5 = 5 (left: 5)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n25 / 5 = 5 (left: 5 5)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 - 27 = 54 (left: 27 54)\n54 / 27 = 2 (left: 2)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n81 - 27 = 54 (left: 54 108)\n5 * 10 = 50 (left: 50 20)\n50 + 20 = 70 (left: 70)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 - 27 = 54 (left: 27 54)\n10 + 5 = 15 (left: 15)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n5 * 5 = 25 (left: 25 25)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n30 * 10 = 300 (left: 300)"
            ],
            "values": [
                0.003,
                1.002,
                21.001,
                0.002,
                0.002,
                0.003,
                0.003,
                0.002,
                40.001,
                0.003
            ],
            "resampled": [
                "0 <- 7.4",
                "1 <- 9.8",
                "2 <- 9.8",
                "3 <- 8.7",
                "4 <- 9.8",
                "5 <- 5.0",
                "6 <- 3.3",
                "7 <- 3.9",
                "8 <- 7.8",
                "9 <- 3.9"
            ],
            "resampled_steps": [
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n6 + 18 = 24 (left: 3 24)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n5 * 5 = 25 (left: 25 25)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n5 * 5 = 25 (left: 25 25)",
                "11 - 5 = 6 (left: 1 6 10)\n10 - 6 = 4 (left: 1 4)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n5 * 5 = 25 (left: 25 25)",
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)",
                "11 - 1 = 10 (left: 5 10 10)\n5 * 10 = 50 (left: 10 50)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)\n81 * 729 = 59049 (left: 59049)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)"
            ]
        },
        "step_10": {
            "steps": [
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n6 + 18 = 24 (left: 3 24)\n24 / 3 = 8 (left: 8 24)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n5 * 5 = 25 (left: 25 25)\n25 + 25 = 50",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n5 * 5 = 25 (left: 25 25)\n25 + 25 = 50 (left: 50)",
                "11 - 5 = 6 (left: 1 6 10)\n10 - 6 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "10 - 1 = 9 (left: 9 10 11)\n5 * 5 = 25 (left: 5 5 25)\n5 * 5 = 25 (left: 25 25)\n25 * 25 = 625 (left: 625)",
                "11 - 1 = 10 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)\n10 - 5 = 5 (left: 5 10)",
                "11 - 1 = 10 (left: 5 10 10)\n5 * 10 = 50 (left: 10 50)\n50 - 10 = 40 (left: 40)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n108 - 27 = 81 (left: 81 108)",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n27 * 27 = 729 (left: 729 81)\n81 * 729 = 59049 (left: 59049)\n59049 * 2 = 118098",
                "5 * 10 = 50 (left: 1 50 11)\n3 * 9 = 27 (left: 27 27 81)\n81 + 27 = 108 (left: 27 81 108)\n81 * 3 = 243 (left: 27 108 243)"
            ],
            "values": [
                20.001,
                0.003,
                0.002,
                0.002,
                0.002,
                0.002,
                0.002,
                0.003,
                0.003,
                21.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.818041
    },
    "915": {
        "input": "3 4 6 11",
        "step_1": {
            "steps": [
                "6 + 3 = 9 (left: 4 9 11)",
                "3 + 4 = 7 (left: 1 2 7)",
                "6 + 4 = 10 (left: 3 10 11)",
                "6 - 3 = 3 (left: 4 3 11)",
                "6 + 3 = 9 (left: 4 9 11)",
                "5 + 5 = 10 (left: 10 10 20)",
                "1 * 5 = 5 (left: 5 9 10)",
                "3 * 11 = 33 (left: 4 6 33)",
                "11 - 4 = 7 (left: 3 6 7)",
                "6 + 11 = 17 (left: 3 4 17)"
            ],
            "values": [
                60.0,
                1.002,
                2.001,
                3.0,
                60.0,
                0.003,
                40.0,
                22.0,
                60.0,
                2.001
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- INIT",
                "2 <- 1.4",
                "3 <- 1.8",
                "4 <- 1.8",
                "5 <- 1.2",
                "6 <- 1.6",
                "7 <- 1.0",
                "8 <- 1.8",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "6 + 3 = 9 (left: 4 9 11)",
                "",
                "6 + 3 = 9 (left: 4 9 11)",
                "11 - 4 = 7 (left: 3 6 7)",
                "11 - 4 = 7 (left: 3 6 7)",
                "6 + 4 = 10 (left: 3 10 11)",
                "1 * 5 = 5 (left: 5 9 10)",
                "6 + 3 = 9 (left: 4 9 11)",
                "11 - 4 = 7 (left: 3 6 7)",
                "11 - 4 = 7 (left: 3 6 7)"
            ]
        },
        "step_2": {
            "steps": [
                "6 + 3 = 9 (left: 4 9 11)\n11 - 9 = 2 (left: 4 2)",
                "3 + 4 = 7 (left: 6 7 11)",
                "6 + 3 = 9 (left: 4 9 11)\n4 * 9 = 36 (left: 36 11)",
                "11 - 4 = 7 (left: 3 6 7)\n9 - 5 = 4 (left: 4 10)",
                "11 - 4 = 7 (left: 3 6 7)\n10 - 5 = 5 (left: 4 5 9)",
                "6 + 4 = 10 (left: 3 10 11)\n10 / 3 = 3.33 (left: 3.33 11)",
                "1 * 5 = 5 (left: 5 9 10)\n3 + 7 = 10 (left: 11 17)",
                "6 + 3 = 9 (left: 4 9 11)\n11 - 9 = 2 (left: 4 2)",
                "11 - 4 = 7 (left: 3 6 7)\n7 / 3 = 2 (left: 2 7)",
                "11 - 4 = 7 (left: 3 6 7)\n7 / 3 = 2.3333333333333335 (left: 2.3333333333333335)"
            ],
            "values": [
                0.002,
                41.0,
                0.003,
                0.003,
                3.0,
                0.003,
                0.003,
                0.001,
                0.0,
                0.001
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- INIT",
                "2 <- 1.8",
                "3 <- 1.6",
                "4 <- INIT",
                "5 <- 1.8",
                "6 <- 1.4",
                "7 <- 1.6",
                "8 <- 1.4",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "1 * 5 = 5 (left: 5 9 10)",
                "",
                "11 - 4 = 7 (left: 3 6 7)",
                "1 * 5 = 5 (left: 5 9 10)",
                "",
                "11 - 4 = 7 (left: 3 6 7)",
                "6 + 3 = 9 (left: 4 9 11)",
                "1 * 5 = 5 (left: 5 9 10)",
                "6 + 3 = 9 (left: 4 9 11)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "1 * 5 = 5 (left: 5 9 10)\n10 / 9 = 1.11111111111 (left: 1.11111111111 10)",
                "6 + 4 = 10 (left: 3 10 11)",
                "11 - 4 = 7 (left: 3 6 7)\n6 - 3 = 3 (left: 3 7)",
                "1 * 5 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "11 - 4 = 7 (left: 3 6 7)",
                "11 - 4 = 7 (left: 3 6 7)\n6 / 3 = 2 (left: 2 7)",
                "6 + 3 = 9 (left: 4 9 11)\n5 + 7 = 12 (left: 3 12 9)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)",
                "6 + 3 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)",
                "3 + 4 = 7 (left: 6 7 11)"
            ],
            "values": [
                2.0,
                1.002,
                20.0,
                60.0,
                41.0,
                0.001,
                2.001,
                60.0,
                0.002,
                1.002
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- INIT",
                "2 <- 3.4",
                "3 <- INIT",
                "4 <- 3.3",
                "5 <- 3.6",
                "6 <- INIT",
                "7 <- 1.7",
                "8 <- 1.8",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "6 + 3 = 9 (left: 4 9 11)",
                "",
                "11 - 4 = 7 (left: 3 6 7)",
                "",
                "1 * 5 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "6 + 3 = 9 (left: 4 9 11)\n5 + 7 = 12 (left: 3 12 9)",
                "",
                "3 * 11 = 33 (left: 4 6 33)",
                "11 - 4 = 7 (left: 3 6 7)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)"
            ]
        },
        "step_4": {
            "steps": [
                "6 + 3 = 9 (left: 4 9 11)\n6 + 2 = 8 (left: 8 12)",
                "6 + 3 = 9 (left: 4 9 11)",
                "11 - 4 = 7 (left: 3 6 7)\n7 - 3 = 4 (left: 4 7)",
                "4 * 6 = 24 (left: 3 11 24)",
                "1 * 5 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n1.8 * 10 = 18 (left: 18)",
                "6 + 3 = 9 (left: 4 9 11)\n5 + 7 = 12 (left: 3 12 9)\n3 * 4 = 12 (left: 4 12 9)",
                "4 + 6 = 10 (left: 3 10 11)",
                "3 * 11 = 33 (left: 4 6 33)\n6 * 4 = 24 (left: 24 33)",
                "11 - 4 = 7 (left: 3 6 7)\n6 / 4 = 1.5 (left: 1.5 7)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)"
            ],
            "values": [
                1.002,
                3.0,
                0.003,
                3.0,
                20.001,
                2.001,
                1.002,
                0.002,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 2.1",
                "2 <- 1.0",
                "3 <- 1.8",
                "4 <- INIT",
                "5 <- 2.1",
                "6 <- 1.0",
                "7 <- 1.0",
                "8 <- 3.4",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "11 - 4 = 7 (left: 3 6 7)",
                "3 + 4 = 7 (left: 6 7 11)",
                "6 + 3 = 9 (left: 4 9 11)",
                "11 - 4 = 7 (left: 3 6 7)",
                "",
                "3 + 4 = 7 (left: 6 7 11)",
                "6 + 3 = 9 (left: 4 9 11)",
                "6 + 3 = 9 (left: 4 9 11)",
                "11 - 4 = 7 (left: 3 6 7)",
                "1 * 5 = 5 (left: 5 9 10)"
            ]
        },
        "step_5": {
            "steps": [
                "11 - 4 = 7 (left: 3 6 7)\n3 * 6 = 18 (left: 7 18)",
                "3 + 4 = 7 (left: 6 7 11)\nInput: 4 5 9",
                "6 + 3 = 9 (left: 4 9 11)\n9 - 4 = 5 (left: 5 11)",
                "11 - 4 = 7 (left: 3 6 7)\n6 + 7 = 13 (left: 3 13)",
                "3 + 4 = 7 (left: 6 7 11)",
                "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 11 13)",
                "6 + 3 = 9 (left: 4 9 11)\n11 / 4 = 2.75 (left: 2.75)",
                "6 + 3 = 9 (left: 4 9 11)\n3 * 6 = 18 (left: 12 15 18)",
                "11 - 4 = 7 (left: 3 6 7)\n3 * 6 = 18 (left: 7 18)",
                "1 * 5 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)"
            ],
            "values": [
                0.002,
                0.003,
                0.002,
                0.003,
                22.0,
                60.0,
                0.003,
                1.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.1",
                "1 <- 5.4",
                "2 <- 3.7",
                "3 <- 1.6",
                "4 <- 1.4",
                "5 <- 3.7",
                "6 <- 3.4",
                "7 <- 1.6",
                "8 <- 3.2",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "6 + 3 = 9 (left: 4 9 11)",
                "3 + 4 = 7 (left: 6 7 11)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)",
                "1 * 5 = 5 (left: 5 9 10)",
                "6 + 3 = 9 (left: 4 9 11)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)",
                "11 - 4 = 7 (left: 3 6 7)",
                "1 * 5 = 5 (left: 5 9 10)",
                "11 - 4 = 7 (left: 3 6 7)\n6 - 3 = 3 (left: 3 7)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)"
            ]
        },
        "step_6": {
            "steps": [
                "6 + 3 = 9 (left: 4 9 11)\n9 / 3 = 3 (left: 5 7 3)",
                "3 + 4 = 7 (left: 6 7 11)\n7 * 11 = 77 (left: 6 77)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "1 * 5 = 5 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)",
                "6 + 3 = 9 (left: 4 9 11)\n11 - 9 = 2 (left: 4 2)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "11 - 4 = 7 (left: 3 6 7)\n2 * 3 = 6 (left: 1 6 4)",
                "1 * 5 = 5 (left: 5 9 10)\n10 / 5 = 2 (left: 2 9)",
                "11 - 4 = 7 (left: 3 6 7)\n6 - 3 = 3 (left: 3 7)\n3 * 7 = 21 (left: 21)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140)"
            ],
            "values": [
                3.0,
                0.002,
                60.0,
                1.0,
                20.002,
                0.003,
                60.0,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 6.6",
                "1 <- 6.2",
                "2 <- 5.4",
                "3 <- 6.2",
                "4 <- 3.3",
                "5 <- 1.4",
                "6 <- 5.5",
                "7 <- 3.7",
                "8 <- 3.3",
                "9 <- 5.5"
            ],
            "resampled_steps": [
                "11 - 4 = 7 (left: 3 6 7)\n2 * 3 = 6 (left: 1 6 4)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "3 + 4 = 7 (left: 6 7 11)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "1 * 5 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "6 + 3 = 9 (left: 4 9 11)",
                "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 11 13)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)",
                "1 * 5 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 11 13)"
            ]
        },
        "step_7": {
            "steps": [
                "11 - 4 = 7 (left: 3 6 7)\n2 * 3 = 6 (left: 1 6 4)\n4 / 1 = 4 (left: 4 6)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + 11 = 24",
                "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 11 13)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + 11 = 24",
                "1 * 5 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n10 / 1.8 = 5.555555555555555 (left: 5.555555555555555)",
                "6 + 3 = 9 (left: 4 9 11)\nInput: 3 6 10",
                "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)",
                "1 * 5 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n1.8 / 10 = 0.18 (left: 0.18)",
                "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 11 13)\n11 - 13 = -2 (left: -2)"
            ],
            "values": [
                40.0,
                60.0,
                60.0,
                60.0,
                0.0,
                0.003,
                0.003,
                0.001,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 7.1",
                "1 <- 1.0",
                "2 <- 7.1",
                "3 <- 7.0",
                "4 <- 7.3",
                "5 <- 1.4",
                "6 <- 1.8",
                "7 <- 1.4",
                "8 <- 7.2",
                "9 <- 5.5"
            ],
            "resampled_steps": [
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + 11 = 24",
                "6 + 3 = 9 (left: 4 9 11)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + 11 = 24",
                "11 - 4 = 7 (left: 3 6 7)\n2 * 3 = 6 (left: 1 6 4)\n4 / 1 = 4 (left: 4 6)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + 11 = 24",
                "6 + 3 = 9 (left: 4 9 11)",
                "11 - 4 = 7 (left: 3 6 7)",
                "6 + 3 = 9 (left: 4 9 11)",
                "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 11 13)",
                "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 11 13)"
            ]
        },
        "step_8": {
            "steps": [
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + 11 = 24\nInput: 3 4 6 11\nSteps:\n3 * 4 = 12 (left: 6 11 12)\n11 - 6 = 5 (left: 5 12)\n5 * 12 = 60 (left: 60)\n60 / 2.5 = 24 (left: 24)\nAnswer: ((3 * 4) * (11 - 6)) / 2.5 = 24",
                "6 + 3 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + 11 = 24\nInput: 3 5 6 7\nSteps:\n3 * 7 = 21 (left: 5 6 21)\n5 + 6 = 11 (left: 11 21)\n11 + 21 = 32 (left: 32)\nAnswer: (3 * 7) + (5 + 6) = 24",
                "11 - 4 = 7 (left: 3 6 7)\n2 * 3 = 6 (left: 1 6 4)\n4 / 1 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + 11 = 24\nInput: 3 4 6 8\nSteps:\n3 * 8 = 24 (left: 4 6 24)\n6 - 4 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (6 - 4) = 24",
                "6 + 3 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)",
                "11 - 4 = 7 (left: 3 6 7)\n6 + 7 = 13 (left: 3 13)",
                "6 + 3 = 9 (left: 4 9 11)\n11 - 4 = 7 (left: 9 7)",
                "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                0.002,
                60.0,
                60.0,
                0.003,
                0.003,
                60.0,
                40.0
            ],
            "resampled": [
                "0 <- 8.4",
                "1 <- 8.1",
                "2 <- 8.5",
                "3 <- 7.1",
                "4 <- 1.0",
                "5 <- 7.2",
                "6 <- 8.2",
                "7 <- 8.8",
                "8 <- 8.8",
                "9 <- 8.4"
            ],
            "resampled_steps": [
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + 11 = 24\nInput: 3 4 6 8\nSteps:\n3 * 8 = 24 (left: 4 6 24)\n6 - 4 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (6 - 4) = 24",
                "6 + 3 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)",
                "6 + 3 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + 11 = 24",
                "6 + 3 = 9 (left: 4 9 11)",
                "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 11 13)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + 11 = 24\nInput: 3 5 6 7\nSteps:\n3 * 7 = 21 (left: 5 6 21)\n5 + 6 = 11 (left: 11 21)\n11 + 21 = 32 (left: 32)\nAnswer: (3 * 7) + (5 + 6) = 24",
                "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + 11 = 24\nInput: 3 4 6 8\nSteps:\n3 * 8 = 24 (left: 4 6 24)\n6 - 4 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (6 - 4) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + 11 = 24\nInput: 3 4 6 8\nSteps:\n3 * 8 = 24 (left: 4 6 24)\n6 - 4 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (6 - 4) = 24\nInput: 5 7 8 9\nSteps:\n8 - 7 = 1 (left: 5 1 9)\n5 * 1 = 5 (left: 5 9)\n5 * 9 = 45 (left: 45)\n45 - 21 = 24 (left: 24)\nAnswer: (5 * (8 - 7)) * (9 - 5) = 24",
                "6 + 3 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\n13 - 11 = 2 (left: 2)",
                "6 + 3 = 9 (left: 4 9 11)\n4 + 9 = 13 (left: 13 11)\nPossible next steps:",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + 11 = 24\nInput: 3 4 6 11\nSteps:\n3 * 4 = 12 (left: 6 11 12)\n6 + 11 = 17 (left: 17 12)\n17 - 12 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 * 4) + 6) + 11 = 24",
                "6 + 3 = 9 (left: 4 9 11)\nInput: 3 6 9 12",
                "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + 11 = 24\nInput: 3 5 6 7\nSteps:\n3 * 7 = 21 (left: 5 6 21)\n5 + 6 = 11 (left: 11 21)\n11 + 21 = 32 (left: 32)\nAnswer: (3 * 7) + (5 + 6) = 24\nInput: 2 3 5 7\nSteps:\n5 + 7 = 12 (left: 2 3 12)\n3 * 12 = 36 (left: 2 36)\n36 / 2 = 18 (left: 18)\n18 - 3 = 15 (left: 15)\n15 - 2 = 13 (left: 13)\n13 + 7 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 2 = 25 (left: 25)\n25 - 5 = 20 (left: 20)\n20 + 12 = 32 (left: 32)\n32 - 15 = 17 (left: 17)\n17 + 23 = 40 (left: 40)\n40 - 13 = 27 (left: 27)\n27 - 20 = 7 (left: 7)\n7 * 5 = 35 (left: 35)\n35 - 2 = 33 (left: 33)\n33 - 3 = 30 (left: 30)\n30 + 7 = 37 (left: 37)\n37 - 12 = 25 (left: 25)\n25 + 15 = 40 (left: 40)\n40 - 17 = 23 (left: 23)\n23 + 27 = 50 (left: 50)\n50 - 35 = 15 (left: 15)\n15 + 33 = 48 (left: 48)\n48 - 30 = 18 (left: 18)\n18 + 25 = 43 (left: 43)\n43 - 40 = 3 (left: 3)\n3 + 50 = 53 (left: 53)\n53 - 23 = 30 (left: 30)\n30 + 15 = 45 (left: 45)\n45 - 48 = -3 (left: -3)\n-3 + 18 = 15 (left: 15)\n15 + 30 = 45 (left: 45)\n45 + 3 = 48 (left: 48)\n48 - 53 = -5 (left: -5)\n-5 + 45 = 40 (left: 40)\n40 + 15 = 55 (left: 55)\n55 - 48 = 7 (left: 7)\n7 - 30 = -23 (left: -23)\n-23 + 3 = -20 (left: -20)\n-20 + 45 = 25 (left: 25)\n25 + 40 = 65 (left: 65)\n65 - 55 = 10 (left: 10)\n10 - 7 = 3 (left: 3)\n3 + 20 = 23 (left: 23)\n23 + 25 = 48 (left: 48)\n48 - 65 = -17 (left: -17)\n-17 + 40 = 23 (left: 23)\n23 + 3 = 26 (left: 26)\n26 + 10 = 36 (left: 36)\n36 - 23 = 13 (left: 13)\n13 + 17 = 30 (left: 30)\n30 - 48 = -18 (left: -18)\n-18 + 36 = 18 (left: 18)\n18 + 23 = 41 (left: 41)\n41 + 13 = 54 (left: 54)\n54 - 30 = 24 (left: 24)\nAnswer: ((2 * 3) + 5) * 7 = 24",
                "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: ((3 + 4) + 6) + 11 = 24",
                "3 + 4 = 7 (left: 6 7 11)\n6 + 7 = 13 (left: 11 13)\n11 + 13 = 24 (left: 24)\nAnswer: (3 + 4) * (6 + 11) = 24",
                "1 * 5 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((3 * 4) + 6) + 11 = 24\nInput: 3 4 6 8\nSteps:\n3 * 8 = 24 (left: 4 6 24)\n6 - 4 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (3 * 8) - (6 - 4) = 24\nInput: 2 4 6 12\nSteps:\n2 * 12 = 24 (left: 4 6 24)\n6 - 4 = 2 (left: 2 24)\n2 * 24 = 48 (left: 48)\nAnswer: (2 * 12) - (6 - 4) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.8745250000000001
    },
    "916": {
        "input": "2 4 8 9",
        "step_1": {
            "steps": [
                "4 * 2 = 8 (left: 8 8 9)",
                "2 + 4 = 6 (left: 6 8 9)",
                "2 + 4 = 6 (left: 6 8 9)",
                "3 * 5 = 15 (left: 15 7 10)",
                "9 - 2 = 7 (left: 2 8 7)",
                "9 - 4 = 5 (left: 2 5 9)",
                "5 + 3 = 8 (left: 8 7 9)",
                "8 / 2 = 4 (left: 4 4 9)",
                "4 * 2 = 8 (left: 8 8 9)",
                "9 - 4 = 5 (left: 2 5 9)"
            ],
            "values": [
                1.002,
                3.0,
                2.001,
                3.0,
                1.002,
                1.002,
                3.0,
                22.0,
                2.001,
                1.001
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- INIT",
                "2 <- 1.3",
                "3 <- INIT",
                "4 <- 1.6",
                "5 <- INIT",
                "6 <- 1.1",
                "7 <- 1.7",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "4 * 2 = 8 (left: 8 8 9)",
                "",
                "3 * 5 = 15 (left: 15 7 10)",
                "",
                "5 + 3 = 8 (left: 8 7 9)",
                "",
                "2 + 4 = 6 (left: 6 8 9)",
                "8 / 2 = 4 (left: 4 4 9)",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "4 * 2 = 8 (left: 8 8 9)\n9 - 8 = 1 (left: 1)",
                "8 - 4 = 4 (left: 2 4 9)",
                "3 * 5 = 15 (left: 15 7 10)\n7 + 10 = 17 (left: 15 17)",
                "9 - 8 = 1 (left: 2 4 1)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)",
                "7 - 3 = 4 (left: 3 5 9)",
                "2 + 4 = 6 (left: 6 8 9)\n6 * 8 = 48 (left: 9 48)",
                "8 / 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 16 9)",
                "2 * 8 = 16 (left: 4 8 9)",
                "2 + 4 = 6 (left: 6 8 9)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                1.002,
                20.002,
                41.0,
                20.002,
                0.003,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 2.5",
                "2 <- 2.5",
                "3 <- 2.4",
                "4 <- 1.2",
                "5 <- 2.5",
                "6 <- 2.4",
                "7 <- 2.4",
                "8 <- 2.5",
                "9 <- 2.5"
            ],
            "resampled_steps": [
                "8 / 2 = 4 (left: 4 4 9)",
                "7 - 3 = 4 (left: 3 5 9)",
                "7 - 3 = 4 (left: 3 5 9)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)",
                "2 + 4 = 6 (left: 6 8 9)",
                "7 - 3 = 4 (left: 3 5 9)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)",
                "7 - 3 = 4 (left: 3 5 9)",
                "7 - 3 = 4 (left: 3 5 9)"
            ]
        },
        "step_3": {
            "steps": [
                "8 / 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)",
                "7 - 3 = 4 (left: 3 5 9)\n5 * 9 = 45 (left: 3 45)",
                "7 - 3 = 4 (left: 3 5 9)\n2 / 6 = 0.3333 (left: 0.3333 6)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 - 15 = -6 (left: -6)",
                "2 + 4 = 6 (left: 6 8 9)\n8 / 6 = 1.33 (left: 1.33 9)",
                "7 - 3 = 4 (left: 3 5 9)\nPossible next steps:",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 / 15 = 0.6 (left: 0.6)",
                "7 - 3 = 4 (left: 3 5 9)\n7 + 8 = 15 (left: 4 15 8)",
                "7 - 3 = 4 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)"
            ],
            "values": [
                0.003,
                0.003,
                3.0,
                0.002,
                2.0,
                0.003,
                60.0,
                0.001,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.5",
                "1 <- 2.5",
                "2 <- 3.6",
                "3 <- 3.6",
                "4 <- 3.6",
                "5 <- 2.4",
                "6 <- 2.5",
                "7 <- 2.4",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "7 - 3 = 4 (left: 3 5 9)",
                "7 - 3 = 4 (left: 3 5 9)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)",
                "7 - 3 = 4 (left: 3 5 9)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)",
                "",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "7 - 3 = 4 (left: 3 5 9)\n4 * 6 = 24 (left: 24 10 12)",
                "7 - 3 = 4 (left: 3 5 9)\n5 * 9 = 45 (left: 3 45)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (2 + 4) * (8 + 9) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 / 15 = 0.6 (left: 0.6)",
                "7 - 3 = 4 (left: 3 5 9)\n2 * 10 = 20 (left: 4 6 20)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6)",
                "7 - 3 = 4 (left: 4 5 9)",
                "8 + 2 = 10 (left: 4 10 9)"
            ],
            "values": [
                2.001,
                20.002,
                0.003,
                60.0,
                60.0,
                0.002,
                60.0,
                0.003,
                3.0,
                1.002
            ],
            "resampled": [
                "0 <- 3.6",
                "1 <- INIT",
                "2 <- 4.6",
                "3 <- 4.3",
                "4 <- 1.3",
                "5 <- 2.4",
                "6 <- 4.4",
                "7 <- 2.6",
                "8 <- 4.3",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)",
                "",
                "7 - 3 = 4 (left: 3 5 9)\n2 * 10 = 20 (left: 4 6 20)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24",
                "3 * 5 = 15 (left: 15 7 10)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24",
                "2 + 4 = 6 (left: 6 8 9)\n6 * 8 = 48 (left: 9 48)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24"
            ]
        },
        "step_5": {
            "steps": [
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24",
                "4 * 2 = 8 (left: 8 8 9)",
                "7 - 3 = 4 (left: 3 5 9)\n2 * 10 = 20 (left: 4 6 20)\n4 * 6 = 24 (left: 24 20)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * 3) * (6 + 8) = 24",
                "3 * 5 = 15 (left: 15 7 10)\n15 + 7 = 22 (left: 10 22)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 / 15 = 0.6 (left: 0.6)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 9\nSteps:\n6 + 9 = 15 (left: 3 7 15)\n3 * 7 = 21 (left: 21 15)\n21 - 15 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 7) - 15) * 4 = 24",
                "2 + 4 = 6 (left: 6 8 9)\n6 * 8 = 48 (left: 9 48)\n48 + 9 = 57 (left: 57)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24"
            ],
            "values": [
                60.0,
                3.0,
                20.002,
                60.0,
                0.003,
                0.002,
                60.0,
                0.002,
                60.0,
                40.0
            ],
            "resampled": [
                "0 <- 5.9",
                "1 <- 5.9",
                "2 <- 4.6",
                "3 <- 4.6",
                "4 <- 4.3",
                "5 <- 4.3",
                "6 <- 4.6",
                "7 <- 1.2",
                "8 <- 5.0",
                "9 <- 5.9"
            ],
            "resampled_steps": [
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24",
                "7 - 3 = 4 (left: 3 5 9)\n2 * 10 = 20 (left: 4 6 20)",
                "7 - 3 = 4 (left: 3 5 9)\n2 * 10 = 20 (left: 4 6 20)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24",
                "7 - 3 = 4 (left: 3 5 9)\n2 * 10 = 20 (left: 4 6 20)",
                "2 + 4 = 6 (left: 6 8 9)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24"
            ]
        },
        "step_6": {
            "steps": [
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24\nInput: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\nAnswer: (3 + 3) * 6 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24\nInput: 1 3 5 7\nSteps:\n3 + 7 = 10 (left: 1 5 10)\n5 * 10 = 50 (left: 1 50)\n1 * 50 = 50 (left: 50)\nAnswer: 1 * (3 + 5 * 7) = 24",
                "7 - 3 = 4 (left: 3 5 9)\n2 * 10 = 20 (left: 4 6 20)\n4 + 6 = 10 (left: 10 20)",
                "7 - 3 = 4 (left: 3 5 9)\n2 * 10 = 20 (left: 4 6 20)\n20 / 4 = 5 (left: 5 20)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 2 3 4 5\nSteps:\n3 * 5 = 15 (left: 2 4 15)\n4 + 15 = 19 (left: 2 19)\n2 * 19 = 38 (left: 38)\nAnswer: (2 * (3 * 5)) + 4 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 3 6 7\nSteps:\n3 + 7 = 10 (left: 3 6 10)\n6 - 3 = 3 (left: 3 10)\n3 * 10 = 30 (left: 30)\n30 / 6 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((3 + 7) * (6 - 3)) / 6) * (5 - 1) = 24",
                "7 - 3 = 4 (left: 3 5 9)\n2 * 10 = 20 (left: 4 6 20)\n20 / 6 = 3.33 (left: 4 3.33)",
                "2 + 4 = 6 (left: 6 8 9)\n6 + 8 = 14 (left: 14 9)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 3 4 7\n\n7 - 3 = 4 (left: 3 4 4)\n4 * 4 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\nAnswer: (3 * (7 - 3)) * 4 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (3 * 8) + (2 * 6) = 24"
            ],
            "values": [
                60.0,
                60.0,
                0.003,
                20.001,
                60.0,
                40.0,
                3.0,
                0.003,
                60.0,
                40.0
            ],
            "resampled": [
                "0 <- 6.8",
                "1 <- 5.8",
                "2 <- 6.4",
                "3 <- 6.3",
                "4 <- 6.9",
                "5 <- 5.8",
                "6 <- 4.3",
                "7 <- 5.2",
                "8 <- 5.0",
                "9 <- 6.1"
            ],
            "resampled_steps": [
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 3 4 7\n\n7 - 3 = 4 (left: 3 4 4)\n4 * 4 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\nAnswer: (3 * (7 - 3)) * 4 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 2 3 4 5\nSteps:\n3 * 5 = 15 (left: 2 4 15)\n4 + 15 = 19 (left: 2 19)\n2 * 19 = 38 (left: 38)\nAnswer: (2 * (3 * 5)) + 4 = 24",
                "7 - 3 = 4 (left: 3 5 9)\n2 * 10 = 20 (left: 4 6 20)\n20 / 4 = 5 (left: 5 20)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (3 * 8) + (2 * 6) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24",
                "7 - 3 = 4 (left: 3 5 9)\n2 * 10 = 20 (left: 4 6 20)\n4 * 6 = 24 (left: 24 20)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24\nInput: 1 3 5 7\nSteps:\n3 + 7 = 10 (left: 1 5 10)\n5 * 10 = 50 (left: 1 50)\n1 * 50 = 50 (left: 50)\nAnswer: 1 * (3 + 5 * 7) = 24"
            ]
        },
        "step_7": {
            "steps": [
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 3 4 7\n\n7 - 3 = 4 (left: 3 4 4)\n4 * 4 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\nAnswer: (3 * (7 - 3)) * 4 = 24\nInput: 6 6 2 4\nSteps:\n6 * 4 = 24 (left: 6 2 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (6 * 4) * (6 - 2) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24\nInput: 1 3 4 7\nSteps:\n3 + 7 = 10 (left: 1 4 10)\n4 * 10 = 40 (left: 1 40)\n40 / 4 = 10 (left: 1 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: (((1 + (3 + 7)) * 4) / 4) * 2 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 2 3 4 5\nSteps:\n3 * 5 = 15 (left: 2 4 15)\n4 + 15 = 19 (left: 2 19)\n2 * 19 = 38 (left: 38)\nAnswer: (2 * (3 * 5)) + 4 = 24\nInput: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n7 - 3 = 4 (left: 4 14)\n4 * 14 = 56 (left: 56)\nAnswer: (3 + (6 + 8)) * 7 = 24",
                "7 - 3 = 4 (left: 3 5 9)\n2 * 10 = 20 (left: 4 6 20)\n20 / 4 = 5 (left: 5 20)\nInput: 3 9 27",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (3 * 8) + (2 * 6) = 24\nInput: 1 3 6 8\nSteps:\n3 * 8 = 24 (left: 1 6 24)\n1 * 6 = 6 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (1 * 6) * (3 * 8) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24\nInput: 1 3 4 9\nSteps:\n3 + 9 = 12 (left: 1 4 12)\n1 * 4 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((1 * 4) + (3 + 9)) / 2 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 5 7 3)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((6 - 3) + 5) * 7 = 24",
                "7 - 3 = 4 (left: 3 5 9)\n2 * 10 = 20 (left: 4 6 20)\n4 * 6 = 24 (left: 24 20)\n20 - 24 = -4 (left: -4 20)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 3 5 7\nSteps:\n3 * 3 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * 3) + (5 + 7)) + 3 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24\nInput: 1 3 5 7\nSteps:\n3 + 7 = 10 (left: 1 5 10)\n5 * 10 = 50 (left: 1 50)\n1 * 50 = 50 (left: 50)\nAnswer: 1 * (3 + 5 * 7) = 24\nInput: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 - 4 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((2 * 3) - 4) * (6 + 6) = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                0.002,
                60.0,
                60.0,
                60.0,
                0.0,
                60.0,
                40.0
            ],
            "resampled": [
                "0 <- 7.5",
                "1 <- 7.5",
                "2 <- 4.3",
                "3 <- 7.6",
                "4 <- 7.6",
                "5 <- 7.6",
                "6 <- 7.0",
                "7 <- 2.6",
                "8 <- 6.3",
                "9 <- 5.0"
            ],
            "resampled_steps": [
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24\nInput: 1 3 4 9\nSteps:\n3 + 9 = 12 (left: 1 4 12)\n1 * 4 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((1 * 4) + (3 + 9)) / 2 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24\nInput: 1 3 4 9\nSteps:\n3 + 9 = 12 (left: 1 4 12)\n1 * 4 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((1 * 4) + (3 + 9)) / 2 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 5 7 3)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((6 - 3) + 5) * 7 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 5 7 3)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((6 - 3) + 5) * 7 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 5 7 3)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((6 - 3) + 5) * 7 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 3 4 7\n\n7 - 3 = 4 (left: 3 4 4)\n4 * 4 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\nAnswer: (3 * (7 - 3)) * 4 = 24\nInput: 6 6 2 4\nSteps:\n6 * 4 = 24 (left: 6 2 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (6 * 4) * (6 - 2) = 24",
                "2 + 4 = 6 (left: 6 8 9)\n6 * 8 = 48 (left: 9 48)",
                "7 - 3 = 4 (left: 3 5 9)\n2 * 10 = 20 (left: 4 6 20)\n20 / 4 = 5 (left: 5 20)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24"
            ]
        },
        "step_8": {
            "steps": [
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24\nInput: 1 3 4 9\nSteps:\n3 + 9 = 12 (left: 1 4 12)\n1 * 4 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((1 * 4) + (3 + 9)) / 2 = 24\nInput: 2 3 9 9\nSteps:\n9 + 9 = 18 (left: 2 3 18)\n2 * 3 = 6 (left: 6 18)\n18 / 6 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((2 + 3) + (9 + 9)) * 3) - 3 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24\nInput: 1 3 4 9\nSteps:\n3 + 9 = 12 (left: 1 4 12)\n1 * 4 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((1 * 4) + (3 + 9)) / 2 = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n21 - 5 = 16 (left: 2 16)\n16 - 2 = 14 (left: 14)\n14 + 10 = 24 (left: 24)\nAnswer: ((2 * 3) - 5) + 10 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n3 * 4 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n4 + 22 = 26 (left: 26)\n26 - 22 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((3 + 7) * 4) + 6 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 5 7 3)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((6 - 3) + 5) * 7 = 24\nInput: 3 6 6 8\nSteps:\n6 + 6 = 12 (left: 3 8 12)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 + 6) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 5 7 3)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((6 - 3) + 5) * 7 = 24\nInput: 2 3 4 9\nSteps:\n3 * 9 = 27 (left: 2 4 27)\n4 - 2 = 2 (left: 2 27)\n2 * 27 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\nAnswer: ((2 * 3) * 9) / 4 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 5 7 3)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((6 - 3) + 5) * 7 = 24\nInput: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n2 * 3 = 6 (left: 6 24)\n6 * 24 = 144 (left: 144)\nAnswer: (2 * 3) * (4 * 6) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 3 4 7\n\n7 - 3 = 4 (left: 3 4 4)\n4 * 4 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\nAnswer: (3 * (7 - 3)) * 4 = 24\nInput: 6 6 2 4\nSteps:\n6 * 4 = 24 (left: 6 2 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (6 * 4) * (6 - 2) = 24\nInput: 1 3 5 7\nSteps:\n5 - 3 = 2 (left: 1 2 7)\n2 * 7 = 14 (left: 1 14)\n14 + 1 = 15 (left: 15)\n15 + 9 = 24\nAnswer: ((5 - 3) * 7) + 1 = 24",
                "2 + 4 = 6 (left: 6 8 9)\n6 * 8 = 48 (left: 9 48)\n48 / 9 = 5.33 (left: 5.33)",
                "7 - 3 = 4 (left: 3 5 9)\n2 * 10 = 20 (left: 4 6 20)\n20 / 4 = 5 (left: 5 20)\nInput: 3 9 27",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 2 3 5 7\nSteps:\n5 * 3 = 15 (left: 2 7 15)\n15 - 7 = 8 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((2 * 3) - 5) * (7 + 8) = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                40.0,
                0.003,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 7.1",
                "1 <- 7.1",
                "2 <- 8.3",
                "3 <- 6.9",
                "4 <- 8.3",
                "5 <- 5.0",
                "6 <- 7.6",
                "7 <- 7.4",
                "8 <- 5.8",
                "9 <- 8.3"
            ],
            "resampled_steps": [
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24\nInput: 1 3 4 7\nSteps:\n3 + 7 = 10 (left: 1 4 10)\n4 * 10 = 40 (left: 1 40)\n40 / 4 = 10 (left: 1 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: (((1 + (3 + 7)) * 4) / 4) * 2 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24\nInput: 1 3 4 7\nSteps:\n3 + 7 = 10 (left: 1 4 10)\n4 * 10 = 40 (left: 1 40)\n40 / 4 = 10 (left: 1 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: (((1 + (3 + 7)) * 4) / 4) * 2 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 5 7 3)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((6 - 3) + 5) * 7 = 24\nInput: 3 6 6 8\nSteps:\n6 + 6 = 12 (left: 3 8 12)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 + 6) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (3 * 8) + (2 * 6) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 5 7 3)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((6 - 3) + 5) * 7 = 24\nInput: 3 6 6 8\nSteps:\n6 + 6 = 12 (left: 3 8 12)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 + 6) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 5 7 3)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((6 - 3) + 5) * 7 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (3 * 8) + (2 * 6) = 24\nInput: 1 3 6 8\nSteps:\n3 * 8 = 24 (left: 1 6 24)\n1 * 6 = 6 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (1 * 6) * (3 * 8) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 5 7 3)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((6 - 3) + 5) * 7 = 24\nInput: 3 6 6 8\nSteps:\n6 + 6 = 12 (left: 3 8 12)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 + 6) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24\nInput: 1 3 4 7\nSteps:\n3 + 7 = 10 (left: 1 4 10)\n4 * 10 = 40 (left: 1 40)\n40 / 4 = 10 (left: 1 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: (((1 + (3 + 7)) * 4) / 4) * 2 = 24\nInput: 2 3 5 9\nSteps:\n2 * 5 = 10 (left: 3 9 10)\n10 - 9 = 1 (left: 3 1)\n3 + 1 = 4 (left: 4)\n4 * 9 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (((2 * 5) - 9 + 3) * 9 / 3) * 2 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24\nInput: 1 3 4 7\nSteps:\n3 + 7 = 10 (left: 1 4 10)\n4 * 10 = 40 (left: 1 40)\n40 / 4 = 10 (left: 1 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: (((1 + (3 + 7)) * 4) / 4) * 2 = 24\nInput: 2 3 6 8\nSteps:\n6 * 3 = 18 (left: 2 8 18)\n18 - 8 = 10 (left: 2 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: (((2 * 3) - 8) * 2) + 4 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 5 7 3)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((6 - 3) + 5) * 7 = 24\nInput: 3 6 6 8\nSteps:\n6 + 6 = 12 (left: 3 8 12)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 + 6) = 24\nInput: 1 3 5 8\nSteps:\n3 * 5 = 15 (left: 1 8 15)\n15 - 8 = 7 (left: 1 7)\n7 * 1 = 7 (left: 7)\nAnswer: (1 * 5) * (8 - 7) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (3 * 8) + (2 * 6) = 24\nInput: 1 3 5 7\nSteps:\n3 * 7 = 21 (left: 1 5 21)\n1 + 5 = 6 (left: 6 21)\n6 * 21 = 126 (left: 126)\n126 / 5 = 24 (left: 24)\nAnswer: ((1 + 5) * (3 * 7)) / 5 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 5 7 3)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((6 - 3) + 5) * 7 = 24\nInput: 3 6 6 8\nSteps:\n6 + 6 = 12 (left: 3 8 12)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 + 6) = 24\nInput: 2 3 4 9\nSteps:\n3 * 4 = 12 (left: 2 9 12)\n9 - 2 = 7 (left: 7 12)\n7 * 12 = 84 (left: 84)\n84 / 3 = 28 (left: 28)\nAnswer: ((3 * 4) - 2) * 9 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 + 12 = 24 (left: 24)\nAnswer: ((2 * 6) + (4 - 3)) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 5 7 3)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((6 - 3) + 5) * 7 = 24\nInput: 1 3 4 8\nSteps:\n4 + 8 = 12 (left: 1 3 12)\n3 * 1 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((4 + 8) - (3 * 1)) * 9 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 * 6 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (3 * 8) + (2 * 6) = 24\nInput: 1 3 6 8\nSteps:\n3 * 8 = 24 (left: 1 6 24)\n1 * 6 = 6 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (1 * 6) * (3 * 8) = 24\nInput: 3 4 6 7\nSteps:\n3 * 7 = 21 (left: 4 6 21)\n4 + 6 = 10 (left: 10 21)\n10 + 21 = 31 (left: 31)\nAnswer: (3 * 7) + (4 + 6) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24\nInput: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n14 - 7 = 7 (left: 3 7)\n3 * 7 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * (6 + 8)) + 3) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 5 7 3)\n3 + 5 = 8 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((6 - 3) + 5) * 7 = 24\nInput: 3 6 6 8\nSteps:\n6 + 6 = 12 (left: 3 8 12)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 + 6) = 24\nInput: 2 3 4 9\nSteps:\n2 * 4 = 8 (left: 3 8 9)\n8 + 9 = 17 (left: 17)\n17 + 3 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 4) + 9) + 3 = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                20.0,
                60.0,
                40.0,
                60.0,
                40.0,
                60.0,
                40.0
            ],
            "resampled": [
                "0 <- 8.6",
                "1 <- 8.6",
                "2 <- 8.2",
                "3 <- 2.5",
                "4 <- 4.4",
                "5 <- 5.2",
                "6 <- 8.2",
                "7 <- 8.0",
                "8 <- 6.0",
                "9 <- 9.1"
            ],
            "resampled_steps": [
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 3 4 7\n\n7 - 3 = 4 (left: 3 4 4)\n4 * 4 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\nAnswer: (3 * (7 - 3)) * 4 = 24\nInput: 6 6 2 4\nSteps:\n6 * 4 = 24 (left: 6 2 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (6 * 4) * (6 - 2) = 24\nInput: 1 3 5 7\nSteps:\n5 - 3 = 2 (left: 1 2 7)\n2 * 7 = 14 (left: 1 14)\n14 + 1 = 15 (left: 15)\n15 + 9 = 24\nAnswer: ((5 - 3) * 7) + 1 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 3 4 7\n\n7 - 3 = 4 (left: 3 4 4)\n4 * 4 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\nAnswer: (3 * (7 - 3)) * 4 = 24\nInput: 6 6 2 4\nSteps:\n6 * 4 = 24 (left: 6 2 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (6 * 4) * (6 - 2) = 24\nInput: 1 3 5 7\nSteps:\n5 - 3 = 2 (left: 1 2 7)\n2 * 7 = 14 (left: 1 14)\n14 + 1 = 15 (left: 15)\n15 + 9 = 24\nAnswer: ((5 - 3) * 7) + 1 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n3 * 4 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n4 + 22 = 26 (left: 26)\n26 - 22 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((3 + 7) * 4) + 6 = 24",
                "7 - 3 = 4 (left: 3 5 9)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24",
                "7 - 3 = 4 (left: 3 5 9)\n2 * 10 = 20 (left: 4 6 20)\n4 * 6 = 24 (left: 24 20)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n3 * 4 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n4 + 22 = 26 (left: 26)\n26 - 22 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((3 + 7) * 4) + 6 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24\nInput: 1 3 4 9\nSteps:\n3 + 9 = 12 (left: 1 4 12)\n1 * 4 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((1 * 4) + (3 + 9)) / 2 = 24\nInput: 2 3 9 9\nSteps:\n9 + 9 = 18 (left: 2 3 18)\n2 * 3 = 6 (left: 6 18)\n18 / 6 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((2 + 3) + (9 + 9)) * 3) - 3 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24\nInput: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\nAnswer: (3 + 3) * 6 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24\nInput: 1 3 4 7\nSteps:\n3 + 7 = 10 (left: 1 4 10)\n4 * 10 = 40 (left: 1 40)\n40 / 4 = 10 (left: 1 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: (((1 + (3 + 7)) * 4) / 4) * 2 = 24\nInput: 2 3 6 8\nSteps:\n6 * 3 = 18 (left: 2 8 18)\n18 - 8 = 10 (left: 2 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: (((2 * 3) - 8) * 2) + 4 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 3 4 7\n\n7 - 3 = 4 (left: 3 4 4)\n4 * 4 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\nAnswer: (3 * (7 - 3)) * 4 = 24\nInput: 6 6 2 4\nSteps:\n6 * 4 = 24 (left: 6 2 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (6 * 4) * (6 - 2) = 24\nInput: 1 3 5 7\nSteps:\n5 - 3 = 2 (left: 1 2 7)\n2 * 7 = 14 (left: 1 14)\n14 + 1 = 15 (left: 15)\n15 + 9 = 24\nAnswer: ((5 - 3) * 7) + 1 = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 10 = 24\nAnswer: (2 * 3) + (6 + 8) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 3 4 7\n\n7 - 3 = 4 (left: 3 4 4)\n4 * 4 = 16 (left: 3 16)\n3 * 16 = 48 (left: 48)\nAnswer: (3 * (7 - 3)) * 4 = 24\nInput: 6 6 2 4\nSteps:\n6 * 4 = 24 (left: 6 2 24)\n6 - 2 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: (6 * 4) * (6 - 2) = 24\nInput: 1 3 5 7\nSteps:\n5 - 3 = 2 (left: 1 2 7)\n2 * 7 = 14 (left: 1 14)\n14 + 1 = 15 (left: 15)\n15 + 9 = 24\nAnswer: ((5 - 3) * 7) + 1 = 24\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n3 + 6 = 9 (left: 9 8)\n9 * 8 = 72 (left: 72)\nAnswer: (2 * 4) * (3 + 6) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n3 * 4 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n4 + 22 = 26 (left: 26)\n26 - 22 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((3 + 7) * 4) + 6 = 24\nInput: 1 3 5 7\nSteps:\n1 * 5 = 5 (left: 3 7 5)\n5 + 7 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 - 7 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\n25 - 12 = 13 (left: 13)\n13 + 7 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: (((1 * 5) + 7) * 3) + 3 = 24",
                "7 - 3 = 4 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n6 + 8 = 14 (left: 3 7 14)\n7 - 3 = 4 (left: 4 14)\n4 * 14 = 56 (left: 56)\nAnswer: (3 + 6) * (7 - 8) = 24",
                "7 - 3 = 4 (left: 3 5 9)\n2 * 10 = 20 (left: 4 6 20)\n4 * 6 = 24 (left: 24 20)\n24 * 20 = 480 (left: 480)",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n3 * 4 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n4 + 22 = 26 (left: 26)\n26 - 22 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((3 + 7) * 4) + 6 = 24\nInput: 1 2 3 4\nSteps:\n1 * 3 = 3 (left: 2 4 3)\n2 + 4 = 6 (left: 6 3)\n6 * 3 = 18 (left: 18)\n18 + 4 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: (((1 * 3) + 4) + 2) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24\nInput: 1 3 4 9\nSteps:\n3 + 9 = 12 (left: 1 4 12)\n1 * 4 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\n48 / 2 = 24 (left: 24)\nAnswer: ((1 * 4) + (3 + 9)) / 2 = 24\nInput: 2 3 9 9\nSteps:\n9 + 9 = 18 (left: 2 3 18)\n2 * 3 = 6 (left: 6 18)\n18 / 6 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((2 + 3) + (9 + 9)) * 3) - 3 = 24\nInput: 2 6 6 8\nSteps:\n6 + 6 = 12 (left: 2 8 12)\n2 * 8 = 16 (left: 16 12)\n16 - 12 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((2 + (6 + 6)) * 8) - 12 = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: (4 + 8) + (2 * 9) = 24\nInput: 3 6 7 8\nSteps:\n3 * 8 = 24 (left: 6 7 24)\n6 + 7 = 13 (left: 13 24)\n13 + 24 = 37 (left: 37)\nAnswer: (3 * 8) + (6 + 7) = 24\nInput: 3 3 4 6\nSteps:\n3 + 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24 6)\nAnswer: (3 + 3) * 6 = 24\nInput: 2 3 4 5\nSteps:\n4 + 5 = 9 (left: 2 3 9)\n3 * 9 = 27 (left: 2 27)\n2 * 27 = 54 (left: 54)\nAnswer: (2 * (3 * (4 + 5))) = 24",
                "5 + 3 = 8 (left: 8 7 9)\n8 + 7 = 15 (left: 9 15)\n9 + 15 = 24 (left: 24)\nAnswer: ((2 + 4) + 8) + 9 = 24\nInput: 3 5 7 8\nSteps:\n5 + 7 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n3 * 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * (5 + 7)) * 2 = 24\nInput: 1 3 4 7\nSteps:\n3 + 7 = 10 (left: 1 4 10)\n4 * 10 = 40 (left: 1 40)\n40 / 4 = 10 (left: 1 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: (((1 + (3 + 7)) * 4) / 4) * 2 = 24\nInput: 2 3 6 8\nSteps:\n6 * 3 = 18 (left: 2 8 18)\n18 - 8 = 10 (left: 2 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: (((2 * 3) - 8) * 2) + 4 = 24\nInput: 1 2 3 6\nSteps:\n2 * 6 = 12 (left: 1 3 12)\n12 - 3 = 9 (left: 1 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 18 (left: 18)\nAnswer: (((1 * 2) + 3) * 6) = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                0.003,
                60.0,
                0.002,
                60.0,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.9342755
    },
    "917": {
        "input": "1 4 5 13",
        "step_1": {
            "steps": [
                "3 + 9 = 12 (left: 6 12 15)",
                "13 / 4 = 3.25 (left: 1 5 13)",
                "4 + 5 = 9 (left: 1 9 13)",
                "Input: 3 6 6 12",
                "5 + 4 = 9 (left: 1 9 13)",
                "13 - 5 = 8 (left: 1 4 8)",
                "4 + 5 = 9 (left: 1 9 13)",
                "13 - 4 = 9 (left: 1 5 9)",
                "13 - 4 = 9 (left: 1 5 9)",
                "5 * 4 = 20 (left: 1 13 20)"
            ],
            "values": [
                2.001,
                1.002,
                0.003,
                0.003,
                0.003,
                20.002,
                0.003,
                21.001,
                40.001,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.5",
                "2 <- 1.1",
                "3 <- 1.8",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 1.5",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "",
                "13 - 5 = 8 (left: 1 4 8)",
                "13 / 4 = 3.25 (left: 1 5 13)",
                "13 - 4 = 9 (left: 1 5 9)",
                "",
                "",
                "",
                "",
                "13 - 5 = 8 (left: 1 4 8)",
                "13 - 4 = 9 (left: 1 5 9)"
            ]
        },
        "step_2": {
            "steps": [
                "1 + 4 = 5 (left: 5 5 13)",
                "13 - 5 = 8 (left: 1 4 8)\n1 + 4 = 5 (left: 5 8)",
                "13 / 4 = 3.25 (left: 1 5 13)\n1 + 5 = 6 (left: 6 13)",
                "13 - 4 = 9 (left: 1 5 9)\n6 * 12 = 72 (left: 3 72)",
                "13 - 4 = 9 (left: 1 5 9)",
                "13 / 1 = 13 (left: 4 5 13)",
                "13 / 1 = 13 (left: 4 5 13)",
                "5 * 1 = 5 (left: 4 5 13)",
                "13 - 5 = 8 (left: 1 4 8)\n9 / 3 = 3 (left: 3)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)"
            ],
            "values": [
                1.002,
                0.003,
                1.002,
                0.003,
                0.003,
                0.003,
                0.003,
                1.002,
                0.0,
                60.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.5",
                "2 <- INIT",
                "3 <- 1.7",
                "4 <- 1.5",
                "5 <- 2.9",
                "6 <- 2.9",
                "7 <- 2.2",
                "8 <- 2.9",
                "9 <- 2.9"
            ],
            "resampled_steps": [
                "",
                "13 - 5 = 8 (left: 1 4 8)",
                "",
                "13 - 4 = 9 (left: 1 5 9)",
                "13 - 5 = 8 (left: 1 4 8)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 / 4 = 3.25 (left: 1 5 13)\n1 + 5 = 6 (left: 6 13)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)"
            ]
        },
        "step_3": {
            "steps": [
                "13 - 5 = 8 (left: 1 4 8)",
                "13 - 5 = 8 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2)",
                "1 + 4 = 5 (left: 5 5 13)",
                "13 - 4 = 9 (left: 1 5 9)\n5 * 9 = 45 (left: 1 45)",
                "13 - 5 = 8 (left: 1 4 8)\n1 + 4 = 5 (left: 5 8)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n1 + 5 = 6 (left: 6)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4)",
                "13 / 4 = 3.25 (left: 1 5 13)\n1 + 5 = 6 (left: 6 13)\n6 / 13 = 0.46 (left: 0.46)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n1 + 5 = 6 (left: 6)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n5 / 1 = 5 (left: 5)"
            ],
            "values": [
                0.003,
                0.002,
                2.001,
                0.001,
                1.002,
                0.003,
                0.001,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 1.5",
                "2 <- 1.7",
                "3 <- 2.9",
                "4 <- 1.7",
                "5 <- 1.8",
                "6 <- 2.9",
                "7 <- 2.9",
                "8 <- 2.9",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 - 5 = 8 (left: 1 4 8)",
                "13 - 4 = 9 (left: 1 5 9)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 - 4 = 9 (left: 1 5 9)",
                "13 - 4 = 9 (left: 1 5 9)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "1 + 4 = 5 (left: 5 5 13)"
            ]
        },
        "step_4": {
            "steps": [
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n1 + 5 = 6",
                "13 - 5 = 8 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 5 9)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n1 * 5 = 5 (left: 5)",
                "13 - 4 = 9 (left: 1 5 9)\n7 - 3 = 4 (left: 4 10)",
                "13 - 4 = 9 (left: 1 5 9)\n9 / 1 = 9 (left: 5 9)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n1 + 5 = 6 (left: 6)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n1 * 5 = 5 (left: 5)",
                "1 + 4 = 5 (left: 5 5 13)\n3 - 3 = 0 (left: 0 9)"
            ],
            "values": [
                0.003,
                0.003,
                1.002,
                0.003,
                0.002,
                0.003,
                0.002,
                0.0,
                0.003,
                20.001
            ],
            "resampled": [
                "0 <- 4.9",
                "1 <- 4.9",
                "2 <- 4.9",
                "3 <- 1.8",
                "4 <- 4.9",
                "5 <- 2.9",
                "6 <- 1.8",
                "7 <- 1.8",
                "8 <- 1.5",
                "9 <- 2.9"
            ],
            "resampled_steps": [
                "1 + 4 = 5 (left: 5 5 13)\n3 - 3 = 0 (left: 0 9)",
                "1 + 4 = 5 (left: 5 5 13)\n3 - 3 = 0 (left: 0 9)",
                "1 + 4 = 5 (left: 5 5 13)\n3 - 3 = 0 (left: 0 9)",
                "13 - 4 = 9 (left: 1 5 9)",
                "1 + 4 = 5 (left: 5 5 13)\n3 - 3 = 0 (left: 0 9)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 - 4 = 9 (left: 1 5 9)",
                "13 - 4 = 9 (left: 1 5 9)",
                "13 - 5 = 8 (left: 1 4 8)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)"
            ]
        },
        "step_5": {
            "steps": [
                "1 + 4 = 5 (left: 5 5 13)\n3 - 3 = 0 (left: 0 9)\n9 - 0 = 9 (left: 9) ",
                "1 + 4 = 5 (left: 5 5 13)\n3 - 3 = 0 (left: 0 9)\n0 * 9 = 0 (left: 9)",
                "1 + 4 = 5 (left: 5 5 13)\n3 - 3 = 0 (left: 0 9)\n9 * 0 = 0 (left: 0)",
                "13 - 4 = 9 (left: 1 5 9)\n5 * 9 = 45 (left: 1 45)",
                "1 + 4 = 5 (left: 5 5 13)\n3 - 3 = 0 (left: 0 9)\n5 / 3 = 1.67 (left: 1.67 7)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4)",
                "13 - 4 = 9 (left: 1 5 9)\nInput: 3 3 6 9",
                "13 - 4 = 9 (left: 1 5 9)\n9 / 5 = 1.8 (left: 1.8 9)",
                "13 - 5 = 8 (left: 1 4 8)\n4 * 1 = 4 (left: 4 8)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4)"
            ],
            "values": [
                0.002,
                0.001,
                0.002,
                0.002,
                0.0,
                0.002,
                0.003,
                1.001,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 1.7",
                "2 <- 2.9",
                "3 <- 2.9",
                "4 <- 2.9",
                "5 <- 1.7",
                "6 <- 2.9",
                "7 <- 2.9",
                "8 <- INIT",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 - 4 = 9 (left: 1 5 9)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 - 4 = 9 (left: 1 5 9)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "",
                "13 - 4 = 9 (left: 1 5 9)"
            ]
        },
        "step_6": {
            "steps": [
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n1 * 5 = 5 (left: 5)",
                "13 - 4 = 9 (left: 1 5 9)\n9 / 5 = 1.8 (left: 1 1.8)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n1 * 5 = 5 (left: 5)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n1 + 5 = 6",
                "13 - 4 = 9 (left: 1 5 9)\n1 + 5 = 6 (left: 6 9)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n1 + 5 = 6 (left: 6)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n5 / 1 = 5 (left: 5)",
                "15 / 3 = 5 (left: 6 7 5)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)"
            ],
            "values": [
                0.0,
                2.0,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                3.0,
                60.0
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- INIT",
                "2 <- 6.9",
                "3 <- 1.5",
                "4 <- 1.7",
                "5 <- 1.7",
                "6 <- 6.9",
                "7 <- 6.9",
                "8 <- 1.7",
                "9 <- 2.9"
            ],
            "resampled_steps": [
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 5 9)",
                "",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)",
                "13 - 5 = 8 (left: 1 4 8)",
                "13 - 4 = 9 (left: 1 5 9)",
                "13 - 4 = 9 (left: 1 5 9)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)",
                "13 - 4 = 9 (left: 1 5 9)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)"
            ]
        },
        "step_7": {
            "steps": [
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 5 9)\n10 - 2 = 8 (left: 8)",
                "13 - 4 = 9 (left: 1 5 9)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "13 - 5 = 8 (left: 1 4 8)\n4 / 1 = 4 (left: 4 8)",
                "13 - 4 = 9 (left: 1 5 9)\n9 / 5 = 1.8 (left: 1 1.8)",
                "13 - 4 = 9 (left: 1 5 9)\n9 / 5 = 1.8 (left: 1 1.8)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "13 - 4 = 9 (left: 1 5 9)\nInput: 3 3 6 12",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4)"
            ],
            "values": [
                0.003,
                2.001,
                0.0,
                0.003,
                1.001,
                0.003,
                0.001,
                0.002,
                0.003,
                0.0
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 6.9",
                "2 <- 6.9",
                "3 <- 4.9",
                "4 <- 1.8",
                "5 <- 6.9",
                "6 <- 2.9",
                "7 <- 6.9",
                "8 <- 6.1",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)",
                "1 + 4 = 5 (left: 5 5 13)\n3 - 3 = 0 (left: 0 9)",
                "13 - 4 = 9 (left: 1 5 9)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)",
                "13 - 4 = 9 (left: 1 5 9)\n9 / 5 = 1.8 (left: 1 1.8)",
                "3 + 9 = 12 (left: 6 12 15)"
            ]
        },
        "step_8": {
            "steps": [
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n1 - 5 = -4 (left: -4)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "1 + 4 = 5 (left: 5 5 13)\n3 - 3 = 0 (left: 0 9)\n0 + 9 = 9 (left: 9)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "13 - 4 = 9 (left: 1 5 9)\n9 / 5 = 1.8 (left: 1 1.8)\n1 - 1.8 = -0.8 (left: -0.8)",
                "3 + 9 = 12 (left: 6 12 15)\n15 / 3 = 5 (left: 6 5)"
            ],
            "values": [
                0.001,
                0.003,
                0.002,
                0.0,
                60.0,
                0.002,
                0.002,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 4.9",
                "1 <- 1.5",
                "2 <- 7.4",
                "3 <- 2.9",
                "4 <- 6.9",
                "5 <- 7.4",
                "6 <- 6.9",
                "7 <- 8.4",
                "8 <- 2.9",
                "9 <- 4.9"
            ],
            "resampled_steps": [
                "1 + 4 = 5 (left: 5 5 13)\n3 - 3 = 0 (left: 0 9)",
                "13 - 5 = 8 (left: 1 4 8)",
                "13 - 4 = 9 (left: 1 5 9)\n9 / 5 = 1.8 (left: 1 1.8)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)",
                "13 - 4 = 9 (left: 1 5 9)\n9 / 5 = 1.8 (left: 1 1.8)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "1 + 4 = 5 (left: 5 5 13)\n3 - 3 = 0 (left: 0 9)"
            ]
        },
        "step_9": {
            "steps": [
                "1 + 4 = 5 (left: 5 5 13)\n3 - 3 = 0 (left: 0 9)\n0 * 9 = 0 (left: 9)",
                "13 - 5 = 8 (left: 1 4 8)\n1 + 4 = 5 (left: 5 8)",
                "13 - 4 = 9 (left: 1 5 9)\n9 / 5 = 1.8 (left: 1 1.8)\n1 - 1.8 = -0.8 (left: -0.8)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n1 + 5 = 6",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "13 - 4 = 9 (left: 1 5 9)\n9 / 5 = 1.8 (left: 1 1.8)\n1 - 1.8 = -0.8 (left: -0.8)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n5 - 1 = 4 (left: 4)",
                "1 + 4 = 5 (left: 5 5 13)\n3 - 3 = 0 (left: 0 9)\n9 - 0 = 9 (left: 9)"
            ],
            "values": [
                0.001,
                0.003,
                0.003,
                0.003,
                0.002,
                0.001,
                20.001,
                0.002,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 8.4",
                "1 <- 2.9",
                "2 <- 9.6",
                "3 <- 9.6",
                "4 <- 6.9",
                "5 <- 8.4",
                "6 <- 6.9",
                "7 <- 2.9",
                "8 <- 1.7",
                "9 <- 9.6"
            ],
            "resampled_steps": [
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)",
                "13 - 4 = 9 (left: 1 5 9)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)"
            ]
        },
        "step_10": {
            "steps": [
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n1 * 5 = 5 (left: 5)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)\n4 + 4 = 8",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)\n4 + 4 = 8",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n1 + 4 = 5 (left: 5)",
                "13 - 4 = 9 (left: 1 5 9)\n1 * 5 = 5 (left: 1 5)\n1 + 5 = 6",
                "13 - 4 = 9 (left: 1 5 9)\n1 + 5 = 6 (left: 6 9)",
                "13 - 4 = 9 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)\nThere is only one possible next step:"
            ],
            "values": [
                0.002,
                0.002,
                0.003,
                0.003,
                0.003,
                0.002,
                0.001,
                0.003,
                0.002,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 0.9837265
    },
    "918": {
        "input": "2 2 7 12",
        "step_1": {
            "steps": [
                "7 + 2 = 9 (left: 2 9 12)",
                "12 - 2 = 10 (left: 2 7 10)",
                "2 + 2 = 4 (left: 4 7 12)",
                "Possible next steps:",
                "12 + 2 = 14 (left: 2 7 14)",
                "2 * 7 = 14 (left: 2 12 14)",
                "2 + 2 = 4 (left: 4 7 12)",
                "4 / 6 = 0.6666666667 (left: 0.6666666667 9 6)",
                "2 * 2 = 4 (left: 4 7 12)",
                "2 + 2 = 4 (left: 4 7 12)"
            ],
            "values": [
                1.002,
                60.0,
                2.001,
                0.003,
                0.003,
                0.003,
                3.0,
                3.0,
                2.001,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.1",
                "2 <- INIT",
                "3 <- 1.1",
                "4 <- 1.1",
                "5 <- 1.1",
                "6 <- 1.1",
                "7 <- 1.8",
                "8 <- 1.1",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "",
                "12 - 2 = 10 (left: 2 7 10)",
                "",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)",
                "2 * 2 = 4 (left: 4 7 12)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)"
            ]
        },
        "step_2": {
            "steps": [
                "12 / 2 = 6 (left: 2 6 12)",
                "12 - 2 = 10 (left: 2 7 10)\n11 - 5 = 6 (left: 5 6)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)",
                "12 - 2 = 10 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)",
                "12 - 2 = 10 (left: 2 7 10)\n9 * 2 = 18 (left: 5 18)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)",
                "2 * 2 = 4 (left: 4 7 12)\n12 - 7 = 5 (left: 4 5)",
                "12 - 2 = 10 (left: 2 7 10)\n7 / 2 = 3.5 (left: 3.5 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)"
            ],
            "values": [
                1.002,
                0.003,
                60.0,
                40.0,
                0.003,
                0.003,
                0.003,
                2.001,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 2.3",
                "2 <- 2.3",
                "3 <- 1.1",
                "4 <- 2.3",
                "5 <- 1.9",
                "6 <- INIT",
                "7 <- 1.1",
                "8 <- 2.3",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)",
                "2 + 2 = 4 (left: 4 7 12)",
                "",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)"
            ]
        },
        "step_3": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n3 / 2 = 1.5 (left: 1.5)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n2 * 3 = 6 (left: 6)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n2 * 3 = 6 (left: 6)",
                "2 + 2 = 4 (left: 4 7 12)\n7 - 4 = 3 (left: 3 12)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n2 / 3 = 0.6666666666666666 (left: 0.6666666666666666)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n2 - 3 = -1 (left: -1)"
            ],
            "values": [
                0.003,
                0.001,
                0.003,
                60.0,
                0.003,
                0.003,
                41.0,
                1.002,
                20.002,
                20.0
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 2.2",
                "2 <- 3.8",
                "3 <- 1.1",
                "4 <- 3.3",
                "5 <- 2.2",
                "6 <- 1.1",
                "7 <- 3.3",
                "8 <- 2.3",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n2 / 3 = 0.6666666666666666 (left: 0.6666666666666666)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)",
                "12 - 2 = 10 (left: 2 7 10)"
            ]
        },
        "step_4": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)",
                "12 - 2 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n2 / 3 = 0.6666666666666666 (left: 0.6666666666666666)\nThere are no possible next steps with the input 0.6666666666666666 as it is already a single number.",
                "12 - 2 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 / 10 = 1.4 (left: 1.4)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 8 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 / 2 = 5 (left: 5 10)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n3 - 2 = 1 (left: 1)",
                "12 - 2 = 10 (left: 2 7 10)\nPossible next steps:"
            ],
            "values": [
                0.001,
                2.001,
                0.003,
                1.002,
                0.0,
                20.0,
                0.001,
                60.0,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 2.3",
                "2 <- 2.2",
                "3 <- INIT",
                "4 <- 4.7",
                "5 <- 3.9",
                "6 <- 4.7",
                "7 <- INIT",
                "8 <- 3.3",
                "9 <- 4.5"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)",
                "12 - 2 = 10 (left: 2 7 10)",
                "",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n2 - 3 = -1 (left: -1)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 8 10)"
            ]
        },
        "step_5": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n2 + 3 = 5 (left: 5)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)",
                "2 * 2 = 4 (left: 4 7 12)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (12 - 2) * (7 * 2) = 24",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n2 - 3 = -1 (left: -1)\nThere are no possible next steps with the input of -1.",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((12 - 2) * 7) + 10 = 24",
                "Input: 2 7 5 6",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 / 10 = 1.4 (left: 1.4)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 8 10)\n16 - 4 = 12 (left: 4 12)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                3.0,
                60.0,
                0.003,
                0.003,
                0.003,
                20.0,
                0.003
            ],
            "resampled": [
                "0 <- 3.8",
                "1 <- 4.7",
                "2 <- 5.4",
                "3 <- 5.4",
                "4 <- 2.3",
                "5 <- 2.3",
                "6 <- 4.7",
                "7 <- 5.4",
                "8 <- 3.3",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n2 / 3 = 0.6666666666666666 (left: 0.6666666666666666)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (12 - 2) * (7 * 2) = 24",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (12 - 2) * (7 * 2) = 24",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (12 - 2) * (7 * 2) = 24",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "12 - 2 = 10 (left: 2 7 10)"
            ]
        },
        "step_6": {
            "steps": [
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n2 / 3 = 0.6666666666666666 (left: 0.6666666666666666)\n0.6666666666666666 + 2 = 2.6666666666666665",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (12 - 2) + (7 * 2) = 24",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (12 - 2) * (7 * 2) = 24\nInput: 3 3 4 8\nSteps:\n3 + 4 = 7 (left: 3 7 8)\n7 + 8 = 15 (left: 15 3)\n15 - 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 4) + 8) * 3 = 24",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (12 - 2) * (7 * 2) = 24\n\nInput: 3 3 4 6\n\n3 * 4 = 12 (left: 3 6 12)\n3 * 6 = 18 (left: 18 12)\n18 - 12 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\n\nAnswer: ((3 * 4) * 6) * 4 = 24",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n3 / 2 = 1.5",
                "12 - 2 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n5 + 7 = 12 (left: 12)",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (12 - 2) + (7 * 2) = 24",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (12 - 2) * (7 * 2) = 24\nInput: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n3 * 6 = 18 (left: 18 12)\n18 - 12 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 6) - 12) * 4 = 24",
                "12 - 2 = 10 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 / 10 = 1.4 (left: 1.4)",
                "12 - 2 = 10 (left: 2 7 10)\n9 + 14 = 23 (left: 23 5)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.0156245000000002
    },
    "919": {
        "input": "3 3 6 7",
        "step_1": {
            "steps": [
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)",
                "3 * 3 = 9 (left: 6 9 7)",
                "3 / 3 = 1 (left: 1 6 7)",
                "3 + 6 = 9 (left: 3 9 7)",
                "3 + 3 = 6 (left: 6 6 7)",
                "6 + 3 = 9 (left: 6 7 9)",
                "6 + 3 = 9 (left: 3 9 7)",
                "7 - 3 = 4 (left: 3 4 6)",
                "6 - 3 = 3 (left: 3 3 7)",
                "6 - 3 = 3 (left: 3 3 7)"
            ],
            "values": [
                22.0,
                3.0,
                0.003,
                1.002,
                2.001,
                2.001,
                1.002,
                2.001,
                1.001,
                3.0
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.8",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.0",
                "5 <- 1.0",
                "6 <- INIT",
                "7 <- 1.0",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)",
                "6 - 3 = 3 (left: 3 3 7)",
                "",
                "",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)",
                "",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n3 / 1.1666666666666667 = 2.5714285714285716 (left: 2.5714285714285716 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)",
                "3 * 3 = 9 (left: 9 6 7)",
                "6 / 3 = 2 (left: 3 2 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n3 + 1.1666666666666667 = 4.166666666666667 (left: 1.1666666666666667 4.166666666666667 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n3 / 1.1666666666666667 \u2248 2.5714285714285716 (left: 2.5714285714285716 7)",
                "7 - 6 = 1 (left: 3 3 1)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n1.1666666666666667 * 7 = 8.166666666666666 (left: 3 8.166666666666666)",
                "6 / 3 = 2 (left: 2 3 7)",
                "7 - 6 = 1 (left: 3 6 1)"
            ],
            "values": [
                3.0,
                40.0,
                1.0,
                3.0,
                3.0,
                3.0,
                1.002,
                2.0,
                2.001,
                2.001
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 2.1",
                "2 <- 2.1",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 2.1",
                "6 <- 1.0",
                "7 <- 2.1",
                "8 <- 2.0",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "6 / 3 = 2 (left: 2 3 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)",
                "",
                "",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n3 / 1.1666666666666667 = 2.5714285714285716 (left: 2.5714285714285716 7)",
                "3 * 3 = 9 (left: 9 6 7)"
            ]
        },
        "step_3": {
            "steps": [
                "6 / 3 = 2 (left: 2 3 7)\n5 - 6 = -1 (left: -1 8)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)\n7 - 0 = 7 (left: 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)\n0 - 7 = -7 (left: -7)",
                "3 * 3 = 9 (left: 6 9 7)",
                "3 + 6 = 9 (left: 7 9 9)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)\n0 + 7 = 7 (left: 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\nPossible next steps:",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)\n7 / 0 = undefined",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n3 / 1.1666666666666667 = 2.5714285714285716 (left: 2.5714285714285716 7)\n7 - 2.5714285714285716 = 4.428571428571429 (left: 4.428571428571429 7)",
                "3 * 3 = 9 (left: 9 6 7)\n7 * 9 = 63 (left: 6 63)"
            ],
            "values": [
                0.003,
                0.002,
                0.002,
                3.0,
                3.0,
                0.001,
                0.003,
                0.003,
                2.0,
                0.001
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 2.1",
                "2 <- INIT",
                "3 <- 2.1",
                "4 <- 2.3",
                "5 <- INIT",
                "6 <- 2.5",
                "7 <- 1.0",
                "8 <- INIT",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "6 / 3 = 2 (left: 3 2 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)",
                "",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)",
                "6 / 3 = 2 (left: 3 2 7)",
                "",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n3 / 1.1666666666666667 \u2248 2.5714285714285716 (left: 2.5714285714285716 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)",
                "",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n3 / 1.1666666666666667 = 2.5714285714285716 (left: 2.5714285714285716 7)"
            ]
        },
        "step_4": {
            "steps": [
                "6 / 3 = 2 (left: 3 2 7)\n10 + 15 = 25 (left: 5 25)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)\n7 / 7 = 1 (left: 1)",
                "6 + 3 = 9 (left: 3 9 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)\n7 / 0 is undefined",
                "6 / 3 = 2 (left: 3 2 7)\n2 + 7 = 9 (left: 3 9)",
                "3 * 3 = 9 (left: 9 6 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n3 / 1.1666666666666667 \u2248 2.5714285714285716 (left: 2.5714285714285716 7)\n2.5714285714285716 * 7 = 17.999999999999997 (left: 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n3 / 1.1666666666666667 = 2.5714285714285716 (left: 2.5714285714285716 7)",
                "3 * 3 = 9 (left: 9 6 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n3 / 1.1666666666666667 = 2.5714285714285716 (left: 2.5714285714285716 7)\n2.5714285714285716 + 7 = 9.571428571428571 (left: 9.571428571428571)"
            ],
            "values": [
                0.002,
                0.003,
                1.002,
                0.003,
                0.003,
                2.001,
                0.001,
                3.0,
                3.0,
                0.001
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 2.1",
                "2 <- 1.0",
                "3 <- 1.0",
                "4 <- 1.0",
                "5 <- 4.8",
                "6 <- 2.1",
                "7 <- 1.9",
                "8 <- INIT",
                "9 <- 4.8"
            ],
            "resampled_steps": [
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)",
                "3 * 3 = 9 (left: 9 6 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)",
                "6 - 3 = 3 (left: 3 3 7)",
                "",
                "3 * 3 = 9 (left: 9 6 7)"
            ]
        },
        "step_5": {
            "steps": [
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)\n7 * 0 = 0 (left: 0 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)\n7 - 7 = 0 (left: 0)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 - 1.1666666666666667 = 5.833333333333333 (left: 3 5.833333333333333 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n3 / 1.1666666666666667 = 2.5714285714285716 (left: 2.5714285714285716 7)",
                "3 * 3 = 9 (left: 9 6 7)\n9 + 6 = 15 (left: 7 15)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)\n0 / 7 = 0 (left: 0)",
                "6 - 3 = 3 (left: 3 3 7)\n3 / 3 = 1 (left: 1 7)",
                "3 + 3 = 6 (left: 6 6 7)",
                "3 * 3 = 9 (left: 9 6 7)\n6 * 7 = 42 (left: 9 42)"
            ],
            "values": [
                0.0,
                0.002,
                3.0,
                41.0,
                2.0,
                0.003,
                0.002,
                40.0,
                3.0,
                0.001
            ],
            "resampled": [
                "0 <- 5.7",
                "1 <- 5.7",
                "2 <- 4.5",
                "3 <- 5.3",
                "4 <- 2.1",
                "5 <- 5.3",
                "6 <- 5.4",
                "7 <- 2.1",
                "8 <- 5.3",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "6 - 3 = 3 (left: 3 3 7)\n3 / 3 = 1 (left: 1 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 / 3 = 1 (left: 1 7)",
                "3 * 3 = 9 (left: 9 6 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n3 / 1.1666666666666667 = 2.5714285714285716 (left: 2.5714285714285716 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)",
                ""
            ]
        },
        "step_6": {
            "steps": [
                "6 - 3 = 3 (left: 3 3 7)\n3 / 3 = 1 (left: 1 7)\n7 * 1 = 7 (left: 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 / 3 = 1 (left: 1 7)\n7 - 1 = 6 (left: 6)",
                "3 * 3 = 9 (left: 9 6 7)\n7 + 9 = 16 (left: 6 16)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n3 + 4 = 7 (left: 5 9 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)\n0 + 7 = 7 (left: 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n9 - 4 = 5 (left: 5 9)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n3 / 1.1666666666666667 = 2.5714285714285716 (left: 2.5714285714285716 7)\n7 - 2.5714285714285716 = 4.428571428571429 (left: 4.428571428571429)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)\n0 + 7 = 7 (left: 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n3 + 6 = 9 (left: 7 9)",
                "7 - 3 = 4 (left: 3 6 4)"
            ],
            "values": [
                0.002,
                0.001,
                0.003,
                3.0,
                0.001,
                0.003,
                0.0,
                0.0,
                0.002,
                1.001
            ],
            "resampled": [
                "0 <- 5.7",
                "1 <- 2.8",
                "2 <- 5.3",
                "3 <- 1.0",
                "4 <- 1.0",
                "5 <- 5.7",
                "6 <- 5.7",
                "7 <- 5.3",
                "8 <- 2.1",
                "9 <- 5.3"
            ],
            "resampled_steps": [
                "6 - 3 = 3 (left: 3 3 7)\n3 / 3 = 1 (left: 1 7)",
                "6 / 3 = 2 (left: 2 3 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 / 3 = 1 (left: 1 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 / 3 = 1 (left: 1 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)"
            ]
        },
        "step_7": {
            "steps": [
                "6 - 3 = 3 (left: 3 3 7)\n3 / 3 = 1 (left: 1 7)\n1 * 7 = 7 (left: 7)",
                "6 / 3 = 2 (left: 2 3 7)\n1 + 5 = 6 (left: 3 6)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n3 - 6 = -3 (left: -3 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n1.1666666666666667 - 7 = -5.833333333333334 (left: 3 -5.833333333333334)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n1.1666666666666667 + 7 = 8.166666666666666 (left: 3 8.166666666666666)",
                "6 - 3 = 3 (left: 3 3 7)\n3 / 3 = 1 (left: 1 7)\n7 / 1 = 7 (left: 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 / 3 = 1 (left: 1 7)\n7 / 1 = 7 (left: 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n6 / 3 = 2 (left: 2 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)\n7 - 0 = 7 (left: 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)"
            ],
            "values": [
                0.002,
                1.0,
                1.002,
                1.002,
                21.0,
                0.003,
                0.001,
                0.001,
                0.001,
                60.0
            ],
            "resampled": [
                "0 <- 5.7",
                "1 <- 5.3",
                "2 <- 7.9",
                "3 <- 4.8",
                "4 <- 5.7",
                "5 <- 6.9",
                "6 <- 1.5",
                "7 <- 7.9",
                "8 <- 5.3",
                "9 <- 5.3"
            ],
            "resampled_steps": [
                "6 - 3 = 3 (left: 3 3 7)\n3 / 3 = 1 (left: 1 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)",
                "3 * 3 = 9 (left: 9 6 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 / 3 = 1 (left: 1 7)",
                "7 - 3 = 4 (left: 3 6 4)",
                "6 + 3 = 9 (left: 6 7 9)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)"
            ]
        },
        "step_8": {
            "steps": [
                "6 - 3 = 3 (left: 3 3 7)\n3 / 3 = 1 (left: 1 7)\n7 / 1 = 7 (left: 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n5 * 4 = 20 (left: 20)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "3 * 3 = 9 (left: 9 6 7)\n6 + 7 = 13 (left: 9 13)",
                "6 - 3 = 3 (left: 3 3 7)\n3 / 3 = 1 (left: 1 7)\n1 + 7 = 8 (left: 8)",
                "7 - 3 = 4 (left: 3 6 4)\n6 - 3 = 3 (left: 3 4)",
                "6 + 3 = 9 (left: 6 7 9)\n9 - 6 = 3 (left: 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n3 * 6 = 18 (left: 7 18)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n6 / 3 = 2 (left: 2 9 15)"
            ],
            "values": [
                0.002,
                0.003,
                60.0,
                0.003,
                0.003,
                22.0,
                0.001,
                0.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 7.9",
                "1 <- 8.2",
                "2 <- 8.5",
                "3 <- 2.1",
                "4 <- 8.2",
                "5 <- 7.9",
                "6 <- 7.9",
                "7 <- 8.5",
                "8 <- 7.9",
                "9 <- 8.2"
            ],
            "resampled_steps": [
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "7 - 3 = 4 (left: 3 6 4)\n6 - 3 = 3 (left: 3 4)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)",
                "7 - 3 = 4 (left: 3 6 4)\n6 - 3 = 3 (left: 3 4)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ]
        },
        "step_9": {
            "steps": [
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((7 / 6) / (7 / 1.1666666666666667)) * (3 + 3) = 24",
                "7 - 3 = 4 (left: 3 6 4)\n6 - 3 = 3 (left: 3 4)\n3 + 4 = 7 (left: 7)",
                "6 - 3 = 3 (left: 3 3 7)\n3 - 3 = 0 (left: 0 7)\n9 - 5 = 4 (left: 4)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (7 / 6) * (7 - 3) = 24",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "7 - 3 = 4 (left: 3 6 4)\n6 - 3 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (7 / 6) * (7 - 3) = 24"
            ],
            "values": [
                0.001,
                60.0,
                0.002,
                0.003,
                20.002,
                0.002,
                0.001,
                0.002,
                0.003,
                40.001
            ],
            "resampled": [
                "0 <- 9.4",
                "1 <- 7.9",
                "2 <- 9.1",
                "3 <- 9.9",
                "4 <- 8.2",
                "5 <- 9.9",
                "6 <- 7.9",
                "7 <- 7.9",
                "8 <- 9.9",
                "9 <- 8.5"
            ],
            "resampled_steps": [
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (7 / 6) * (7 - 3) = 24",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((7 / 6) / (7 / 1.1666666666666667)) * (3 + 3) = 24",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (7 / 6) * (7 - 3) = 24",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (7 / 6) * (7 - 3) = 24",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (7 / 6) * (7 - 3) = 24",
                "7 - 3 = 4 (left: 3 6 4)\n6 - 3 = 3 (left: 3 4)"
            ]
        },
        "step_10": {
            "steps": [
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (7 / 6) * (7 - 3) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: 2 * (3 * 4) = 24",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((7 / 6) / (7 / 1.1666666666666667)) * (3 + 3) = 24\nInput: 1 3 5 7\nSteps:\n5 * 3 = 15 (left: 1 7 15)\n7 - 1 = 6 (left: 6 15)\n6 * 15 = 90 (left: 90)\n90 / 3 = 30 (left: 30)\n30 / 15 = 2 (left: 2)\n90 / 15 = 6 (left: 6)\n6 * 2 = 12 (left: 12)\n12 * 7 = 84 (left: 84)\n84 / 1 = 84 (left: 84)\n84 / 84 = 1 (left: 1)\n1 * 30 = 30 (left: 30)\n30 - 2 = 28 (left: 28)\n28 + 12 = 40 (left: 40)\n40 + 5 = 45 (left: 45)\n45 + 3 = 48 (left: 48)\n48 - 7 = 41 (left: 41)\n41 - 6 = 35 (left: 35)\n35 - 15 = 20 (left: 20)\n20 * 2 = 40 (left: 40)\n40 + 7 = 47 (left: 47)\n47 + 3 = 50 (left: 50)\n50 - 1 = 49 (left: 49)\n49 - 30 = 19 (left: 19)\n19 + 6 = 25 (left: 25)\n25 * 2 = 50 (left: 50)\n50 - 12 = 38 (left: 38)\n38 + 7 = 45 (left: 45)\n45 + 3 = 48 (left: 48)\n48 - 5 = 43 (left: 43)\n43 - 3 = 40 (left: 40)\n40 + 1 = 41 (left: 41)\n41 / 41 = 1 (left: 1)\n1 * 45 = 45 (left: 45)\n45 + 5 = 50 (left: 50)\n50 - 3 = 47 (left: 47)\n47 - 7 = 40 (left: 40)\n40 + 3 = 43 (left: 43)\n43 - 1 = 42 (left: 42)\n42 + 7 = 49 (left: 49)\n49 - 5 = 44 (left: 44)\n44 - 3 = 41 (left: 41)\n41 * 7 = 287 (left: 287)\n287 / 3 = 95.66666666666667 (left: 95.66666666666667)\n95.66666666666667 - 5 = 90.66666666666667 (left: 90.66666666666667)\n90.66666666666667 / 7 = 12.952380952380953 (left: 12.952380952380953)\n12.952380952380953 * 2 = 25.904761904761906 (left: 25.904761904761906)\n25.904761904761906 + 1 = 26.904761904761905 (left: 26.904761904761905)\n26.904761904761905 + 3 = 29.904761904761905 (left: 29.904761904761905)\n29.904761904761905 * 5 = 149.52380952380952 (left: 149.52380952380952)\n149.52380952380952 + 7 = 156.52380952380952 (left: 156.52380952380952)\n156.52380952380952 - 9 = 147.52380952380952 (left: 147.52380952380952)\n147.52380952380952 / 2 = 73.76190476190476 (left: 73.76190476190476)\n73.76190476190476 - 5 = 68.76190476190476 (left: 68.76190476190476)\n68.76190476190476 - 3 = 65.76190476190476 (left: 65.76190476190476)\n65.76190476190476 * 2 = 131.52380952380952 (left: 131.52380952380952)\n131.52380952380952 + 1 = 132.52380952380952 (left: 132.52380952380952)\n132.52380952380952",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (7 / 6) * (7 - 3) = 24\nInput: 2 3 4 6\n\n3 * 4 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 24 (left: 24)\nAnswer: (3 * 4) * (6 * 2) = 24",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((7 / 6) / (7 / 1.1666666666666667)) * (7 - 3) = 24",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (7 / 6) * (7 - 3) = 24\nInput: 2 3 4 6\n\n2 * 3 = 6 (left: 4 6 6)\n6 * 4 = 24 (left: 24)\nAnswer: (2 * 3) * 4 = 24",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "7 / 6 = 1.1666666666666667 (left: 3 1.1666666666666667 7)\n7 / 1.1666666666666667 = 6 (left: 3 6 7)\n7 - 3 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (7 / 6) * (7 - 3) = 24\nInput: 2 3 5 10\n\n3 * 5 = 15 (left: 2 15 10)\n15 - 10 = 5 (left: 2 5)\n5 * 2 = 10 (left: 10)\n10 * 2 = 20 (left: 20)\n20 + 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((2 * 3) + 5) * ((10 * 2) - 1) = 24",
                "7 - 3 = 4 (left: 3 6 4)\n6 - 3 = 3 (left: 3 4)\n4 / 3 = 1.33 (left: 1.33)"
            ],
            "values": [
                60.0,
                0.002,
                60.0,
                60.0,
                60.0,
                60.0,
                0.0,
                0.0,
                40.0,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.0715620000000001
    },
    "920": {
        "input": "1 5 9 13",
        "step_1": {
            "steps": [
                "1 + 5 = 6 (left: 6 9 13)",
                "9 - 1 = 8 (left: 5 8 13)",
                "13 / 1 = 13 (left: 5 9 13)",
                "13 - 1 = 12 (left: 5 9 12)",
                "5 * 9 = 45 (left: 1 45 13)",
                "13 - 9 = 4 (left: 1 5 4)",
                "13 - 5 = 8 (left: 1 8 9)",
                "1 + 5 = 6 (left: 6 9 13)",
                "1 * 5 = 5 (left: 5 9 13)",
                "13 - 9 = 4 (left: 1 5 4)"
            ],
            "values": [
                22.0,
                1.002,
                2.001,
                2.001,
                2.0,
                3.0,
                0.003,
                22.0,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.0",
                "3 <- 1.0",
                "4 <- 1.7",
                "5 <- INIT",
                "6 <- 1.0",
                "7 <- 1.0",
                "8 <- 1.7",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "1 + 5 = 6 (left: 6 9 13)",
                "1 + 5 = 6 (left: 6 9 13)",
                "1 + 5 = 6 (left: 6 9 13)",
                "",
                "1 + 5 = 6 (left: 6 9 13)",
                "1 + 5 = 6 (left: 6 9 13)",
                "1 + 5 = 6 (left: 6 9 13)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "13 - 1 = 12 (left: 5 9 12)",
                "5 * 9 = 45 (left: 1 45 13)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 13)",
                "1 + 5 = 6 (left: 6 9 13)\n6 * 9 = 54 (left: 13 54)",
                "1 + 5 = 6 (left: 6 9 13)\n6 + 9 = 15 (left: 13 15)",
                "1 + 5 = 6 (left: 6 9 13)",
                "1 + 5 = 6 (left: 6 9 13)\n1 + 4 = 5 (left: 5 7)",
                "1 + 5 = 6 (left: 6 9 13)\n7 - 3 = 4 (left: 4 11)",
                "1 + 5 = 6 (left: 6 9 13)\n5 - 3 = 2 (left: 2 7)",
                "9 - 1 = 8 (left: 5 8 13)"
            ],
            "values": [
                1.002,
                20.002,
                1.002,
                0.003,
                0.003,
                2.001,
                1.001,
                20.001,
                0.001,
                1.002
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 2.7",
                "2 <- 1.0",
                "3 <- 1.0",
                "4 <- INIT",
                "5 <- 1.9",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 1.7"
            ],
            "resampled_steps": [
                "5 * 9 = 45 (left: 1 45 13)",
                "1 + 5 = 6 (left: 6 9 13)\n7 - 3 = 4 (left: 4 11)",
                "1 + 5 = 6 (left: 6 9 13)",
                "1 + 5 = 6 (left: 6 9 13)",
                "",
                "13 - 9 = 4 (left: 1 5 4)",
                "",
                "",
                "",
                "1 + 5 = 6 (left: 6 9 13)"
            ]
        },
        "step_3": {
            "steps": [
                "5 * 9 = 45 (left: 1 45 13)\n27 - 3 = 24 (left: 9 24)",
                "1 + 5 = 6 (left: 6 9 13)\n7 - 3 = 4 (left: 4 11)\n5 / 3 = 1.66667 (left: 1.66667 9)",
                "1 + 5 = 6 (left: 6 9 13)\n6 + 9 = 15 (left: 13 15)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)",
                "9 - 5 = 4 (left: 1 4 13)",
                "13 - 9 = 4 (left: 1 5 4)\n15 / 3 = 5 (left: 5 15)",
                "9 + 13 = 22 (left: 1 5 22)",
                "1 * 5 = 5 (left: 5 9 13)",
                "9 + 5 = 14 (left: 1 14 13)",
                "1 + 5 = 6 (left: 6 9 13)\n5 / 3 = 1.66666666667 (left: 1.66666666667 7 8 10)"
            ],
            "values": [
                0.001,
                1.0,
                0.003,
                20.0,
                3.0,
                0.003,
                1.002,
                2.001,
                1.002,
                2.001
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- INIT",
                "2 <- 3.3",
                "3 <- 1.7",
                "4 <- 2.6",
                "5 <- 1.9",
                "6 <- INIT",
                "7 <- 3.3",
                "8 <- INIT",
                "9 <- 2.1"
            ],
            "resampled_steps": [
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)",
                "",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)",
                "1 + 5 = 6 (left: 6 9 13)",
                "1 + 5 = 6 (left: 6 9 13)\n1 + 4 = 5 (left: 5 7)",
                "13 - 9 = 4 (left: 1 5 4)",
                "",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)",
                "",
                "5 * 9 = 45 (left: 1 45 13)"
            ]
        },
        "step_4": {
            "steps": [
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n9 - 4 = 5 (left: 5)",
                "13 - 1 = 12 (left: 5 9 12)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\nPossible next steps:",
                "1 + 5 = 6 (left: 6 9 13)\n9 - 6 = 3 (left: 3 13)",
                "1 + 5 = 6 (left: 6 9 13)\n1 + 4 = 5 (left: 5 7)\n5 - 7 = -2 (left: -2)",
                "13 - 9 = 4 (left: 1 5 4)\n4 * 6 = 24 (left: 24 10)",
                "9 / 1 = 9 (left: 5 9 13)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 + 9 = 13 (left: 13)",
                "13 - 1 = 12 (left: 5 9 12)",
                "5 * 9 = 45 (left: 1 45 13)\n45 - 1 = 44 (left: 44 13)"
            ],
            "values": [
                0.001,
                1.001,
                0.003,
                0.003,
                0.002,
                0.002,
                2.001,
                0.002,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 3.3",
                "2 <- 2.7",
                "3 <- 2.7",
                "4 <- 1.0",
                "5 <- 3.3",
                "6 <- INIT",
                "7 <- 1.8",
                "8 <- 3.3",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "1 + 5 = 6 (left: 6 9 13)\n7 - 3 = 4 (left: 4 11)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)",
                "1 + 5 = 6 (left: 6 9 13)\n7 - 3 = 4 (left: 4 11)",
                "1 + 5 = 6 (left: 6 9 13)\n7 - 3 = 4 (left: 4 11)",
                "1 + 5 = 6 (left: 6 9 13)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)",
                "",
                "1 * 5 = 5 (left: 5 9 13)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)",
                "5 * 9 = 45 (left: 1 45 13)"
            ]
        },
        "step_5": {
            "steps": [
                "1 + 5 = 6 (left: 6 9 13)\n7 - 3 = 4 (left: 4 11)\n11 - 4 = 7 (left: 7)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n5 + 3 = 8 (left: 7 8)",
                "1 + 5 = 6 (left: 6 9 13)\n7 - 3 = 4 (left: 4 11)\n4 - 11 = -7 (left: -7)",
                "1 + 5 = 6 (left: 6 9 13)\n7 - 3 = 4 (left: 4 11)\n4 + 11 = 15 (left: 15)",
                "1 + 5 = 6 (left: 6 9 13)\n6 + 9 = 15 (left: 13 15)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 9 36)",
                "9 + 13 = 22 (left: 1 5 22)",
                "1 * 5 = 5 (left: 5 9 13)\n12 / 3 = 4 (left: 3 6 4)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 9 36)",
                "5 * 9 = 45 (left: 1 45 13)\n13 - 1 = 12 (left: 12 13)"
            ],
            "values": [
                0.001,
                0.003,
                0.002,
                0.002,
                0.003,
                0.003,
                0.003,
                3.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 3.3",
                "2 <- 1.7",
                "3 <- INIT",
                "4 <- 1.7",
                "5 <- 1.0",
                "6 <- 1.0",
                "7 <- 2.1",
                "8 <- 1.7",
                "9 <- 3.3"
            ],
            "resampled_steps": [
                "",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)",
                "1 + 5 = 6 (left: 6 9 13)",
                "",
                "1 + 5 = 6 (left: 6 9 13)",
                "1 + 5 = 6 (left: 6 9 13)",
                "1 + 5 = 6 (left: 6 9 13)",
                "5 * 9 = 45 (left: 1 45 13)",
                "1 + 5 = 6 (left: 6 9 13)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)"
            ]
        },
        "step_6": {
            "steps": [
                "13 - 1 = 12 (left: 5 9 12)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25 9)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)",
                "13 - 9 = 4 (left: 1 5 4)",
                "1 + 5 = 6 (left: 6 9 13)\n9 - 7 = 2 (left: 1 2 9)",
                "1 + 5 = 6 (left: 6 9 13)\n9 + 13 = 22 (left: 6 22)",
                "1 + 5 = 6 (left: 6 9 13)\n9 - 6 = 3 (left: 3 13)",
                "5 * 9 = 45 (left: 1 45 13)\n1 + 45 = 46 (left: 13 46)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 6 = 7 (left: 6 9 7)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 + 9 = 13 (left: 9) "
            ],
            "values": [
                3.0,
                1.002,
                21.0,
                3.0,
                0.003,
                0.003,
                0.003,
                1.002,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 1.0",
                "2 <- 6.2",
                "3 <- 1.7",
                "4 <- 2.7",
                "5 <- 6.2",
                "6 <- 1.0",
                "7 <- 6.1",
                "8 <- 3.3",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "9 - 1 = 8 (left: 5 8 13)",
                "1 + 5 = 6 (left: 6 9 13)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)",
                "1 + 5 = 6 (left: 6 9 13)",
                "1 + 5 = 6 (left: 6 9 13)\n7 - 3 = 4 (left: 4 11)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)",
                "1 + 5 = 6 (left: 6 9 13)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25 9)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)",
                "1 + 5 = 6 (left: 6 9 13)\n7 - 3 = 4 (left: 4 11)"
            ]
        },
        "step_7": {
            "steps": [
                "9 - 1 = 8 (left: 5 8 13)\n5 + 8 = 13 (left: 13 13)",
                "1 + 5 = 6 (left: 6 9 13)\n9 / 6 = 1.5 (left: 1.5 13)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n12 - 3 = 9 (left: 9 12)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 6 = 7 (left: 7 13)",
                "1 + 5 = 6 (left: 6 9 13)\n7 - 3 = 4 (left: 4 11)\n15 + 3 = 18 (left: 3 9 18)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 + 9 = 13 (left: 9)",
                "1 + 5 = 6 (left: 6 9 13)\n7 / 3 = 2 (left: 2 10 15)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25 9)\n5 - 3 = 2 (left: 2 1.5)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "1 + 5 = 6 (left: 6 9 13)\n7 - 3 = 4 (left: 4 11)\nPossible next steps:"
            ],
            "values": [
                0.003,
                1.002,
                1.002,
                0.002,
                1.002,
                0.002,
                0.003,
                0.003,
                40.0,
                0.003
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 1.7",
                "2 <- 3.3",
                "3 <- 6.2",
                "4 <- 7.8",
                "5 <- 6.3",
                "6 <- 6.3",
                "7 <- 7.8",
                "8 <- 2.0",
                "9 <- 6.0"
            ],
            "resampled_steps": [
                "9 - 5 = 4 (left: 1 4 13)",
                "1 + 5 = 6 (left: 6 9 13)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "13 - 9 = 4 (left: 1 5 4)",
                "13 - 9 = 4 (left: 1 5 4)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "13 - 1 = 12 (left: 5 9 12)",
                "13 - 1 = 12 (left: 5 9 12)"
            ]
        },
        "step_8": {
            "steps": [
                "9 - 5 = 4 (left: 1 4 13)\n4 * 1 = 4 (left: 4 13)",
                "1 + 5 = 6 (left: 6 9 13)\n6 + 9 = 15 (left: 15 13)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n20 * 30 = 600 (left: 10 600)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\nNo possible next steps as the input is a single number.",
                "13 - 9 = 4 (left: 1 5 4)\n1 * 5 = 5 (left: 5 4)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 + 2 = 38",
                "13 - 1 = 12 (left: 5 9 12)\n3 * 10 = 30 (left: 7 30 15)",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9 12)"
            ],
            "values": [
                0.003,
                0.003,
                60.0,
                0.001,
                0.003,
                3.0,
                60.0,
                0.003,
                2.0,
                60.0
            ],
            "resampled": [
                "0 <- 8.6",
                "1 <- 8.6",
                "2 <- 8.2",
                "3 <- 7.8",
                "4 <- 8.9",
                "5 <- 8.9",
                "6 <- 8.9",
                "7 <- 8.9",
                "8 <- 7.8",
                "9 <- 8.6"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9 12)",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9 12)",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9 12)",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9 12)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)"
            ]
        },
        "step_9": {
            "steps": [
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 / 2 = 18",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 is a single number, so there are no possible next steps.",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9 12)\n9 - 4 = 5 (left: 5 12)",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9 12)\n9 / 4 = 2.25 (left: 2.25 12)",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9 12)\n15 - 5 = 10 (left: 10 11 20)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 + 8 = 44",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\nInput: 3 9 5"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.001,
                0.003,
                20.001,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 8.6",
                "1 <- 8.6",
                "2 <- 7.8",
                "3 <- 8.6",
                "4 <- 8.9",
                "5 <- 8.9",
                "6 <- 9.6",
                "7 <- 8.9",
                "8 <- 8.6",
                "9 <- 8.2"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9 12)",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9 12)",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9 12)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)"
            ]
        },
        "step_10": {
            "steps": [
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\nPossible next steps:",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 + 8 = 44 (left: 8)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9 12)\n3 + 10 = 13 (left: 13 5)",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9 12)\n9 / 4 = 2.25 (left: 2.25 12)",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n36 + 12 = 48 (left: 48)",
                "13 - 1 = 12 (left: 5 9 12)\n12 / 3 = 4 (left: 4 9 12)\n9 - 4 = 5 (left: 5 12)",
                "13 - 9 = 4 (left: 1 5 4)\n1 + 5 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)\n36 + 2 = 38"
            ],
            "values": [
                60.0,
                0.003,
                0.001,
                0.0,
                0.003,
                0.003,
                0.003,
                1.002,
                0.002,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.1309179999999999
    },
    "921": {
        "input": "5 6 7 13",
        "step_1": {
            "steps": [
                "7 - 5 = 2 (left: 2 6 13)",
                "9 - 3 = 6 (left: 6 9 12)",
                "13 - 6 = 7 (left: 5 7 13)",
                "6 / 5 = 1.2 (left: 1.2 6 7)",
                "Possible next steps:",
                "5 + 6 = 11 (left: 7 11 13)",
                "6 - 5 = 1 (left: 1 7 13)",
                "13 - 5 = 8 (left: 6 8 13)",
                "6 + 7 = 13 (left: 5 13 13)",
                "13 - 5 = 8 (left: 6 7 8)"
            ],
            "values": [
                1.002,
                21.0,
                22.0,
                3.0,
                0.003,
                2.001,
                2.001,
                22.0,
                2.001,
                3.0
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 1.1",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- 1.2",
                "5 <- 1.2",
                "6 <- INIT",
                "7 <- 1.1",
                "8 <- 1.2",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "13 - 6 = 7 (left: 5 7 13)",
                "9 - 3 = 6 (left: 6 9 12)",
                "",
                "13 - 6 = 7 (left: 5 7 13)",
                "13 - 6 = 7 (left: 5 7 13)",
                "13 - 6 = 7 (left: 5 7 13)",
                "",
                "9 - 3 = 6 (left: 6 9 12)",
                "13 - 6 = 7 (left: 5 7 13)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "13 - 6 = 7 (left: 5 7 13)\n12 / 3 = 4 (left: 4 9 21)",
                "9 - 3 = 6 (left: 6 9 12)\n9 * 6 = 54 (left: 54 12)",
                "13 - 7 = 6 (left: 5 6 6)",
                "13 - 6 = 7 (left: 5 7 13)\n10 / 4 = 2.5 (left: 3 7 2.5)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 3 12 15)",
                "13 - 6 = 7 (left: 5 7 13)\n9 + 6 = 15 (left: 3 15 18)",
                "5 + 6 = 11 (left: 7 11 13)",
                "9 - 3 = 6 (left: 6 9 12)\n9 - 6 = 3 (left: 3 12)",
                "13 - 6 = 7 (left: 5 7 13)\nPossible next steps:",
                "5 + 6 = 11 (left: 7 11 13)"
            ],
            "values": [
                0.003,
                2.001,
                22.0,
                3.0,
                22.0,
                1.002,
                1.002,
                0.002,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.7",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 2.6",
                "5 <- INIT",
                "6 <- 1.2",
                "7 <- 1.7",
                "8 <- INIT",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "",
                "13 - 5 = 8 (left: 6 8 13)",
                "",
                "",
                "5 + 6 = 11 (left: 7 11 13)",
                "",
                "13 - 6 = 7 (left: 5 7 13)",
                "13 - 5 = 8 (left: 6 8 13)",
                "",
                "13 - 7 = 6 (left: 5 6 6)"
            ]
        },
        "step_3": {
            "steps": [
                "Possible next steps:",
                "13 - 5 = 8 (left: 6 8 13)\n3 + 5 = 8 (left: 8 9 11)",
                "6 / 7 = 0.857 (left: 5 0.857 13)",
                "13 + 5 = 18 (left: 6 7 18)",
                "5 + 6 = 11 (left: 7 11 13)\n5 + 5 = 10 (left: 5 10)",
                "5 + 6 = 11 (left: 7 11 13)",
                "13 - 6 = 7 (left: 5 7 13)\n13 - 5 = 8 (left: 7 8)",
                "13 - 5 = 8 (left: 6 8 13)\n13 - 6 = 7 (left: 6 7)",
                "13 - 6 = 7 (left: 5 7 7)",
                "13 - 7 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 6 11)"
            ],
            "values": [
                0.003,
                3.0,
                3.0,
                40.001,
                0.003,
                0.003,
                1.001,
                0.003,
                3.0,
                0.001
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 1.1",
                "2 <- 3.3",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 2.4",
                "6 <- INIT",
                "7 <- 3.3",
                "8 <- 1.1",
                "9 <- 3.3"
            ],
            "resampled_steps": [
                "13 + 5 = 18 (left: 6 7 18)",
                "9 - 3 = 6 (left: 6 9 12)",
                "13 + 5 = 18 (left: 6 7 18)",
                "",
                "",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 3 12 15)",
                "",
                "13 + 5 = 18 (left: 6 7 18)",
                "9 - 3 = 6 (left: 6 9 12)",
                "13 + 5 = 18 (left: 6 7 18)"
            ]
        },
        "step_4": {
            "steps": [
                "13 + 5 = 18 (left: 6 7 18)\n18 - 7 = 11 (left: 6 11)",
                "9 - 3 = 6 (left: 6 9 12)\n9 * 6 = 54 (left: 54 12)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 6 = 42 (left: 42 18)",
                "5 / 6 = 0.833 (left: 0.833 6 13)",
                "13 - 5 = 8 (left: 7 7 8)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 3 12 15)\nInput: 5 10 20 25",
                "7 - 5 = 2 (left: 2 6 13)",
                "13 + 5 = 18 (left: 6 7 18)\n6 + 7 = 13 (left: 13 18)",
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)",
                "13 + 5 = 18 (left: 6 7 18)\n6 + 7 = 13 (left: 13 18)"
            ],
            "values": [
                1.001,
                0.001,
                0.0,
                2.001,
                1.002,
                0.003,
                2.001,
                0.003,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 3.3",
                "2 <- 4.8",
                "3 <- 3.3",
                "4 <- 2.2",
                "5 <- 1.7",
                "6 <- 3.3",
                "7 <- 4.8",
                "8 <- 3.2",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 3 12 15)",
                "13 + 5 = 18 (left: 6 7 18)",
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)",
                "13 + 5 = 18 (left: 6 7 18)",
                "13 - 7 = 6 (left: 5 6 6)",
                "13 - 5 = 8 (left: 6 8 13)",
                "13 + 5 = 18 (left: 6 7 18)",
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)",
                "6 / 7 = 0.857 (left: 5 0.857 13)",
                "13 - 6 = 7 (left: 5 7 13)"
            ]
        },
        "step_5": {
            "steps": [
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 3 12 15)\n7 + 6 = 13 (left: 11 13)",
                "13 + 5 = 18 (left: 6 7 18)\n6 + 7 = 13 (left: 13 18)",
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 18 = 126 (left: 6 126)",
                "13 - 7 = 6 (left: 5 6 6)\n5 * 6 = 30 (left: 30)",
                "13 - 5 = 8 (left: 6 8 13)\n13 - 8 = 5 (left: 6 5)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 6 = 42 (left: 42 18)",
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "6 / 7 = 0.857 (left: 5 0.857 13)\n13 - 5 = 8 (left: 5 8)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)"
            ],
            "values": [
                60.0,
                1.002,
                60.0,
                20.001,
                0.003,
                0.003,
                40.0,
                0.0,
                1.002,
                22.0
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 5.3",
                "2 <- 5.9",
                "3 <- 5.6",
                "4 <- 5.2",
                "5 <- 3.3",
                "6 <- 5.6",
                "7 <- 1.1",
                "8 <- 2.4",
                "9 <- 3.3"
            ],
            "resampled_steps": [
                "9 - 3 = 6 (left: 6 9 12)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 18 = 126 (left: 6 126)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 6 = 42 (left: 42 18)",
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "13 + 5 = 18 (left: 6 7 18)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 6 = 42 (left: 42 18)",
                "9 - 3 = 6 (left: 6 9 12)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 3 12 15)",
                "13 + 5 = 18 (left: 6 7 18)"
            ]
        },
        "step_6": {
            "steps": [
                "9 - 3 = 6 (left: 6 9 12)\n9 * 6 = 54 (left: 54 12)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 18 = 126 (left: 6 126)\n6 + 2 = 8 (left: 8 126)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 6 = 42 (left: 42 18)\n42 / 18 = 2.33333 (left: 2.33333)",
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 3) * (6 / 2) = 24",
                "13 + 5 = 18 (left: 6 7 18)\n18 / 6 = 3 (left: 7 3)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 6 = 42 (left: 42 18)\n42 / 18 = 2.33 (left: 2.33)",
                "9 - 3 = 6 (left: 6 9 12)\nPossible next steps:",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 3 12 15)\n3 * 4 = 12 (left: 12 15)",
                "13 + 5 = 18 (left: 6 7 18)\n6 + 7 = 13 (left: 13 18)"
            ],
            "values": [
                0.001,
                0.002,
                60.0,
                0.002,
                0.003,
                0.0,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 4.8",
                "2 <- 5.2",
                "3 <- 6.2",
                "4 <- 5.6",
                "5 <- 5.3",
                "6 <- 5.9",
                "7 <- 5.6",
                "8 <- 5.0",
                "9 <- 6.2"
            ],
            "resampled_steps": [
                "13 - 5 = 8 (left: 6 8 13)\n3 + 5 = 8 (left: 8 9 11)",
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)",
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 6 = 42 (left: 42 18)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 18 = 126 (left: 6 126)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 6 = 42 (left: 42 18)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 3 12 15)\n7 + 6 = 13 (left: 11 13)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)"
            ]
        },
        "step_7": {
            "steps": [
                "13 - 5 = 8 (left: 6 8 13)\n3 + 5 = 8 (left: 8 9 11)\n8 / 9 = 0.8888888888888888 (left: 11)",
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 3) * (6 / 2) = 24",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 6 = 42 (left: 42 18)\n42 / 18 = 2.33 (left: 2.33)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 18 = 126 (left: 6 126)\n6 - 2 = 4 (left: 4 126)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\nPossible next steps:",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 6 = 42 (left: 42 18)\n42 / 18 = 2.33 (left: 2.33)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 3 12 15)\n7 + 6 = 13 (left: 11 13)\n11 - 13 = -2 (left: -2)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)"
            ],
            "values": [
                0.002,
                0.001,
                0.003,
                40.0,
                0.002,
                40.0,
                0.003,
                0.003,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 7.3",
                "2 <- 5.0",
                "3 <- 5.0",
                "4 <- 5.9",
                "5 <- 5.0",
                "6 <- 7.5",
                "7 <- 5.9",
                "8 <- 5.3",
                "9 <- 7.3"
            ],
            "resampled_steps": [
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 3 12 15)\n7 + 6 = 13 (left: 11 13)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 3 12 15)\n7 + 6 = 13 (left: 11 13)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 3 12 15)\n7 + 6 = 13 (left: 11 13)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 18 = 126 (left: 6 126)\n6 - 2 = 4 (left: 4 126)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 18 = 126 (left: 6 126)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ]
        },
        "step_8": {
            "steps": [
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 3) * (6 / 2) = 24",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (13 - 6) * ((9 / 3) / (6 / 3)) = 24",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 3 12 15)\n7 + 6 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 3 12 15)\n7 + 6 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n12 - 3 = 9 (left: 6 9)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 3 12 15)\n7 + 6 = 13 (left: 11 13)\n11 * 13 = 143 (left: 143)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 18 = 126 (left: 6 126)\n6 - 2 = 4 (left: 4 126)\n4 * 126 = 504 (left: 504)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 * 3 = 18 (left: 18 12)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 18 = 126 (left: 6 126)\n6 * 21 = 126 (left: 126)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((13 - 6) + 7) * (6 / 3) = 24"
            ],
            "values": [
                0.003,
                40.001,
                0.002,
                0.003,
                0.003,
                0.003,
                0.002,
                1.002,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 6.2",
                "2 <- 5.2",
                "3 <- 5.0",
                "4 <- 6.2",
                "5 <- 5.3",
                "6 <- 4.6",
                "7 <- 8.9",
                "8 <- 4.8",
                "9 <- 2.9"
            ],
            "resampled_steps": [
                "13 + 5 = 18 (left: 6 7 18)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)",
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 3 12 15)\n7 + 6 = 13 (left: 11 13)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 18 = 126 (left: 6 126)",
                "7 - 5 = 2 (left: 2 6 13)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((13 - 6) + 7) * (6 / 3) = 24",
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)",
                "5 + 6 = 11 (left: 7 11 13)"
            ]
        },
        "step_9": {
            "steps": [
                "13 + 5 = 18 (left: 6 7 18)\n7 * 6 = 42 (left: 42 18)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 - 3) * (6 / 2) = 24",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 3 12 15)\n7 + 6 = 13 (left: 11 13)\n11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 18 = 126 (left: 6 126)\n6 * 2 = 12 (left: 12 126)",
                "7 - 5 = 2 (left: 2 6 13)\n13 / 2 = 6.5 (left: 6.5)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((13 - 6) + 7) * (6 / 3) = 24\nInput: 3 4 5 6\nSteps:\n5 + 6 = 11 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1)\n1 * 24 = 24\nAnswer: ((4 * 3) - 11) * 24 = 24",
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14",
                "5 + 6 = 11 (left: 7 11 13)\n7 + 11 = 18 (left: 13 18)"
            ],
            "values": [
                20.001,
                60.0,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                60.0,
                0.003,
                20.002
            ],
            "resampled": [
                "0 <- 4.8",
                "1 <- 9.1",
                "2 <- 9.7",
                "3 <- 9.0",
                "4 <- 9.7",
                "5 <- 6.2",
                "6 <- 8.9",
                "7 <- 5.9",
                "8 <- 9.0",
                "9 <- 6.2"
            ],
            "resampled_steps": [
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((13 - 6) + 7) * (6 / 3) = 24\nInput: 3 4 5 6\nSteps:\n5 + 6 = 11 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1)\n1 * 24 = 24\nAnswer: ((4 * 3) - 11) * 24 = 24",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 6 = 42 (left: 42 18)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((13 - 6) + 7) * (6 / 3) = 24\nInput: 3 4 5 6\nSteps:\n5 + 6 = 11 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1)\n1 * 24 = 24\nAnswer: ((4 * 3) - 11) * 24 = 24",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((13 - 6) + 7) * (6 / 3) = 24",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 6 = 42 (left: 42 18)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)"
            ]
        },
        "step_10": {
            "steps": [
                "9 - 3 = 6 (left: 6 9 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + (13 - 6)) * ((9 / 3) / (6 / 3)) = 24",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((13 - 6) + 7) * (6 / 3) = 24\nInput: 3 4 5 6\nSteps:\n5 + 6 = 11 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1)\n1 * 24 = 24\nAnswer: ((4 * 3) - 11) * 24 = 24\nInput: 2 3 6 8\nSteps:\n6 * 3 = 18 (left: 2 8 18)\n18 - 8 = 10 (left: 2 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24\nAnswer: ((6 * 3) - 8) + 4 = 24",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 6 = 42 (left: 42 18)\n42 / 18 = 2.33333 (left: 2.33333)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((13 - 6) + 7) * (6 / 3) = 24\nInput: 3 4 5 6\nSteps:\n5 + 6 = 11 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1)\n1 * 24 = 24\nAnswer: ((4 * 3) - 11) * 24 = 24\nInput: 1 2 3 4\nSteps:\n1 * 2 = 2 (left: 3 4 2)\n4 * 3 = 12 (left: 12 2)\n12 * 2 = 24 (left: 24)\nAnswer: ((1 * 2) * (4 * 3)) = 24",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: ((13 - 6) + 7) * (6 / 3) = 24\nInput: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n7 + 8 = 15 (left: 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 3) + (7 + 8)) - 9 = 24",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 + 3 = 9 (left: 9 12)",
                "13 + 5 = 18 (left: 6 7 18)\n7 * 6 = 42 (left: 42 18)\n42 * 18 = 756 (left: 756)",
                "13 - 6 = 7 (left: 5 7 13)\n9 / 3 = 3 (left: 6 3 12)\n6 / 3 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)"
            ],
            "values": [
                0.003,
                0.003,
                60.0,
                0.002,
                60.0,
                0.002,
                60.0,
                0.003,
                20.002,
                0.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.186092
    },
    "922": {
        "input": "5 5 8 10",
        "step_1": {
            "steps": [
                "10 - 5 = 5 (left: 5 8 5)",
                "Input: 3 6 9 12",
                "5 * 5 = 25 (left: 8 10 25)",
                "5 + 8 = 13 (left: 10 13 10)",
                "10 - 5 = 5 (left: 5 8 5)",
                "12 * 3 = 36 (left: 6 36 15)",
                "8 - 5 = 3 (left: 3 5 10)",
                "10 - 8 = 2 (left: 5 2 10)",
                "3 * 6 = 18 (left: 9 12 18)",
                "5 - 5 = 0 (left: 0 8 10)"
            ],
            "values": [
                3.0,
                0.003,
                1.002,
                2.001,
                3.0,
                3.0,
                3.0,
                21.001,
                22.0,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.2",
                "2 <- 1.7",
                "3 <- 1.7",
                "4 <- 1.8",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "5 * 5 = 25 (left: 8 10 25)",
                "10 - 8 = 2 (left: 5 2 10)",
                "10 - 8 = 2 (left: 5 2 10)",
                "3 * 6 = 18 (left: 9 12 18)",
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "8 * 10 = 80 (left: 5 80 10)",
                "5 * 5 = 25 (left: 8 10 25)\n25 - 10 = 15 (left: 8 15)",
                "10 - 8 = 2 (left: 5 2 10)\n5 - 2 = 3 (left: 3 10)",
                "10 - 8 = 2 (left: 5 2 10)\nPossible next steps:",
                "3 * 6 = 18 (left: 9 12 18)\n6 / 3 = 2 (left: 2 9 12)",
                "5 + 8 = 13 (left: 10 10 13)",
                "10 - 8 = 2 (left: 5 2 10)",
                "Possible next steps:",
                "3 * 6 = 18 (left: 18 12)",
                "3 + 6 = 9 (left: 9 9 12)"
            ],
            "values": [
                3.0,
                0.001,
                0.002,
                0.003,
                0.003,
                20.002,
                2.001,
                0.003,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.5",
                "2 <- 1.7",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 2.5",
                "6 <- 2.5",
                "7 <- 2.6",
                "8 <- 1.0",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "",
                "12 * 3 = 36 (left: 6 36 15)",
                "10 - 8 = 2 (left: 5 2 10)",
                "",
                "",
                "5 + 8 = 13 (left: 10 10 13)",
                "5 + 8 = 13 (left: 10 10 13)",
                "10 - 8 = 2 (left: 5 2 10)",
                "10 - 5 = 5 (left: 5 8 5)",
                "5 * 5 = 25 (left: 8 10 25)"
            ]
        },
        "step_3": {
            "steps": [
                "3 / 3 = 1 (left: 1 6 9)",
                "12 * 3 = 36 (left: 6 36 15)\n36 / 6 = 6 (left: 6 15)",
                "10 - 8 = 2 (left: 5 2 10)\n2 * 5 = 10 (left: 10 10)",
                "10 - 5 = 5 (left: 5 8 10)",
                "9 / 3 = 3 (left: 3 3 9)",
                "5 + 8 = 13 (left: 10 10 13)\n10 * 10 = 100 (left: 100 13)",
                "5 + 8 = 13 (left: 10 10 13)\n10 / 10 = 1 (left: 1 13)",
                "10 - 8 = 2 (left: 5 2 10)\n2 + 10 = 12 (left: 5 12)",
                "10 - 5 = 5 (left: 5 8 5)\n6 - 4 = 2 (left: 2 2)",
                "5 * 5 = 25 (left: 8 10 25)\n25 / 10 = 2.5 (left: 8 2.5)"
            ],
            "values": [
                1.002,
                2.001,
                0.003,
                3.0,
                21.001,
                0.002,
                0.002,
                0.003,
                0.001,
                21.0
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 3.9",
                "2 <- 3.9",
                "3 <- 3.9",
                "4 <- 1.8",
                "5 <- 2.5",
                "6 <- 3.4",
                "7 <- 3.9",
                "8 <- 1.8",
                "9 <- 1.7"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 3 3 9)",
                "5 * 5 = 25 (left: 8 10 25)\n25 / 10 = 2.5 (left: 8 2.5)",
                "5 * 5 = 25 (left: 8 10 25)\n25 / 10 = 2.5 (left: 8 2.5)",
                "5 * 5 = 25 (left: 8 10 25)\n25 / 10 = 2.5 (left: 8 2.5)",
                "3 * 6 = 18 (left: 9 12 18)",
                "5 + 8 = 13 (left: 10 10 13)",
                "9 / 3 = 3 (left: 3 3 9)",
                "5 * 5 = 25 (left: 8 10 25)\n25 / 10 = 2.5 (left: 8 2.5)",
                "3 * 6 = 18 (left: 9 12 18)",
                "10 - 8 = 2 (left: 5 2 10)"
            ]
        },
        "step_4": {
            "steps": [
                "9 / 3 = 3 (left: 3 3 9)\nPossible next steps:",
                "5 * 5 = 25 (left: 8 10 25)\n25 / 10 = 2.5 (left: 8 2.5)\n8 - 2.5 = 5.5 (left: 5.5)",
                "5 * 5 = 25 (left: 8 10 25)\n25 / 10 = 2.5 (left: 8 2.5)\n8 / 2.5 = 3.2 (left: 3.2)",
                "5 * 5 = 25 (left: 8 10 25)\n25 / 10 = 2.5 (left: 8 2.5)\n8 - 2.5 = 5.5 (left: 5.5)",
                "3 * 6 = 18 (left: 9 12 18)\n12 - 9 = 3 (left: 3 18)",
                "5 + 8 = 13 (left: 10 10 13)\n10 - 10 = 0 (left: 0 13)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)",
                "5 * 5 = 25 (left: 8 10 25)\n25 / 10 = 2.5 (left: 8 2.5)\n8 / 2.5 = 3.2 (left: 3.2)",
                "3 * 6 = 18 (left: 9 12 18)\n9 * 2 = 18 (left: 18 18)",
                "10 - 8 = 2 (left: 5 2 10)\n9 - 4 = 5 (left: 7 5)"
            ],
            "values": [
                0.003,
                0.002,
                0.002,
                0.001,
                0.003,
                0.001,
                60.0,
                0.002,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 4.6",
                "1 <- 3.9",
                "2 <- 2.5",
                "3 <- 3.9",
                "4 <- 3.4",
                "5 <- 4.6",
                "6 <- 1.8",
                "7 <- 1.8",
                "8 <- 4.6",
                "9 <- 2.5"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)",
                "5 * 5 = 25 (left: 8 10 25)\n25 / 10 = 2.5 (left: 8 2.5)",
                "5 + 8 = 13 (left: 10 10 13)",
                "5 * 5 = 25 (left: 8 10 25)\n25 / 10 = 2.5 (left: 8 2.5)",
                "9 / 3 = 3 (left: 3 3 9)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)",
                "3 * 6 = 18 (left: 9 12 18)",
                "3 * 6 = 18 (left: 9 12 18)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)",
                "5 + 8 = 13 (left: 10 10 13)"
            ]
        },
        "step_5": {
            "steps": [
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n10 - 5 = 5 (left: 5)",
                "5 * 5 = 25 (left: 8 10 25)\n25 / 10 = 2.5 (left: 8 2.5)\n8 - 2.5 = 5.5 (left: 5.5)",
                "5 + 8 = 13 (left: 10 10 13)\n10 / 10 = 1 (left: 1 13)",
                "5 * 5 = 25 (left: 8 10 25)\n25 / 10 = 2.5 (left: 8 2.5)\n8 - 2.5 = 5.5 (left: 5.5)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 * 1 = 4 (left: 4)",
                "3 * 6 = 18 (left: 9 12 18)\n18 - 9 = 9 (left: 9 18)",
                "3 * 6 = 18 (left: 9 12 18)\n12 - 9 = 3 (left: 3 18)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 / 1 = 4 (left: 4)",
                "5 + 8 = 13 (left: 10 10 13)\n13 / 10 = 1.3 (left: 1.3 10)"
            ],
            "values": [
                0.002,
                0.0,
                0.003,
                0.002,
                40.001,
                0.002,
                0.003,
                0.003,
                0.001,
                0.0
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- 4.6",
                "2 <- 4.6",
                "3 <- 1.7",
                "4 <- 1.8",
                "5 <- INIT",
                "6 <- 5.4",
                "7 <- 5.4",
                "8 <- 4.6",
                "9 <- 5.4"
            ],
            "resampled_steps": [
                "5 * 5 = 25 (left: 8 10 25)\n25 / 10 = 2.5 (left: 8 2.5)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)",
                "10 - 8 = 2 (left: 5 2 10)",
                "3 * 6 = 18 (left: 9 12 18)",
                "",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)"
            ]
        },
        "step_6": {
            "steps": [
                "5 * 5 = 25 (left: 8 10 25)\n25 / 10 = 2.5 (left: 8 2.5)\n8 * 2.5 = 20 (left: 20)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 * 1 = 4 (left: 4)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 - 1 = 3 (left: 3)",
                "10 - 8 = 2 (left: 5 2 10)\n5 + 2 = 7 (left: 7 10)",
                "3 * 6 = 18 (left: 9 12 18)\n20 - 10 = 10 (left: 10 15)",
                "8 - 5 = 3 (left: 3 5 10)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n12 / 3 = 4 (left: 4)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n12 / 3 = 4 (left: 4)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\nInput: 7 3",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n12 - 3 = 9 (left: 3 9)"
            ],
            "values": [
                0.002,
                0.002,
                0.003,
                0.0,
                0.003,
                1.002,
                0.001,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.6",
                "1 <- 5.4",
                "2 <- 1.8",
                "3 <- 5.4",
                "4 <- 5.4",
                "5 <- 5.4",
                "6 <- 1.8",
                "7 <- 3.3",
                "8 <- 5.4",
                "9 <- 5.4"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)",
                "3 * 6 = 18 (left: 9 12 18)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)",
                "3 * 6 = 18 (left: 9 12 18)",
                "10 - 5 = 5 (left: 5 8 10)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)"
            ]
        },
        "step_7": {
            "steps": [
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n9 - 6 = 3 (left: 3 3)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n12 - 3 = 9 (left: 9)",
                "3 * 6 = 18 (left: 9 12 18)\n18 / 9 = 2 (left: 2 18)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 12 36)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "3 * 6 = 18 (left: 9 12 18)\n12 - 18 = -6 (left: -6 18)",
                "10 - 5 = 5 (left: 5 8 10)\n8 * 5 = 40 (left: 10 40)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n12 / 3 = 4 (left: 4)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n12 + 3 = 15 (left: 15)"
            ],
            "values": [
                1.001,
                0.002,
                0.003,
                20.0,
                0.003,
                20.0,
                1.002,
                1.0,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 4.6",
                "2 <- 7.5",
                "3 <- 1.8",
                "4 <- 4.6",
                "5 <- 7.5",
                "6 <- 7.5",
                "7 <- 7.3",
                "8 <- 2.0",
                "9 <- 7.3"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "3 * 6 = 18 (left: 9 12 18)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "8 * 10 = 80 (left: 5 80 10)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)"
            ]
        },
        "step_8": {
            "steps": [
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 + 2 = 38",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 * 1 = 4 (left: 1 4)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18 (left: 18)",
                "3 * 6 = 18 (left: 9 12 18)\nInput: 6 8 14",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 + 1 = 5 (left: 5)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\nThere is only one number provided, so there are no possible next steps.",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\nThere is only one number, so no possible next steps. The result is 36.",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\nThere are no possible next steps for the number 36 as it is already a single number.",
                "8 * 10 = 80 (left: 5 80 10)\n80 / 5 = 16 (left: 16 10)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\nThere are no possible next steps for the input 36 as it is already a single number."
            ],
            "values": [
                0.003,
                60.0,
                40.0,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 7.0",
                "1 <- 8.1",
                "2 <- 5.4",
                "3 <- 8.1",
                "4 <- 8.1",
                "5 <- 8.2",
                "6 <- 8.1",
                "7 <- 4.6",
                "8 <- 8.2",
                "9 <- 8.2"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n9 - 6 = 3 (left: 3 3)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 * 1 = 4 (left: 1 4)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 * 1 = 4 (left: 1 4)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 * 1 = 4 (left: 1 4)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18 (left: 18)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 * 1 = 4 (left: 1 4)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18 (left: 18)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18 (left: 18)"
            ]
        },
        "step_9": {
            "steps": [
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n9 - 6 = 3 (left: 3 3)\n3 - 3 = 0 (left: 0)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 * 1 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n12 / 3 = 4 (left: 4 12)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 * 1 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 * 1 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\n18 / 2 = 9 (left: 9)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 * 1 = 4 (left: 1 4)\n4 / 1 = 4 (left: 4)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 / 1 = 4 (left: 4)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\nNone, as there is only one number remaining.",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\n18 / 8 = 2.25 (left: 2.25)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.002,
                0.002,
                0.002,
                0.003,
                0.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 8.2",
                "1 <- 8.2",
                "2 <- 7.3",
                "3 <- INIT",
                "4 <- 8.1",
                "5 <- 2.5",
                "6 <- 8.2",
                "7 <- 8.1",
                "8 <- 3.9",
                "9 <- 7.3"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18 (left: 18)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18 (left: 18)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)",
                "",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 * 1 = 4 (left: 1 4)",
                "5 + 8 = 13 (left: 10 10 13)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18 (left: 18)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 * 1 = 4 (left: 1 4)",
                "5 * 5 = 25 (left: 8 10 25)\n25 / 10 = 2.5 (left: 8 2.5)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)"
            ]
        },
        "step_10": {
            "steps": [
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\nThere are no valid operations that can be performed on the numbers 8, 8, and 12 to reach 18.",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\n18 - 8 = 10 (left: 8)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\nThere are no possible next steps as there are no other numbers given to perform operations with.",
                "5 * 5 = 25 (left: 8 10 25)",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 * 1 = 4 (left: 1 4)\n4 - 1 = 3 (left: 3)",
                "5 + 8 = 13 (left: 10 10 13)\n13 - 10 = 3 (left: 3 10)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\nThere are no possible next steps with the input of 18.",
                "9 / 3 = 3 (left: 3 3 9)\n6 - 5 = 1 (left: 4 1)\n4 * 1 = 4 (left: 1 4)\n1 * 4 = 4 (left: 4)",
                "5 * 5 = 25 (left: 8 10 25)\n25 / 10 = 2.5 (left: 8 2.5)\n8 - 2.5 = 5.5 (left: 5.5)",
                "9 / 3 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\nThere are no possible next steps with the input of 36."
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                1.002,
                0.003,
                0.003,
                0.003,
                0.001,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.2388975
    },
    "923": {
        "input": "2 4 6 12",
        "step_1": {
            "steps": [
                "6 + 12 = 18 (left: 2 4 18)",
                "6 * 2 = 12 (left: 4 12 12)",
                "6 + 4 = 10 (left: 10 6 12)",
                "6 * 2 = 12 (left: 4 6 12)",
                "12 - 6 = 6 (left: 2 4 6)",
                "6 + 12 = 18 (left: 2 4 18)",
                "12 / 2 = 6 (left: 4 6 12)",
                "12 - 4 = 8 (left: 2 8 12)",
                "6 + 12 = 18 (left: 2 4 18)",
                "12 / 2 = 6 (left: 4 6 12)"
            ],
            "values": [
                0.003,
                21.001,
                1.002,
                60.0,
                1.002,
                40.001,
                60.0,
                0.003,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 1.5",
                "1 <- 1.9",
                "2 <- 1.6",
                "3 <- 1.9",
                "4 <- INIT",
                "5 <- 1.6",
                "6 <- 1.9",
                "7 <- 1.6",
                "8 <- 1.3",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "6 + 12 = 18 (left: 2 4 18)",
                "12 / 2 = 6 (left: 4 6 12)",
                "12 / 2 = 6 (left: 4 6 12)",
                "12 / 2 = 6 (left: 4 6 12)",
                "",
                "12 / 2 = 6 (left: 4 6 12)",
                "12 / 2 = 6 (left: 4 6 12)",
                "12 / 2 = 6 (left: 4 6 12)",
                "6 * 2 = 12 (left: 4 6 12)",
                "12 / 2 = 6 (left: 4 6 12)"
            ]
        },
        "step_2": {
            "steps": [
                "6 + 12 = 18 (left: 2 4 18)\n2 + 4 = 6 (left: 6 18)",
                "12 / 2 = 6 (left: 4 6 12)\n12 - 4 = 8 (left: 8 6)",
                "12 / 2 = 6 (left: 4 6 12)\n10.5 * 11.5 = 120.75 (left: 120.75 275.5)",
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)",
                "18 / 2 = 9 (left: 4 9 24)",
                "12 / 2 = 6 (left: 4 6 12)\n12 - 4 = 8 (left: 8 6)",
                "12 / 2 = 6 (left: 4 6 12)\n12 - 4 = 8 (left: 8 6)",
                "12 / 2 = 6 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)",
                "6 * 2 = 12 (left: 4 6 12)\n12 / 6 = 2 (left: 4 2 12)",
                "12 / 2 = 6 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)"
            ],
            "values": [
                20.002,
                0.003,
                1.001,
                40.001,
                3.0,
                0.003,
                0.003,
                1.0,
                2.001,
                1.001
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 2.3",
                "2 <- 1.4",
                "3 <- 2.3",
                "4 <- 1.5",
                "5 <- 1.1",
                "6 <- 1.3",
                "7 <- INIT",
                "8 <- 1.3",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "6 * 2 = 12 (left: 4 6 12)",
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)",
                "12 - 6 = 6 (left: 2 4 6)",
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)",
                "6 + 12 = 18 (left: 2 4 18)",
                "6 * 2 = 12 (left: 4 12 12)",
                "6 * 2 = 12 (left: 4 6 12)",
                "",
                "6 * 2 = 12 (left: 4 6 12)",
                "12 / 2 = 6 (left: 4 6 12)"
            ]
        },
        "step_3": {
            "steps": [
                "6 * 2 = 12 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)",
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 * 12 = 288 (left: 288)",
                "12 - 6 = 6 (left: 2 4 6)\n4 * 6 = 24 (left: 2 24)",
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)",
                "6 + 12 = 18 (left: 2 4 18)\n18 / 2 = 9 (left: 4 9)",
                "6 * 2 = 12 (left: 4 12 12)\n12 - 4 = 8 (left: 8 12 12)",
                "6 * 2 = 12 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)",
                "12 - 6 = 6 (left: 2 6 12)",
                "6 * 2 = 12 (left: 4 6 12)\n12 / 6 = 2 (left: 4 2)",
                "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                40.0,
                0.001,
                0.003,
                0.002,
                0.003,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 3.9",
                "2 <- 2.0",
                "3 <- 1.1",
                "4 <- 2.4",
                "5 <- 1.3",
                "6 <- 3.3",
                "7 <- 1.3",
                "8 <- 1.5",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)",
                "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)",
                "6 + 12 = 18 (left: 2 4 18)\n2 + 4 = 6 (left: 6 18)",
                "6 * 2 = 12 (left: 4 12 12)",
                "18 / 2 = 9 (left: 4 9 24)",
                "6 * 2 = 12 (left: 4 6 12)",
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)",
                "6 * 2 = 12 (left: 4 6 12)",
                "6 + 12 = 18 (left: 2 4 18)",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)\n36 / 2 = 18",
                "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "6 + 12 = 18 (left: 2 4 18)\n2 + 4 = 6 (left: 6 18)\n18 - 6 = 12 (left: 12 18)",
                "6 * 2 = 12 (left: 4 12 12)\n12 - 4 = 8 (left: 8 12 12)",
                "18 / 2 = 9 (left: 4 9 24)\n24 - 4 = 20 (left: 9 20)",
                "6 * 2 = 12 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)",
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)\n36 * 2 = 72",
                "6 * 2 = 12 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)",
                "6 + 12 = 18 (left: 2 4 18)\n18 - 2 = 16 (left: 4 16)",
                "2 + 4 = 6 (left: 6 6 12)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.002,
                20.002,
                60.0
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 4.9",
                "2 <- 1.9",
                "3 <- 1.1",
                "4 <- 1.4",
                "5 <- 3.9",
                "6 <- 1.6",
                "7 <- 2.3",
                "8 <- 1.6",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)",
                "2 + 4 = 6 (left: 6 6 12)",
                "12 / 2 = 6 (left: 4 6 12)",
                "6 * 2 = 12 (left: 4 12 12)",
                "12 - 6 = 6 (left: 2 4 6)",
                "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)",
                "12 / 2 = 6 (left: 4 6 12)",
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)",
                "12 / 2 = 6 (left: 4 6 12)",
                "12 / 2 = 6 (left: 4 6 12)"
            ]
        },
        "step_5": {
            "steps": [
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)\n36 is a single number, so there are no possible next steps to perform.",
                "2 + 4 = 6 (left: 6 6 12)\n6 / 6 = 1 (left: 1 12)",
                "12 / 2 = 6 (left: 4 6 12)\n6 / 4 = 1.5 (left: 1.5 12)",
                "6 * 2 = 12 (left: 4 12 12)\n4 + 12 = 16 (left: 12 16)",
                "12 - 6 = 6 (left: 2 4 6)\n2 * 4 = 8 (left: 8 6)",
                "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "12 / 2 = 6 (left: 4 6 12)\n12 - 4 = 8 (left: 8 6)",
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)",
                "12 / 2 = 6 (left: 4 6 12)\n12 / 6 = 2 (left: 4 2)",
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)"
            ],
            "values": [
                0.003,
                0.001,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                60.0,
                20.0,
                20.002
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 5.7",
                "2 <- 2.0",
                "3 <- 4.9",
                "4 <- 4.9",
                "5 <- 1.3",
                "6 <- 4.9",
                "7 <- 1.3",
                "8 <- 3.9",
                "9 <- 3.9"
            ],
            "resampled_steps": [
                "6 * 2 = 12 (left: 4 6 12)",
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)",
                "6 + 12 = 18 (left: 2 4 18)\n2 + 4 = 6 (left: 6 18)",
                "2 + 4 = 6 (left: 6 6 12)",
                "2 + 4 = 6 (left: 6 6 12)",
                "6 * 2 = 12 (left: 4 6 12)",
                "2 + 4 = 6 (left: 6 6 12)",
                "6 * 2 = 12 (left: 4 6 12)",
                "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)",
                "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)"
            ]
        },
        "step_6": {
            "steps": [
                "6 * 2 = 12 (left: 4 6 12)\n12 - 4 = 8 (left: 8 6)",
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)\n36 / 2 = 18 (left: 18)",
                "6 + 12 = 18 (left: 2 4 18)\n2 + 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)",
                "2 + 4 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 12)",
                "2 + 4 = 6 (left: 6 6 12)\n6 - 6 = 0 (left: 0 12)",
                "6 * 2 = 12 (left: 4 6 12)\nPossible next steps:",
                "2 + 4 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)",
                "6 * 2 = 12 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)",
                "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ],
            "values": [
                0.003,
                20.001,
                60.0,
                0.003,
                40.0,
                0.003,
                0.003,
                0.003,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 6.9",
                "2 <- 6.8",
                "3 <- 6.2",
                "4 <- 1.6",
                "5 <- 5.7",
                "6 <- 5.9",
                "7 <- 6.9",
                "8 <- 6.2",
                "9 <- 6.2"
            ],
            "resampled_steps": [
                "12 / 2 = 6 (left: 4 6 12)",
                "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "6 + 12 = 18 (left: 2 4 18)\n2 + 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)",
                "12 / 2 = 6 (left: 4 6 12)",
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)",
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)",
                "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "6 + 12 = 18 (left: 2 4 18)\n2 + 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)",
                "6 + 12 = 18 (left: 2 4 18)\n2 + 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)"
            ]
        },
        "step_7": {
            "steps": [
                "12 / 2 = 6 (left: 4 6 12)\n4 * 6 = 24 (left: 12 24)",
                "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 2) * (6 - 4) = 24",
                "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 2) * (6 - 4) = 24",
                "6 + 12 = 18 (left: 2 4 18)\n2 + 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: ((2 + 4) + (6 + 12)) = 24",
                "12 / 2 = 6 (left: 4 6 12)\n12 + 4 = 16 (left: 4 16)",
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)\nThere are no possible next steps with just the number 36.",
                "12 / 2 = 6 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)\n24 * 12 = 288 (left: 288)",
                "12 / 2 = 6 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / 2) * (6 - 4) = 24",
                "6 + 12 = 18 (left: 2 4 18)\n2 + 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: ((2 + 4) + 6) + 12 = 24",
                "6 + 12 = 18 (left: 2 4 18)\n2 + 4 = 6 (left: 6 18)\n6 + 18 = 24 (left: 24)\nAnswer: ((2 + 4) + (6 + 12)) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "cost": 1.2765675
    },
    "924": {
        "input": "6 7 8 11",
        "step_1": {
            "steps": [
                "6 * 7 = 42 (left: 8 11 42)",
                "7 / 6 = 1.16666666667 (left: 1.16666666667 8 11)",
                "11 - 7 = 4 (left: 6 8 4)",
                "7 * 8 = 56 (left: 11 56)",
                "7 + 8 = 15 (left: 5 6 15)",
                "7 + 8 = 15 (left: 6 11 15)",
                "1 + 3 = 4 (left: 4 4 6)",
                "6 - 7 = -1 (left: -1 8 11)",
                "6 / 7 = 0.857 (left: 8 11 0.857)",
                "6 * 7 = 42 (left: 8 11 42)"
            ],
            "values": [
                2.001,
                2.001,
                41.0,
                0.003,
                2.0,
                1.002,
                3.0,
                2.001,
                3.0,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- INIT",
                "5 <- 1.2",
                "6 <- 1.8",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "11 - 7 = 4 (left: 6 8 4)",
                "",
                "11 - 7 = 4 (left: 6 8 4)",
                "6 / 7 = 0.857 (left: 8 11 0.857)",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "6 + 7 = 13 (left: 8 11 13)",
                "7 + 8 = 15 (left: 6 11 15)",
                "6 + 7 = 13 (left: 8 11 13)",
                "11 - 7 = 4 (left: 6 8 4)\nInput: 10 0.75 1.33 2 0.67",
                "6 * 7 = 42 (left: 8 11 42)",
                "11 - 7 = 4 (left: 6 8 4)\n8 - 6 = 2 (left: 2 4)",
                "6 / 7 = 0.857 (left: 8 11 0.857)\n11 * 0.857 = 9.407 (left: 8 9.407)",
                "8 - 7 = 1 (left: 6 1 11)",
                "6 + 7 = 13 (left: 8 11 13)",
                "Possible next steps:"
            ],
            "values": [
                1.002,
                1.002,
                1.002,
                0.003,
                2.0,
                1.002,
                2.001,
                1.002,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.9",
                "2 <- 1.2",
                "3 <- 2.6",
                "4 <- 1.2",
                "5 <- 1.2",
                "6 <- 1.2",
                "7 <- INIT",
                "8 <- 1.2",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "6 * 7 = 42 (left: 8 11 42)",
                "11 - 7 = 4 (left: 6 8 4)",
                "6 / 7 = 0.857 (left: 8 11 0.857)\n11 * 0.857 = 9.407 (left: 8 9.407)",
                "11 - 7 = 4 (left: 6 8 4)",
                "11 - 7 = 4 (left: 6 8 4)",
                "11 - 7 = 4 (left: 6 8 4)",
                "",
                "11 - 7 = 4 (left: 6 8 4)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "8 - 6 = 2 (left: 2 7 11)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)",
                "11 - 7 = 4 (left: 6 8 4)\n6 + 8 = 14 (left: 4 14)",
                "6 / 7 = 0.857 (left: 8 11 0.857)\n11 * 0.857 = 9.407 (left: 8 9.407)\n8 / 9.407 = 0.850 (left: 0.850)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 4 48)",
                "11 - 7 = 4 (left: 6 8 4)\n2 * 4 = 8 (left: 1.5 8)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 4 = 24 (left: 8 24)",
                "8 + 11 = 19 (left: 6 7 19)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 4 48)",
                "6 * 7 = 42 (left: 8 11 42)"
            ],
            "values": [
                1.002,
                40.001,
                1.002,
                0.003,
                0.003,
                0.001,
                0.002,
                2.001,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 3.1",
                "2 <- 2.2",
                "3 <- 1.2",
                "4 <- 3.1",
                "5 <- 1.2",
                "6 <- 1.2",
                "7 <- 2.5",
                "8 <- 1.2",
                "9 <- 3.1"
            ],
            "resampled_steps": [
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)",
                "6 + 7 = 13 (left: 8 11 13)",
                "11 - 7 = 4 (left: 6 8 4)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)",
                "11 - 7 = 4 (left: 6 8 4)",
                "11 - 7 = 4 (left: 6 8 4)",
                "11 - 7 = 4 (left: 6 8 4)\n8 - 6 = 2 (left: 2 4)",
                "11 - 7 = 4 (left: 6 8 4)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)"
            ]
        },
        "step_4": {
            "steps": [
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)\n7 - 3 = 4 (left: 4 21)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)\n21 / 7 = 3 (left: 3)",
                "6 + 7 = 13 (left: 8 11 13)\nInput: 3 7 11",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 48 4)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)\n13 - 5 = 8 (left: 4 9 8)",
                "11 - 7 = 4 (left: 6 8 4)\n5 - 3 = 2 (left: 10 2)",
                "11 - 7 = 4 (left: 6 8 4)\n6 - 4 = 2 (left: 2 8)",
                "11 - 7 = 4 (left: 6 8 4)\n8 - 6 = 2 (left: 2 4)\n2 * 4 = 8 ",
                "11 - 7 = 4 (left: 6 8 4)\n6 / 8 = 0.75 (left: 0.75 4)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)\n7 + 3 = 10 (left: 10)"
            ],
            "values": [
                0.002,
                0.0,
                0.003,
                41.0,
                2.001,
                0.0,
                0.002,
                0.003,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 4.3",
                "3 <- INIT",
                "4 <- 4.3",
                "5 <- 3.1",
                "6 <- 1.2",
                "7 <- INIT",
                "8 <- 3.1",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "",
                "",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 48 4)",
                "",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 48 4)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)",
                "11 - 7 = 4 (left: 6 8 4)",
                "",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)",
                "11 - 7 = 4 (left: 6 8 4)"
            ]
        },
        "step_5": {
            "steps": [
                "11 - 7 = 4 (left: 6 8 4)",
                "7 * 8 = 56 (left: 6 11 56)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 48 4)\n48 / 4 = 12 (left: 12)",
                "11 + 6 = 17 (left: 7 8 17)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 48 4)\n48 * 4 = 192 (left: 192)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)\n3 + 7 = 10 (left: 10 21)",
                "11 - 7 = 4 (left: 6 8 4)\n8 - 6 = 2 (left: 2 4)",
                "7 + 8 = 15 (left: 6 11 15)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)\n7 * 3 = 21 (left: 21 21)",
                "11 - 7 = 4 (left: 6 8 4)\n4 - 3 = 1 (left: 1 2 5)"
            ],
            "values": [
                41.0,
                1.0,
                0.003,
                0.003,
                0.003,
                0.001,
                0.002,
                20.002,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 4.8",
                "2 <- 5.0",
                "3 <- 5.0",
                "4 <- 3.1",
                "5 <- 5.7",
                "6 <- 1.2",
                "7 <- 4.3",
                "8 <- 3.1",
                "9 <- 5.0"
            ],
            "resampled_steps": [
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)",
                "11 - 7 = 4 (left: 6 8 4)\n6 / 8 = 0.75 (left: 0.75 4)",
                "11 - 7 = 4 (left: 6 8 4)",
                "11 - 7 = 4 (left: 6 8 4)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)",
                "7 + 8 = 15 (left: 6 11 15)",
                "11 - 7 = 4 (left: 6 8 4)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 48 4)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)",
                "11 - 7 = 4 (left: 6 8 4)"
            ]
        },
        "step_6": {
            "steps": [
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)\n21 / 7 = 3 (left: 3 21)",
                "11 - 7 = 4 (left: 6 8 4)\n6 / 8 = 0.75 (left: 0.75 4)\n4 / 0.75 = 5.33 (left: 5.33)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 4 = 24 (left: 8 24)",
                "11 - 7 = 4 (left: 6 8 4)\n8 / 6 = 1.33 (left: 1.33 4)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)\n3 * 7 = 21 (left: 21)",
                "7 + 8 = 15 (left: 6 11 15)\n15 * 6 = 90 (left: 11 90)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 48 4)\n48 + 4 = 52 (left: 52)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)\n21 - 3 = 18 (left: 18)",
                "11 - 7 = 4 (left: 6 8 4)\n8 / 4 = 2 (left: 6 2)"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.002,
                0.002,
                0.001,
                60.0,
                0.003,
                0.0,
                0.002
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 4.3",
                "2 <- 5.0",
                "3 <- 5.0",
                "4 <- 6.6",
                "5 <- 3.1",
                "6 <- 6.6",
                "7 <- INIT",
                "8 <- 1.9",
                "9 <- 4.3"
            ],
            "resampled_steps": [
                "11 - 7 = 4 (left: 6 8 4)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 48 4)",
                "11 - 7 = 4 (left: 6 8 4)",
                "11 - 7 = 4 (left: 6 8 4)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)",
                "",
                "6 * 7 = 42 (left: 8 11 42)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 48 4)"
            ]
        },
        "step_7": {
            "steps": [
                "11 - 7 = 4 (left: 6 8 4)\n1.33 + 2 = 3.33 (left: 3.33 4 48)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 48 4)\n48 * 4 = 192 (left: 192)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 4 = 24 (left: 8 24)",
                "11 - 7 = 4 (left: 6 8 4)\n6 + 8 = 14 (left: 4 14)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)\n4 + 2 = 6 (left: 6 6)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)\n21 / 7 = 3 (left: 3)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 8 24)",
                "7 - 8 = -1 (left: 6 -1 11)",
                "6 * 7 = 42 (left: 8 11 42)\n11 / 8 = 1.375 (left: 1.375 42)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 48 4)\n48 + 4 = 52 (left: 52)"
            ],
            "values": [
                3.0,
                0.003,
                40.0,
                0.003,
                20.002,
                0.003,
                0.002,
                3.0,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 3.1",
                "2 <- 5.7",
                "3 <- 5.0",
                "4 <- 5.0",
                "5 <- 4.3",
                "6 <- 3.1",
                "7 <- 6.6",
                "8 <- 1.2",
                "9 <- 7.2"
            ],
            "resampled_steps": [
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)",
                "7 + 8 = 15 (left: 6 11 15)",
                "11 - 7 = 4 (left: 6 8 4)",
                "11 - 7 = 4 (left: 6 8 4)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 48 4)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)",
                "11 - 7 = 4 (left: 6 8 4)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 4 = 24 (left: 8 24)"
            ]
        },
        "step_8": {
            "steps": [
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)\n21 / 3 = 7 (left: 7)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)\n7 * 3 = 21 (left: 21)",
                "7 + 8 = 15 (left: 6 11 15)\n11 * 15 = 165 (left: 6)",
                "11 - 7 = 4 (left: 6 8 4)\nPossible next steps:",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 4 = 24 (left: 8 24)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 48 4)\n48 + 4 = 52 (left: 52)",
                "6 * 7 = 42 (left: 8 11 42)\n9 + 12 = 21 (left: 3 7 21)\n3 * 7 = 21 (left: 21)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "11 - 7 = 4 (left: 6 8 4)\n8 - 6 = 2 (left: 2 4)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 4 = 24 (left: 8 24)\nPossible next steps:"
            ],
            "values": [
                0.002,
                0.003,
                0.001,
                0.003,
                1.001,
                0.002,
                0.002,
                40.0,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 7.0",
                "2 <- 6.6",
                "3 <- 5.0",
                "4 <- 7.4",
                "5 <- 6.6",
                "6 <- 7.0",
                "7 <- 5.0",
                "8 <- 7.4",
                "9 <- 7.2"
            ],
            "resampled_steps": [
                "11 - 7 = 4 (left: 6 8 4)",
                "11 - 7 = 4 (left: 6 8 4)\n1.33 + 2 = 3.33 (left: 3.33 4 48)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)",
                "11 - 7 = 4 (left: 6 8 4)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)\n4 + 2 = 6 (left: 6 6)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)",
                "11 - 7 = 4 (left: 6 8 4)\n1.33 + 2 = 3.33 (left: 3.33 4 48)",
                "11 - 7 = 4 (left: 6 8 4)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)\n4 + 2 = 6 (left: 6 6)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 4 = 24 (left: 8 24)"
            ]
        },
        "step_9": {
            "steps": [
                "11 - 7 = 4 (left: 6 8 4)\n24 - 1.5 = 22.5 (left: 8 22.5)",
                "11 - 7 = 4 (left: 6 8 4)\n1.33 + 2 = 3.33 (left: 3.33 4 48)\nInput: 5 10 15",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67)",
                "11 - 7 = 4 (left: 6 8 4)\n8 - 6 = 2 (left: 2 4)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)\n4 + 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "11 - 7 = 4 (left: 6 8 4)\n1.33 + 2 = 3.33 (left: 3.33 4 48)\n5 * 5 = 25 (left: 25 5)",
                "11 - 7 = 4 (left: 6 8 4)\n6 + 8 = 14 (left: 4 14)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)\n4 + 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 4 = 24 (left: 8 24)\n24 / 8 = 3 (left: 3)"
            ],
            "values": [
                20.001,
                0.003,
                0.002,
                2.0,
                40.0,
                0.002,
                40.001,
                1.002,
                0.003,
                0.0
            ],
            "resampled": [
                "0 <- 9.6",
                "1 <- 8.7",
                "2 <- 5.7",
                "3 <- 5.0",
                "4 <- 9.6",
                "5 <- 9.4",
                "6 <- 6.6",
                "7 <- 1.7",
                "8 <- 8.7",
                "9 <- 4.3"
            ],
            "resampled_steps": [
                "11 - 7 = 4 (left: 6 8 4)\n1.33 + 2 = 3.33 (left: 3.33 4 48)\n5 * 5 = 25 (left: 25 5)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "7 + 8 = 15 (left: 6 11 15)",
                "11 - 7 = 4 (left: 6 8 4)",
                "11 - 7 = 4 (left: 6 8 4)\n1.33 + 2 = 3.33 (left: 3.33 4 48)\n5 * 5 = 25 (left: 25 5)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)\n4 + 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)",
                "6 - 7 = -1 (left: -1 8 11)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 48 4)"
            ]
        },
        "step_10": {
            "steps": [
                "11 - 7 = 4 (left: 6 8 4)\n1.33 + 2 = 3.33 (left: 3.33 4 48)\n5 * 5 = 25 (left: 25 5)\n25 - 5 = 20 (left: 20)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 6 * (11 - 7) * 8 = 24",
                "7 + 8 = 15 (left: 6 11 15)\n15 - 11 = 4 (left: 6 4)",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 4 48)",
                "11 - 7 = 4 (left: 6 8 4)\n1.33 + 2 = 3.33 (left: 3.33 4 48)\n5 * 5 = 25 (left: 25 5)\n25 / 5 = 5 (left: 5)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)\n4 + 2 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nThere are no possible next steps as there are no other numbers provided to perform operations with.",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)\n8 / 3 = 2.6667 (left: 2.6667)",
                "6 - 7 = -1 (left: -1 8 11)\n8 - (-1) = 9 (left: -1 9 11)",
                "11 - 7 = 4 (left: 6 8 4)\n4 * 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 6 * ((11 - 7) * 8) = 24",
                "11 - 7 = 4 (left: 6 8 4)\n6 * 8 = 48 (left: 48 4)\n48 + 4 = 52 (left: 52)"
            ],
            "values": [
                0.003,
                60.0,
                21.001,
                0.003,
                0.001,
                0.003,
                0.003,
                1.002,
                60.0,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.3350045
    },
    "925": {
        "input": "7 9 9 13",
        "step_1": {
            "steps": [
                "7 + 9 = 16 (left: 9 9 13)",
                "9 - 7 = 2 (left: 2 9 13)",
                "9 + 7 = 16 (left: 9 13 16)",
                "13 - 7 = 6 (left: 7 9 6)",
                "13 / 9 = 1.44444444444 (left: 1.44444444444 9 13)",
                "7 * 9 = 63 (left: 9 13 63)",
                "7 + 9 = 16 (left: 9 9 13)",
                "13 - 7 = 6 (left: 6 9 13)",
                "13 - 7 = 6 (left: 7 9 6)",
                "10 - 6 = 4 (left: 4 6 6)"
            ],
            "values": [
                0.003,
                0.003,
                3.0,
                3.0,
                2.0,
                2.001,
                1.002,
                2.001,
                2.001,
                22.0
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 1.9",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 1.9",
                "7 <- 1.9",
                "8 <- 1.9",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "13 - 7 = 6 (left: 7 9 6)",
                "10 - 6 = 4 (left: 4 6 6)",
                "",
                "",
                "",
                "",
                "10 - 6 = 4 (left: 4 6 6)",
                "10 - 6 = 4 (left: 4 6 6)",
                "10 - 6 = 4 (left: 4 6 6)",
                "13 / 9 = 1.44444444444 (left: 1.44444444444 9 13)"
            ]
        },
        "step_2": {
            "steps": [
                "13 - 7 = 6 (left: 7 9 6)\n9 / 7 = 1.2857142857142858 (left: 1.2857142857142858 7 9)",
                "10 - 6 = 4 (left: 4 6 6)\n6 / 4 = 1.5 (left: 1.5 6)",
                "7 + 9 = 16 (left: 9 13 16)",
                "9 - 7 = 2 (left: 2 9 13)",
                "13 - 9 = 4 (left: 7 9 4)",
                "13 - 7 = 6 (left: 7 13 6)",
                "10 - 6 = 4 (left: 4 6 6)\n5 / 3 = 1.67 (left: 1.67 5 7)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)",
                "10 - 6 = 4 (left: 4 6 6)\n1 + 3 = 4 (left: 4 5 7)",
                "13 / 9 = 1.44444444444 (left: 1.44444444444 9 13)\n13 - 9 = 4 (left: 1.44444444444 4)"
            ],
            "values": [
                2.001,
                1.001,
                2.001,
                1.002,
                1.001,
                3.0,
                3.0,
                20.002,
                3.0,
                1.001
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 2.7",
                "2 <- INIT",
                "3 <- 2.7",
                "4 <- INIT",
                "5 <- 1.8",
                "6 <- 1.3",
                "7 <- 1.8",
                "8 <- INIT",
                "9 <- 2.7"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)",
                "",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)",
                "",
                "13 - 7 = 6 (left: 7 9 6)",
                "13 - 7 = 6 (left: 7 9 6)",
                "13 - 7 = 6 (left: 7 9 6)",
                "",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)"
            ]
        },
        "step_3": {
            "steps": [
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n24 / 6 = 4 (left: 4)",
                "9 - 7 = 2 (left: 2 9 13)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)",
                "9 / 7 = 1.2857 (left: 1.2857 9 13)",
                "13 - 7 = 6 (left: 7 9 6)\n6 * 7 = 42 (left: 42)",
                "13 - 7 = 6 (left: 7 9 6)\n7 + 9 = 16 (left: 16 6)",
                "13 - 7 = 6 (left: 7 9 6)\n9 * 7 = 63 (left: 6 63)",
                "9 / 7 = 1 (left: 1 9 13)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 + 24 = 30 (left: 30)"
            ],
            "values": [
                60.0,
                0.003,
                1.002,
                0.003,
                2.001,
                0.002,
                0.001,
                0.002,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 3.0",
                "2 <- INIT",
                "3 <- 2.5",
                "4 <- 3.4",
                "5 <- 2.7",
                "6 <- 3.0",
                "7 <- 1.9",
                "8 <- 3.0",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)",
                "",
                "13 - 7 = 6 (left: 7 13 6)",
                "9 / 7 = 1.2857 (left: 1.2857 9 13)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)",
                "10 - 6 = 4 (left: 4 6 6)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)",
                "10 - 6 = 4 (left: 4 6 6)"
            ]
        },
        "step_4": {
            "steps": [
                "7 + 9 = 16 (left: 9 9 13)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24",
                "13 - 7 = 6 (left: 7 9 6)",
                "13 - 7 = 6 (left: 7 13 6)\n13 / 7 = 1 (left: 1 6)",
                "9 / 7 = 1.2857 (left: 1.2857 9 13)\n9 - 1.2857 = 7.7143 (left: 7.7143 13)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (10 - 6) * 6 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n6 - 4 = 2 (left: 2 6)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24",
                "10 - 6 = 4 (left: 4 6 6)\nInput: 1 5 5"
            ],
            "values": [
                2.001,
                60.0,
                3.0,
                60.0,
                3.0,
                40.0,
                0.003,
                1.002,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 4.3",
                "1 <- 4.8",
                "2 <- 4.3",
                "3 <- 4.5",
                "4 <- INIT",
                "5 <- 4.4",
                "6 <- 4.8",
                "7 <- 4.3",
                "8 <- 2.7",
                "9 <- 4.8"
            ],
            "resampled_steps": [
                "13 - 7 = 6 (left: 7 13 6)\n13 / 7 = 1 (left: 1 6)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24",
                "13 - 7 = 6 (left: 7 13 6)\n13 / 7 = 1 (left: 1 6)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)",
                "",
                "9 / 7 = 1.2857 (left: 1.2857 9 13)\n9 - 1.2857 = 7.7143 (left: 7.7143 13)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24",
                "13 - 7 = 6 (left: 7 13 6)\n13 / 7 = 1 (left: 1 6)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24"
            ]
        },
        "step_5": {
            "steps": [
                "13 - 7 = 6 (left: 7 13 6)\n13 / 7 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 24 (left: 24)\nAnswer: 3 * (3 * 8) = 24",
                "13 - 7 = 6 (left: 7 13 6)\n13 / 7 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n18 - 8 = 10 (left: 10)",
                "9 - 7 = 2 (left: 2 9 13)",
                "9 / 7 = 1.2857 (left: 1.2857 9 13)\n9 - 1.2857 = 7.7143 (left: 7.7143 13)\n20 - 10 = 10 (left: 10 10 30)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24",
                "13 - 7 = 6 (left: 7 13 6)\n13 / 7 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n24 / 6 = 4 (left: 4)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 6 = 24 (left: 24)\nAnswer: 3 * (7 - 3) * 8 = 24"
            ],
            "values": [
                0.003,
                60.0,
                0.002,
                0.002,
                2.001,
                0.003,
                60.0,
                0.002,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 4.5",
                "1 <- 4.1",
                "2 <- 4.8",
                "3 <- 4.3",
                "4 <- 4.5",
                "5 <- 5.6",
                "6 <- 5.6",
                "7 <- 3.0",
                "8 <- 1.9",
                "9 <- 5.1"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24",
                "13 - 7 = 6 (left: 7 13 6)\n13 / 7 = 1 (left: 1 6)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)",
                "10 - 6 = 4 (left: 4 6 6)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 24 (left: 24)\nAnswer: 3 * (3 * 8) = 24"
            ]
        },
        "step_6": {
            "steps": [
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\n18 / 2 = 9",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) * (4 - 3)) * 2 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nSorry, but it is not possible to obtain 24 using the numbers 7, 9, 9, 13.",
                "13 - 7 = 6 (left: 7 13 6)\n13 / 7 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n24 - 6 = 18 (left: 18)\nThere is only one possible next step: 18 - 8 = 10",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = ",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (4 + (9 - 7)) = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 24 (left: 24)\nAnswer: 3 * (3 * 8) = 24\nInput: 2 3 5 7\nSteps:\n3 * 7 = 21 (left: 2 5 21)\n2 + 5 = 7 (left: 7 21)\n7 * 21 = 147 (left: 147)\nAnswer: (2 + 5) * (3 * 7) = 24"
            ],
            "values": [
                0.003,
                60.0,
                0.003,
                0.003,
                0.003,
                60.0,
                60.0,
                0.003,
                0.002,
                40.0
            ],
            "resampled": [
                "0 <- 3.0",
                "1 <- 6.6",
                "2 <- 6.5",
                "3 <- 4.1",
                "4 <- 4.1",
                "5 <- 6.1",
                "6 <- 4.8",
                "7 <- 4.3",
                "8 <- 4.3",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = ",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) * (4 - 3)) * 2 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24",
                "13 - 7 = 6 (left: 7 13 6)\n13 / 7 = 1 (left: 1 6)",
                "13 - 7 = 6 (left: 7 13 6)\n13 / 7 = 1 (left: 1 6)",
                "10 - 6 = 4 (left: 4 6 6)\n1 + 3 = 4 (left: 4 5 7)"
            ]
        },
        "step_7": {
            "steps": [
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 + 9) * (9 - 13) = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = \nThere doesn't seem to be a solution to obtain 24 from the numbers 2, 3, 6, and 9 using the given restrictions.",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nSorry, it seems like there was a mistake in the steps provided. Let me correct it:\n\nSteps:\n9 - 7 = 2 (left: 2 9 13)\n2 + 13 = 15 (left: 9 15)\n9 * 15 = 135 (left: 135)\n135 / 5 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\n\nAnswer: ((9 - 7) + 13) * 5 - 3 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 48",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) * (4 - 3)) * 2 = 24\nInput: 3 5 7 8\nSteps:\n5 - 3 = 2 (left: 2 7 8)\n7 + 8 = 15 (left: 2 15)\n2 * 15 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: (5 - 3) * (7 + 8) - 6 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 1 3 4 7\nSteps:\n4 * 7 = 28 (left: 1 3 28)\n28 - 1 = 27 (left: 3 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((4 * 7) - 1) - 3 = 24",
                "13 - 7 = 6 (left: 7 13 6)\n13 / 7 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "13 - 7 = 6 (left: 7 13 6)\n13 / 7 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "10 - 6 = 4 (left: 4 6 6)\n1 + 3 = 4 (left: 4 5 7)\n7 / 5 = 1.4 (left: 4 1.4)"
            ],
            "values": [
                60.0,
                60.0,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 7.1",
                "1 <- 7.1",
                "2 <- 7.1",
                "3 <- 4.8",
                "4 <- 7.5",
                "5 <- 6.6",
                "6 <- 6.5",
                "7 <- 5.4",
                "8 <- 7.6",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) * (4 - 3)) * 2 = 24\nInput: 3 5 7 8\nSteps:\n5 - 3 = 2 (left: 2 7 8)\n7 + 8 = 15 (left: 2 15)\n2 * 15 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: (5 - 3) * (7 + 8) - 6 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = ",
                "9 - 7 = 2 (left: 2 9 13)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 1 3 4 7\nSteps:\n4 * 7 = 28 (left: 1 3 28)\n28 - 1 = 27 (left: 3 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((4 * 7) - 1) - 3 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)"
            ]
        },
        "step_8": {
            "steps": [
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24\nInput: 2 4 5 7\nSteps:\n5 + 7 = 12 (left: 2 4 12)\n12 - 4 = 8 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((2 + 4) - 5) * 7 + 8 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24\nInput: 2 4 5 7\nSteps:\n4 * 5 = 20 (left: 2 7 20)\n7 - 2 = 5 (left: 5 20)\n5 * 20 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((2 * 4) * 5) - 7) / 1 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24\nInput: 2 4 5 7\nSteps:\n4 * 5 = 20 (left: 2 7 20)\n20 - 7 = 13 (left: 2 13)\n13 + 2 = 15 (left: 15)\n15 + 9 = 24 (left: 24)\nAnswer: ((2 * 4) * 5) - 7 + 9 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\n\nSorry, I made a mistake in the previous response.\nHere is the correct solution:\nSteps:\n9 - 7 = 2 (left: 2 9 13)\n2 * 13 = 26 (left: 9 26)\n26 - 9 = 17 (left: 17)\n17 + 7 = 24 (left: 24)\nAnswer: ((9 - 7) * 13) + 7 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((2 * 6) * (4 - 3)) * 2 = 24\nInput: 3 5 7 8\nSteps:\n5 - 3 = 2 (left: 2 7 8)\n7 + 8 = 15 (left: 2 15)\n2 * 15 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: (5 - 3) * (7 + 8) - 6 = 24\nInput: 1 2 3 4\nSteps:\n1 * 4 = 4 (left: 2 3 4)\n2 + 3 = 5 (left: 4 5)\n4 * 5 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: (1 * 4) + ((2 + 3) * 4) = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 3 3 7 9\nSteps:\n3 * 7 = 21 (left: 3 9 21)\n9 - 3 = 6 (left: 6 21)\n6 * 21 = 126 (left: 126)\n126 / 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 3) * 9 / 5 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 9 = \nThere is no solution for this input.",
                "9 - 7 = 2 (left: 2 9 13)\n5 / 3 = 1.67 (left: 1.67 7 9)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 1 3 4 7\nSteps:\n4 * 7 = 28 (left: 1 3 28)\n28 - 1 = 27 (left: 3 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((4 * 7) - 1) - 3 = 24\nInput: 3 5 7 8\nSteps:\n5 * 7 = 35 (left: 3 8 35)\n35 - 3 = 32 (left: 8 32)\n32 / 8 = 4 (left: 4 24)\nAnswer: ((5 * 7) - 3) / 8 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                0.003,
                3.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 5.1",
                "1 <- 7.1",
                "2 <- 8.1",
                "3 <- 8.5",
                "4 <- 7.4",
                "5 <- 1.9",
                "6 <- 8.0",
                "7 <- 8.5",
                "8 <- 8.8",
                "9 <- 6.6"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 24 (left: 24)\nAnswer: 3 * (3 * 8) = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24\nInput: 2 4 5 7\nSteps:\n4 * 5 = 20 (left: 2 7 20)\n7 - 2 = 5 (left: 5 20)\n5 * 20 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((2 * 4) * 5) - 7) / 1 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 3 3 7 9\nSteps:\n3 * 7 = 21 (left: 3 9 21)\n9 - 3 = 6 (left: 6 21)\n6 * 21 = 126 (left: 126)\n126 / 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 3) * 9 / 5 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 48",
                "10 - 6 = 4 (left: 4 6 6)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24\nInput: 2 4 5 7\nSteps:\n5 + 7 = 12 (left: 2 4 12)\n12 - 4 = 8 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((2 + 4) - 5) * 7 + 8 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 3 3 7 9\nSteps:\n3 * 7 = 21 (left: 3 9 21)\n9 - 3 = 6 (left: 6 21)\n6 * 21 = 126 (left: 126)\n126 / 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 3) * 9 / 5 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 1 3 4 7\nSteps:\n4 * 7 = 28 (left: 1 3 28)\n28 - 1 = 27 (left: 3 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((4 * 7) - 1) - 3 = 24\nInput: 3 5 7 8\nSteps:\n5 * 7 = 35 (left: 3 8 35)\n35 - 3 = 32 (left: 8 32)\n32 / 8 = 4 (left: 4 24)\nAnswer: ((5 * 7) - 3) / 8 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24"
            ]
        },
        "step_9": {
            "steps": [
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 24 (left: 24)\nAnswer: 3 * (3 * 8) = 24\nInput: 1 3 5 7\nSteps:\n5 * 7 = 35 (left: 1 3 35)\n3 + 1 = 4 (left: 4 35)\n35 / 4 = 8.75 (left: 8.75)\nAnswer: (5 * 7) / (3 + 1) = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24\nInput: 2 4 5 7\nSteps:\n5 - 2 = 3 (left: 3 4 7)\n7 - 4 = 3 (left: 3 3)\n3 * 3 = 9 (left: 9)\n9 * 4 = 36 (left: 36)\n36 / 1.5 = 24 (left: 24)\nAnswer: ((5 - 2) * (7 - 4)) * 4 / 1.5 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24\nInput: 2 4 5 7\nSteps:\n4 * 5 = 20 (left: 2 7 20)\n7 - 2 = 5 (left: 5 20)\n5 * 20 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((2 * 4) * 5) - 7) / 1 = 24\nInput: 2 6 8 9\nSteps:\n2 * 9 = 18 (left: 6 8 18)\n6 + 8 = 14 (left: 14 18)\n14 + 18 = 32 (left: 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((2 * 9) + (6 + 8)) - 8 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 3 3 7 9\nSteps:\n3 * 7 = 21 (left: 3 9 21)\n9 - 3 = 6 (left: 6 21)\n6 * 21 = 126 (left: 126)\n126 / 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 3) * 9 / 5 = 24\nInput: 4 5 6 7\nSteps:\n4 + 7 = 11 (left: 5 6 11)\n11 - 5 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 1.5 = 24 (left: 24)\nAnswer: ((4 + 7) - 5) * 6 / 1.5 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 48\n24 cannot be obtained from the given numbers 3, 3, 4, 7 using basic arithmetic operations.",
                "10 - 6 = 4 (left: 4 6 6)\n7 - 5 = 2 (left: 2 7)",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24\nInput: 2 4 5 7\nSteps:\n5 + 7 = 12 (left: 2 4 12)\n12 - 4 = 8 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((2 + 4) - 5) * 7 + 8 = 24\nInput: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 - 8 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) * 8 * 3 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 3 3 7 9\nSteps:\n3 * 7 = 21 (left: 3 9 21)\n9 - 3 = 6 (left: 6 21)\n6 * 21 = 126 (left: 126)\n126 / 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 3) * 9 / 5 = 24\nInput: 2 4 5 6\nSteps:\n4 * 5 = 20 (left: 2 6 20)\n6 - 2 = 4 (left: 4 20)\n4 * 20 = 80 (left: 80)\n80 / 3 = 24 (left: 24)\nAnswer: ((2 * 4) * 5) + 6 / 3 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 1 3 4 7\nSteps:\n4 * 7 = 28 (left: 1 3 28)\n28 - 1 = 27 (left: 3 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((4 * 7) - 1) - 3 = 24\nInput: 3 5 7 8\nSteps:\n5 * 7 = 35 (left: 3 8 35)\n35 - 3 = 32 (left: 8 32)\n32 / 8 = 4 (left: 4 24)\nAnswer: ((5 * 7) - 3) / 8 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\nAnswer: ((6 * 3) - 9) * 2 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 5 7\nSteps:\n5 - 3 = 2 (left: 1 2 7)\n2 + 7 = 9 (left: 1 9)\n9 * 1 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((5 - 3) + 7) * 1 * 3 - 3 = 24"
            ],
            "values": [
                40.0,
                60.0,
                60.0,
                60.0,
                20.002,
                0.0,
                60.0,
                60.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 9.8",
                "1 <- 9.6",
                "2 <- 9.0",
                "3 <- 9.2",
                "4 <- 9.4",
                "5 <- 8.1",
                "6 <- 7.1",
                "7 <- 9.2",
                "8 <- 9.7",
                "9 <- 7.3"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 1 3 4 7\nSteps:\n4 * 7 = 28 (left: 1 3 28)\n28 - 1 = 27 (left: 3 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((4 * 7) - 1) - 3 = 24\nInput: 3 5 7 8\nSteps:\n5 * 7 = 35 (left: 3 8 35)\n35 - 3 = 32 (left: 8 32)\n32 / 8 = 4 (left: 4 24)\nAnswer: ((5 * 7) - 3) / 8 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\nAnswer: ((6 * 3) - 9) * 2 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24\nInput: 2 4 5 7\nSteps:\n5 + 7 = 12 (left: 2 4 12)\n12 - 4 = 8 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((2 + 4) - 5) * 7 + 8 = 24\nInput: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 - 8 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) * 8 * 3 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 24 (left: 24)\nAnswer: 3 * (3 * 8) = 24\nInput: 1 3 5 7\nSteps:\n5 * 7 = 35 (left: 1 3 35)\n3 + 1 = 4 (left: 4 35)\n35 / 4 = 8.75 (left: 8.75)\nAnswer: (5 * 7) / (3 + 1) = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24\nInput: 2 4 5 7\nSteps:\n4 * 5 = 20 (left: 2 7 20)\n7 - 2 = 5 (left: 5 20)\n5 * 20 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((2 * 4) * 5) - 7) / 1 = 24\nInput: 2 6 8 9\nSteps:\n2 * 9 = 18 (left: 6 8 18)\n6 + 8 = 14 (left: 14 18)\n14 + 18 = 32 (left: 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((2 * 9) + (6 + 8)) - 8 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 48\n24 cannot be obtained from the given numbers 3, 3, 4, 7 using basic arithmetic operations.",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24\nInput: 2 4 5 7\nSteps:\n4 * 5 = 20 (left: 2 7 20)\n7 - 2 = 5 (left: 5 20)\n5 * 20 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((2 * 4) * 5) - 7) / 1 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24\nInput: 2 4 5 7\nSteps:\n4 * 5 = 20 (left: 2 7 20)\n7 - 2 = 5 (left: 5 20)\n5 * 20 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((2 * 4) * 5) - 7) / 1 = 24\nInput: 2 6 8 9\nSteps:\n2 * 9 = 18 (left: 6 8 18)\n6 + 8 = 14 (left: 14 18)\n14 + 18 = 32 (left: 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((2 * 9) + (6 + 8)) - 8 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 3 3 7 9\nSteps:\n3 * 7 = 21 (left: 3 9 21)\n9 - 3 = 6 (left: 6 21)\n6 * 21 = 126 (left: 126)\n126 / 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 3) * 9 / 5 = 24\nInput: 2 4 5 6\nSteps:\n4 * 5 = 20 (left: 2 6 20)\n6 - 2 = 4 (left: 4 20)\n4 * 20 = 80 (left: 80)\n80 / 3 = 24 (left: 24)\nAnswer: ((2 * 4) * 5) + 6 / 3 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nSorry, it seems like there was a mistake in the steps provided. Let me correct it:\n\nSteps:\n9 - 7 = 2 (left: 2 9 13)\n2 + 13 = 15 (left: 9 15)\n9 * 15 = 135 (left: 135)\n135 / 5 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\n\nAnswer: ((9 - 7) + 13) * 5 - 3 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 1 3 4 7\nSteps:\n4 * 7 = 28 (left: 1 3 28)\n28 - 1 = 27 (left: 3 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((4 * 7) - 1) - 3 = 24\nInput: 3 5 7 8\nSteps:\n5 * 7 = 35 (left: 3 8 35)\n35 - 3 = 32 (left: 8 32)\n32 / 8 = 4 (left: 4 24)\nAnswer: ((5 * 7) - 3) / 8 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\nAnswer: ((6 * 3) - 9) * 2 = 24\nInput: 2 4 5 6\nSteps:\n5 + 6 = 11 (left: 2 4 11)\n11 - 4 = 7 (left: 2 7)\n7 * 2 = 14 (left: 14)\n14 + 10 = 24 (left: 24)\nAnswer: ((5 + 6) - 4) * 2 + 10 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24\nInput: 2 4 5 7\nSteps:\n5 + 7 = 12 (left: 2 4 12)\n12 - 4 = 8 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((2 + 4) - 5) * 7 + 8 = 24\nInput: 3 3 7 8\nSteps:\n3 * 3 = 9 (left: 7 8 9)\n9 - 7 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16)\n16 - 8 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((3 * 3) - 7) * 8 * 3 = 24\nInput: 2 6 7 9\nSteps:\n7 - 6 = 1 (left: 2 1 9)\n1 * 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 18 (left: 18)\nAnswer: ((2 - 6 + 7) * 9) / 1 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6 24)\n6 - 3 = 3 (left: 3 24)\n3 * 24 = 24 (left: 24)\nAnswer: 3 * (3 * 8) = 24\nInput: 1 3 5 7\nSteps:\n5 * 7 = 35 (left: 1 3 35)\n3 + 1 = 4 (left: 4 35)\n35 / 4 = 8.75 (left: 8.75)\nAnswer: (5 * 7) / (3 + 1) = 24\nInput: 2 3 7 9\nSteps:\n3 * 9 = 27 (left: 2 7 27)\n7 - 2 = 5 (left: 5 27)\n5 * 27 = 135 (left: 135)\n135 / 5 = 27 (left: 27)\nAnswer: ((2 * 3) + 7) * 9 = 27",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24\nInput: 2 4 5 7\nSteps:\n4 * 5 = 20 (left: 2 7 20)\n7 - 2 = 5 (left: 5 20)\n5 * 20 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((2 * 4) * 5) - 7) / 1 = 24\nInput: 2 6 8 9\nSteps:\n2 * 9 = 18 (left: 6 8 18)\n6 + 8 = 14 (left: 14 18)\n14 + 18 = 32 (left: 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((2 * 9) + (6 + 8)) - 8 = 24\nInput: 1 2 3 4\nSteps:\n3 * 4 = 12 (left: 1 2 12)\n2 + 12 = 14 (left: 14)\n14 + 1 = 15 (left: 15)\n15 + 15 = 30 (left: 30)\n30 / 2 = 15 (left: 15)\n15 * 1 = 15 (left: 15)\nAnswer: (((1 * 2) * 3) + 4) + 15 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 48\n24 cannot be obtained from the given numbers 3, 3, 4, 7 using basic arithmetic operations.\nAnswer: 24 cannot be obtained from the given numbers 3, 3, 4, 7 using basic arithmetic operations.",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24\nInput: 2 4 5 7\nSteps:\n4 * 5 = 20 (left: 2 7 20)\n7 - 2 = 5 (left: 5 20)\n5 * 20 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((2 * 4) * 5) - 7) / 1 = 24\nInput: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 - 8 = 2 (left: 2)\n2 * 12 = 24 (left: 24)\nAnswer: ((7 - 3) + (6 + 4)) * 8 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24\nInput: 2 4 5 7\nSteps:\n5 + 7 = 12 (left: 2 4 12)\n4 * 2 = 8 (left: 8 12)\n12 - 8 = 4 (left: 4 4)\n4 * 4 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((2 * 4) + 5 + 7) - (4 * 4) + 8 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 1 3 4 6\nSteps:\n4 * 6 = 24 (left: 1 3 24)\n3 * 1 = 3 (left: 3 24)\n24 - 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((1 * 4) * 6) - 3 + 3 = 24\nInput: 2 4 5 7\nSteps:\n4 * 5 = 20 (left: 2 7 20)\n7 - 2 = 5 (left: 5 20)\n5 * 20 = 100 (left: 100)\n100 / 4 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((2 * 4) * 5) - 7) / 1 = 24\nInput: 2 6 8 9\nSteps:\n2 * 9 = 18 (left: 6 8 18)\n6 + 8 = 14 (left: 14 18)\n14 + 18 = 32 (left: 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((2 * 9) + (6 + 8)) - 8 = 24\nInput: 3 5 8 9\nSteps:\n8 - 5 = 3 (left: 3 9 3)\n3 * 3 = 9 (left: 9 3)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * (8 - 5)) * 9) - 3 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nInput: 3 5 7 9\nSteps:\n3 * 7 = 21 (left: 5 9 21)\n21 - 5 = 16 (left: 9 16)\n16 + 9 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) + 9 - 1 = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 / 1 = 24 (left: 24)\nAnswer: ((2 * 3) - 6) * 9 / 1 = 24\nInput: 3 3 7 9\nSteps:\n3 * 7 = 21 (left: 3 9 21)\n9 - 3 = 6 (left: 6 21)\n6 * 21 = 126 (left: 126)\n126 / 5 = 24 (left: 24)\nAnswer: ((3 * 7) - 3) * 9 / 5 = 24\nInput: 2 4 5 6\nSteps:\n4 * 5 = 20 (left: 2 6 20)\n6 - 2 = 4 (left: 4 20)\n4 * 20 = 80 (left: 80)\n80 / 3 = 24 (left: 24)\nAnswer: ((2 * 4) * 5) + 6 / 3 = 24\nInput: 1 3 7 8\nSteps:\n7 - 3 = 4 (left: 1 4 8)\n4 + 1 = 5 (left: 5 8)\n5 * 8 = 40 (left: 40)\n40 / 10 = 24 (left: 24)\nAnswer: ((7 - 3) + 1) * 8 / 10 = 24",
                "10 - 6 = 4 (left: 4 6 6)\n4 * 6 = 24 (left: 6 24)\n6 * 4 = 24 (left: 24)\nAnswer: (7 - 9 + 9) * 13 = 24\nSorry, it seems like there was a mistake in the steps provided. Let me correct it:\n\nSteps:\n9 - 7 = 2 (left: 2 9 13)\n2 + 13 = 15 (left: 9 15)\n9 * 15 = 135 (left: 135)\n135 / 5 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\n\nAnswer: ((9 - 7) + 13) * 5 - 3 = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\n192 / 8 = 24 (left: 24)\nAnswer: ((3 + 5) * 6) / 4 = 24"
            ],
            "values": [
                20.0,
                40.0,
                60.0,
                60.0,
                0.003,
                60.0,
                40.0,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.398548
    },
    "926": {
        "input": "3 6 9 12",
        "step_1": {
            "steps": [
                "12 - 3 = 9 (left: 6 9 9)",
                "15 - 10 = 5 (left: 5 7 15)",
                "12 - 6 = 6 (left: 3 6 12)",
                "9 / 3 = 3 (left: 3 9 12)",
                "12 - 6 = 6 (left: 3 9 6)",
                "12 - 3 = 9 (left: 6 9 12)",
                "12 / 3 = 4 (left: 4 6 9)",
                "9 + 3 = 12 (left: 6 12 12)",
                "9 * 3 = 27 (left: 6 12 27)",
                "12 - 6 = 6 (left: 3 6 12)"
            ],
            "values": [
                22.0,
                1.002,
                20.002,
                1.002,
                2.001,
                3.0,
                22.0,
                60.0,
                2.001,
                1.002
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.0",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.6",
                "5 <- 1.7",
                "6 <- 1.0",
                "7 <- 1.6",
                "8 <- 1.0",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "12 - 3 = 9 (left: 6 9 9)",
                "12 - 3 = 9 (left: 6 9 9)",
                "",
                "",
                "12 / 3 = 4 (left: 4 6 9)",
                "9 + 3 = 12 (left: 6 12 12)",
                "12 - 3 = 9 (left: 6 9 9)",
                "12 / 3 = 4 (left: 4 6 9)",
                "12 - 3 = 9 (left: 6 9 9)",
                "12 - 6 = 6 (left: 3 6 12)"
            ]
        },
        "step_2": {
            "steps": [
                "12 - 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)",
                "12 - 3 = 9 (left: 6 9 9)\n9 * 6 = 54 (left: 9 9 54)",
                "3 x 6 = 18 (left: 18 9 12)",
                "6 * 3 = 18 (left: 9 12 18)",
                "12 / 3 = 4 (left: 4 6 9)\n9 / 4 = 2.25 (left: 2.25)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "12 - 3 = 9 (left: 6 9 9)\n9 - 6 = 3 (left: 3 9 9)",
                "12 / 3 = 4 (left: 4 6 9)\n6 - 4 = 2 (left: 2 9)",
                "12 - 3 = 9 (left: 6 9 9)\n6 + 9 = 15 (left: 9 9 15)",
                "12 - 6 = 6 (left: 3 6 12)\n12 / 6 = 2 (left: 3 2)"
            ],
            "values": [
                0.003,
                2.001,
                22.0,
                21.001,
                0.003,
                60.0,
                0.003,
                1.0,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.2",
                "2 <- 1.7",
                "3 <- 1.7",
                "4 <- 1.5",
                "5 <- 2.1",
                "6 <- 2.2",
                "7 <- 1.7",
                "8 <- 1.6",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "3 x 6 = 18 (left: 18 9 12)",
                "9 + 3 = 12 (left: 6 12 12)",
                "9 + 3 = 12 (left: 6 12 12)",
                "12 - 3 = 9 (left: 6 9 12)",
                "12 - 3 = 9 (left: 6 9 9)\n9 * 6 = 54 (left: 9 9 54)",
                "3 x 6 = 18 (left: 18 9 12)",
                "9 + 3 = 12 (left: 6 12 12)",
                "12 / 3 = 4 (left: 4 6 9)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "9 - 6 = 3 (left: 3 6 12)",
                "3 x 6 = 18 (left: 18 9 12)\n5 - 10 = -5 (left: -5 15)",
                "9 + 3 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "12 - 3 = 9 (left: 6 9 12)\n9 / 6 = 1.5 (left: 1.5 12)",
                "12 - 3 = 9 (left: 6 9 9)\n9 * 6 = 54 (left: 9 9 54)\n9 * 6 = 54 (left: 9 54)",
                "3 x 6 = 18 (left: 18 9 12)\nInput: 6 3 9 12",
                "9 + 3 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)",
                "12 / 3 = 4 (left: 4 6 9)\n9 - 6 = 3 (left: 3)",
                "6 / 3 = 2 (left: 2 9 12)"
            ],
            "values": [
                0.003,
                1.0,
                1.002,
                60.0,
                0.002,
                1.002,
                0.003,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.8",
                "2 <- 1.6",
                "3 <- 1.6",
                "4 <- 1.7",
                "5 <- 2.5",
                "6 <- 1.2",
                "7 <- 3.3",
                "8 <- 1.6",
                "9 <- 2.5"
            ],
            "resampled_steps": [
                "9 + 3 = 12 (left: 6 12 12)",
                "9 * 3 = 27 (left: 6 12 27)",
                "12 / 3 = 4 (left: 4 6 9)",
                "12 / 3 = 4 (left: 4 6 9)",
                "9 + 3 = 12 (left: 6 12 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "12 - 6 = 6 (left: 3 6 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "12 / 3 = 4 (left: 4 6 9)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)"
            ]
        },
        "step_4": {
            "steps": [
                "9 + 3 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 6)",
                "9 * 3 = 27 (left: 6 12 27)\n27 - 9 = 18 (left: 3 18)",
                "12 / 3 = 4 (left: 4 6 9)\nInput: 3 5 7 8",
                "12 / 3 = 4 (left: 4 6 9)\n4 + 6 = 10 (left: 9 10)",
                "9 + 3 = 12 (left: 6 12 12)\n6 + 12 = 18 (left: 12 18)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "12 - 6 = 6 (left: 3 6 12)\n3 * 2 = 6 (left: 6)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "12 / 3 = 4 (left: 4 6 9)\n9 / 4 = 2.25 (left: 2.25)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.001,
                0.003,
                0.001,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 2.5",
                "1 <- 3.3",
                "2 <- 1.7",
                "3 <- 2.3",
                "4 <- 2.5",
                "5 <- 3.3",
                "6 <- 3.3",
                "7 <- 3.3",
                "8 <- 3.1",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "9 + 3 = 12 (left: 6 12 12)",
                "6 * 3 = 18 (left: 9 12 18)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "3 x 6 = 18 (left: 18 9 12)\n5 - 10 = -5 (left: -5 15)",
                "12 - 3 = 9 (left: 6 9 12)"
            ]
        },
        "step_5": {
            "steps": [
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "9 + 3 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)",
                "6 * 3 = 18 (left: 9 12 18)\n9 - 12 = -3 (left: -3 18)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 ^ 12 = 4096 (left: 4096)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "3 x 6 = 18 (left: 18 9 12)\n5 - 10 = -5 (left: -5 15)\n-5 * 15 = -75 (left: -75)",
                "12 - 3 = 9 (left: 6 9 12)\n12 - 6 = 6 (left: 6 9)"
            ],
            "values": [
                60.0,
                0.003,
                20.002,
                0.003,
                60.0,
                20.002,
                0.002,
                0.001,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 5.2",
                "2 <- 1.6",
                "3 <- 3.3",
                "4 <- 5.0",
                "5 <- INIT",
                "6 <- 5.4",
                "7 <- 2.5",
                "8 <- 3.3",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "9 + 3 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)",
                "12 / 3 = 4 (left: 4 6 9)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "3 x 6 = 18 (left: 18 9 12)"
            ]
        },
        "step_6": {
            "steps": [
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 - 6 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)",
                "12 / 3 = 4 (left: 4 6 9)\n6 - 4 = 2 (left: 2 9)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 2 10)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24",
                "9 + 3 = 12 (left: 6 12 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "3 x 6 = 18 (left: 18 9 12)\n18 * 9 = 162 (left: 12 162)"
            ],
            "values": [
                60.0,
                0.003,
                0.0,
                1.0,
                60.0,
                21.001,
                60.0,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 6.4",
                "1 <- 1.2",
                "2 <- 6.0",
                "3 <- 6.4",
                "4 <- 1.7",
                "5 <- 5.5",
                "6 <- 5.0",
                "7 <- 2.5",
                "8 <- 2.3",
                "9 <- 5.4"
            ],
            "resampled_steps": [
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24",
                "12 - 6 = 6 (left: 3 6 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24",
                "9 + 3 = 12 (left: 6 12 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 ^ 12 = 4096 (left: 4096)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "6 * 3 = 18 (left: 9 12 18)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ]
        },
        "step_7": {
            "steps": [
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 3 3 5 7\n\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 15 10)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 + 7) * (5 * 3)) - 10 = 24",
                "12 - 6 = 6 (left: 3 6 12)\n12 / 4 = 3 (left: 3 2 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 * 4) * (6 - 3) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 3 9\nSteps:\n3 * 3 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\nAnswer: (2 * 3) * (3 + 9) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 ^ 12 = 4096 (left: 4096)\n4 + 0 + 9 + 6 = 19",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "6 * 3 = 18 (left: 9 12 18)\n5 / 3 = 1.6667 (left: 1.6667 7 10)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24"
            ],
            "values": [
                60.0,
                0.003,
                40.0,
                60.0,
                60.0,
                0.003,
                60.0,
                0.002,
                2.001,
                40.001
            ],
            "resampled": [
                "0 <- 7.4",
                "1 <- 7.6",
                "2 <- 6.3",
                "3 <- 6.4",
                "4 <- 7.0",
                "5 <- 6.5",
                "6 <- 7.3",
                "7 <- 5.4",
                "8 <- 3.3",
                "9 <- 7.2"
            ],
            "resampled_steps": [
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 2 10)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 3 3 5 7\n\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 15 10)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 + 7) * (5 * 3)) - 10 = 24",
                "9 + 3 = 12 (left: 6 12 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 3 9\nSteps:\n3 * 3 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\nAnswer: (2 * 3) * (3 + 9) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 * 4) * (6 - 3) = 24"
            ]
        },
        "step_8": {
            "steps": [
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 7 3 4 5\nSteps:\n7 - 3 = 4 (left: 4 5 4)\n4 + 4 = 8 (left: 5 8)\n8 * 5 = 40 (left: 40)\nAnswer: (7 - 3) * (4 + 4) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 2 10)\n2 + 10 = 12 (left: 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 1 3 7 8\nSteps:\n7 + 8 = 15 (left: 1 3 15)\n15 - 3 = 12 (left: 1 12)\n12 * 1 = 12 (left: 24)\nAnswer: (7 + 8 - 3) * 1 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 3 3 5 7\n\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 15 10)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 + 7) * (5 * 3)) - 10 = 24\nInput: 2 3 5 7\n\n2 * 3 = 6 (left: 5 6 7)\n6 + 7 = 13 (left: 5 13)\n13 - 5 = 8 (left: 8)\n8 * 8 = 64 (left: 64)\nAnswer: ((2 * 3) + (6 + 7)) - 5 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n6 * 12 = 72 (left: 12 12 72)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 3 9\nSteps:\n3 * 3 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\nAnswer: (2 * 3) * (3 + 9) = 24\nInput: 7 7 8 9\nSteps:\n7 + 8 = 15 (left: 7 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 7 = 42 (left: 42)\n42 / 7 = 6 (left: 6)\nAnswer: ((7 + 8) - 9) * 7 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 * 4) * (6 - 3) = 24\nInput: 1 3 5 8\nSteps:\n5 * 3 = 15 (left: 1 8 15)\n15 - 8 = 7 (left: 1 7)\n7 * 1 = 7 (left: 7)\nAnswer: (5 * 3) - (8 - 1) = 24"
            ],
            "values": [
                0.003,
                60.0,
                0.002,
                60.0,
                60.0,
                2.001,
                60.0,
                60.0,
                0.003,
                40.0
            ],
            "resampled": [
                "0 <- 8.1",
                "1 <- 8.1",
                "2 <- 7.0",
                "3 <- 8.3",
                "4 <- 8.3",
                "5 <- 8.6",
                "6 <- 7.6",
                "7 <- 6.4",
                "8 <- 3.3",
                "9 <- 7.3"
            ],
            "resampled_steps": [
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 7 3 4 5\nSteps:\n7 - 3 = 4 (left: 4 5 4)\n4 + 4 = 8 (left: 5 8)\n8 * 5 = 40 (left: 40)\nAnswer: (7 - 3) * (4 + 4) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 7 3 4 5\nSteps:\n7 - 3 = 4 (left: 4 5 4)\n4 + 4 = 8 (left: 5 8)\n8 * 5 = 40 (left: 40)\nAnswer: (7 - 3) * (4 + 4) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 3 3 5 7\n\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 15 10)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 + 7) * (5 * 3)) - 10 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 1 3 7 8\nSteps:\n7 + 8 = 15 (left: 1 3 15)\n15 - 3 = 12 (left: 1 12)\n12 * 1 = 12 (left: 24)\nAnswer: (7 + 8 - 3) * 1 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 1 3 7 8\nSteps:\n7 + 8 = 15 (left: 1 3 15)\n15 - 3 = 12 (left: 1 12)\n12 * 1 = 12 (left: 24)\nAnswer: (7 + 8 - 3) * 1 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 3 9\nSteps:\n3 * 3 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\nAnswer: (2 * 3) * (3 + 9) = 24\nInput: 7 7 8 9\nSteps:\n7 + 8 = 15 (left: 7 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 7 = 42 (left: 42)\n42 / 7 = 6 (left: 6)\nAnswer: ((7 + 8) - 9) * 7 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 3 9\nSteps:\n3 * 3 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\nAnswer: (2 * 3) * (3 + 9) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 7 3 4 5\nSteps:\n7 - 3 = 4 (left: 4 5 4)\n4 + 4 = 8 (left: 5 8)\n8 * 5 = 40 (left: 40)\nAnswer: (7 - 3) * (4 + 4) = 24\nInput: 8 3 6 2\nSteps:\n8 - 2 = 6 (left: 3 6 6)\n6 + 3 = 9 (left: 9 6)\n9 * 6 = 54 (left: 54)\nAnswer: ((8 - 2) + 3) * 6 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 7 3 4 5\nSteps:\n7 - 3 = 4 (left: 4 5 4)\n4 + 4 = 8 (left: 5 8)\n8 * 5 = 40 (left: 40)\nAnswer: (7 - 3) * (4 + 4) = 24\nThere is no way to obtain 24 using the numbers 7, 3, 4, and 5 with basic arithmetic operations.",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 3 3 5 7\n\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 15 10)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 + 7) * (5 * 3)) - 10 = 24\nInput: 2 3 3 9\n\n3 + 9 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n6 * 12 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((3 + 9) * (3 * 2)) / 3 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 1 3 7 8\nSteps:\n7 + 8 = 15 (left: 1 3 15)\n15 - 3 = 12 (left: 1 12)\n12 * 1 = 12 (left: 24)\nAnswer: (7 + 8 - 3) * 1 = 24\nInput: 2 3 4 6\nSteps:\n2 * 6 = 12 (left: 3 4 12)\n4 - 3 = 1 (left: 1 12)\n1 * 12 = 12 (left: 12)\n12 + 12 = 24\nAnswer: ((2 * 6) - 4 + 3) * 12 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 1 3 7 8\nSteps:\n7 + 8 = 15 (left: 1 3 15)\n15 - 3 = 12 (left: 1 12)\n12 * 1 = 12 (left: 24)\nAnswer: (7 + 8 - 3) * 1 = 24\nInput: 2 3 5 10\nSteps:\n10 - 5 = 5 (left: 2 3 5)\n5 + 3 = 8 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 10 = 26 (left: 26)\nAnswer: ((10 - 5) + 3) * 2 + 10 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 3 9\nSteps:\n3 * 3 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\nAnswer: (2 * 3) * (3 + 9) = 24\nInput: 7 7 8 9\nSteps:\n7 + 8 = 15 (left: 7 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 7 = 42 (left: 42)\n42 / 7 = 6 (left: 6)\nAnswer: ((7 + 8) - 9) * 7 = 24\nInput: 1 2 3 4\nSteps:\n3 * 4 = 12 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((1 + 2) * (3 - 4)) + 2 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 5 7\nSteps:\n5 + 7 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((5 + 7) * 2) - 6 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 5 9\nSteps:\n5 + 9 = 14 (left: 2 3 14)\n14 - 3 = 11 (left: 2 11)\n2 * 11 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((5 + 9) - 3) * (2 + 2) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 3 9\nSteps:\n3 * 3 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\nAnswer: (2 * 3) * (3 + 9) = 24\nInput: 1 2 3 8\nSteps:\n3 * 8 = 24 (left: 1 2 24)\n2 * 24 = 48 (left: 1 48)\n48 / 1 = 48 (left: 48)\nAnswer: (3 * 8) / (2 * 1) = 24"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                60.0,
                40.0,
                60.0,
                60.0,
                60.0,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 9.6",
                "1 <- 8.9",
                "2 <- 7.3",
                "3 <- 2.5",
                "4 <- 9.5",
                "5 <- 9.4",
                "6 <- 6.5",
                "7 <- 6.6",
                "8 <- 9.5",
                "9 <- 9.5"
            ],
            "resampled_steps": [
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 5 7\nSteps:\n5 + 7 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((5 + 7) * 2) - 6 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 * 4) * (6 - 3) = 24\nInput: 1 3 5 8\nSteps:\n5 * 3 = 15 (left: 1 8 15)\n15 - 8 = 7 (left: 1 7)\n7 * 1 = 7 (left: 7)\nAnswer: (5 * 3) - (8 - 1) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 3 9\nSteps:\n3 * 3 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\nAnswer: (2 * 3) * (3 + 9) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 3 9\nSteps:\n3 * 3 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\nAnswer: (2 * 3) * (3 + 9) = 24\nInput: 7 7 8 9\nSteps:\n7 + 8 = 15 (left: 7 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 7 = 42 (left: 42)\n42 / 7 = 6 (left: 6)\nAnswer: ((7 + 8) - 9) * 7 = 24\nInput: 1 2 3 4\nSteps:\n3 * 4 = 12 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((1 + 2) * (3 - 4)) + 2 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 1 3 7 8\nSteps:\n7 + 8 = 15 (left: 1 3 15)\n15 - 3 = 12 (left: 1 12)\n12 * 1 = 12 (left: 24)\nAnswer: (7 + 8 - 3) * 1 = 24\nInput: 2 3 5 10\nSteps:\n10 - 5 = 5 (left: 2 3 5)\n5 + 3 = 8 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 10 = 26 (left: 26)\nAnswer: ((10 - 5) + 3) * 2 + 10 = 24",
                "9 + 3 = 12 (left: 6 12 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 3 9\nSteps:\n3 * 3 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\nAnswer: (2 * 3) * (3 + 9) = 24\nInput: 7 7 8 9\nSteps:\n7 + 8 = 15 (left: 7 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 7 = 42 (left: 42)\n42 / 7 = 6 (left: 6)\nAnswer: ((7 + 8) - 9) * 7 = 24\nInput: 1 2 3 4\nSteps:\n3 * 4 = 12 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((1 + 2) * (3 - 4)) + 2 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 3 9\nSteps:\n3 * 3 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\nAnswer: (2 * 3) * (3 + 9) = 24\nInput: 7 7 8 9\nSteps:\n7 + 8 = 15 (left: 7 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 7 = 42 (left: 42)\n42 / 7 = 6 (left: 6)\nAnswer: ((7 + 8) - 9) * 7 = 24\nInput: 1 2 3 4\nSteps:\n3 * 4 = 12 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((1 + 2) * (3 - 4)) + 2 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 5 7\nSteps:\n5 + 7 = 12 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n12 - 6 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((5 + 7) * 2) - 6 = 24\nInput: 1 3 4 8\nSteps:\n4 * 3 = 12 (left: 1 8 12)\n12 - 8 = 4 (left: 1 4)\n4 * 4 = 16 (left: 16)\n16 + 8 = 24 (left: 24)\nAnswer: ((1 * 3) * 4) + 8 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 4 6\nSteps:\n2 * 4 = 8 (left: 3 6 8)\n6 - 3 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (2 * 4) * (6 - 3) = 24\nInput: 1 3 5 8\nSteps:\n5 * 3 = 15 (left: 1 8 15)\n15 - 8 = 7 (left: 1 7)\n7 * 1 = 7 (left: 7)\nAnswer: (5 * 3) - (8 - 1) = 24\nInput: 2 4 5 6\nSteps:\n5 * 4 = 20 (left: 2 6 20)\n6 - 2 = 4 (left: 4 20)\n4 * 20 = 80 (left: 80)\n80 / 4 = 20 (left: 20)\nAnswer: ((5 * 4) - (6 - 2)) / 4 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 3 9\nSteps:\n3 * 3 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\nAnswer: (2 * 3) * (3 + 9) = 24\nInput: 1 3 6 8\nSteps:\n6 - 3 = 3 (left: 1 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 - 3) * 8 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 3 9\nSteps:\n3 * 3 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\nAnswer: (2 * 3) * (3 + 9) = 24\nInput: 7 7 8 9\nSteps:\n7 + 8 = 15 (left: 7 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 7 = 42 (left: 42)\n42 / 7 = 6 (left: 6)\nAnswer: ((7 + 8) - 9) * 7 = 24\nInput: 1 2 3 4\nSteps:\n3 * 4 = 12 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((1 + 2) * (3 - 4)) + 2 = 24\nInput: 5 6 7 8\nSteps:\n5 * 6 = 30 (left: 7 8 30)\n8 - 7 = 1 (left: 1 30)\n1 * 30 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((5 * 6) - 7) + 8 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 1 3 7 8\nSteps:\n7 + 8 = 15 (left: 1 3 15)\n15 - 3 = 12 (left: 1 12)\n12 * 1 = 12 (left: 24)\nAnswer: (7 + 8 - 3) * 1 = 24\nInput: 2 3 5 10\nSteps:\n10 - 5 = 5 (left: 2 3 5)\n5 + 3 = 8 (left: 2 8)\n8 * 2 = 16 (left: 16)\n16 + 10 = 26 (left: 26)\nAnswer: ((10 - 5) + 3) * 2 + 10 = 24\nInput: 4 5 6 7\nSteps:\n5 + 7 = 12 (left: 4 6 12)\n6 * 4 = 24 (left: 24)\nAnswer: (5 + 7) * 6 / 4 = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 4 6\nSteps:\n2 * 3 = 6 (left: 4 6 6)\n6 - 4 = 2 (left: 2 6)\n2 * 6 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (2 * 3) * ((6 - 4) * 6) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 3 9\nSteps:\n3 * 3 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\nAnswer: (2 * 3) * (3 + 9) = 24\nInput: 7 7 8 9\nSteps:\n7 + 8 = 15 (left: 7 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 7 = 42 (left: 42)\n42 / 7 = 6 (left: 6)\nAnswer: ((7 + 8) - 9) * 7 = 24\nInput: 1 2 3 4\nSteps:\n3 * 4 = 12 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((1 + 2) * (3 - 4)) + 2 = 24\nInput: 2 4 6 8\nSteps:\n6 * 4 = 24 (left: 2 8 24)\n8 - 2 = 6 (left: 6 24)\n6 * 24 = 144 (left: 144)\nAnswer: (2 * 4) * (6 - 8) = 24",
                "9 + 3 = 12 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (9 + 3) * (6 / 12) = 24\nInput: 2 3 3 9\nSteps:\n3 * 3 = 9 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)\n7 * 9 = 63 (left: 63)\nAnswer: (2 * 3) * (3 + 9) = 24\nInput: 7 7 8 9\nSteps:\n7 + 8 = 15 (left: 7 9 15)\n15 - 9 = 6 (left: 6 15)\n6 * 7 = 42 (left: 42)\n42 / 7 = 6 (left: 6)\nAnswer: ((7 + 8) - 9) * 7 = 24\nInput: 1 2 3 4\nSteps:\n3 * 4 = 12 (left: 1 2 12)\n12 - 2 = 10 (left: 1 10)\n10 + 1 = 11 (left: 11)\n11 * 2 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((1 + 2) * (3 - 4)) + 2 = 24\nInput: 2 5 6 7\nSteps:\n5 + 7 = 12 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\n144 / 6 = 24 (left: 24)\nAnswer: ((5 + 7) * 2) / 6 = 24"
            ],
            "values": [
                0.0,
                60.0,
                60.0,
                0.003,
                40.0,
                40.0,
                60.0,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.453478
    },
    "927": {
        "input": "6 9 12 13",
        "step_1": {
            "steps": [
                "10 - 5 = 5 (left: 4 5 8)",
                "9 * 6 = 54 (left: 12 13 54)",
                "9 - 5 = 4 (left: 3 4 7)",
                "9 - 6 = 3 (left: 3 12 13)",
                "12 - 6 = 6 (left: 6 9 13)",
                "13 - 6 = 7 (left: 6 9 7)",
                "13 - 9 = 4 (left: 6 12 4)",
                "12 - 9 = 3 (left: 3 6 13)",
                "9 - 6 = 3 (left: 3 12 13)",
                "6 * 9 = 54 (left: 12 13 54)"
            ],
            "values": [
                3.0,
                0.002,
                1.002,
                3.0,
                0.003,
                3.0,
                60.0,
                2.0,
                2.001,
                0.003
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 1.6",
                "2 <- 1.0",
                "3 <- 1.7",
                "4 <- 1.8",
                "5 <- INIT",
                "6 <- 1.8",
                "7 <- 1.5",
                "8 <- 1.6",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 6 12 4)",
                "13 - 9 = 4 (left: 6 12 4)",
                "10 - 5 = 5 (left: 4 5 8)",
                "12 - 9 = 3 (left: 3 6 13)",
                "9 - 6 = 3 (left: 3 12 13)",
                "",
                "9 - 6 = 3 (left: 3 12 13)",
                "13 - 6 = 7 (left: 6 9 7)",
                "13 - 9 = 4 (left: 6 12 4)",
                "13 - 9 = 4 (left: 6 12 4)"
            ]
        },
        "step_2": {
            "steps": [
                "13 - 9 = 4 (left: 6 12 4)\n12 + 4 = 16 (left: 6 16)",
                "13 - 9 = 4 (left: 6 12 4)\n12 / 4 = 3 (left: 3 4)",
                "10 - 5 = 5 (left: 4 5 8)\n5 + 8 = 13 (left: 4 13)",
                "12 - 9 = 3 (left: 3 6 13)\n10 / 5 = 2.0 (left: 4 2.0 20)",
                "9 - 6 = 3 (left: 3 12 13)\n3 * 12 = 36 (left: 36 13)",
                "6 + 9 = 15 (left: 12 13 15)",
                "9 - 6 = 3 (left: 3 12 13)\n25 - 4 = 21 (left: 21 20 25)",
                "13 - 6 = 7 (left: 6 9 7)\n5 / 3 = 1.66666666667 (left: 1.66666666667 7 2)",
                "13 - 9 = 4 (left: 6 12 4)\n12 / 4 = 3 (left: 3 6)",
                "13 - 9 = 4 (left: 6 12 4)\n6 / 12 = 0.5 (left: 0.5 4)"
            ],
            "values": [
                0.003,
                0.0,
                0.003,
                2.001,
                0.002,
                21.001,
                1.002,
                3.0,
                2.0,
                0.002
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 1.6",
                "2 <- 1.6",
                "3 <- 1.6",
                "4 <- 2.5",
                "5 <- 1.6",
                "6 <- INIT",
                "7 <- 1.6",
                "8 <- 2.5",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 6 12 4)",
                "13 - 9 = 4 (left: 6 12 4)",
                "13 - 9 = 4 (left: 6 12 4)",
                "13 - 9 = 4 (left: 6 12 4)",
                "6 + 9 = 15 (left: 12 13 15)",
                "13 - 9 = 4 (left: 6 12 4)",
                "",
                "13 - 9 = 4 (left: 6 12 4)",
                "6 + 9 = 15 (left: 12 13 15)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "13 - 9 = 4 (left: 6 12 4)\n4 * 3 = 12 (left: 12 10 24)",
                "13 - 9 = 4 (left: 6 12 4)\n6 * 4 = 24 (left: 12 24)",
                "13 - 9 = 4 (left: 6 12 4)\nInput: 2 4",
                "13 - 9 = 4 (left: 6 12 4)\n12 / 6 = 2 (left: 2 4)",
                "6 + 9 = 15 (left: 12 13 15)\n13 - 15 = -2 (left: 12)",
                "13 - 9 = 4 (left: 6 12 4)\n4 + 6 = 10 (left: 12 10)",
                "18 - 12 = 6 (left: 4 6 6)",
                "13 - 9 = 4 (left: 6 12 4)\n12 / 6 = 2 (left: 2 4)",
                "6 + 9 = 15 (left: 12 13 15)\n13 - 15 = -2 (left: 12)",
                "9 + 12 = 21 (left: 6 13 21)"
            ],
            "values": [
                1.002,
                0.003,
                0.003,
                1.001,
                0.001,
                0.003,
                22.0,
                1.001,
                0.002,
                2.001
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 1.7",
                "2 <- 1.6",
                "3 <- 1.6",
                "4 <- 1.6",
                "5 <- 2.5",
                "6 <- 1.6",
                "7 <- 1.6",
                "8 <- 1.2",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 6 12 4)",
                "12 - 9 = 3 (left: 3 6 13)",
                "13 - 9 = 4 (left: 6 12 4)",
                "13 - 9 = 4 (left: 6 12 4)",
                "13 - 9 = 4 (left: 6 12 4)",
                "6 + 9 = 15 (left: 12 13 15)",
                "13 - 9 = 4 (left: 6 12 4)",
                "13 - 9 = 4 (left: 6 12 4)",
                "9 - 5 = 4 (left: 3 4 7)",
                "13 - 9 = 4 (left: 6 12 4)"
            ]
        },
        "step_4": {
            "steps": [
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)",
                "12 - 9 = 3 (left: 3 6 13)\n3 * 6 = 18 (left: 18 13)",
                "13 - 9 = 4 (left: 6 12 4)\n4 * 6 = 24 (left: 12 24)",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 12 = -6 (left: -6)",
                "6 + 9 = 15 (left: 12 13 15)\n13 * 15 = 195 (left: 12)",
                "13 - 9 = 4 (left: 6 12 4)\n12 + 4 = 16 (left: 16)",
                "13 - 9 = 4 (left: 6 12 4)\n6 + 12 = 18 (left: 4 18)",
                "9 - 5 = 4 (left: 3 4 7)\n3 * 4 = 12 (left: 12 7)",
                "13 - 9 = 4 (left: 6 12 4)\n12 / 4 = 3 (left: 3 4)"
            ],
            "values": [
                60.0,
                0.003,
                0.003,
                21.001,
                0.0,
                0.003,
                0.003,
                0.003,
                1.002,
                22.0
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 1.6",
                "2 <- 4.0",
                "3 <- 4.9",
                "4 <- 1.6",
                "5 <- 1.6",
                "6 <- INIT",
                "7 <- 4.0",
                "8 <- 4.3",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 6 12 4)",
                "13 - 9 = 4 (left: 6 12 4)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)",
                "13 - 9 = 4 (left: 6 12 4)\n12 / 4 = 3 (left: 3 4)",
                "13 - 9 = 4 (left: 6 12 4)",
                "13 - 9 = 4 (left: 6 12 4)",
                "",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)",
                "13 - 9 = 4 (left: 6 12 4)"
            ]
        },
        "step_5": {
            "steps": [
                "13 - 9 = 4 (left: 6 12 4)\n12 / 6 = 2 (left: 2 4)",
                "13 - 9 = 4 (left: 6 12 4)\n4 + 6 = 10 (left: 10 4)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "13 - 9 = 4 (left: 6 12 4)\n12 / 4 = 3 (left: 3 4)\nInput: 5 10",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 4 = 8 (left: 8 4)",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 4 = 2 (left: 2)",
                "7 * 9 = 63 (left: 3 11 63)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n4 - 6 = -2 (left: -2)",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)\n6 - 3 = 3 (left: 3 1)",
                "13 - 9 = 4 (left: 6 12 4)\n12 / 6 = 2 (left: 2 4)"
            ],
            "values": [
                0.003,
                0.003,
                60.0,
                0.003,
                0.002,
                0.003,
                0.003,
                0.0,
                20.001,
                1.001
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 4.9",
                "2 <- 5.8",
                "3 <- 5.2",
                "4 <- 1.6",
                "5 <- 3.6",
                "6 <- 5.2",
                "7 <- 5.2",
                "8 <- 5.8",
                "9 <- 4.0"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "13 - 9 = 4 (left: 6 12 4)\n12 / 4 = 3 (left: 3 4)",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)\n6 - 3 = 3 (left: 3 1)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "13 - 9 = 4 (left: 6 12 4)",
                "18 - 12 = 6 (left: 4 6 6)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)\n6 - 3 = 3 (left: 3 1)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)"
            ]
        },
        "step_6": {
            "steps": [
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 / 4 = 3 (left: 3 4)\n7 + 9 = 16 (left: 16)",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)\n6 - 3 = 3 (left: 3 1)\n3 * 1 = 3 (left: 3)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 4 = 8 (left: 6 8)",
                "18 - 12 = 6 (left: 4 6 6)\n6 / 4 = 1.5 (left: 1.5 6)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)\n6 - 3 = 3 (left: 3 1)\n3 * 1 = 3 (left: 3)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 / 4 = 1.5 (left: 1.5)"
            ],
            "values": [
                60.0,
                0.002,
                0.002,
                60.0,
                0.003,
                0.0,
                40.001,
                60.0,
                0.001,
                0.002
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 6.3",
                "2 <- 6.7",
                "3 <- 2.5",
                "4 <- 6.0",
                "5 <- 4.3",
                "6 <- 4.0",
                "7 <- 5.2",
                "8 <- 5.8",
                "9 <- 3.6"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 6 12 4)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24",
                "6 + 9 = 15 (left: 12 13 15)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)\n6 - 3 = 3 (left: 3 1)",
                "18 - 12 = 6 (left: 4 6 6)"
            ]
        },
        "step_7": {
            "steps": [
                "13 - 9 = 4 (left: 6 12 4)\n5.5 + 6 = 11.5 (left: 11.5 21 8)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 * 2 = 6 (left: 6 24)\n6 * 24 = 24 (left: 24)\nAnswer: (4 * 6) / (3 * 2) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 5) - 4) * 3 * 2 = 24",
                "6 + 9 = 15 (left: 12 13 15)\n13 - 12 = 1 (left: 1 13 15)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 5) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)\n10 - 5 = 5 (left: 4 5)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 + 4 = 10 (left: 10)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)\n6 - 3 = 3 (left: 3 1)\n3 - 1 = 2 (left: 2)",
                "18 - 12 = 6 (left: 4 6 6)\n6 - 4 = 2 (left: 2 6)"
            ],
            "values": [
                3.0,
                60.0,
                60.0,
                0.003,
                60.0,
                41.0,
                0.001,
                60.0,
                0.001,
                0.001
            ],
            "resampled": [
                "0 <- 6.6",
                "1 <- 7.5",
                "2 <- 4.0",
                "3 <- 7.2",
                "4 <- 5.2",
                "5 <- 7.4",
                "6 <- 7.7",
                "7 <- 7.1",
                "8 <- 6.6",
                "9 <- 7.7"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)\n10 - 5 = 5 (left: 4 5)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 5) - 4) * 3 * 2 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 5) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 * 2 = 6 (left: 6 24)\n6 * 24 = 24 (left: 24)\nAnswer: (4 * 6) / (3 * 2) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24"
            ]
        },
        "step_8": {
            "steps": [
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 - 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 8) + 6) * 4 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)\n10 - 5 = 5 (left: 4 5)\n5 - 4 = 1 (left: 1)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n4 * 6 = 24 (left: 24)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n4 * 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 + 5) - 4) * 3 * 2 = 24\nInput: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 * 2 = 6 (left: 6 24)\n6 * 6 = 36 (left: 36)\nAnswer: ((2 * 4) * 6) / 3 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 5) = 24\nInput: 2 3 4 4\nSteps:\n3 + 4 = 7 (left: 2 4 7)\n4 - 2 = 2 (left: 2 7)\n2 * 7 = 14 (left: 14)\n4 * 14 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: (((2 + 3) * 4) - 4) * 14 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 4 5 6\nSteps:\n5 + 6 = 11 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1)\n1 * 24 = 24 \nAnswer: ((5 + 6) * (4 * 3)) - 11 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 * 2 = 6 (left: 6 24)\n6 * 24 = 24 (left: 24)\nAnswer: (4 * 6) / (3 * 2) = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 5 7 3)\n5 + 7 = 12 (left: 3 12)\n3 * 12 = 36 (left: 36)\n36 / 3 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((6 - 3) + (5 + 7)) * 2 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 6 7 8\nSteps:\n6 * 3 = 18 (left: 7 8 18)\n8 - 7 = 1 (left: 1 18)\n18 * 1 = 18 (left: 18)\nAnswer: (8 - 7) * (6 * 3) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 7 9\nSteps:\n7 - 3 = 4 (left: 3 9 4)\n4 * 3 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((7 - 3) * 3) + (9 + 12) = 24"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                40.0,
                60.0,
                60.0,
                60.0,
                60.0,
                40.0,
                60.0
            ],
            "resampled": [
                "0 <- 8.0",
                "1 <- 5.2",
                "2 <- 6.6",
                "3 <- 8.5",
                "4 <- 8.2",
                "5 <- 8.8",
                "6 <- 7.5",
                "7 <- 8.5",
                "8 <- 8.8",
                "9 <- 8.9"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 - 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 8) + 6) * 4 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 5) = 24\nInput: 2 3 4 4\nSteps:\n3 + 4 = 7 (left: 2 4 7)\n4 - 2 = 2 (left: 2 7)\n2 * 7 = 14 (left: 14)\n4 * 14 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: (((2 + 3) * 4) - 4) * 14 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n4 * 6 = 24 (left: 24)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 6 7 8\nSteps:\n6 * 3 = 18 (left: 7 8 18)\n8 - 7 = 1 (left: 1 18)\n18 * 1 = 18 (left: 18)\nAnswer: (8 - 7) * (6 * 3) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)\n10 - 5 = 5 (left: 4 5)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 5) = 24\nInput: 2 3 4 4\nSteps:\n3 + 4 = 7 (left: 2 4 7)\n4 - 2 = 2 (left: 2 7)\n2 * 7 = 14 (left: 14)\n4 * 14 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: (((2 + 3) * 4) - 4) * 14 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 6 7 8\nSteps:\n6 * 3 = 18 (left: 7 8 18)\n8 - 7 = 1 (left: 1 18)\n18 * 1 = 18 (left: 18)\nAnswer: (8 - 7) * (6 * 3) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 7 9\nSteps:\n7 - 3 = 4 (left: 3 9 4)\n4 * 3 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((7 - 3) * 3) + (9 + 12) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 - 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 8) + 6) * 4 = 24\nInput: 2 3 5 8\nSteps:\n5 - 3 = 2 (left: 2 8)\n2 * 8 = 16 (left: 16 2)\n16 - 2 = 14 (left: 14)\n14 + 10 = 24 (left: 24)\nAnswer: ((5 - 3) * 8) + 10 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n3 * 7 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * 4) - 5) + 3 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 5) = 24\nInput: 2 3 4 4\nSteps:\n3 + 4 = 7 (left: 2 4 7)\n4 - 2 = 2 (left: 2 7)\n2 * 7 = 14 (left: 14)\n4 * 14 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: (((2 + 3) * 4) - 4) * 14 = 24\nInput: 1 2 3 4\nSteps:\n3 * 4 = 12 (left: 1 2 12)\n2 + 12 = 14 (left: 1 14)\n14 - 1 = 13 (left: 13)\n13 * 2 = 26 (left: 26)\n26 - 4 = 22 (left: 22)\n22 + 1 = 23 (left: 23)\n23 + 3 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: ((1 + (2 * 3)) - 4) * ((2 + 1) + 3) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (12 - (13 - 9)) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 6 7 8\nSteps:\n6 * 3 = 18 (left: 7 8 18)\n8 - 7 = 1 (left: 1 18)\n18 * 1 = 18 (left: 18)\nAnswer: (8 - 7) * (6 * 3) = 24\nInput: 2 4 5 6\nSteps:\n2 * 6 = 12 (left: 4 5 12)\n5 + 4 = 9 (left: 9 12)\n12 - 9 = 3 (left: 3 9)\n3 * 8 = 24 (left: 24)\nAnswer: ((2 * 6) + (5 + 4)) * (12 - 9) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)\n10 - 5 = 5 (left: 4 5)\n5 - 4 = 1 (left: 1)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 5) = 24\nInput: 2 3 4 4\nSteps:\n3 + 4 = 7 (left: 2 4 7)\n4 - 2 = 2 (left: 2 7)\n2 * 7 = 14 (left: 14)\n4 * 14 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: (((2 + 3) * 4) - 4) * 14 = 24\nInput: 1 2 3 6\nSteps:\n2 * 6 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (1 * (2 * 6)) * 3 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 6 7 8\nSteps:\n6 * 3 = 18 (left: 7 8 18)\n8 - 7 = 1 (left: 1 18)\n18 * 1 = 18 (left: 18)\nAnswer: (8 - 7) * (6 * 3) = 24\nInput: 2 3 5 8\nSteps:\n3 * 2 = 6 (left: 5 6 8)\n8 - 5 = 3 (left: 3 6)\n3 * 6 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 2) + (8 - 5)) * 6 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 7 9\nSteps:\n7 - 3 = 4 (left: 3 9 4)\n4 * 3 = 12 (left: 9 12)\n9 + 12 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((7 - 3) * 3) + (9 + 12) = 24\nInput: 2 3 5 6\nSteps:\n5 + 3 = 8 (left: 2 6 8)\n8 - 6 = 2 (left: 2 2)\n2 * 2 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: ((5 + 3) - 2) * 6 = 24"
            ],
            "values": [
                40.0,
                60.0,
                60.0,
                60.0,
                20.002,
                40.0,
                0.003,
                60.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 7.5",
                "1 <- 9.1",
                "2 <- 4.3",
                "3 <- 8.0",
                "4 <- 7.5",
                "5 <- 7.4",
                "6 <- 9.2",
                "7 <- 7.4",
                "8 <- 8.6",
                "9 <- 8.5"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)\n10 - 5 = 5 (left: 4 5)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 - 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 8) + 6) * 4 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)\n10 - 5 = 5 (left: 4 5)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 5) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n3 * 7 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * 4) - 5) + 3 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 5) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 4 5 6\nSteps:\n5 + 6 = 11 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1)\n1 * 24 = 24 \nAnswer: ((5 + 6) * (4 * 3)) - 11 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 5) = 24\nInput: 2 3 4 4\nSteps:\n3 + 4 = 7 (left: 2 4 7)\n4 - 2 = 2 (left: 2 7)\n2 * 7 = 14 (left: 14)\n4 * 14 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: (((2 + 3) * 4) - 4) * 14 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)\n10 - 5 = 5 (left: 4 5)\n10 + 3 = 13 (left: 3 13)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 7 8\nSteps:\n3 * 7 = 21 (left: 3 8 21)\n21 - 8 = 13 (left: 3 13)\n13 + 3 = 16 (left: 16)\n16 * 1 = 24 (left: 24)\nAnswer: ((3 * 7) - 8) + 3 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)\n6 / 3 = 2 (left: 2 1)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 - 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((3 * 8) + 6) * 4 = 24\nInput: 1 3 5 7\nSteps:\n7 - 5 = 2 (left: 1 3 2)\n3 * 2 = 6 (left: 1 6)\n6 * 1 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((7 - 5) * 3) * 4 = 24",
                "13 - 9 = 4 (left: 6 12 4)\n6 - 5 = 1 (left: 3 6 1)\n10 - 5 = 5 (left: 4 5)\n4 + 5 = 9 (left: 9)",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 5) = 24\nInput: 2 3 4 6\nSteps:\n4 * 6 = 24 (left: 2 3 24)\n3 + 2 = 5 (left: 5 24)\n5 * 24 = 120 (left: 120)\nAnswer: (3 + 2) * (4 * 6) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n3 * 7 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * 4) - 5) + 3 = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n6 * 2 = 12 (left: 12 24)\n12 + 24 = 36 (left: 36)\nAnswer: (3 * 8) + (6 * 2) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 5) = 24\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (2 * 6) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 4 5 6\nSteps:\n5 + 6 = 11 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1)\n1 * 24 = 24 \nAnswer: ((5 + 6) * (4 * 3)) - 11 = 24\nInput: 2 3 5 8\nSteps:\n3 * 8 = 24 (left: 2 5 24)\n5 - 2 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: (3 * 8) / ((5 - 2) * 24) = 24",
                "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (12 - (13 - 9)) = 24\nInput: 3 3 5 8\nSteps:\n3 * 8 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 5) = 24\nInput: 2 3 4 4\nSteps:\n3 + 4 = 7 (left: 2 4 7)\n4 - 2 = 2 (left: 2 7)\n2 * 7 = 14 (left: 14)\n4 * 14 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\n28 - 4 = 24 (left: 24)\nAnswer: (((2 + 3) * 4) - 4) * 14 = 24\nInput: 2 2 6 9\nSteps:\n2 * 9 = 18 (left: 2 6 18)\n6 - 2 = 4 (left: 4 18)\n4 * 18 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((2 * 9) * (6 - 2)) / 3 = 24"
            ],
            "values": [
                0.003,
                60.0,
                0.002,
                40.0,
                0.002,
                60.0,
                60.0,
                60.0,
                40.0,
                40.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.5142885
    },
    "928": {
        "input": "4 7 9 13",
        "step_1": {
            "steps": [
                "4 + 7 = 11 (left: 9 11 13)",
                "7 / 4 = 1.75 (left: 1.75 9 13)",
                "13 / 4 = 3.25 (left: 3.25 7 9)",
                "7 / 4 = 1.75 (left: 1.75 9 13)",
                "4 * 7 = 28 (left: 9 13 28)",
                "4 * 7 = 28 (left: 9 13 28)",
                "7 - 4 = 3 (left: 3 9 13)",
                "9 + 4 = 13 (left: 7 13 13)",
                "9 - 4 = 5 (left: 5 7 13)",
                "13 / 4 = 3.25 (left: 3.25 7 9)"
            ],
            "values": [
                0.003,
                0.002,
                1.002,
                2.001,
                3.0,
                2.001,
                1.002,
                22.0,
                2.001,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.7",
                "2 <- 1.7",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- 1.9",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "",
                "9 + 4 = 13 (left: 7 13 13)",
                "9 + 4 = 13 (left: 7 13 13)",
                "",
                "",
                "",
                "13 / 4 = 3.25 (left: 3.25 7 9)",
                "",
                "",
                "9 - 4 = 5 (left: 5 7 13)"
            ]
        },
        "step_2": {
            "steps": [
                "9 + 4 = 13 (left: 7 13 13)",
                "9 + 4 = 13 (left: 7 13 13)\n13 - 7 = 6 (left: 6 13)",
                "9 + 4 = 13 (left: 7 13 13)\n7 + 13 = 20 (left: 13 20)",
                "4 + 7 = 11 (left: 9 11 13)",
                "9 + 7 = 16 (left: 4 16 13)",
                "13 - 9 = 4 (left: 4 7 13)",
                "13 / 4 = 3.25 (left: 3.25 7 9)\n30 - 4 = 26 (left: 10 20 26)",
                "13 - 4 = 9 (left: 7 9 9)",
                "13 - 4 = 9 (left: 7 9 9)",
                "9 - 4 = 5 (left: 5 7 13)\nInput: 3 9 6 4"
            ],
            "values": [
                20.002,
                0.003,
                0.003,
                2.001,
                2.0,
                2.001,
                1.002,
                3.0,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.7",
                "2 <- 1.7",
                "3 <- INIT",
                "4 <- 1.5",
                "5 <- 2.0",
                "6 <- 2.0",
                "7 <- 1.7",
                "8 <- 1.7",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "9 + 4 = 13 (left: 7 13 13)",
                "9 + 4 = 13 (left: 7 13 13)",
                "9 + 4 = 13 (left: 7 13 13)",
                "",
                "4 * 7 = 28 (left: 9 13 28)",
                "9 + 4 = 13 (left: 7 13 13)",
                "9 + 4 = 13 (left: 7 13 13)",
                "9 + 4 = 13 (left: 7 13 13)",
                "9 + 4 = 13 (left: 7 13 13)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "9 + 4 = 13 (left: 7 13 13)\n7 * 13 = 91 (left: 13 91)",
                "9 + 4 = 13 (left: 7 13 13)\n13 - 7 = 6 (left: 6 13)",
                "9 + 4 = 13 (left: 7 13 13)\n13 - 7 = 6 (left: 6 13)",
                "9 - 4 = 5 (left: 5 7 9)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)",
                "9 + 4 = 13 (left: 7 13 13)\n7 + 13 = 20 (left: 13 20)",
                "9 + 4 = 13 (left: 7 13 13)\n13 * 7 = 91 (left: 13 91)",
                "9 + 4 = 13 (left: 7 13 13)\n7 * 13 = 91 (left: 13 91)",
                "9 + 4 = 13 (left: 7 13 13)\n13 - 7 = 6 (left: 6 13)",
                "13 + 4 = 17 (left: 7 9 17)"
            ],
            "values": [
                0.003,
                1.002,
                0.003,
                3.0,
                20.002,
                0.003,
                1.002,
                0.002,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.7",
                "2 <- 3.1",
                "3 <- 3.4",
                "4 <- 1.7",
                "5 <- 2.0",
                "6 <- 3.4",
                "7 <- 1.7",
                "8 <- 3.4",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "9 + 4 = 13 (left: 7 13 13)",
                "9 + 4 = 13 (left: 7 13 13)",
                "9 + 4 = 13 (left: 7 13 13)\n13 - 7 = 6 (left: 6 13)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)",
                "9 + 4 = 13 (left: 7 13 13)",
                "9 + 4 = 13 (left: 7 13 13)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)",
                "9 + 4 = 13 (left: 7 13 13)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)",
                "13 - 4 = 9 (left: 7 9 9)"
            ]
        },
        "step_4": {
            "steps": [
                "9 + 4 = 13 (left: 7 13 13)\n7 - 13 = -6 (left: -6 13)",
                "9 + 4 = 13 (left: 7 13 13)\n13 - 7 = 6 (left: 6 13)",
                "9 + 4 = 13 (left: 7 13 13)\n13 - 7 = 6 (left: 6 13)\n6 + 13 = 19 (left: 19)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n6 + 12 = 18 (left: 18 18)",
                "9 + 4 = 13 (left: 7 13 13)\n7 + 13 = 20 (left: 13 20)",
                "9 + 4 = 13 (left: 7 13 13)\n7 + 13 = 20 (left: 13 20)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n9 / 3 = 3 (left: 3 3 12)",
                "9 + 4 = 13 (left: 7 13 13)\n13 / 7 = 1 (left: 1 13)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n4 + 13 = 17 (left: 17 28)",
                "13 - 4 = 9 (left: 7 9 9)\n9 - 7 = 2 (left: 2 9 9)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                2.001,
                0.003,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 3.4",
                "1 <- 1.7",
                "2 <- 1.5",
                "3 <- INIT",
                "4 <- 3.4",
                "5 <- 3.4",
                "6 <- 3.4",
                "7 <- 2.8",
                "8 <- 3.6",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)",
                "9 + 4 = 13 (left: 7 13 13)",
                "4 * 7 = 28 (left: 9 13 28)",
                "",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)",
                "13 - 4 = 9 (left: 7 9 9)",
                "9 + 4 = 13 (left: 7 13 13)\n13 * 7 = 91 (left: 13 91)",
                "9 + 4 = 13 (left: 7 13 13)"
            ]
        },
        "step_5": {
            "steps": [
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)",
                "9 + 4 = 13 (left: 7 13 13)\n13 / 7 = 1 (left: 1 13)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)",
                "Input: 3 5 10 15",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n4 / 13 = 0.3077 (left: 0.3077 13 28)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n4 + 13 = 17 (left: 17 28)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\nInput: 6 9 12 18",
                "13 - 4 = 9 (left: 7 9 9)\n4 + 6 = 10 (left: 10 12 17)",
                "9 + 4 = 13 (left: 7 13 13)\n13 * 7 = 91 (left: 13 91)\n13 - 91 = -78 (left: -78)",
                "9 + 4 = 13 (left: 7 13 13)\n13 - 7 = 6 (left: 6 13)"
            ],
            "values": [
                41.0,
                0.003,
                40.001,
                0.003,
                3.0,
                0.003,
                0.003,
                2.001,
                0.0,
                1.002
            ],
            "resampled": [
                "0 <- 4.9",
                "1 <- 5.0",
                "2 <- 5.2",
                "3 <- 3.4",
                "4 <- 1.7",
                "5 <- 4.9",
                "6 <- 5.2",
                "7 <- 5.2",
                "8 <- INIT",
                "9 <- 1.7"
            ],
            "resampled_steps": [
                "13 - 4 = 9 (left: 7 9 9)\n9 - 7 = 2 (left: 2 9 9)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)",
                "9 + 4 = 13 (left: 7 13 13)",
                "13 - 4 = 9 (left: 7 9 9)\n9 - 7 = 2 (left: 2 9 9)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)",
                "",
                "9 + 4 = 13 (left: 7 13 13)"
            ]
        },
        "step_6": {
            "steps": [
                "13 - 4 = 9 (left: 7 9 9)\n9 - 7 = 2 (left: 2 9 9)\n9 - 2 = 7 (left: 7 9)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 / 4 = 3.25 (left: 3.25 28)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n12 * 5 = 60 (left: 60 20 30)",
                "9 + 4 = 13 (left: 7 13 13)\n13 * 7 = 91 (left: 91)",
                "13 - 4 = 9 (left: 7 9 9)\n9 - 7 = 2 (left: 2 9 9)\n9 / 2 = 4.5 (left: 4.5 9)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 / 4 = 3.25 (left: 3.25 28)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 - 4 = 9 (left: 9 13 28)",
                "4 + 7 = 11 (left: 9 11 13)",
                "9 + 4 = 13 (left: 7 13 13)\n13 - 7 = 6 (left: 6 13)"
            ],
            "values": [
                0.002,
                60.0,
                0.003,
                2.001,
                0.003,
                1.002,
                0.003,
                1.002,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 6.1",
                "1 <- 6.1",
                "2 <- 6.1",
                "3 <- 6.1",
                "4 <- 5.0",
                "5 <- 1.7",
                "6 <- 5.2",
                "7 <- 6.1",
                "8 <- 6.1",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)",
                "9 + 4 = 13 (left: 7 13 13)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)",
                ""
            ]
        },
        "step_7": {
            "steps": [
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n9 / 3 = 3 (left: 3)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n9 / 1 = 9 (left: 9)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n9 - 12 = -3 (left: 3 6 -3)",
                "9 + 4 = 13 (left: 7 13 13)\n13 * 7 = 91 (left: 13 91)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 * 4 = 52 (left: 52 28)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n9 - 1 = 8 (left: 8)",
                "7 - 4 = 3 (left: 3 9 13)"
            ],
            "values": [
                0.001,
                0.003,
                0.002,
                0.002,
                60.0,
                2.001,
                3.0,
                0.0,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 5.2",
                "2 <- 7.4",
                "3 <- 7.4",
                "4 <- 6.1",
                "5 <- 6.3",
                "6 <- 7.6",
                "7 <- 7.4",
                "8 <- 3.4",
                "9 <- 3.4"
            ],
            "resampled_steps": [
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n9 - 12 = -3 (left: 3 6 -3)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n9 - 12 = -3 (left: 3 6 -3)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n12 * 5 = 60 (left: 60 20 30)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 * 4 = 52 (left: 52 28)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n9 - 12 = -3 (left: 3 6 -3)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)"
            ]
        },
        "step_8": {
            "steps": [
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 + 4 = 17 (left: 17 28)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n15 - 6 = 9 (left: 6 9)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n9 - 12 = -3 (left: 3 6 -3)\n3 * -3 = -9 (left: -9)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n9 - 12 = -3 (left: 3 6 -3)\n1 * 9 = 9 (left: 5)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n8 - 7 = 1 (left: 1 9)\n1 + 9 = 10 (left: 10)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n12 * 5 = 60 (left: 60 20 30)\n20 * 30 = 600 (left: 60 600)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 * 4 = 52 (left: 52 28)\n52 - 28 = 24 (left: 24)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n9 - 12 = -3 (left: 3 6 -3)\n3 * 6 = 18 (left: 18 -3)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n4 / 13 = 0.3077 (left: 0.3077 28)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n28 - 4 = 24 (left: 13 24)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.0,
                0.002,
                21.001,
                60.0,
                0.003,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 8.6",
                "2 <- 8.6",
                "3 <- 7.4",
                "4 <- 7.4",
                "5 <- 7.4",
                "6 <- 8.6",
                "7 <- 8.6",
                "8 <- 8.6",
                "9 <- 8.6"
            ],
            "resampled_steps": [
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 * 4 = 52 (left: 52 28)\n52 - 28 = 24 (left: 24)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 * 4 = 52 (left: 52 28)\n52 - 28 = 24 (left: 24)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n9 - 12 = -3 (left: 3 6 -3)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n9 - 12 = -3 (left: 3 6 -3)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n9 - 12 = -3 (left: 3 6 -3)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 * 4 = 52 (left: 52 28)\n52 - 28 = 24 (left: 24)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 * 4 = 52 (left: 52 28)\n52 - 28 = 24 (left: 24)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 * 4 = 52 (left: 52 28)\n52 - 28 = 24 (left: 24)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 * 4 = 52 (left: 52 28)\n52 - 28 = 24 (left: 24)"
            ]
        },
        "step_9": {
            "steps": [
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n4 - 3 = 1 (left: 1 2)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 * 4 = 52 (left: 52 28)\n52 - 28 = 24 (left: 24)\nAnswer: ((4 * 7) - (13 - 9)) = 24",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 * 4 = 52 (left: 52 28)\n52 - 28 = 24 (left: 24)\nAnswer: ((4 * 7) - (13 - 9)) = 24",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n9 - 12 = -3 (left: 3 6 -3)\n5 * 10 = 50 (left: 50 15)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n9 - 12 = -3 (left: 3 6 -3)\nInput: 5 9 7",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n3 + 5 = 8 (left: 7 8 9)\n9 - 12 = -3 (left: 3 6 -3)\n6 / 3 = 2 (left: 2 -3)",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 * 4 = 52 (left: 52 28)\n52 - 28 = 24 (left: 24)\nAnswer: ((4 * 7) - (13 - 9)) = 24",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 * 4 = 52 (left: 52 28)\n52 - 28 = 24 (left: 24)\nAnswer: (4 * 7) - ((13 - 9) * 4) = 24",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 * 4 = 52 (left: 52 28)\n52 - 28 = 24 (left: 24)\nAnswer: ((4 * 7) - (13 - 9)) = 24",
                "4 * 7 = 28 (left: 9 13 28)\n13 - 9 = 4 (left: 4 13 28)\n13 * 4 = 52 (left: 52 28)\n52 - 28 = 24 (left: 24)\nAnswer: ((4 * 7) - (13 - 9)) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "cost": 1.568016
    },
    "929": {
        "input": "5 6 8 12",
        "step_1": {
            "steps": [
                "6 / 5 = 1.2 (left: 1.2 8 12)",
                "12 / 6 = 2 (left: 5 2 8)",
                "8 / 5 = 1.6 (left: 1.6 6 12)",
                "4 + 5 = 9 (left: 3 6 9)",
                "12 - 6 = 6 (left: 5 6 6)",
                "6 / 5 = 1.2 (left: 1.2 8 12)",
                "12 / 5 = 2.4 (left: 2.4 6 8)",
                "8 - 5 = 3 (left: 3 6 12)",
                "6 / 5 = 1.2 (left: 1.2 8 12)",
                "5 * 6 = 30 (left: 8 12 30)"
            ],
            "values": [
                2.001,
                3.0,
                3.0,
                1.002,
                22.0,
                2.001,
                3.0,
                0.003,
                1.002,
                2.001
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- INIT",
                "2 <- 1.2",
                "3 <- 1.5",
                "4 <- 1.4",
                "5 <- 1.9",
                "6 <- 1.2",
                "7 <- 1.3",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 5 6 6)",
                "",
                "8 / 5 = 1.6 (left: 1.6 6 12)",
                "6 / 5 = 1.2 (left: 1.2 8 12)",
                "12 - 6 = 6 (left: 5 6 6)",
                "5 * 6 = 30 (left: 8 12 30)",
                "8 / 5 = 1.6 (left: 1.6 6 12)",
                "4 + 5 = 9 (left: 3 6 9)",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "12 - 6 = 6 (left: 5 6 6)\n6 / 6 = 1 (left: 5 1)",
                "12 - 8 = 4 (left: 5 6 4)",
                "8 / 5 = 1.6 (left: 1.6 6 12)\n6 / 1.6 = 3.75 (left: 3.75 12)",
                "6 / 5 = 1.2 (left: 1.2 8 12)\n1.2 * 8 = 9.6 (left: 9.6 12)",
                "12 - 6 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 6 11)",
                "5 * 6 = 30 (left: 8 12 30)\n30 - 12 = 18 (left: 8 18)",
                "8 / 5 = 1.6 (left: 1.6 6 12)\n6 * 1.6 = 9.6 (left: 9.6 12)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)",
                "12 - 8 = 4 (left: 5 4 12)",
                "5 * 6 = 30 (left: 8 30 12)"
            ],
            "values": [
                1.001,
                3.0,
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                22.0,
                2.001,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.7",
                "2 <- 2.7",
                "3 <- 2.7",
                "4 <- 1.4",
                "5 <- 1.4",
                "6 <- 1.4",
                "7 <- 1.4",
                "8 <- 1.4",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)",
                "12 - 6 = 6 (left: 5 6 6)",
                "12 - 6 = 6 (left: 5 6 6)",
                "12 - 6 = 6 (left: 5 6 6)",
                "12 - 6 = 6 (left: 5 6 6)",
                "12 - 6 = 6 (left: 5 6 6)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "6 * 8 = 48 (left: 5 48 12)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n5 + 4 = 9 (left: 9 3)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n4 - 7 = -3 (left: -3 7 4)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n3 - 6 = -3 (left: 5 -3)",
                "12 - 6 = 6 (left: 5 6 6)\n9 - 3 = 6 (left: 6 9)",
                "12 - 6 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "12 - 6 = 6 (left: 5 6 6)\n6 / 5 = 1.2 (left: 1.2 6)",
                "12 - 6 = 6 (left: 5 6 6)\n6 / 5 = 1.2 (left: 1.2 6)",
                "12 - 6 = 6 (left: 5 6 6)\n8 - 2 = 6 (left: 4 6)",
                "5 + 6 = 11 (left: 8 11 12)"
            ],
            "values": [
                22.0,
                20.001,
                3.0,
                1.001,
                0.003,
                40.0,
                0.001,
                0.002,
                60.0,
                1.002
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 3.1",
                "2 <- 2.9",
                "3 <- INIT",
                "4 <- 2.7",
                "5 <- 2.9",
                "6 <- 3.0",
                "7 <- 3.8",
                "8 <- 3.8",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n5 + 4 = 9 (left: 9 3)",
                "5 * 6 = 30 (left: 8 30 12)",
                "",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)",
                "5 * 6 = 30 (left: 8 30 12)",
                "6 * 8 = 48 (left: 5 48 12)",
                "12 - 6 = 6 (left: 5 6 6)\n8 - 2 = 6 (left: 4 6)",
                "12 - 6 = 6 (left: 5 6 6)\n8 - 2 = 6 (left: 4 6)",
                "12 - 6 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)"
            ]
        },
        "step_4": {
            "steps": [
                "12 - 6 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n5 + 4 = 9 (left: 9 3)\n9 + 3 = 12 (left: 12)",
                "5 * 6 = 30 (left: 8 30 12)\n12 - 30 = -18 (left: 8 -18)",
                "12 / 6 = 2 (left: 5 2 8)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n4 / 7 = 0.57 (left: 0.57)",
                "5 * 6 = 30 (left: 8 30 12)\n4 - 3.75 = 0.25 (left: 0.25)",
                "6 * 8 = 48 (left: 5 48 12)\n5 * 48 = 240 (left: 12 240)",
                "12 - 6 = 6 (left: 5 6 6)\n8 - 2 = 6 (left: 4 6)\n7 + 3 = 10 (left: 3 10)",
                "12 - 6 = 6 (left: 5 6 6)\n8 - 2 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "12 - 6 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                3.0,
                0.003,
                0.002,
                40.001,
                0.003,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 4.6",
                "2 <- 3.5",
                "3 <- 4.3",
                "4 <- 3.0",
                "5 <- 2.1",
                "6 <- 3.1",
                "7 <- 3.8",
                "8 <- 2.7",
                "9 <- 3.0"
            ],
            "resampled_steps": [
                "5 * 6 = 30 (left: 8 30 12)",
                "6 * 8 = 48 (left: 5 48 12)\n5 * 48 = 240 (left: 12 240)",
                "12 - 6 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "12 / 6 = 2 (left: 5 2 8)",
                "6 * 8 = 48 (left: 5 48 12)",
                "12 - 8 = 4 (left: 5 6 4)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n5 + 4 = 9 (left: 9 3)",
                "12 - 6 = 6 (left: 5 6 6)\n8 - 2 = 6 (left: 4 6)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)",
                "6 * 8 = 48 (left: 5 48 12)"
            ]
        },
        "step_5": {
            "steps": [
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)",
                "6 * 8 = 48 (left: 5 48 12)\n5 * 48 = 240 (left: 12 240)\n12 * 20 = 240 (left: 240)",
                "12 - 6 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "12 / 6 = 2 (left: 5 2 8)\n2 + 8 = 10 (left: 5 10)",
                "6 * 8 = 48 (left: 5 48 12)\n48 / 5 = 9.6 (left: 9.6 12)",
                "12 - 8 = 4 (left: 5 6 4)\n5 - 6 = -1 (left: -1)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n5 + 4 = 9 (left: 9 3)\n9 - 3 = 6 (left: 6)",
                "12 - 6 = 6 (left: 5 6 6)\n8 - 2 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n7 - 4 = 3 (left: 3 4)",
                "6 * 8 = 48 (left: 5 48 12)\n5 - 48 = -43 (left: 12 -43)"
            ],
            "values": [
                60.0,
                40.0,
                0.001,
                0.002,
                1.002,
                0.0,
                0.003,
                0.001,
                41.0,
                0.003
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 5.0",
                "2 <- 5.0",
                "3 <- 3.5",
                "4 <- 5.0",
                "5 <- 5.1",
                "6 <- 4.6",
                "7 <- 2.7",
                "8 <- 3.0",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n5 + 4 = 9 (left: 9 3)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)",
                "12 - 6 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)",
                "6 * 8 = 48 (left: 5 48 12)\n5 * 48 = 240 (left: 12 240)\n12 * 20 = 240 (left: 240)",
                "6 * 8 = 48 (left: 5 48 12)\n5 * 48 = 240 (left: 12 240)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)",
                "6 * 8 = 48 (left: 5 48 12)",
                "12 - 6 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)"
            ]
        },
        "step_6": {
            "steps": [
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n5 + 4 = 9 (left: 9 3)\n9 / 3 = 3 (left: 3)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)\n240 - 12 = 228 (left: 228)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)\n240 - 12 = 228 (left: 228)",
                "12 - 6 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)\n240 * 12 = 2880 (left: 2880)",
                "6 * 8 = 48 (left: 5 48 12)\n5 * 48 = 240 (left: 12 240)\n12 * 20 = 240 (left: 240)\n240 / 15 = 16 (left: 16)",
                "6 * 8 = 48 (left: 5 48 12)\n5 * 48 = 240 (left: 12 240)\n240 / 12 = 20 (left: 20)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)",
                "6 * 8 = 48 (left: 5 48 12)\n5 * 48 = 240 (left: 12 240)",
                "12 - 6 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)"
            ],
            "values": [
                0.003,
                0.003,
                0.001,
                0.001,
                0.003,
                0.003,
                0.001,
                60.0,
                40.0,
                0.002
            ],
            "resampled": [
                "0 <- 6.7",
                "1 <- 6.7",
                "2 <- 3.5",
                "3 <- 3.0",
                "4 <- 5.0",
                "5 <- 3.5",
                "6 <- 5.0",
                "7 <- 6.8",
                "8 <- 6.7",
                "9 <- 6.7"
            ],
            "resampled_steps": [
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)",
                "12 - 6 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "6 * 8 = 48 (left: 5 48 12)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)",
                "12 - 6 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)",
                "6 * 8 = 48 (left: 5 48 12)\n5 * 48 = 240 (left: 12 240)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)"
            ]
        },
        "step_7": {
            "steps": [
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)\n2 + 7 = 9 (left: 3 9 8)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)\n6 + 5 = 11 (left: 9 11)",
                "12 - 6 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "6 * 8 = 48 (left: 5 48 12)\n48 - 5 = 43 (left: 12 43)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)\n240 / 12 = 20 (left: 20)",
                "12 - 6 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 * 6 = 6 (left: 6)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)\n240 - 12 = 228 (left: 228)",
                "6 * 8 = 48 (left: 5 48 12)\n5 * 48 = 240 (left: 12 240)\n240 / 12 = 20 (left: 20)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)\n7 / 3 = 2.33 (left: 2.33 10 5)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)\n3 * 7 = 21 (left: 10 21)"
            ],
            "values": [
                3.0,
                1.001,
                0.003,
                1.001,
                0.002,
                0.003,
                0.002,
                0.003,
                3.0,
                0.002
            ],
            "resampled": [
                "0 <- 5.0",
                "1 <- 5.8",
                "2 <- 3.1",
                "3 <- 2.7",
                "4 <- 2.9",
                "5 <- 6.7",
                "6 <- 5.0",
                "7 <- 3.8",
                "8 <- 6.8",
                "9 <- 6.7"
            ],
            "resampled_steps": [
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n7 - 4 = 3 (left: 3 4)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n5 + 4 = 9 (left: 9 3)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)",
                "5 * 6 = 30 (left: 8 30 12)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)",
                "12 - 6 = 6 (left: 5 6 6)\n8 - 2 = 6 (left: 4 6)",
                "6 * 8 = 48 (left: 5 48 12)\n5 * 48 = 240 (left: 12 240)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)"
            ]
        },
        "step_8": {
            "steps": [
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)\n240 / 12 = 20 (left: 20)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n7 - 4 = 3 (left: 3 4)\n3 * 4 = 12 (left: 12)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n5 + 4 = 9 (left: 9 3)\n9 + 3 = 12 (left: 12)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n7 * 8 = 56 (left: 56)",
                "5 * 6 = 30 (left: 8 30 12)\n4 + 10 = 14 (left: 14 5)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)\n4 * 7 = 28 (left: 2 3 28)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)\n240 + 12 = 252 (left: 252)",
                "12 - 6 = 6 (left: 5 6 6)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 * 8 = 48 (left: 5 48 12)\n5 * 48 = 240 (left: 12 240)\n240 / 12 = 20 (left: 20)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)\n5 / 1 = 5 (left: 4 5 5)"
            ],
            "values": [
                0.003,
                0.001,
                0.003,
                0.003,
                1.002,
                0.003,
                0.003,
                60.0,
                0.002,
                2.001
            ],
            "resampled": [
                "0 <- 5.8",
                "1 <- 3.8",
                "2 <- 2.7",
                "3 <- 5.0",
                "4 <- 5.8",
                "5 <- 8.7",
                "6 <- 8.4",
                "7 <- 6.8",
                "8 <- 8.9",
                "9 <- 5.0"
            ],
            "resampled_steps": [
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n7 - 4 = 3 (left: 3 4)",
                "12 - 6 = 6 (left: 5 6 6)\n8 - 2 = 6 (left: 4 6)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n7 - 4 = 3 (left: 3 4)",
                "12 - 6 = 6 (left: 5 6 6)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "5 * 6 = 30 (left: 8 30 12)\n4 + 10 = 14 (left: 14 5)",
                "6 * 8 = 48 (left: 5 48 12)\n5 * 48 = 240 (left: 12 240)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)\n5 / 1 = 5 (left: 4 5 5)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)"
            ]
        },
        "step_9": {
            "steps": [
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n7 - 4 = 3 (left: 3 4)\n3 + 4 = 7 (left: 7)",
                "12 - 6 = 6 (left: 5 6 6)\n8 - 2 = 6 (left: 4 6)\nPossible next steps:",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n12 + 6 = 18 (left: 18 8)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)\n240 + 12 = 252 (left: 252)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n7 - 4 = 3 (left: 3 4)\n6 + 2 = 8 (left: 8)",
                "12 - 6 = 6 (left: 5 6 6)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (8 - (12 - 6)) = 24",
                "5 * 6 = 30 (left: 8 30 12)\n4 + 10 = 14 (left: 14 5)\n14 * 5 = 70 (left: 70)",
                "6 * 8 = 48 (left: 5 48 12)\n5 * 48 = 240 (left: 12 240)\n240 / 12 = 20 (left: 20)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)\n5 / 1 = 5 (left: 4 5 5)\n5 - 4 = 1 (left: 1 5 5)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)\n240 + 12 = 252 (left: 252)"
            ],
            "values": [
                0.0,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.002,
                60.0,
                20.002
            ],
            "resampled": [
                "0 <- 9.8",
                "1 <- 4.6",
                "2 <- 3.2",
                "3 <- 9.9",
                "4 <- 3.8",
                "5 <- 5.0",
                "6 <- 6.7",
                "7 <- 9.9",
                "8 <- 5.8",
                "9 <- 3.8"
            ],
            "resampled_steps": [
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)\n5 / 1 = 5 (left: 4 5 5)\n5 - 4 = 1 (left: 1 5 5)",
                "6 * 8 = 48 (left: 5 48 12)\n5 * 48 = 240 (left: 12 240)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n4 - 7 = -3 (left: -3 7 4)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)\n240 + 12 = 252 (left: 252)",
                "12 - 6 = 6 (left: 5 6 6)\n8 - 2 = 6 (left: 4 6)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)\n240 + 12 = 252 (left: 252)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n7 - 4 = 3 (left: 3 4)",
                "12 - 6 = 6 (left: 5 6 6)\n8 - 2 = 6 (left: 4 6)"
            ]
        },
        "step_10": {
            "steps": [
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)\n5 / 1 = 5 (left: 4 5 5)\n5 - 4 = 1 (left: 1 5 5)\n5 / 1 = 5 (left: 5 5)",
                "6 * 8 = 48 (left: 5 48 12)\n5 * 48 = 240 (left: 12 240)\n12 * 20 = 240",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n4 - 7 = -3 (left: -3 7 4)\n7 - (-3) = 10 (left: 10 4)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)\n240 + 12 = 252 (left: 252)\n2 / 5 = 0.4 (left: 0.4 2)",
                "12 - 6 = 6 (left: 5 6 6)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)\n240 / 12 = 20 (left: 20)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n2 * 3 = 6 (left: 5 9 6)\n5 - 2 = 3 (left: 3 3 5)",
                "5 * 6 = 30 (left: 8 30 12)\n8 * 30 = 240 (left: 240 12)\n240 + 12 = 252 (left: 252)\n2 / 5 = 0.4 (left: 0.4 2)",
                "4 + 5 = 9 (left: 3 6 9)\n12 - 8 = 4 (left: 4 7 4)\n7 - 4 = 3 (left: 3 4)\n5 + 9 = 14 (left: 14)",
                "12 - 6 = 6 (left: 5 6 6)\n8 - 2 = 6 (left: 4 6)\nPossible next steps:"
            ],
            "values": [
                0.003,
                0.003,
                0.001,
                0.003,
                40.0,
                20.001,
                3.0,
                0.003,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.621582
    },
    "930": {
        "input": "2 4 6 7",
        "step_1": {
            "steps": [
                "6 / 2 = 3 (left: 3 4 7)",
                "6 * 7 = 42 (left: 2 4 42)",
                "2 + 4 = 6 (left: 6 6 7)",
                "4 + 6 = 10 (left: 2 10 7)",
                "6 - 7 = -1 (left: 2 4 -1)",
                "4 + 6 = 10 (left: 2 7 10)",
                "6 * 7 = 42 (left: 2 4 42)",
                "7 - 2 = 5 (left: 2 4 5)",
                "4 + 6 = 10 (left: 2 10 7)",
                "6 - 7 = -1 (left: 2 4 -1)"
            ],
            "values": [
                3.0,
                1.002,
                2.001,
                2.001,
                1.002,
                40.001,
                0.003,
                3.0,
                2.001,
                0.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.3",
                "3 <- 1.5",
                "4 <- 1.7",
                "5 <- INIT",
                "6 <- 1.5",
                "7 <- INIT",
                "8 <- 1.5",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "4 + 6 = 10 (left: 2 10 7)",
                "4 + 6 = 10 (left: 2 7 10)",
                "7 - 2 = 5 (left: 2 4 5)",
                "",
                "4 + 6 = 10 (left: 2 7 10)",
                "",
                "4 + 6 = 10 (left: 2 7 10)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "6 + 2 = 8 (left: 4 8 7)",
                "6 / 7 = 0.857 (left: 2 4 0.857)",
                "4 + 6 = 10 (left: 2 10 7)\n10 - 7 = 3 (left: 3 7)",
                "4 + 6 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)",
                "7 - 2 = 5 (left: 2 4 5)\n4 + 5 = 9 (left: 2 9)",
                "0.5 / 2 = 0.25 (left: 0.335 0.25 4)",
                "4 + 6 = 10 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)",
                "2 * 4 = 8 (left: 8 6 7)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "6 + 7 = 13 (left: 2 4 13)"
            ],
            "values": [
                22.0,
                3.0,
                1.0,
                1.001,
                1.001,
                3.0,
                0.002,
                2.001,
                60.0,
                2.0
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 2.7",
                "2 <- 2.8",
                "3 <- 1.2",
                "4 <- 2.9",
                "5 <- 1.2",
                "6 <- 1.5",
                "7 <- INIT",
                "8 <- 2.0",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "2 * 4 = 8 (left: 8 6 7)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "2 + 4 = 6 (left: 6 6 7)",
                "6 + 7 = 13 (left: 2 4 13)",
                "2 + 4 = 6 (left: 6 6 7)",
                "4 + 6 = 10 (left: 2 7 10)",
                "",
                "6 + 2 = 8 (left: 4 8 7)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)"
            ]
        },
        "step_3": {
            "steps": [
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)",
                "2 * 4 = 8 (left: 8 6 7)\n7 - 8 = -1 (left: -1)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 / 10 = 1.4 (left: 1.4)",
                "2 + 4 = 6 (left: 6 6 7)\n13 * 42 = 546 (left: 546 1)",
                "6 + 7 = 13 (left: 2 4 13)\n4 * 2 = 8 (left: 8 13)",
                "2 + 4 = 6 (left: 6 6 7)\n7 - 6 = 1 (left: 1)",
                "4 + 6 = 10 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)",
                "Possible next steps:",
                "6 + 2 = 8 (left: 4 8 7)\n7 - 4 = 3 (left: 3 8)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 / 10 = 1.4 (left: 1.4)"
            ],
            "values": [
                0.002,
                0.0,
                0.0,
                60.0,
                0.002,
                0.001,
                0.003,
                0.003,
                60.0,
                0.0
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 2.8",
                "2 <- 2.8",
                "3 <- 2.8",
                "4 <- 3.8",
                "5 <- 1.3",
                "6 <- 1.5",
                "7 <- 2.8",
                "8 <- 1.5",
                "9 <- 3.3"
            ],
            "resampled_steps": [
                "2 * 4 = 8 (left: 8 6 7)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "6 + 2 = 8 (left: 4 8 7)\n7 - 4 = 3 (left: 3 8)",
                "4 + 6 = 10 (left: 2 10 7)",
                "4 + 6 = 10 (left: 2 7 10)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "4 + 6 = 10 (left: 2 7 10)",
                "2 + 4 = 6 (left: 6 6 7)\n13 * 42 = 546 (left: 546 1)"
            ]
        },
        "step_4": {
            "steps": [
                "2 * 4 = 8 (left: 8 6 7)\n8 + 6 = 14 (left: 14 7)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 / 10 = 1.4 (left: 1.4)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)",
                "6 + 2 = 8 (left: 4 8 7)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "4 + 6 = 10 (left: 2 10 7)\n10 + 7 = 17 (left: 17)",
                "4 + 6 = 10 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "2 + 4 = 6 (left: 6 6 7)\n13 * 42 = 546 (left: 546 1)\n546 + 1 = 547 (left: 547)"
            ],
            "values": [
                0.002,
                60.0,
                0.001,
                0.001,
                60.0,
                0.002,
                0.002,
                60.0,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 4.7",
                "1 <- 3.3",
                "2 <- 4.4",
                "3 <- 4.1",
                "4 <- 4.7",
                "5 <- 4.8",
                "6 <- 4.7",
                "7 <- 4.7",
                "8 <- 4.1",
                "9 <- 4.8"
            ],
            "resampled_steps": [
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "2 + 4 = 6 (left: 6 6 7)\n13 * 42 = 546 (left: 546 1)",
                "6 + 2 = 8 (left: 4 8 7)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)"
            ]
        },
        "step_5": {
            "steps": [
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (2 * 7) + (4 + 6) = 24",
                "2 + 4 = 6 (left: 6 6 7)\n13 * 42 = 546 (left: 546 1)\n546 / 1 = 546 (left: 546)",
                "6 + 2 = 8 (left: 4 8 7)\n7 - 4 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 4) * (6 + 2) = 24",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (2 * 7) + (4 + 6) = 24",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (2 * 7) + (4 + 6) = 24",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140)",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (2 * 7) + (4 + 6) = 24",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (2 * 7) + (4 + 6) = 24",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (2 * 7) + (4 + 6) = 24",
                "4 + 6 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)"
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "cost": 1.6492375
    },
    "931": {
        "input": "2 5 10 10",
        "step_1": {
            "steps": [
                "2 + 5 = 7 (left: 7 10 10)",
                "10 / 5 = 2 (left: 2 5 10)",
                "5 * 2 = 10 (left: 10 10 10)",
                "2 + 5 = 7 (left: 7 10 10)",
                "10 - 2 = 8 (left: 8 10 10)",
                "10 - 2 = 8 (left: 8 10 10)",
                "10 - 5 = 5 (left: 2 5 10)",
                "5 * 2 = 10 (left: 10 10 10)",
                "5 * 2 = 10 (left: 10 10 10)",
                "10 - 2 = 8 (left: 2 8 10)"
            ],
            "values": [
                0.003,
                22.0,
                0.002,
                0.003,
                3.0,
                2.0,
                22.0,
                1.001,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.6",
                "2 <- INIT",
                "3 <- 1.1",
                "4 <- 1.6",
                "5 <- 1.6",
                "6 <- 1.6",
                "7 <- 1.6",
                "8 <- 1.4",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "10 - 5 = 5 (left: 2 5 10)",
                "",
                "10 / 5 = 2 (left: 2 5 10)",
                "10 - 5 = 5 (left: 2 5 10)",
                "10 - 5 = 5 (left: 2 5 10)",
                "10 - 5 = 5 (left: 2 5 10)",
                "10 - 5 = 5 (left: 2 5 10)",
                "10 - 2 = 8 (left: 8 10 10)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "10 - 5 = 5 (left: 5 10 10)",
                "10 - 5 = 5 (left: 2 5 10)\nInput: 7 3 10",
                "2 + 5 = 7 (left: 7 10 10)",
                "10 / 5 = 2 (left: 2 5 10)\n10 / 2 = 5 (left: 5 5)",
                "10 - 5 = 5 (left: 2 5 10)\n2 + 5 = 7 (left: 7 10)",
                "10 - 5 = 5 (left: 2 5 10)\n9 - 3 = 6 (left: 6 9 12)",
                "10 - 5 = 5 (left: 2 5 10)\nPossible next steps:",
                "10 - 5 = 5 (left: 2 5 10)\n5 * 2 = 10 (left: 10 10)",
                "10 - 2 = 8 (left: 8 10 10)\n10 * 8 = 80 (left: 80)",
                "5 * 2 = 10 (left: 2 10 10)"
            ],
            "values": [
                2.001,
                0.003,
                2.001,
                0.003,
                1.002,
                22.0,
                0.003,
                0.002,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 2.5",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 2.5",
                "5 <- 1.6",
                "6 <- 1.1",
                "7 <- INIT",
                "8 <- 1.1",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "10 / 5 = 2 (left: 2 5 10)",
                "10 - 5 = 5 (left: 2 5 10)\n9 - 3 = 6 (left: 6 9 12)",
                "",
                "",
                "10 - 5 = 5 (left: 2 5 10)\n9 - 3 = 6 (left: 6 9 12)",
                "10 - 5 = 5 (left: 2 5 10)",
                "10 / 5 = 2 (left: 2 5 10)",
                "",
                "10 / 5 = 2 (left: 2 5 10)",
                "10 / 5 = 2 (left: 2 5 10)"
            ]
        },
        "step_3": {
            "steps": [
                "10 / 5 = 2 (left: 2 5 10)\n10 - 2 = 8 (left: 8 10)",
                "10 - 5 = 5 (left: 2 5 10)\n9 - 3 = 6 (left: 6 9 12)\n9 / 3 = 3 (left: 6 3 12)",
                "10 / 2 = 5 (left: 5 10 10)",
                "2 + 5 = 7 (left: 7 10 10)",
                "10 - 5 = 5 (left: 2 5 10)\n9 - 3 = 6 (left: 6 9 12)\n6 + 9 = 15 (left: 12 15)",
                "10 - 5 = 5 (left: 2 5 10)\n5 * 2 = 10 (left: 10 10)",
                "10 / 5 = 2 (left: 2 5 10)\n10 / 2 = 5 (left: 5 10)",
                "10 / 2 = 5 (left: 5 10 10)",
                "10 / 5 = 2 (left: 2 5 10)\n5 * 2 = 10 (left: 10 10)",
                "10 / 5 = 2 (left: 2 5 10)\n6 * 3 = 18 (left: 9 18)"
            ],
            "values": [
                0.002,
                3.0,
                3.0,
                1.002,
                0.003,
                1.001,
                0.003,
                20.001,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.6",
                "2 <- 3.7",
                "3 <- 2.5",
                "4 <- 1.6",
                "5 <- INIT",
                "6 <- 3.7",
                "7 <- 3.7",
                "8 <- 1.6",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "",
                "10 - 5 = 5 (left: 2 5 10)",
                "10 / 2 = 5 (left: 5 10 10)",
                "10 - 5 = 5 (left: 2 5 10)\n9 - 3 = 6 (left: 6 9 12)",
                "10 - 5 = 5 (left: 2 5 10)",
                "",
                "10 / 2 = 5 (left: 5 10 10)",
                "10 / 2 = 5 (left: 5 10 10)",
                "10 - 5 = 5 (left: 2 5 10)",
                "10 / 5 = 2 (left: 2 5 10)"
            ]
        },
        "step_4": {
            "steps": [
                "10 - 5 = 5 (left: 2 5 10)",
                "10 - 5 = 5 (left: 2 5 10)\n5 * 2 = 10 (left: 10 10)",
                "10 / 2 = 5 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)",
                "10 - 5 = 5 (left: 2 5 10)\n9 - 3 = 6 (left: 6 9 12)\n6 * 9 = 54 (left: 12 54)",
                "10 - 5 = 5 (left: 2 5 10)\n3 + 6 = 9 (left: 9)",
                "2 + 5 = 7 (left: 7 10 10)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)",
                "10 / 2 = 5 (left: 5 10 10)\n4 * 7 = 28 (left: 11 28)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)",
                "10 / 5 = 2 (left: 2 5 10)\n2 + 10 = 12 (left: 5 12)"
            ],
            "values": [
                2.001,
                1.002,
                1.001,
                0.003,
                0.001,
                1.002,
                3.0,
                0.003,
                40.0,
                0.002
            ],
            "resampled": [
                "0 <- 4.8",
                "1 <- 4.8",
                "2 <- 2.9",
                "3 <- 1.6",
                "4 <- 3.7",
                "5 <- 4.8",
                "6 <- 4.6",
                "7 <- 4.8",
                "8 <- 4.8",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)",
                "5 * 2 = 10 (left: 2 10 10)",
                "10 - 5 = 5 (left: 2 5 10)",
                "10 / 2 = 5 (left: 5 10 10)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)",
                "10 - 5 = 5 (left: 2 5 10)"
            ]
        },
        "step_5": {
            "steps": [
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)\nThere are no possible next steps with the input 18.",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)\n18 + 8 = 26",
                "5 * 2 = 10 (left: 2 10 10)\n10 - 10 = 0 (left: 0)",
                "10 - 5 = 5 (left: 2 5 10)\n10 / 2 = 5 (left: 2 5 10)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)\nThere are no possible next steps with the input 18.",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 + 10 = 20 (left: 20 50)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)\n18 / 2 = 9 (left: 9)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)\n18 + 8 = 26 (left: 8 26)",
                "10 - 5 = 5 (left: 2 5 10)\n9 * 3 = 27 (left: 6 27)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                1.001,
                41.0,
                0.003,
                20.0,
                0.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 3.2",
                "2 <- 4.8",
                "3 <- 1.6",
                "4 <- INIT",
                "5 <- 3.7",
                "6 <- 4.8",
                "7 <- 5.4",
                "8 <- 4.8",
                "9 <- 5.4"
            ],
            "resampled_steps": [
                "10 - 5 = 5 (left: 2 5 10)",
                "10 / 2 = 5 (left: 5 10 10)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)",
                "10 - 5 = 5 (left: 2 5 10)",
                "",
                "10 / 2 = 5 (left: 5 10 10)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)"
            ]
        },
        "step_6": {
            "steps": [
                "10 - 5 = 5 (left: 2 5 10)\n10 - 2 = 8 (left: 8 10)",
                "10 / 2 = 5 (left: 5 10 10)\n5 + 10 = 15 (left: 10 10 15)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)\n18 / 2 = 9",
                "10 - 5 = 5 (left: 2 5 10)\n7 - 3 = 4 (left: 3 4)",
                "10 / 5 = 2 (left: 2 5 10)",
                "10 / 2 = 5 (left: 5 10 10)\n5 + 10 = 15 (left: 10 10 15)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)\nNo possible next steps.",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n50 / 10 = 5 (left: 10 5)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)\nNo possible next steps as there are no other numbers to operate with. The result is 18.",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n3 * 6 = 18 (left: 2 18 18)"
            ],
            "values": [
                20.001,
                0.003,
                0.003,
                2.0,
                1.002,
                0.003,
                0.003,
                0.002,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- 4.6",
                "1 <- 3.7",
                "2 <- 1.6",
                "3 <- 3.7",
                "4 <- 6.0",
                "5 <- 1.1",
                "6 <- 5.6",
                "7 <- 3.7",
                "8 <- 5.6",
                "9 <- 5.4"
            ],
            "resampled_steps": [
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)",
                "10 / 2 = 5 (left: 5 10 10)",
                "10 - 5 = 5 (left: 2 5 10)",
                "10 / 2 = 5 (left: 5 10 10)",
                "10 - 5 = 5 (left: 2 5 10)\n10 - 2 = 8 (left: 8 10)",
                "10 / 5 = 2 (left: 2 5 10)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 + 10 = 20 (left: 20 50)",
                "10 / 2 = 5 (left: 5 10 10)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 + 10 = 20 (left: 20 50)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)"
            ]
        },
        "step_7": {
            "steps": [
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n20 * 8 = 160 (left: 160 9)",
                "10 / 2 = 5 (left: 5 10 10)\n10 / 5 = 2 (left: 2 10)",
                "10 - 5 = 5 (left: 2 5 10)\n10 / 2 = 5 (left: 5 10)",
                "10 / 2 = 5 (left: 5 10 10)\n10 / 5 = 2 (left: 2 10 10)",
                "10 - 5 = 5 (left: 2 5 10)\n10 - 2 = 8 (left: 8 10)\nInput: 6 8 14",
                "10 / 5 = 2 (left: 2 5 10)\n10 - 2 = 8 (left: 8 10)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 + 10 = 20 (left: 20 50)\n27 - 3 = 24 (left: 9 24 27)",
                "10 / 2 = 5 (left: 5 10 10)\n10 / 5 = 2 (left: 2 10 10)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 + 10 = 20 (left: 20 50)\n20 - 50 = -30 (left: -30)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n20 / 8 = 2.5 (left: 2.5 12 20)"
            ],
            "values": [
                0.001,
                0.0,
                1.001,
                0.003,
                0.003,
                1.0,
                1.002,
                0.003,
                0.001,
                3.0
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 5.4",
                "2 <- 5.4",
                "3 <- 6.0",
                "4 <- 1.6",
                "5 <- 4.8",
                "6 <- 2.5",
                "7 <- 6.0",
                "8 <- 5.4",
                "9 <- 5.4"
            ],
            "resampled_steps": [
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)",
                "10 - 5 = 5 (left: 2 5 10)\n10 - 2 = 8 (left: 8 10)",
                "10 - 5 = 5 (left: 2 5 10)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)",
                "10 - 5 = 5 (left: 2 5 10)\n9 - 3 = 6 (left: 6 9 12)",
                "10 - 5 = 5 (left: 2 5 10)\n10 - 2 = 8 (left: 8 10)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)"
            ]
        },
        "step_8": {
            "steps": [
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\nInput: 20 10 5",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\nPossible next steps:",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n5 / 4 = 1.25 (left: 1.25 4)",
                "10 - 5 = 5 (left: 2 5 10)\n10 - 2 = 8 (left: 8 10)\nPossible next steps:",
                "10 - 5 = 5 (left: 2 5 10)\n5 * 2 = 10 (left: 10 10)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)\nThere are no possible next steps as there are no other numbers given to perform operations with.",
                "10 - 5 = 5 (left: 2 5 10)\n9 - 3 = 6 (left: 6 9 12)\n12 - 6 = 6 (left: 6 6)",
                "10 - 5 = 5 (left: 2 5 10)\n10 - 2 = 8 (left: 8 10)\n10 - 8 = 2 (left: 2)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 / 15 = 0.6666666666666666 (left: 0.6666666666666666 10 15)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 + 10 = 20 (left: 20 50)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                0.003,
                1.002,
                0.003,
                0.003,
                0.001,
                3.0,
                0.001
            ],
            "resampled": [
                "0 <- 5.4",
                "1 <- 1.6",
                "2 <- 6.0",
                "3 <- 4.8",
                "4 <- 5.4",
                "5 <- 5.4",
                "6 <- 5.4",
                "7 <- 3.1",
                "8 <- 5.4",
                "9 <- 4.8"
            ],
            "resampled_steps": [
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)",
                "10 - 5 = 5 (left: 2 5 10)",
                "10 - 5 = 5 (left: 2 5 10)\n10 - 2 = 8 (left: 8 10)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)",
                "10 - 5 = 5 (left: 2 5 10)\n9 - 3 = 6 (left: 6 9 12)\n9 / 3 = 3 (left: 6 3 12)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)"
            ]
        },
        "step_9": {
            "steps": [
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n3 / 9 = 0.3333333333333333 (left: 0.3333333333333333 9 27)",
                "10 - 5 = 5 (left: 2 5 10)\n5 + 2 = 7 (left: 7 10)",
                "10 - 5 = 5 (left: 2 5 10)\n10 - 2 = 8 (left: 8 10)\n10 / 8 = 1.25 (left: 1.25)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)\nThere are no possible next steps with the number 18.",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n50 - 10 = 40 (left: 10 40)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 + 10 = 20 (left: 20 50)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n50 - 10 = 40 (left: 10 40)",
                "10 - 5 = 5 (left: 2 5 10)\n9 - 3 = 6 (left: 6 9 12)\n9 / 3 = 3 (left: 6 3 12)\n3 * 12 = 36 (left: 6 36)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n50 - 10 = 40 (left: 10 40)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)\nThere are no possible next steps with the number 18."
            ],
            "values": [
                3.0,
                0.002,
                0.003,
                0.003,
                2.001,
                40.001,
                1.001,
                20.002,
                1.0,
                0.003
            ],
            "resampled": [
                "0 <- 6.3",
                "1 <- 4.8",
                "2 <- 9.5",
                "3 <- 9.5",
                "4 <- 5.6",
                "5 <- 9.5",
                "6 <- 5.6",
                "7 <- 3.7",
                "8 <- 1.6",
                "9 <- 9.7"
            ],
            "resampled_steps": [
                "10 - 5 = 5 (left: 2 5 10)\n7 - 3 = 4 (left: 3 4)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 + 10 = 20 (left: 20 50)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 + 10 = 20 (left: 20 50)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 + 10 = 20 (left: 20 50)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 + 10 = 20 (left: 20 50)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 + 10 = 20 (left: 20 50)",
                "10 / 2 = 5 (left: 5 10 10)",
                "10 - 5 = 5 (left: 2 5 10)",
                "10 - 5 = 5 (left: 2 5 10)\n9 - 3 = 6 (left: 6 9 12)\n9 / 3 = 3 (left: 6 3 12)\n3 * 12 = 36 (left: 6 36)"
            ]
        },
        "step_10": {
            "steps": [
                "10 - 5 = 5 (left: 2 5 10)\n7 - 3 = 4 (left: 3 4)\n3 + 4 = 7 (left: 7)",
                "10 - 5 = 5 (left: 2 5 10)\n3 * 6 = 18 (left: 18)\nThere are no possible next steps with the number 18.",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 + 10 = 20 (left: 20 50)\n50 - 20 = 30 (left: 30)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 + 10 = 20 (left: 20 50)\n27 - 3 = 24 (left: 9 24)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 + 10 = 20 (left: 20 50)\n27 / 9 = 3 (left: 3 27)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 + 10 = 20 (left: 20 50)\n20 - 50 = -30 (left: -30)",
                "10 / 2 = 5 (left: 5 10 10)\n5 * 10 = 50 (left: 10 10 50)\n10 + 10 = 20 (left: 20 50)\n20 + 50 = 70 (left: 70)",
                "10 / 2 = 5 (left: 5 10 10)\n10 - 5 = 5 (left: 5 10)",
                "10 - 5 = 5 (left: 2 5 10)\n7 - 3 = 4 (left: 3 4)",
                "10 - 5 = 5 (left: 2 5 10)\n9 - 3 = 6 (left: 6 9 12)\n9 / 3 = 3 (left: 6 3 12)\n3 * 12 = 36 (left: 6 36)\n36 / 6 = 6 (left: 6)"
            ],
            "values": [
                0.001,
                0.003,
                0.003,
                0.003,
                60.0,
                0.002,
                0.003,
                20.001,
                3.0,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.7031315
    },
    "932": {
        "input": "6 6 7 12",
        "step_1": {
            "steps": [
                "12 / 6 = 2 (left: 6 7 2)",
                "6 / 1 = 6 (left: 6 6)",
                "6 / 6 = 1 (left: 1 7 12)",
                "12 - 6 = 6 (left: 6 7 6)",
                "3 * 20 = 60 (left: 38 60)",
                "6 + 6 = 12 (left: 7 12)",
                "12 - 6 = 6 (left: 6 6)",
                "12 - 6 = 6 (left: 6 6 12)",
                "2 * 3 = 6 (left: 1 6 4)",
                "12 - 6 = 6 (left: 6 6)"
            ],
            "values": [
                22.0,
                20.002,
                1.002,
                22.0,
                1.002,
                0.003,
                20.002,
                60.0,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.1",
                "2 <- 1.7",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 1.0",
                "6 <- INIT",
                "7 <- 1.8",
                "8 <- 1.6",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "6 / 1 = 6 (left: 6 6)",
                "6 / 1 = 6 (left: 6 6)",
                "12 - 6 = 6 (left: 6 6 12)",
                "",
                "",
                "12 / 6 = 2 (left: 6 7 2)",
                "",
                "2 * 3 = 6 (left: 1 6 4)",
                "12 - 6 = 6 (left: 6 6)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 / 1 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "12 - 6 = 6 (left: 6 6 12)\n42 - 21 = 21 (left: 21)",
                "7 + 6 = 13 (left: 6 13)",
                "7 * 6 = 42 (left: 12 42)",
                "12 / 6 = 2 (left: 6 7 2)\nInput: 1 3.5 42 5 3",
                "6 + 6 = 12 (left: 7 12)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)",
                "12 - 6 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "6 + 6 = 12 (left: 7 12)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                60.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 1.3",
                "2 <- 1.6",
                "3 <- 2.7",
                "4 <- 2.7",
                "5 <- 1.6",
                "6 <- 1.8",
                "7 <- INIT",
                "8 <- 2.7",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "12 / 6 = 2 (left: 6 7 2)",
                "12 - 6 = 6 (left: 6 7 6)",
                "12 - 6 = 6 (left: 6 6)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)",
                "12 - 6 = 6 (left: 6 6)",
                "2 * 3 = 6 (left: 1 6 4)",
                "",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)",
                "2 * 3 = 6 (left: 1 6 4)"
            ]
        },
        "step_3": {
            "steps": [
                "12 / 6 = 2 (left: 6 7 2)\n6 * 2 = 12 (left: 12)",
                "12 - 6 = 6 (left: 6 7 6)\n40.83333 - 48.83314 = -8.99981 (left: -8.99981 36)",
                "12 - 6 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 / 4 = 1.5 (left: 1.5)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 + 4 = 10 (left: 10)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 * 3 = 6 (left: 1 6 4)\n9 - 7 = 2 (left: 2 5 2)",
                "12 - 6 = 6 (left: 6 7 6)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 5 4)"
            ],
            "values": [
                0.001,
                0.003,
                0.003,
                0.001,
                0.002,
                60.0,
                2.001,
                3.0,
                60.0,
                22.0
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- 1.1",
                "2 <- 3.9",
                "3 <- 3.5",
                "4 <- 2.7",
                "5 <- 1.6",
                "6 <- 1.6",
                "7 <- 3.8",
                "8 <- 2.7",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 5 4)",
                "6 / 1 = 6 (left: 6 6)",
                "2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 5 4)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)",
                "12 - 6 = 6 (left: 6 6)",
                "12 - 6 = 6 (left: 6 6)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)"
            ]
        },
        "step_4": {
            "steps": [
                "2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 5 4)\n5 / 4 = 1.25 (left: 1.25)",
                "6 / 1 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 5 4)\n4 * 5 = 20 (left: 20)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 / 4 = 1.5 (left: 1.5)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "12 - 6 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (6 * 4) = 24",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 / 4 = 1.5 (left: 1.5)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 * 2 = 72 (left: 72)"
            ],
            "values": [
                0.002,
                0.002,
                0.002,
                0.003,
                0.001,
                40.0,
                0.003,
                0.003,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 3.5",
                "2 <- 3.5",
                "3 <- 1.8",
                "4 <- 3.5",
                "5 <- 3.8",
                "6 <- 3.8",
                "7 <- 3.8",
                "8 <- 2.7",
                "9 <- 4.5"
            ],
            "resampled_steps": [
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 * 3 = 6 (left: 1 6 4)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)"
            ]
        },
        "step_5": {
            "steps": [
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 - 4 = 2 (left: 2)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nNo possible next steps as there is only one number.",
                "2 * 3 = 6 (left: 1 6 4)\n1 + 6 = 7 (left: 4 7)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nThere is only one number, so there are no possible next steps. The final result is 36.",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (6 * 4) = 24",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (6 * 4) = 24",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (6 * 4) = 24",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 - 4 = 2 (left: 2)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 3.5",
                "2 <- 2.7",
                "3 <- 1.7",
                "4 <- 1.6",
                "5 <- 3.8",
                "6 <- 1.7",
                "7 <- 3.8",
                "8 <- 4.5",
                "9 <- 3.8"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)",
                "12 - 6 = 6 (left: 6 6 12)",
                "12 - 6 = 6 (left: 6 6)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "12 - 6 = 6 (left: 6 6 12)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)"
            ]
        },
        "step_6": {
            "steps": [
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nThere is only one number left, so there are no possible next steps. The final result is 36.",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nThere are no possible next steps for the number 36 as it is a single number and cannot be combined with any other numbers.",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n9 - 27 = -18 (left: 3 -18)",
                "12 - 6 = 6 (left: 6 6 12)\nInput: 0 12",
                "12 - 6 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (6 * 4) = 24",
                "12 - 6 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (6 * 4) = 24",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 18 = 2 (left: 2)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (6 * 4) = 24"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                1.002,
                0.003,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 1.8",
                "2 <- 4.5",
                "3 <- 3.5",
                "4 <- 3.9",
                "5 <- 2.7",
                "6 <- 4.5",
                "7 <- 1.6",
                "8 <- 4.5",
                "9 <- 1.7"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 * 3 = 6 (left: 1 6 4)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 5 4)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "12 - 6 = 6 (left: 6 6)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "12 - 6 = 6 (left: 6 6 12)"
            ]
        },
        "step_7": {
            "steps": [
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nNone, as there is only one number provided.",
                "2 * 3 = 6 (left: 1 6 4)\n3 + 1 = 4 (left: 4 9 2)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nThere are no possible next steps for the number 36. It is already a single number and cannot be further manipulated using the operations provided.",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nThere are no possible next steps with the input of 36.",
                "2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 5 4)\n10 * 3 = 30 (left: 30)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 - 4 = 2 (left: 2)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 + 2 = 38",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 6 36)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nNo possible next steps as there is only one number left.",
                "12 - 6 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)"
            ],
            "values": [
                0.003,
                2.001,
                0.003,
                0.003,
                0.003,
                0.001,
                0.003,
                1.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 3.9",
                "2 <- 1.7",
                "3 <- 1.1",
                "4 <- 1.1",
                "5 <- 3.5",
                "6 <- 1.7",
                "7 <- 1.0",
                "8 <- 4.5",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 5 4)",
                "12 - 6 = 6 (left: 6 6 12)",
                "6 / 1 = 6 (left: 6 6)",
                "6 / 1 = 6 (left: 6 6)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "12 - 6 = 6 (left: 6 6 12)",
                "12 / 6 = 2 (left: 6 7 2)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 * 3 = 6 (left: 1 6 4)"
            ]
        },
        "step_8": {
            "steps": [
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18",
                "2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 5 4)\n5 / 4 = 1.25 (left: 1.25)",
                "12 - 6 = 6 (left: 6 6 12)\nInput: 1 1 6",
                "6 / 1 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "6 / 1 = 6 (left: 6 6)\n6 - 6 = 0 (left: 0)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18 (left: 18)",
                "12 - 6 = 6 (left: 6 6 12)\n6 / 6 = 1 (left: 1 12)",
                "12 / 6 = 2 (left: 6 7 2)\n6 * 7 = 42 (left: 2 42)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18",
                "2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 5 4)"
            ],
            "values": [
                0.003,
                0.001,
                0.003,
                0.002,
                0.003,
                20.0,
                1.001,
                0.003,
                0.003,
                22.0
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 3.5",
                "2 <- 1.8",
                "3 <- 3.5",
                "4 <- 8.9",
                "5 <- 3.8",
                "6 <- 3.8",
                "7 <- 8.5",
                "8 <- 1.8",
                "9 <- 8.5"
            ],
            "resampled_steps": [
                "12 - 6 = 6 (left: 6 6 12)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 * 3 = 6 (left: 1 6 4)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 5 4)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18 (left: 18)",
                "2 * 3 = 6 (left: 1 6 4)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18 (left: 18)"
            ]
        },
        "step_9": {
            "steps": [
                "12 - 6 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nThere are no possible next steps with the input of 36.",
                "2 * 3 = 6 (left: 1 6 4)\n2 / 5 = 0.4 (left: 0.4 3)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18",
                "2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 5 4)\n5 * 4 = 20 (left: 20)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (6 * 4) = 24",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: 6 * (6 * 4) = 24",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\nThere are no possible next steps with the number 18.",
                "2 * 3 = 6 (left: 1 6 4)\n6 - 4 = 2 (left: 1 2)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\n18 - 2 = 16 (left: 16)"
            ],
            "values": [
                40.001,
                0.003,
                1.001,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- 3.8",
                "2 <- 3.5",
                "3 <- 8.5",
                "4 <- 1.7",
                "5 <- 1.6",
                "6 <- 1.3",
                "7 <- 2.7",
                "8 <- 8.5",
                "9 <- 8.5"
            ],
            "resampled_steps": [
                "2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 5 4)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18 (left: 18)",
                "12 - 6 = 6 (left: 6 6 12)",
                "12 - 6 = 6 (left: 6 6)",
                "12 - 6 = 6 (left: 6 7 6)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18 (left: 18)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18 (left: 18)"
            ]
        },
        "step_10": {
            "steps": [
                "2 * 3 = 6 (left: 1 6 4)\n6 - 1 = 5 (left: 5 4)\n5 / 4 = 1.25 (left: 1.25)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (6 * (6 * 4)) = 24",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 + 2 = 38",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\n18 / 2 = 9",
                "12 - 6 = 6 (left: 6 6 12)\n12 * 18 = 216 (left: 1 216 72)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)",
                "12 - 6 = 6 (left: 6 7 6)\n-1 + 42 = 41 (left: 41)",
                "2 * 3 = 6 (left: 1 6 4)\n1 * 6 = 6 (left: 6 4)\n6 - 4 = 2 (left: 2)",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\nThere are no possible next steps with the number 18.",
                "12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\nThere are no possible next steps with the input 18."
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.003,
                2.001,
                0.001,
                0.003,
                0.001,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.7497150000000001
    },
    "933": {
        "input": "6 9 9 11",
        "step_1": {
            "steps": [
                "6 + 9 = 15 (left: 9 11 15)",
                "9 / 6 = 1.5 (left: 1.5 9 11)",
                "6 + 9 = 15 (left: 9 9 11)",
                "9 - 6 = 3 (left: 3 9 11)",
                "11 - 9 = 2 (left: 6 9 2)",
                "9 - 6 = 3 (left: 3 9 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)",
                "9 - 6 = 3 (left: 3 9 11)",
                "9 - 6 = 3 (left: 3 9 11)",
                "6 + 9 = 15 (left: 9 9 11)"
            ],
            "values": [
                3.0,
                0.002,
                1.002,
                0.003,
                3.0,
                2.001,
                3.0,
                0.003,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.9",
                "2 <- INIT",
                "3 <- 1.0",
                "4 <- 1.6",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 1.6",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "6 + 9 = 15 (left: 9 9 11)",
                "",
                "6 + 9 = 15 (left: 9 11 15)",
                "9 / 6 = 1.5 (left: 1.5 9 11)",
                "",
                "",
                "9 / 6 = 1.5 (left: 1.5 9 11)",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "9 / 6 = 1.5 (left: 1.5 9 11)",
                "6 + 9 = 15 (left: 9 9 11)\n7 - 5 = 2 (left: 3 2 9)",
                "11 - 6 = 5 (left: 5 9 11)",
                "6 + 9 = 15 (left: 9 11 15)\n4 - 3 = 1 (left: 1 5 7)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 + 9 = 10.5 (left: 10.5 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)",
                "9 - 6 = 3 (left: 3 9 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 + 9 = 10.5 (left: 10.5 11)",
                "9 + 6 = 15 (left: 9 11 15)",
                "9 / 6 = 1 (left: 1 9 11)"
            ],
            "values": [
                3.0,
                1.002,
                3.0,
                1.002,
                2.001,
                2.001,
                0.003,
                1.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.4",
                "2 <- 2.1",
                "3 <- INIT",
                "4 <- 2.1",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- 2.0",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 + 9 = 10.5 (left: 10.5 11)",
                "6 + 9 = 15 (left: 9 9 11)\n7 - 5 = 2 (left: 3 2 9)",
                "",
                "6 + 9 = 15 (left: 9 9 11)\n7 - 5 = 2 (left: 3 2 9)",
                "",
                "",
                "",
                "9 / 6 = 1.5 (left: 1.5 9 11)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "11 /  3 = 3.67 (left: 6 9 3.67)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 + 9 = 10.5 (left: 10.5 11)\n10.5 + 11 = 21.5 (left: 21.5)",
                "6 + 9 = 15 (left: 9 9 11)\n7 - 5 = 2 (left: 3 2 9)\n3 * 2 = 6 (left: 6 9)",
                "5 - 3 = 2 (left: 2 5 7)",
                "6 + 9 = 15 (left: 9 9 11)\n7 - 5 = 2 (left: 3 2 9)\n9 / 3 = 3 (left: 3 9)",
                "9 - 6 = 3 (left: 3 9 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)",
                "9 - 6 = 3 (left: 3 11 15)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)",
                "11 - 9 = 2 (left: 6 9 2)"
            ],
            "values": [
                3.0,
                0.003,
                1.002,
                2.001,
                0.003,
                0.003,
                3.0,
                3.0,
                40.001,
                3.0
            ],
            "resampled": [
                "0 <- 3.7",
                "1 <- 3.8",
                "2 <- INIT",
                "3 <- 3.8",
                "4 <- 3.8",
                "5 <- INIT",
                "6 <- 3.0",
                "7 <- 3.6",
                "8 <- 2.0",
                "9 <- 3.9"
            ],
            "resampled_steps": [
                "9 - 6 = 3 (left: 3 11 15)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)",
                "",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)",
                "",
                "11 /  3 = 3.67 (left: 6 9 3.67)",
                "9 / 6 = 1.5 (left: 1.5 9 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)",
                "11 - 9 = 2 (left: 6 9 2)"
            ]
        },
        "step_4": {
            "steps": [
                "9 - 6 = 3 (left: 3 11 15)\n9 / 4 = 2.25 (left: 2.25 10)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 - 11 = 2.5 (left: 2.5)",
                "11 - 6 = 5 (left: 6 9 5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 / 11 = 1.2272727272727273 (left: 1.2272727272727273)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 + 11 = 24.5 (left: 24.5)",
                "11 - 9 = 2 (left: 6 2 11)",
                "11 /  3 = 3.67 (left: 6 9 3.67)\n6 * 9 = 54 (left: 54 3.67)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n11 - 1.5 = 9.5 (left: 9.5 11)",
                "11 - 9 = 2 (left: 6 9 2)\n9 + 2 = 11 (left: 6 11)"
            ],
            "values": [
                1.001,
                0.0,
                22.0,
                0.002,
                0.003,
                3.0,
                2.001,
                40.0,
                1.001,
                0.001
            ],
            "resampled": [
                "0 <- 4.7",
                "1 <- 4.7",
                "2 <- 4.0",
                "3 <- 4.7",
                "4 <- INIT",
                "5 <- 2.2",
                "6 <- 4.7",
                "7 <- 3.0",
                "8 <- 4.2",
                "9 <- 4.2"
            ],
            "resampled_steps": [
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)",
                "9 - 6 = 3 (left: 3 11 15)\n9 / 4 = 2.25 (left: 2.25 10)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)",
                "",
                "11 - 6 = 5 (left: 5 9 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)",
                "11 /  3 = 3.67 (left: 6 9 3.67)",
                "11 - 6 = 5 (left: 6 9 5)",
                "11 - 6 = 5 (left: 6 9 5)"
            ]
        },
        "step_5": {
            "steps": [
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 / 13.5 \u2248 0.815 (left: 0.815)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 * 13.5 = 148.5 (left: 148.5)",
                "9 - 6 = 3 (left: 3 11 15)\n9 / 4 = 2.25 (left: 2.25 10)\n6 - 3 = 3 (left: 3 9)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 * 13.5 = 148.5 (left: 148.5)",
                "11 - 9 = 2 (left: 6 9 2)",
                "11 - 6 = 5 (left: 5 9 11)\n3 + 6 = 9 (left: 9 9 12)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 / 13.5 = 0.8148148148148148 (left: 0.8148148148148148)",
                "11 /  3 = 3.67 (left: 6 9 3.67)\n3.67 - 6 = -2.33 (left: -2.33 3.67)",
                "11 - 6 = 5 (left: 6 9 5)\n9 / 6 = 1.5 (left: 1.5 5)",
                "11 - 6 = 5 (left: 6 9 5)\nPossible next steps:"
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.003,
                3.0,
                0.003,
                0.003,
                2.001,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 3.8",
                "1 <- 3.6",
                "2 <- 3.8",
                "3 <- 3.8",
                "4 <- 4.7",
                "5 <- 3.0",
                "6 <- 3.8",
                "7 <- 4.5",
                "8 <- 4.7",
                "9 <- 3.8"
            ],
            "resampled_steps": [
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)",
                "11 /  3 = 3.67 (left: 6 9 3.67)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)",
                "11 - 9 = 2 (left: 6 2 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)"
            ]
        },
        "step_6": {
            "steps": [
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 + 11 = 24.5 (left: 24.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 + 9 = 10.5 (left: 10.5 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 / 11 = 1.22727272727 (left: 1.22727272727)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 / 11 = 1.227 (left: 1.227)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 / 13.5 = 0.8148148148148148 (left: 0.8148148148148148)",
                "11 /  3 = 3.67 (left: 6 9 3.67)\n14 - 7 = 7 (left: 7 21)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 * 11 = 148.5 (left: 148.5)",
                "11 - 9 = 2 (left: 6 2 11)\n11 - 2 = 9 (left: 6 9)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 + 13.5 = 24.5 (left: 24.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 * 11 = 148.5 (left: 148.5)"
            ],
            "values": [
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.8",
                "1 <- 4.7",
                "2 <- 4.7",
                "3 <- 2.4",
                "4 <- 3.0",
                "5 <- 3.8",
                "6 <- 3.9",
                "7 <- 3.8",
                "8 <- 4.8",
                "9 <- 4.2"
            ],
            "resampled_steps": [
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 + 9 = 10.5 (left: 10.5 11)",
                "11 /  3 = 3.67 (left: 6 9 3.67)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)",
                "11 - 9 = 2 (left: 6 9 2)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n11 - 1.5 = 9.5 (left: 9.5 11)",
                "11 - 6 = 5 (left: 6 9 5)"
            ]
        },
        "step_7": {
            "steps": [
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 / 11 = 1.2272727272727273 (left: 1.2272727272727273)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 + 13.5 = 24.5 (left: 24.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 / 13.5 = 0.8148148148148148 (left: 0.8148148148148148)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 + 9 = 10.5 (left: 10.5 11)\n10.5 + 11 = 21.5 (left: 21.5)",
                "11 /  3 = 3.67 (left: 6 9 3.67)\n6 + 9 = 15 (left: 3.67 15)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 / 11 = 1.2272727272727273 (left: 1.2272727272727273)",
                "11 - 9 = 2 (left: 6 9 2)\n7 / 4 = 1.75 (left: 3 1.75 5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 + 11 = 24.5 (left: 24.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n11 - 1.5 = 9.5 (left: 9.5 11)\n9.5 * 11 = 104.5 (left: 104.5)",
                "11 - 6 = 5 (left: 6 9 5)\n9 / 6 = 1.5 (left: 1.5 5)"
            ],
            "values": [
                0.001,
                0.003,
                0.003,
                0.003,
                1.001,
                0.003,
                2.001,
                20.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 5.4",
                "2 <- 3.8",
                "3 <- 7.7",
                "4 <- 3.7",
                "5 <- 7.7",
                "6 <- 4.7",
                "7 <- 3.8",
                "8 <- 4.2",
                "9 <- 7.7"
            ],
            "resampled_steps": [
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 + 9 = 10.5 (left: 10.5 11)",
                "11 - 9 = 2 (left: 6 9 2)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 + 11 = 24.5 (left: 24.5)",
                "9 - 6 = 3 (left: 3 11 15)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 + 11 = 24.5 (left: 24.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)",
                "11 - 6 = 5 (left: 6 9 5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 + 11 = 24.5 (left: 24.5)"
            ]
        },
        "step_8": {
            "steps": [
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 + 9 = 10.5 (left: 10.5 11)\n10.5 + 11 = 21.5 (left: 21.5)",
                "11 - 9 = 2 (left: 6 9 2)\n6 + 9 = 15 (left: 2 15)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 * 11 = 148.5 (left: 148.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 + 11 = 24.5 (left: 24.5)\nThere are no possible next steps for the number 24.5 as it is already a single number.",
                "9 - 6 = 3 (left: 3 11 15)\nInput: 4 7 9 13",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 + 11 = 24.5 (left: 24.5)\n24.5 * 2 = 49 (left: 49)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 * 13.5 = 148.5 (left: 148.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\nInput: 5 3 7",
                "11 - 6 = 5 (left: 6 9 5)\n5 / 2 = 2.5 (left: 2.5 3 5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 + 11 = 24.5 (left: 24.5)\nThere is only one number provided (24.5), so there are no possible next steps to suggest."
            ],
            "values": [
                0.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.001,
                0.002,
                0.003,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 4.7",
                "1 <- 5.7",
                "2 <- 4.2",
                "3 <- 4.7",
                "4 <- 4.7",
                "5 <- 3.6",
                "6 <- 7.7",
                "7 <- 5.7",
                "8 <- 3.8",
                "9 <- 3.8"
            ],
            "resampled_steps": [
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)",
                "11 /  3 = 3.67 (left: 6 9 3.67)\n3.67 - 6 = -2.33 (left: -2.33 3.67)",
                "11 - 6 = 5 (left: 6 9 5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 + 11 = 24.5 (left: 24.5)",
                "11 /  3 = 3.67 (left: 6 9 3.67)\n3.67 - 6 = -2.33 (left: -2.33 3.67)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)"
            ]
        },
        "step_9": {
            "steps": [
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 - 13.5 = -2.5 (left: -2.5)",
                "11 /  3 = 3.67 (left: 6 9 3.67)\n3.67 - 6 = -2.33 (left: -2.33 3.67)\n-2.33 - 3.67 = -6 (left: -6)",
                "11 - 6 = 5 (left: 6 9 5)\n9 - 5 = 4 (left: 4 5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 - 13.5 = -2.5 (left: -2.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 + 13.5 = 24.5 (left: 24.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n11 - 1.5 = 9.5 (left: 9 9.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 + 11 = 24.5 (left: 24.5)\nThere are no possible next steps with the input 24.5.",
                "11 /  3 = 3.67 (left: 6 9 3.67)\n3.67 - 6 = -2.33 (left: -2.33 3.67)\n-2.33 * 3.67 = -8.54 (left: -8.54)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 / 11 = 1.22727272727 (left: 1.22727272727)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 * 11 = 148.5 (left: 148.5)"
            ],
            "values": [
                0.003,
                0.001,
                2.001,
                0.003,
                20.002,
                2.001,
                0.003,
                0.001,
                0.002,
                0.002
            ],
            "resampled": [
                "0 <- 9.4",
                "1 <- 3.8",
                "2 <- 9.4",
                "3 <- 9.4",
                "4 <- 3.8",
                "5 <- 3.8",
                "6 <- 1.4",
                "7 <- 4.7",
                "8 <- 9.5",
                "9 <- 7.7"
            ],
            "resampled_steps": [
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 + 13.5 = 24.5 (left: 24.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 + 13.5 = 24.5 (left: 24.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 + 13.5 = 24.5 (left: 24.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)",
                "11 - 9 = 2 (left: 6 9 2)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n11 - 1.5 = 9.5 (left: 9 9.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 + 11 = 24.5 (left: 24.5)"
            ]
        },
        "step_10": {
            "steps": [
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 + 13.5 = 24.5 (left: 24.5)\nThere are no possible next steps with the input 24.5 as it is a single number and not an equation or set of numbers to operate on.",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 * 11 = 148.5 (left: 148.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 + 13.5 = 24.5 (left: 24.5)\n24.5 / 2 = 12.25 (left: 12.25)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 + 13.5 = 24.5 (left: 24.5)\nThere are no possible next steps with the input 24.5.",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 - 11 = 2.5 (left: 2.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 / 11 = 1.22727272727 (left: 1.22727272727)",
                "11 - 9 = 2 (left: 6 9 2)\n6 + 9 = 15 (left: 2 15)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n1.5 * 9 = 13.5 (left: 11 13.5)\n11 + 13.5 = 24.5 (left: 24.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n11 - 1.5 = 9.5 (left: 9 9.5)\n9 + 9.5 = 18.5 (left: 18.5)",
                "9 / 6 = 1.5 (left: 1.5 9 11)\n9 * 1.5 = 13.5 (left: 13.5 11)\n13.5 + 11 = 24.5 (left: 24.5)\nThere is only one number given, so there are no possible next steps in this case."
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.0,
                0.002,
                0.003,
                0.003,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.8068545
    },
    "934": {
        "input": "5 8 11 12",
        "step_1": {
            "steps": [
                "5 * 8 = 40 (left: 11 12 40)",
                "8 - 5 = 3 (left: 3 11 12)",
                "5 + 8 = 13 (left: 11 13 12)",
                "8 - 5 = 3 (left: 3 11 12)",
                "5 * 8 = 40 (left: 11 12 40)",
                "12 - 11 = 1 (left: 5 1 12)",
                "11 + 5 = 16 (left: 8 12 16)",
                "11 - 8 = 3 (left: 3 8 12)",
                "8 - 5 = 3 (left: 3 11 12)",
                "11 + 5 = 16 (left: 8 12 16)"
            ],
            "values": [
                2.001,
                0.003,
                41.0,
                3.0,
                1.002,
                1.002,
                2.001,
                60.0,
                1.002,
                2.001
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.2",
                "2 <- 1.7",
                "3 <- 1.7",
                "4 <- 1.2",
                "5 <- 1.7",
                "6 <- INIT",
                "7 <- 1.7",
                "8 <- 1.2",
                "9 <- 1.7"
            ],
            "resampled_steps": [
                "11 - 8 = 3 (left: 3 8 12)",
                "5 + 8 = 13 (left: 11 13 12)",
                "11 - 8 = 3 (left: 3 8 12)",
                "11 - 8 = 3 (left: 3 8 12)",
                "5 + 8 = 13 (left: 11 13 12)",
                "11 - 8 = 3 (left: 3 8 12)",
                "",
                "11 - 8 = 3 (left: 3 8 12)",
                "5 + 8 = 13 (left: 11 13 12)",
                "11 - 8 = 3 (left: 3 8 12)"
            ]
        },
        "step_2": {
            "steps": [
                "11 - 8 = 3 (left: 3 8 12)\n8 - 3 = 5 (left: 5 12)",
                "5 + 8 = 13 (left: 11 13 12)\n11 * 13 = 143 (left: 12)",
                "11 - 8 = 3 (left: 3 8 12)\n8 - 3 = 5 (left: 5 12)",
                "11 - 8 = 3 (left: 3 8 12)\n12 / 3 = 4 (left: 4 8 12)",
                "5 + 8 = 13 (left: 11 13 12)\n11 * 13 = 143 (left: 143 12)",
                "11 - 8 = 3 (left: 3 8 12)\n8 - 12 = -4 (left: -4)",
                "12 - 11 = 1 (left: 1 11 12)",
                "11 - 8 = 3 (left: 3 8 12)\n4 * 9 = 36 (left: 36 12)",
                "5 + 8 = 13 (left: 11 13 12)\n13 - 12 = 1 (left: 1 12)",
                "11 - 8 = 3 (left: 3 8 12)\n8 - 3 = 5 (left: 5 12)"
            ],
            "values": [
                0.003,
                0.003,
                0.001,
                3.0,
                0.001,
                0.0,
                41.0,
                20.002,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.7",
                "2 <- 2.6",
                "3 <- 2.6",
                "4 <- 2.6",
                "5 <- INIT",
                "6 <- 1.2",
                "7 <- 1.7",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "11 - 8 = 3 (left: 3 8 12)",
                "11 - 8 = 3 (left: 3 8 12)",
                "12 - 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 1 11 12)",
                "",
                "5 + 8 = 13 (left: 11 13 12)",
                "11 - 8 = 3 (left: 3 8 12)",
                "",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "11 - 8 = 3 (left: 3 8 12)\n20 / 5 = 4 (left: 1.25 4)",
                "11 - 8 = 3 (left: 3 8 12)\n3 * 8 = 24 (left: 24 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 1 11 12)\n11 + 1 = 12 (left: 12 12)",
                "5 + 8 = 13 (left: 11 13 12)",
                "5 + 8 = 13 (left: 11 13 12)\n11 + 13 = 24 (left: 12)",
                "11 - 8 = 3 (left: 3 8 12)\n8 - 3 = 5 (left: 5 12)",
                "8 - 5 = 3 (left: 3 11 12)",
                "5 * 8 = 40 (left: 11 12 40)"
            ],
            "values": [
                0.0,
                0.001,
                40.001,
                40.001,
                0.003,
                60.0,
                0.003,
                1.002,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 3.5",
                "2 <- 3.3",
                "3 <- 1.7",
                "4 <- 2.6",
                "5 <- INIT",
                "6 <- 1.7",
                "7 <- 3.3",
                "8 <- 3.5",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "5 + 8 = 13 (left: 11 13 12)",
                "5 + 8 = 13 (left: 11 13 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)",
                "11 - 8 = 3 (left: 3 8 12)",
                "12 - 11 = 1 (left: 1 11 12)",
                "",
                "11 - 8 = 3 (left: 3 8 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)",
                "5 + 8 = 13 (left: 11 13 12)",
                "5 + 8 = 13 (left: 11 13 12)"
            ]
        },
        "step_4": {
            "steps": [
                "5 + 8 = 13 (left: 11 13 12)\n3 * 6 = 18 (left: 9 18 12)",
                "5 + 8 = 13 (left: 11 13 12)\n13 + 12 = 25 (left: 11)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24",
                "11 - 8 = 3 (left: 3 8 12)\n12 / 3 = 4 (left: 3 4 4)",
                "12 - 11 = 1 (left: 1 11 12)\n10 - 5 = 5 (left: 5 10)",
                "8 - 5 = 3 (left: 3 11 12)",
                "11 - 8 = 3 (left: 3 8 12)\n3 * 8 = 24 (left: 9 24)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24",
                "5 + 8 = 13 (left: 11 13 12)\n3 + 4 = 7 (left: 5 6 7)",
                "5 + 8 = 13 (left: 11 13 12)\n5 + 7 = 12 (left: 9 12 18)"
            ],
            "values": [
                2.0,
                0.003,
                0.003,
                0.003,
                0.002,
                1.002,
                0.002,
                0.003,
                3.0,
                1.002
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 1.7",
                "2 <- 3.5",
                "3 <- 3.2",
                "4 <- 3.2",
                "5 <- 4.0",
                "6 <- 1.2",
                "7 <- 2.6",
                "8 <- 3.3",
                "9 <- 1.2"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)",
                "11 - 8 = 3 (left: 3 8 12)",
                "5 + 8 = 13 (left: 11 13 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)",
                "5 + 8 = 13 (left: 11 13 12)\n3 * 6 = 18 (left: 9 18 12)",
                "5 + 8 = 13 (left: 11 13 12)",
                "12 - 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)",
                "5 + 8 = 13 (left: 11 13 12)"
            ]
        },
        "step_5": {
            "steps": [
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24",
                "11 - 8 = 3 (left: 3 8 12)\n3 + 8 = 11 (left: 11 12)",
                "5 + 8 = 13 (left: 11 13 12)\n12 + 11 = 23 (left: 13 23)",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24",
                "5 + 8 = 13 (left: 11 13 12)\n3 * 6 = 18 (left: 9 18 12)\n12 + 9 = 21 (left: 21)",
                "5 + 8 = 13 (left: 11 13 12)\nInput: 10 5 15",
                "12 - 11 = 1 (left: 1 11 12)\n12 - 11 = 1 (left: 1 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "5 + 8 = 13 (left: 11 13 12)\n3 / 9 = 0.3333333333333333 (left: 5 7 0.3333333333333333)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                60.0,
                0.003,
                0.003,
                0.003,
                0.002,
                0.002,
                2.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 3.2",
                "2 <- 3.5",
                "3 <- 3.3",
                "4 <- 5.3",
                "5 <- 3.3",
                "6 <- 1.7",
                "7 <- 2.7",
                "8 <- 3.3",
                "9 <- 3.3"
            ],
            "resampled_steps": [
                "",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)",
                "5 + 8 = 13 (left: 11 13 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)",
                "11 - 8 = 3 (left: 3 8 12)",
                "11 - 8 = 3 (left: 3 8 12)\n4 * 9 = 36 (left: 36 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)"
            ]
        },
        "step_6": {
            "steps": [
                "12 - 8 = 4 (left: 4 11 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "5 + 8 = 13 (left: 11 13 12)\n6 - 9 = -3 (left: -3 3 5)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "11 - 8 = 3 (left: 3 8 12)\n3 * 8 = 24 (left: 24 12)",
                "11 - 8 = 3 (left: 3 8 12)\n4 * 9 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)"
            ],
            "values": [
                1.002,
                0.001,
                21.001,
                0.001,
                60.0,
                0.002,
                0.003,
                0.001,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 5.3",
                "2 <- 6.8",
                "3 <- 2.6",
                "4 <- 3.5",
                "5 <- 2.6",
                "6 <- 3.3",
                "7 <- 1.7",
                "8 <- 6.2",
                "9 <- 2.6"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 11 = 1 (left: 1 11 12)",
                "5 + 8 = 13 (left: 11 13 12)",
                "12 - 11 = 1 (left: 1 11 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)",
                "11 - 8 = 3 (left: 3 8 12)",
                "5 + 8 = 13 (left: 11 13 12)\n6 - 9 = -3 (left: -3 3 5)",
                "12 - 11 = 1 (left: 1 11 12)"
            ]
        },
        "step_7": {
            "steps": [
                "12 - 11 = 1 (left: 1 11 12)\n3 * 5 = 15 (left: 7 8 15)",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 12 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n11 / 1 = 11 (left: 11 12)",
                "5 + 8 = 13 (left: 11 13 12)\n5 + 10 = 15 (left: 15 15)",
                "12 - 11 = 1 (left: 1 11 12)\n11 / 1 = 11 (left: 11)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "11 - 8 = 3 (left: 3 8 12)\n3 + 8 = 11 (left: 11 12)",
                "5 + 8 = 13 (left: 11 13 12)\n6 - 9 = -3 (left: -3 3 5)\n3 * 5 = 15 (left: -3 15)",
                "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)"
            ],
            "values": [
                1.002,
                60.0,
                60.0,
                1.001,
                0.003,
                0.001,
                0.002,
                0.003,
                0.001,
                40.001
            ],
            "resampled": [
                "0 <- 3.5",
                "1 <- 7.2",
                "2 <- 6.8",
                "3 <- 7.2",
                "4 <- 7.1",
                "5 <- 3.5",
                "6 <- 6.8",
                "7 <- 7.1",
                "8 <- 6.8",
                "9 <- 7.9"
            ],
            "resampled_steps": [
                "5 + 8 = 13 (left: 11 13 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 12 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 12 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24",
                "5 + 8 = 13 (left: 11 13 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)"
            ]
        },
        "step_8": {
            "steps": [
                "5 + 8 = 13 (left: 11 13 12)\n11 * 13 = 143 (left: 143 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 12 = 24\nInput: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nAnswer: (3 + 4) * (7 - 3) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 8 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 12 = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n3 * 8 = 24 (left: 10 24)\nAnswer: 3 * (7 + 8) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 6 = 24",
                "5 + 8 = 13 (left: 11 13 12)\n11 + 13 = 24 (left: 24 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 8 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24\nInput: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 * 7 = 49 (left: 3 49)\n49 / 3 = 16.33 (left: 16.33)\nAnswer: (3 + 4) * (7 + 7) = 24 is not possible.",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 8 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n1 + 11 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)"
            ],
            "values": [
                0.001,
                60.0,
                40.001,
                60.0,
                40.0,
                0.003,
                40.001,
                60.0,
                40.001,
                0.003
            ],
            "resampled": [
                "0 <- 6.2",
                "1 <- 8.1",
                "2 <- 6.8",
                "3 <- 8.8",
                "4 <- 8.7",
                "5 <- 2.3",
                "6 <- 8.7",
                "7 <- 6.4",
                "8 <- 8.6",
                "9 <- 8.3"
            ],
            "resampled_steps": [
                "5 + 8 = 13 (left: 11 13 12)\n6 - 9 = -3 (left: -3 3 5)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 12 = 24\nInput: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nAnswer: (3 + 4) * (7 - 3) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 8 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24\nInput: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 * 7 = 49 (left: 3 49)\n49 / 3 = 16.33 (left: 16.33)\nAnswer: (3 + 4) * (7 + 7) = 24 is not possible.",
                "11 - 8 = 3 (left: 3 8 12)\n12 / 3 = 4 (left: 4 8 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24\nInput: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 * 7 = 49 (left: 3 49)\n49 / 3 = 16.33 (left: 16.33)\nAnswer: (3 + 4) * (7 + 7) = 24 is not possible.",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 8 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 12 = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n3 * 8 = 24 (left: 10 24)\nAnswer: 3 * (7 + 8) = 24"
            ]
        },
        "step_9": {
            "steps": [
                "5 + 8 = 13 (left: 11 13 12)\n6 - 9 = -3 (left: -3 3 5)\nPossible next steps:",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 12 = 24\nInput: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7)\n4 * 7 = 28 (left: 28)\nAnswer: (3 + 4) * (7 - 3) = 24\nInput: 2 3 5 8\nSteps:\n3 + 5 = 8 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (2 + 3) * (5 - 8) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 8 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 8 = 24\nInput: 3 3 7 8\nSteps:\n7 + 3 = 10 (left: 3 8 10)\n10 - 8 = 2 (left: 2 10)\n2 * 10 = 20 (left: 20)\n20 + 3 = 23 (left: 23)\n23 + 1 = 24 (left: 24)\nAnswer: ((7 + 3) * 10 + 3) + 1 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24\nInput: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 * 7 = 49 (left: 3 49)\n49 / 3 = 16.33 (left: 16.33)\nAnswer: (3 + 4) * (7 + 7) = 24 is not possible.\nInput: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n9 - 6 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) + (9 - 6) = 24",
                "11 - 8 = 3 (left: 3 8 12)\n12 / 3 = 4 (left: 4 8 12)\n12 / 4 = 3 (left: 3 8 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24\nInput: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 * 7 = 49 (left: 3 49)\n49 / 3 = 16.33 (left: 16.33)\nAnswer: (3 + 4) * (7 + 7) = 24 is not possible.\nInput: 3 3 5 7\nSteps:\n3 * 3 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 * 12 = 108 (left: 108)\nAnswer: (3 * 3) * (5 + 7) = 24 is not possible.",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24\nThere is no way to obtain 24 using the numbers 5, 8, 11, and 12 with the given restrictions.",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 8 = 24\nInput: 2 3 4 6\nSteps:\n3 + 4 = 7 (left: 2 6 7)\n6 + 2 = 8 (left: 8 7)\n8 * 7 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((3 + 4) + 6) * 2 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 12 = 24\nInput: 3 3 7 8\nSteps:\n3 + 7 = 10 (left: 3 8 10)\n3 * 8 = 24 (left: 10 24)\nAnswer: 3 * (7 + 8) = 24\nInput: 2 3 6 9\nSteps:\n6 * 3 = 18 (left: 2 9 18)\n18 - 9 = 9 (left: 2 9)\n9 * 2 = 18 (left: 18)\n18 + 18 = 36 (left: 36)\n36 / 2 = 18 (left: 18)\n18 - 9 = 9 (left: 9)\n9 * 2 = 18 (left: 18)\n18 - 18 = 0 (left: 0)\nAnswer: (((2 * 3) + 6) * 9) / 2 = 24"
            ],
            "values": [
                0.003,
                60.0,
                20.002,
                40.0,
                60.0,
                60.0,
                60.0,
                0.003,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 8.6",
                "1 <- 9.2",
                "2 <- 9.8",
                "3 <- 8.8",
                "4 <- 6.2",
                "5 <- 9.5",
                "6 <- 1.2",
                "7 <- 9.6",
                "8 <- 9.4",
                "9 <- 6.4"
            ],
            "resampled_steps": [
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 8 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 8 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 8 = 24\nInput: 2 3 4 6\nSteps:\n3 + 4 = 7 (left: 2 6 7)\n6 + 2 = 8 (left: 8 7)\n8 * 7 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((3 + 4) + 6) * 2 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 8 = 24",
                "5 + 8 = 13 (left: 11 13 12)\n6 - 9 = -3 (left: -3 3 5)",
                "11 - 8 = 3 (left: 3 8 12)\n12 / 3 = 4 (left: 4 8 12)\n12 / 4 = 3 (left: 3 8 12)",
                "5 + 8 = 13 (left: 11 13 12)",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24\nInput: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 * 7 = 49 (left: 3 49)\n49 / 3 = 16.33 (left: 16.33)\nAnswer: (3 + 4) * (7 + 7) = 24 is not possible.\nInput: 3 3 5 7\nSteps:\n3 * 3 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 * 12 = 108 (left: 108)\nAnswer: (3 * 3) * (5 + 7) = 24 is not possible.",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24\nInput: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 * 7 = 49 (left: 3 49)\n49 / 3 = 16.33 (left: 16.33)\nAnswer: (3 + 4) * (7 + 7) = 24 is not possible.\nInput: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n9 - 6 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) + (9 - 6) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 8 = 24\nInput: 3 6 7 8\n\n7 - 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 * 8 = 80 (left: 80)\nAnswer: (7 - 3) + (6 + 8) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 8 = 24\nInput: 2 3 5 12\nSteps:\n3 * 5 = 15 (left: 2 12 15)\n15 - 12 = 3 (left: 2 3)\n2 * 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((2 * 3) - (15 - 12)) * 4 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 8 = 24\nInput: 2 3 4 6\nSteps:\n3 + 4 = 7 (left: 2 6 7)\n6 + 2 = 8 (left: 8 7)\n8 * 7 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\nAnswer: ((3 + 4) + 6) * 2 = 24\nInput: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n6 * 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((5 + 7) - 6) + 3 = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 / 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 / (12 - 11)) + 8 = 24\nInput: 3 4 5 6\nSteps:\n4 * 5 = 20 (left: 3 6 20)\n20 - 6 = 14 (left: 3 14)\n14 + 3 = 17 (left: 17)\n17 + 17 = 34 (left: 24)\nAnswer: ((3 * 5) - 6) + 4 = 24",
                "5 + 8 = 13 (left: 11 13 12)\n6 - 9 = -3 (left: -3 3 5)\n3 - (-3) = 6 (left: 6 5)",
                "11 - 8 = 3 (left: 3 8 12)\n12 / 3 = 4 (left: 4 8 12)\n12 / 4 = 3 (left: 3 8 12)\n8 / 3 = 2.67 (left: 2.67 12)",
                "5 + 8 = 13 (left: 11 13 12)\n12 - 11 = 1 (left: 1 13)",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24\nInput: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 * 7 = 49 (left: 3 49)\n49 / 3 = 16.33 (left: 16.33)\nAnswer: (3 + 4) * (7 + 7) = 24 is not possible.\nInput: 3 3 5 7\nSteps:\n3 * 3 = 9 (left: 5 7 9)\n5 + 7 = 12 (left: 9 12)\n9 * 12 = 108 (left: 108)\nAnswer: (3 * 3) * (5 + 7) = 24 is not possible.\nInput: 2 3 4 6\nSteps:\n3 * 4 = 12 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (3 * 4) + (2 * 6) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24\nInput: 3 3 4 7\nSteps:\n3 + 4 = 7 (left: 3 7 7)\n7 * 7 = 49 (left: 3 49)\n49 / 3 = 16.33 (left: 16.33)\nAnswer: (3 + 4) * (7 + 7) = 24 is not possible.\nInput: 3 6 8 9\nSteps:\n3 * 8 = 24 (left: 6 9 24)\n9 - 6 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\nAnswer: (3 * 8) + (9 - 6) = 24\nInput: 2 3 4 10\nSteps:\n2 * 10 = 20 (left: 3 4 20)\n3 + 4 = 7 (left: 7 20)\n7 * 20 = 140 (left: 140)\nAnswer: (2 * 10) + (3 + 4) = 24",
                "12 - 11 = 1 (left: 1 11 12)\n12 * 1 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (12 * (12 - 11)) + 8 = 24\nInput: 3 6 7 8\nSteps:\n7 - 6 = 1 (left: 1 3 8)\n1 * 8 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (7 - 6) * 8 = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                60.0,
                0.002,
                0.003,
                1.002,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.865991
    },
    "935": {
        "input": "5 6 8 10",
        "step_1": {
            "steps": [
                "6 + 8 = 14 (left: 5 10 14)",
                "5 + 6 = 11 (left: 8 10 11)",
                "10 - 6 = 4 (left: 4 6 8)",
                "6 / 5 = 1.2 (left: 1.2 8 10)",
                "10 / 5 = 2 (left: 8 2 10)",
                "5 + 6 = 11 (left: 8 10 11)",
                "5 * 6 = 30 (left: 8 10 30)",
                "6 / 5 = 1.2 (left: 1.2 8 10)",
                "5 * 6 = 30 (left: 8 10 30)",
                "6 - 5 = 1 (left: 1 8 10)"
            ],
            "values": [
                1.002,
                2.001,
                40.0,
                3.0,
                2.001,
                2.001,
                2.001,
                2.001,
                20.002,
                2.001
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 1.8",
                "2 <- 1.7",
                "3 <- INIT",
                "4 <- 1.3",
                "5 <- 1.2",
                "6 <- INIT",
                "7 <- 1.2",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "10 / 5 = 2 (left: 8 2 10)",
                "5 * 6 = 30 (left: 8 10 30)",
                "6 / 5 = 1.2 (left: 1.2 8 10)",
                "",
                "6 / 5 = 1.2 (left: 1.2 8 10)",
                "10 - 6 = 4 (left: 4 6 8)",
                "",
                "10 - 6 = 4 (left: 4 6 8)",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "10 / 5 = 2 (left: 8 2 10)\n8 * 2 = 16 (left: 16 10)",
                "5 * 6 = 30 (left: 8 10 30)\n30 - 10 = 20 (left: 8 20)",
                "6 / 5 = 1.2 (left: 1.2 8 10)\n8 - 1.2 = 6.8 (left: 6.8 10)",
                "10 / 5 = 2 (left: 2 6 8)",
                "6 / 5 = 1.2 (left: 1.2 8 10)\n1.2 * 8 = 9.6 (left: 9.6 10)",
                "10 - 6 = 4 (left: 4 6 8)\n5 - 3 = 2 (left: 2 7 9)",
                "3 * 4 = 12 (left: 5 7 12)",
                "10 - 6 = 4 (left: 4 6 8)\nInput: 5 7",
                "6 / 5 = 1.2 (left: 1.2 8 10)",
                "6 / 5 = 1.2 (left: 1.2 10 10)"
            ],
            "values": [
                0.003,
                1.002,
                2.001,
                1.002,
                1.002,
                1.001,
                21.0,
                0.003,
                3.0,
                1.001
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 1.2",
                "2 <- 1.1",
                "3 <- 2.9",
                "4 <- 2.6",
                "5 <- 1.2",
                "6 <- 1.2",
                "7 <- 1.2",
                "8 <- 2.6",
                "9 <- 2.6"
            ],
            "resampled_steps": [
                "3 * 4 = 12 (left: 5 7 12)",
                "10 - 6 = 4 (left: 4 6 8)",
                "5 + 6 = 11 (left: 8 10 11)",
                "6 / 5 = 1.2 (left: 1.2 10 10)",
                "3 * 4 = 12 (left: 5 7 12)",
                "10 - 6 = 4 (left: 4 6 8)",
                "10 - 6 = 4 (left: 4 6 8)",
                "10 - 6 = 4 (left: 4 6 8)",
                "3 * 4 = 12 (left: 5 7 12)",
                "3 * 4 = 12 (left: 5 7 12)"
            ]
        },
        "step_3": {
            "steps": [
                "3 * 4 = 12 (left: 5 7 12)\n12 - 5 = 7 (left: 7 12)",
                "10 - 6 = 4 (left: 4 6 8)\n8 - 4 = 4 (left: 4 8)",
                "5 + 6 = 11 (left: 8 10 11)\n10 * 11 = 110 (left: 8)",
                "6 / 5 = 1.2 (left: 1.2 10 10)\n3 * 5 = 15 (left: 7 15)",
                "3 * 4 = 12 (left: 5 7 12)\n12 - 5 = 7 (left: 7 12)",
                "10 - 6 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 8 10)",
                "10 - 6 = 4 (left: 4 6 8)\n8 / 4 = 2 (left: 2 6)",
                "10 - 6 = 4 (left: 4 6 8)\n2 + 3 = 5 (left: 1 5 4)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)"
            ],
            "values": [
                1.002,
                0.003,
                0.002,
                0.003,
                0.003,
                1.001,
                0.003,
                3.0,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 2.5",
                "1 <- 3.9",
                "2 <- 3.9",
                "3 <- 3.9",
                "4 <- 3.8",
                "5 <- 1.2",
                "6 <- 3.8",
                "7 <- 1.2",
                "8 <- 2.6",
                "9 <- 3.9"
            ],
            "resampled_steps": [
                "10 - 6 = 4 (left: 4 6 8)\n5 - 3 = 2 (left: 2 7 9)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)",
                "10 - 6 = 4 (left: 4 6 8)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)",
                "10 - 6 = 4 (left: 4 6 8)",
                "3 * 4 = 12 (left: 5 7 12)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)"
            ]
        },
        "step_4": {
            "steps": [
                "10 - 6 = 4 (left: 4 6 8)\n5 - 3 = 2 (left: 2 7 9)\n7 / 2 = 3.5 (left: 3.5 9)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 + 12 = 24",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "10 - 6 = 4 (left: 4 6 8)\n6 / 4 = 1.5 (left: 1.5 8)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "10 - 6 = 4 (left: 4 6 8)\n6 / 4 = 1.5 (left: 1.5 8)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 + 12 = 24"
            ],
            "values": [
                2.001,
                0.003,
                0.003,
                0.003,
                0.002,
                0.002,
                0.003,
                2.001,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 4.8",
                "1 <- 3.8",
                "2 <- 1.2",
                "3 <- 3.8",
                "4 <- 3.9",
                "5 <- 4.8",
                "6 <- 3.9",
                "7 <- 1.2",
                "8 <- 2.6",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)",
                "10 - 6 = 4 (left: 4 6 8)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)",
                "10 - 6 = 4 (left: 4 6 8)",
                "3 * 4 = 12 (left: 5 7 12)",
                "5 * 6 = 30 (left: 8 10 30)"
            ]
        },
        "step_5": {
            "steps": [
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n7 * 17 = 119 (left: 119)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "10 - 6 = 4 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n7 * 17 = 119 (left: 119)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 + 12 = 24",
                "10 - 6 = 4 (left: 4 6 8)\nInput: 2 3 5",
                "3 * 4 = 12 (left: 5 7 12)\n12 - 5 = 7 (left: 7 12)",
                "5 * 6 = 30 (left: 8 10 30)\n30 - 10 = 20 (left: 8 20)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.8",
                "1 <- 3.9",
                "2 <- 2.2",
                "3 <- INIT",
                "4 <- 3.8",
                "5 <- 1.8",
                "6 <- 4.8",
                "7 <- 3.9",
                "8 <- 3.9",
                "9 <- 3.8"
            ],
            "resampled_steps": [
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)",
                "6 / 5 = 1.2 (left: 1.2 8 10)\n8 - 1.2 = 6.8 (left: 6.8 10)",
                "",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)",
                "5 * 6 = 30 (left: 8 10 30)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)"
            ]
        },
        "step_6": {
            "steps": [
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "6 / 5 = 1.2 (left: 1.2 8 10)\n8 - 1.2 = 6.8 (left: 6.8 10)\n6.8 + 10 = 16.8 (left: 16.8)",
                "8 / 6 = 1.333 (left: 5 1.333 10)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "5 * 6 = 30 (left: 8 10 30)\n30 - 8 = 22 (left: 10 22)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n17 / 7 = 2.43 (left: 2.43)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 + 12 = 24",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                3.0,
                0.001,
                0.003,
                0.003,
                20.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- 3.8",
                "2 <- 1.2",
                "3 <- 3.8",
                "4 <- 2.6",
                "5 <- 6.3",
                "6 <- 6.7",
                "7 <- 4.8",
                "8 <- 3.8",
                "9 <- 3.8"
            ],
            "resampled_steps": [
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)",
                "10 - 6 = 4 (left: 4 6 8)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)",
                "3 * 4 = 12 (left: 5 7 12)",
                "8 / 6 = 1.333 (left: 5 1.333 10)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)"
            ]
        },
        "step_7": {
            "steps": [
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "10 - 6 = 4 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "3 * 4 = 12 (left: 5 7 12)\n5 * 7 = 35 (left: 35 12)",
                "8 / 6 = 1.333 (left: 5 1.333 10)\n7 / 3 = 2.3333 (left: 2.3333 5)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\nNo possible next steps as there are no numbers provided.",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\nPossible next steps:",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.001,
                0.001,
                2.001,
                0.003,
                0.003,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 3.8",
                "1 <- 7.8",
                "2 <- 4.8",
                "3 <- 7.8",
                "4 <- 7.8",
                "5 <- 2.6",
                "6 <- 7.8",
                "7 <- 7.8",
                "8 <- 4.8",
                "9 <- 4.8"
            ],
            "resampled_steps": [
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "3 * 4 = 12 (left: 5 7 12)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)"
            ]
        },
        "step_8": {
            "steps": [
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 6) * (8 - 10) = 24",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 6) * (8 - 10) = 24",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 6) * (8 - 10) = 24",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 6) * (8 - 10) = 24",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 6) * (8 + 10) = 24",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)"
            ],
            "values": [
                0.001,
                20.002,
                40.0,
                20.002,
                0.003,
                60.0,
                0.003,
                0.003,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 8.3",
                "1 <- 4.8",
                "2 <- 6.7",
                "3 <- 3.9",
                "4 <- 4.8",
                "5 <- 8.8",
                "6 <- 8.5",
                "7 <- 8.5",
                "8 <- 8.8",
                "9 <- 8.5"
            ],
            "resampled_steps": [
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 6) * (8 - 10) = 24",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)"
            ]
        },
        "step_9": {
            "steps": [
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 6) * (8 - 10) = 24\nInput: 3 4 5 6\nSteps:\n4 * 5 = 20 (left: 3 6 20)\n6 - 3 = 3 (left: 3 20)\n3 * 20 = 60 (left: 60)\n60 / 6 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((((3 * 5) * 4) + 6) / 6) + 10 = 24",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n17 - 7 = 10 (left: 10)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)\nNo possible next steps.",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((5 * 6) + 8) + 10 = 24",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((5 * 6) + 8) + 10 = 24",
                "3 * 4 = 12 (left: 5 7 12)\n7 + 5 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)"
            ],
            "values": [
                60.0,
                0.001,
                0.003,
                0.003,
                60.0,
                60.0,
                0.003,
                0.003,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 4.8",
                "1 <- 9.8",
                "2 <- 9.0",
                "3 <- 9.0",
                "4 <- 9.0",
                "5 <- 7.9",
                "6 <- 8.8",
                "7 <- 9.5",
                "8 <- 9.5",
                "9 <- 7.9"
            ],
            "resampled_steps": [
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((5 * 6) + 8) + 10 = 24",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 6) * (8 - 10) = 24\nInput: 3 4 5 6\nSteps:\n4 * 5 = 20 (left: 3 6 20)\n6 - 3 = 3 (left: 3 20)\n3 * 20 = 60 (left: 60)\n60 / 6 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((((3 * 5) * 4) + 6) / 6) + 10 = 24",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 6) * (8 - 10) = 24\nInput: 3 4 5 6\nSteps:\n4 * 5 = 20 (left: 3 6 20)\n6 - 3 = 3 (left: 3 20)\n3 * 20 = 60 (left: 60)\n60 / 6 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((((3 * 5) * 4) + 6) / 6) + 10 = 24",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 6) * (8 - 10) = 24\nInput: 3 4 5 6\nSteps:\n4 * 5 = 20 (left: 3 6 20)\n6 - 3 = 3 (left: 3 20)\n3 * 20 = 60 (left: 60)\n60 / 6 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((((3 * 5) * 4) + 6) / 6) + 10 = 24",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((5 * 6) + 8) + 10 = 24",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((5 * 6) + 8) + 10 = 24",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)"
            ]
        },
        "step_10": {
            "steps": [
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\nPossible next steps:",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((5 * 6) + 8) + 10 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 8 9 9)\n9 + 8 = 17 (left: 17 9)\n17 + 9 = 26 (left: 26)\nAnswer: (3 * 3 + 8) + 9 = 24",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 6) * (8 - 10) = 24\nInput: 3 4 5 6\nSteps:\n4 * 5 = 20 (left: 3 6 20)\n6 - 3 = 3 (left: 3 20)\n3 * 20 = 60 (left: 60)\n60 / 6 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((((3 * 5) * 4) + 6) / 6) + 10 = 24\nInput: 2 3 6 8\nSteps:\n6 * 3 = 18 (left: 2 8 18)\n18 - 8 = 10 (left: 2 10)\n10 * 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((6 * 3) - 8) * 2 + 4 = 24",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 6) * (8 - 10) = 24\nInput: 3 4 5 6\nSteps:\n4 * 5 = 20 (left: 3 6 20)\n6 - 3 = 3 (left: 3 20)\n3 * 20 = 60 (left: 60)\n60 / 6 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((((3 * 5) * 4) + 6) / 6) + 10 = 24\nInput: 1 3 4 9\nSteps:\n4 * 9 = 36 (left: 1 3 36)\n3 + 1 = 4 (left: 4 36)\n4 * 9 = 36 (left: 36)\nAnswer: (1 + 3) * (4 * 9) = 24",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 6) * (8 - 10) = 24\nInput: 3 4 5 6\nSteps:\n4 * 5 = 20 (left: 3 6 20)\n6 - 3 = 3 (left: 3 20)\n3 * 20 = 60 (left: 60)\n60 / 6 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((((3 * 5) * 4) + 6) / 6) + 10 = 24\nInput: 2 3 6 9\nSteps:\n3 * 6 = 18 (left: 2 9 18)\n9 - 2 = 7 (left: 7 18)\n7 * 18 = 126 (left: 126)\n126 / 9 = 14 (left: 14)\n14 - 2 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: ((3 * 6) * (9 - 2)) + 2 = 24",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 + 7) * (8 - 10) = 24",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((5 * 6) + 8) + 10 = 24",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((5 * 6) + 8) + 10 = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n7 + 8 = 15 (left: 3 15)\n15 + 3 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 + 5) + 7) + 3 = 24",
                "3 * 4 = 12 (left: 5 7 12)\n12 + 5 = 17 (left: 7 17)\n7 + 17 = 24 (left: 24)\nAnswer: ((5 * 6) + 8) + 10 = 24\nInput: 3 4 5 6\nSteps:\n4 * 6 = 24 (left: 3 5 24)\n3 + 5 = 8 (left: 8 24)\n8 * 24 = 24 (left: 24)\nAnswer: (3 + 5) * (4 * 6) = 24",
                "3 * 4 = 12 (left: 5 7 12)\n7 - 5 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (5 * 6) - (8 - 10) = 24"
            ],
            "values": [
                0.003,
                60.0,
                60.0,
                60.0,
                40.0,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.9172805000000002
    },
    "936": {
        "input": "6 11 12 13",
        "step_1": {
            "steps": [
                "11 + 12 = 23 (left: 6 13 23)",
                "13 - 6 = 7 (left: 7 11 12)",
                "Input: 3 4 5 6",
                "12 + 13 = 25 (left: 6 11 25)",
                "13 - 6 = 7 (left: 7 11 12)",
                "12 * 13 = 156 (left: 6 11 156)",
                "4 * 5 = 20 (left: 2 3 20)",
                "13 - 11 = 2 (left: 6 2 12)",
                "Possible next steps:",
                "6 / 11 = 0.5454545454545454 (left: 0.5454545454545454 12 13)"
            ],
            "values": [
                1.002,
                3.0,
                0.003,
                3.0,
                2.001,
                1.002,
                2.0,
                40.001,
                0.003,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- 1.7",
                "3 <- INIT",
                "4 <- 1.7",
                "5 <- INIT",
                "6 <- 1.7",
                "7 <- 1.7",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "13 - 11 = 2 (left: 6 2 12)",
                "",
                "13 - 11 = 2 (left: 6 2 12)",
                "",
                "13 - 11 = 2 (left: 6 2 12)",
                "13 - 11 = 2 (left: 6 2 12)",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "13 + 6 = 19 (left: 11 12 19)",
                "11 + 12 = 23 (left: 6 13 23)",
                "13 - 11 = 2 (left: 6 2 12)\n6 * 2 = 12 (left: 12 12)",
                "12 * 13 = 156 (left: 6 11 156)",
                "13 - 11 = 2 (left: 6 2 12)\n12 - 6 = 6 (left: 2 6)",
                "Possible next steps:",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)",
                "13 - 11 = 2 (left: 6 2 12)\n12 - 6 = 6 (left: 2 6)",
                "11 / 6 = 1.83333 (left: 1.83333 12 13)",
                "3 / 5 = 0.6 (left: 0.6 6 10)"
            ],
            "values": [
                0.003,
                3.0,
                40.001,
                0.002,
                0.002,
                0.003,
                40.001,
                0.002,
                1.002,
                3.0
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 2.6",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 2.6",
                "5 <- INIT",
                "6 <- 2.2",
                "7 <- 2.6",
                "8 <- 1.7",
                "9 <- 2.6"
            ],
            "resampled_steps": [
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)",
                "",
                "",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)",
                "",
                "13 - 11 = 2 (left: 6 2 12)\n6 * 2 = 12 (left: 12 12)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)",
                "13 - 11 = 2 (left: 6 2 12)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)"
            ]
        },
        "step_3": {
            "steps": [
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24",
                "Input: 3 9 7 11",
                "12 / 6 = 2 (left: 2 11 13)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "12 + 13 = 25 (left: 6 11 25)",
                "13 - 11 = 2 (left: 6 2 12)\n6 * 2 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "13 - 11 = 2 (left: 6 2 12)\n6 / 2 = 3 (left: 3 12)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                40.0,
                3.0,
                0.002,
                0.002,
                0.002,
                20.002
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- 2.2",
                "2 <- 2.6",
                "3 <- 1.7",
                "4 <- 1.0",
                "5 <- 3.9",
                "6 <- 1.7",
                "7 <- 2.2",
                "8 <- 1.7",
                "9 <- 2.6"
            ],
            "resampled_steps": [
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "13 - 11 = 2 (left: 6 2 12)\n6 * 2 = 12 (left: 12 12)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)",
                "13 - 11 = 2 (left: 6 2 12)",
                "11 + 12 = 23 (left: 6 13 23)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)",
                "13 - 11 = 2 (left: 6 2 12)",
                "13 - 11 = 2 (left: 6 2 12)\n6 * 2 = 12 (left: 12 12)",
                "13 - 11 = 2 (left: 6 2 12)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)"
            ]
        },
        "step_4": {
            "steps": [
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\nThere are no possible next steps for the input 144.",
                "13 - 11 = 2 (left: 6 2 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "13 - 11 = 2 (left: 6 2 12)\n6 + 2 = 8 (left: 8 12)",
                "11 + 12 = 23 (left: 6 13 23)\n6 * 13 = 78 (left: 78 23)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 * 12 = 144 (left: 144)\nThere is only one number, so no possible next steps.",
                "13 - 11 = 2 (left: 6 2 12)\n6 / 2 = 3 (left: 3 12)",
                "13 - 11 = 2 (left: 6 2 12)\n6 * 2 = 12 (left: 12 12)\n12 / 12 = 1 (left: 1)",
                "13 - 11 = 2 (left: 6 2 12)\n10 + 3 = 13 (left: 13 10)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)"
            ],
            "values": [
                0.003,
                0.003,
                0.0,
                0.003,
                0.001,
                0.003,
                60.0,
                0.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.6",
                "1 <- 1.3",
                "2 <- INIT",
                "3 <- 2.6",
                "4 <- 3.4",
                "5 <- 3.4",
                "6 <- 2.6",
                "7 <- 4.6",
                "8 <- 4.6",
                "9 <- 4.6"
            ],
            "resampled_steps": [
                "13 - 11 = 2 (left: 6 2 12)\n6 / 2 = 3 (left: 3 12)",
                "12 + 13 = 25 (left: 6 11 25)",
                "",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)",
                "13 - 11 = 2 (left: 6 2 12)\n6 / 2 = 3 (left: 3 12)",
                "13 - 11 = 2 (left: 6 2 12)\n6 / 2 = 3 (left: 3 12)",
                "13 - 11 = 2 (left: 6 2 12)\n6 / 2 = 3 (left: 3 12)"
            ]
        },
        "step_5": {
            "steps": [
                "13 - 11 = 2 (left: 6 2 12)\n6 / 2 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4)",
                "12 + 13 = 25 (left: 6 11 25)\n11 - 6 = 5 (left: 5 11 25)",
                "6 + 11 = 17 (left: 12 13 17)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 11) * (6 * 2) = 24",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 11) * (6 + 12) = 24",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "13 - 11 = 2 (left: 6 2 12)\n6 / 2 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9)",
                "13 - 11 = 2 (left: 6 2 12)\n6 / 2 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4)",
                "13 - 11 = 2 (left: 6 2 12)\n6 / 2 = 3 (left: 3 12)\n12 / 3 = 4 (left: 4 12)"
            ],
            "values": [
                0.0,
                1.002,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0,
                0.001,
                0.001,
                1.002
            ],
            "resampled": [
                "0 <- 5.5",
                "1 <- 4.6",
                "2 <- 5.4",
                "3 <- 5.3",
                "4 <- 5.3",
                "5 <- 5.5",
                "6 <- 5.6",
                "7 <- 5.5",
                "8 <- 2.1",
                "9 <- 5.6"
            ],
            "resampled_steps": [
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 11) * (6 + 12) = 24",
                "13 - 11 = 2 (left: 6 2 12)\n6 / 2 = 3 (left: 3 12)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 11) * (6 * 2) = 24",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 11) * (6 + 12) = 24",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 11) * (6 + 12) = 24",
                "11 + 12 = 23 (left: 6 13 23)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)"
            ]
        },
        "step_6": {
            "steps": [
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 11) * (6 + 12) = 24\nInput: 3 4 5 6\nSteps:\n3 * 5 = 15 (left: 4 6 15)\n4 + 6 = 10 (left: 10 15)\n10 + 15 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((3 * 5) + (4 + 6)) - 1 = 24",
                "13 - 11 = 2 (left: 6 2 12)\n6 / 2 = 3 (left: 3 12)\n12 - 3 = 9 (left: 9 12)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 11) * (6 * 2) = 24\nIn each case, the goal is to manipulate the numbers using basic arithmetic operations to ultimately obtain the target number of 24. The steps provided above demonstrate different ways to achieve this using the given numbers.",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * (13 - 11)) + 12 = 24",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (6 * (13 - 11)) + (12 + 12) = 24",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 11) * (6 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 3 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8 3)\n8 * 3 = 24 (left: 24)\nAnswer: (3 * 3) + (8 - 6) = 24",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 11) * (6 + 12) = 24",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 11) * (6 + 12) = 24\nInput: 3 3 4 7\nSteps:\n3 + 7 = 10 (left: 3 4 10)\n4 * 3 = 12 (left: 10 12)\n10 + 12 = 22 (left: 22)\n22 + 2 = 24 (left: 24)\nAnswer: ((3 + 7) * 4) + 3 = 24",
                "11 + 12 = 23 (left: 6 13 23)\n6 / 13 = 0.4615 (left: 0.4615 13 23)",
                "13 - 11 = 2 (left: 6 2 12)\n2 * 6 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 11) * (6 + 12) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 1.9504890000000001
    },
    "937": {
        "input": "2 2 8 8",
        "step_1": {
            "steps": [
                "8 / 2 = 4 (left: 2 8 4)",
                "8 / 2 = 4 (left: 2 4 8)",
                "8 * 2 = 16 (left: 2 8 16)",
                "8 - 2 = 6 (left: 2 6 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "8 - 2 = 6 (left: 2 6 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "8 - 2 = 6 (left: 2 4 8)",
                "2 * 2 = 4 (left: 4 8 8)"
            ],
            "values": [
                41.0,
                0.003,
                0.003,
                2.001,
                41.0,
                41.0,
                0.003,
                60.0,
                1.002,
                60.0
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.0",
                "2 <- 1.0",
                "3 <- 1.5",
                "4 <- INIT",
                "5 <- 1.0",
                "6 <- 1.7",
                "7 <- 1.9",
                "8 <- 1.7",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "2 * 2 = 4 (left: 4 8 8)",
                "8 / 2 = 4 (left: 2 8 4)",
                "8 / 2 = 4 (left: 2 8 4)",
                "2 * 2 = 4 (left: 4 8 8)",
                "",
                "8 / 2 = 4 (left: 2 8 4)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)",
                "8 / 2 = 4 (left: 2 8 4)\n8 / 2 = 4 (left: 4 4)",
                "8 / 2 = 4 (left: 2 8 4)\n8 - 4 = 4 (left: 2 4)",
                "2 * 2 = 4 (left: 4 8 8)\nInput: 2 8",
                "8 * 2 = 16 (left: 2 8 16)",
                "8 / 2 = 4 (left: 2 8 4)\n8 - 2 = 6 (left: 6 4)",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)",
                "8 / 2 = 4 (left: 2 8 4)"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                0.003,
                1.002,
                60.0,
                20.002,
                0.002,
                0.003,
                40.001
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 1.7",
                "2 <- 2.6",
                "3 <- 1.5",
                "4 <- 1.0",
                "5 <- 1.0",
                "6 <- 2.6",
                "7 <- 1.4",
                "8 <- 1.7",
                "9 <- 2.5"
            ],
            "resampled_steps": [
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "8 / 2 = 4 (left: 2 8 4)",
                "8 / 2 = 4 (left: 2 8 4)",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "8 / 2 = 4 (left: 2 8 4)\n8 - 2 = 6 (left: 6 4)"
            ]
        },
        "step_3": {
            "steps": [
                "2 * 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)",
                "2 * 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)",
                "8 / 2 = 4 (left: 2 8 4)\n2 + 8 = 10 (left: 4 10)",
                "8 / 2 = 4 (left: 2 8 4)\n4 * 2 = 8 (left: 8 4)",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)\n2 + 8 = 10 (left: 8 10)",
                "2 * 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "8 / 2 = 4 (left: 2 8 4)\n8 - 2 = 6 (left: 6 4)\n5 / 3 = 1.6666666666666667 (left: 1.6666666666666667)"
            ],
            "values": [
                0.003,
                0.0,
                1.001,
                20.002,
                0.001,
                1.001,
                0.003,
                2.001,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 2.6",
                "2 <- 2.9",
                "3 <- 2.5",
                "4 <- 2.5",
                "5 <- 2.9",
                "6 <- 1.7",
                "7 <- 2.6",
                "8 <- 2.9",
                "9 <- 3.3"
            ],
            "resampled_steps": [
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)",
                "8 / 2 = 4 (left: 2 8 4)",
                "8 / 2 = 4 (left: 2 8 4)\n8 - 2 = 6 (left: 6 4)",
                "8 / 2 = 4 (left: 2 8 4)\n8 - 2 = 6 (left: 6 4)",
                "8 / 2 = 4 (left: 2 8 4)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)",
                "8 / 2 = 4 (left: 2 8 4)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)"
            ]
        },
        "step_4": {
            "steps": [
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n3 / 5 = 0.6 (left: 4 0.6)",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)",
                "8 / 2 = 4 (left: 2 8 4)\n8 / 4 = 2 (left: 2 2)",
                "8 / 2 = 4 (left: 2 8 4)\n8 - 2 = 6 (left: 6 4)\n6 + 4 = 10 (left: 10)",
                "8 / 2 = 4 (left: 2 8 4)\n8 - 2 = 6 (left: 6 4)\n6 - 4 = 2 (left: 2)",
                "8 / 2 = 4 (left: 2 8 4)\n4 + 10 = 14 (left: 4 14)",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)",
                "8 / 2 = 4 (left: 2 8 4)\n4 + 4 = 8 (left: 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n8 * 4 = 32 (left: 32)"
            ],
            "values": [
                41.0,
                1.002,
                1.002,
                0.002,
                0.001,
                1.002,
                0.002,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 1.5",
                "2 <- 4.5",
                "3 <- 2.6",
                "4 <- 4.0",
                "5 <- 1.7",
                "6 <- 3.8",
                "7 <- 1.5",
                "8 <- 4.0",
                "9 <- 1.5"
            ],
            "resampled_steps": [
                "8 / 2 = 4 (left: 2 8 4)",
                "2 * 2 = 4 (left: 4 8 8)",
                "8 / 2 = 4 (left: 2 8 4)\n4 + 10 = 14 (left: 4 14)",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n3 / 5 = 0.6 (left: 4 0.6)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n3 / 5 = 0.6 (left: 4 0.6)",
                "2 * 2 = 4 (left: 4 8 8)"
            ]
        },
        "step_5": {
            "steps": [
                "8 / 2 = 4 (left: 2 8 4)\nInput: 4 10 6 4 16",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)",
                "8 / 2 = 4 (left: 2 8 4)\n4 + 10 = 14 (left: 4 14)\n4 + 14 = 18 (left: 18)",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)\n8 + 2 = 10 (left: 8 10)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n3 / 5 = 0.6 (left: 4 0.6)\n4 - 0.6 = 3.4 (left: 3.4)",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)",
                "2 * 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n3 / 5 = 0.6 (left: 4 0.6)\n4 / 0.6 = 6.666666666666667 (left: 0.6)",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)"
            ],
            "values": [
                0.003,
                20.001,
                0.002,
                1.001,
                0.001,
                0.001,
                0.003,
                0.002,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.9",
                "1 <- 1.9",
                "2 <- 1.4",
                "3 <- 1.9",
                "4 <- 1.7",
                "5 <- 4.0",
                "6 <- 1.7",
                "7 <- 1.5",
                "8 <- 3.8",
                "9 <- 3.8"
            ],
            "resampled_steps": [
                "8 / 2 = 4 (left: 2 8 4)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n3 / 5 = 0.6 (left: 4 0.6)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)"
            ]
        },
        "step_6": {
            "steps": [
                "8 / 2 = 4 (left: 2 8 4)\n8 - 2 = 6 (left: 6 4)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n3 / 5 = 0.6 (left: 4 0.6)\n4 * 0.6 = 2.4",
                "2 * 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)"
            ],
            "values": [
                60.0,
                41.0,
                0.002,
                22.0,
                40.001,
                0.003,
                0.002,
                1.002,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 3.8",
                "2 <- 4.0",
                "3 <- 3.3",
                "4 <- 6.0",
                "5 <- 4.0",
                "6 <- 6.1",
                "7 <- 2.9",
                "8 <- 1.9",
                "9 <- 2.5"
            ],
            "resampled_steps": [
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n3 / 5 = 0.6 (left: 4 0.6)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)",
                "8 / 2 = 4 (left: 2 8 4)\n8 - 2 = 6 (left: 6 4)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n3 / 5 = 0.6 (left: 4 0.6)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "8 / 2 = 4 (left: 2 8 4)",
                "2 * 2 = 4 (left: 4 8 8)",
                "8 / 2 = 4 (left: 2 8 4)\n8 - 2 = 6 (left: 6 4)"
            ]
        },
        "step_7": {
            "steps": [
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n3 / 5 = 0.6 (left: 4 0.6)\n4 + 0.6 = 4.6",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)",
                "8 / 2 = 4 (left: 2 8 4)\n8 - 2 = 6 (left: 6 4)\n6 - 4 = 2 (left: 2)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n3 / 5 = 0.6 (left: 4 0.6)\n4 - 0.6 = 3.4 (left: 3.4)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)",
                "8 / 2 = 4 (left: 2 8 4)\nPossible next steps:",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "8 / 2 = 4 (left: 2 8 4)\n8 - 2 = 6 (left: 6 4)\n6 / 4 = 1.5 (left: 1.5)"
            ],
            "values": [
                1.002,
                0.003,
                0.003,
                60.0,
                0.0,
                0.002,
                1.002,
                0.003,
                41.0,
                0.0
            ],
            "resampled": [
                "0 <- 6.3",
                "1 <- 1.5",
                "2 <- 6.1",
                "3 <- 7.3",
                "4 <- 6.4",
                "5 <- 6.0",
                "6 <- 1.3",
                "7 <- 6.1",
                "8 <- 7.8",
                "9 <- 7.3"
            ],
            "resampled_steps": [
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "8 / 2 = 4 (left: 2 8 4)\n8 - 2 = 6 (left: 6 4)",
                "8 - 2 = 6 (left: 2 6 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)"
            ]
        },
        "step_8": {
            "steps": [
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)",
                "2 * 2 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\nAnswer: (2 * 2) * (8 - 8) = 24",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 8 12)",
                "8 / 2 = 4 (left: 2 8 4)\n8 - 2 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)",
                "8 - 2 = 6 (left: 2 6 8)\n2 + 6 = 8 (left: 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\nAnswer: (2 * 2) * (8 - 8) = 24"
            ],
            "values": [
                1.002,
                1.002,
                0.002,
                40.001,
                2.001,
                60.0,
                0.002,
                0.003,
                0.003,
                20.002
            ],
            "resampled": [
                "0 <- 7.8",
                "1 <- 7.3",
                "2 <- 7.8",
                "3 <- 1.0",
                "4 <- 3.8",
                "5 <- 6.3",
                "6 <- 6.4",
                "7 <- 4.0",
                "8 <- 5.1",
                "9 <- 8.5"
            ],
            "resampled_steps": [
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "8 / 2 = 4 (left: 2 8 4)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n3 / 5 = 0.6 (left: 4 0.6)",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)",
                "8 / 2 = 4 (left: 2 8 4)\n8 - 2 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)"
            ]
        },
        "step_9": {
            "steps": [
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 8 32)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((2 * 2) * 8) - 8 = 24",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 + 8 = 12 (left: 8 12)",
                "8 / 2 = 4 (left: 2 8 4)\nInput: 4 10 6 4 8",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)",
                "2 * 2 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8 8)\n8 - 4 = 4 (left: 4 8)",
                "2 * 2 = 4 (left: 4 8 8)\n4 * 8 = 32 (left: 8 32)\n3 / 5 = 0.6 (left: 4 0.6)\n4 + 0.6 = 4.6 (left: 4.6)",
                "2 * 2 = 4 (left: 4 8 8)\n8 / 4 = 2 (left: 2 8 8)\n8 - 8 = 0 (left: 0 8)",
                "8 / 2 = 4 (left: 2 8 4)\n8 - 2 = 6 (left: 6 4)\n6 * 4 = 24 (left: 24)\nAnswer: (8 / 2) * (8 - 2) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ],
        "cost": 1.9924045000000001
    },
    "938": {
        "input": "2 7 12 13",
        "step_1": {
            "steps": [
                "2 * 7 = 14 (left: 14 12 13)",
                "12 - 7 = 5 (left: 2 5 13)",
                "12 - 7 = 5 (left: 2 5 7)",
                "2 + 7 = 9 (left: 9 12 13)",
                "12 / 2 = 6 (left: 6 7 13)",
                "7 - 2 = 5 (left: 5 12 13)",
                "13 + 2 = 15 (left: 7 12 15)",
                "13 - 2 = 11 (left: 7 11 12)",
                "2 * 5 = 10 (left: 10 4 10)",
                "2 * 7 = 14 (left: 14 12 13)"
            ],
            "values": [
                3.0,
                2.001,
                20.002,
                0.003,
                2.0,
                3.0,
                2.001,
                1.002,
                22.0,
                2.001
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 1.8",
                "2 <- 1.2",
                "3 <- 1.2",
                "4 <- 1.8",
                "5 <- INIT",
                "6 <- 1.1",
                "7 <- 1.8",
                "8 <- INIT",
                "9 <- 1.8"
            ],
            "resampled_steps": [
                "12 - 7 = 5 (left: 2 5 7)",
                "2 * 5 = 10 (left: 10 4 10)",
                "12 - 7 = 5 (left: 2 5 7)",
                "12 - 7 = 5 (left: 2 5 7)",
                "2 * 5 = 10 (left: 10 4 10)",
                "",
                "12 - 7 = 5 (left: 2 5 13)",
                "2 * 5 = 10 (left: 10 4 10)",
                "",
                "2 * 5 = 10 (left: 10 4 10)"
            ]
        },
        "step_2": {
            "steps": [
                "12 - 7 = 5 (left: 2 5 7)\n5 - 2 = 3 (left: 3 7)",
                "2 * 5 = 10 (left: 10 4 10)\n10 - 4 = 6 (left: 6 10)",
                "12 - 7 = 5 (left: 2 5 7)\n2 + 5 = 7 (left: 7 7)",
                "12 - 7 = 5 (left: 2 5 7)\n5 - 2 = 3 (left: 3 7)",
                "2 * 5 = 10 (left: 10 4 10)\n10 * 4 = 40 (left: 40 10)",
                "12 + 2 = 14 (left: 7 14 13)",
                "12 - 7 = 5 (left: 2 5 13)\n5 + 2 = 7 (left: 7 13)",
                "2 * 5 = 10 (left: 10 4 10)\n10 - 4 = 6 (left: 6)",
                "2 * 7 = 14 (left: 14 12 13)",
                "2 * 5 = 10 (left: 10 4 10)\n10 / 4 = 2.5 (left: 2.5 10)"
            ],
            "values": [
                0.0,
                0.003,
                1.002,
                0.0,
                1.0,
                22.0,
                0.001,
                0.002,
                2.0,
                0.001
            ],
            "resampled": [
                "0 <- 2.5",
                "1 <- 1.7",
                "2 <- INIT",
                "3 <- 2.5",
                "4 <- INIT",
                "5 <- 1.2",
                "6 <- 2.5",
                "7 <- 1.8",
                "8 <- 1.8",
                "9 <- 2.5"
            ],
            "resampled_steps": [
                "12 + 2 = 14 (left: 7 14 13)",
                "13 - 2 = 11 (left: 7 11 12)",
                "",
                "12 + 2 = 14 (left: 7 14 13)",
                "",
                "12 - 7 = 5 (left: 2 5 7)",
                "12 + 2 = 14 (left: 7 14 13)",
                "2 * 5 = 10 (left: 10 4 10)",
                "2 * 5 = 10 (left: 10 4 10)",
                "12 + 2 = 14 (left: 7 14 13)"
            ]
        },
        "step_3": {
            "steps": [
                "12 + 2 = 14 (left: 7 14 13)\n14 / 7 = 2 (left: 2 13)",
                "13 - 2 = 11 (left: 7 11 12)\n12 / 7 = 1.71 (left: 1.71 11)",
                "13 - 7 = 6 (left: 2 6 12)",
                "12 + 2 = 14 (left: 7 14 13)\n8 + 13 = 21 (left: 3 5 21)",
                "2 + 7 = 9 (left: 9 12 13)",
                "12 - 7 = 5 (left: 2 5 7)\n2 + 5 = 7 (left: 7 7)",
                "12 + 2 = 14 (left: 7 14 13)\n6 - 4 = 2 (left: 2 3 6)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)",
                "2 * 5 = 10 (left: 10 4 10)\n10 - 4 = 6 (left: 6 10)",
                "12 + 2 = 14 (left: 7 14 13)\nInput: 5 10 15"
            ],
            "values": [
                0.003,
                1.002,
                21.001,
                2.001,
                0.003,
                0.001,
                21.001,
                60.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.7",
                "1 <- 3.7",
                "2 <- 3.2",
                "3 <- 3.7",
                "4 <- 3.7",
                "5 <- 3.2",
                "6 <- 1.8",
                "7 <- 1.0",
                "8 <- 3.7",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)",
                "13 - 7 = 6 (left: 2 6 12)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)",
                "13 - 7 = 6 (left: 2 6 12)",
                "2 * 5 = 10 (left: 10 4 10)",
                "2 * 7 = 14 (left: 14 12 13)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)"
            ]
        },
        "step_4": {
            "steps": [
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n14 - 10 = 4 (left: 4 14)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\nInput: 164 5.83333333333 -116 116 0.171428571429 3360 96 2.85714285714 5.6",
                "13 - 7 = 6 (left: 2 6 12)\n2 + 6 = 8 (left: 8 12)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 / 14 = 0.7142857143 (left: 0.7142857143)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "13 - 7 = 6 (left: 2 6 12)\n7 / 3 = 2.33 (not an integer, left: 3 10 7)",
                "2 * 5 = 10 (left: 10 4 10)\nPossible next steps:",
                "2 * 7 = 14 (left: 14 12 13)\n25 / 5 = 5 (left: -1 5)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 / 14 = 0.71428571429 (left: 0.71428571429)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)"
            ],
            "values": [
                1.002,
                0.003,
                0.003,
                0.001,
                60.0,
                2.001,
                0.003,
                0.003,
                0.001,
                60.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 4.9",
                "2 <- 3.2",
                "3 <- INIT",
                "4 <- 4.4",
                "5 <- 4.9",
                "6 <- 4.4",
                "7 <- 1.8",
                "8 <- 4.9",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "13 - 7 = 6 (left: 2 6 12)",
                "",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "2 * 5 = 10 (left: 10 4 10)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)"
            ]
        },
        "step_5": {
            "steps": [
                "12 + 2 = 14 (left: 7 12 14)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((2 * 5) + 4) + 14 = 24",
                "13 - 7 = 6 (left: 2 6 12)\n12 / 2 = 6 (left: 6 72)",
                "13 + 2 = 15 (left: 7 12 15)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((2 * 5) + 4) + 14 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (12 - 7) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 14)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((2 * 5) + 4) + 14 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)"
            ],
            "values": [
                3.0,
                0.003,
                0.002,
                3.0,
                0.003,
                20.002,
                0.003,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.9",
                "1 <- 4.9",
                "2 <- 5.5",
                "3 <- 3.6",
                "4 <- 4.9",
                "5 <- 3.7",
                "6 <- 5.5",
                "7 <- 3.2",
                "8 <- 1.8",
                "9 <- 4.9"
            ],
            "resampled_steps": [
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24",
                "12 + 2 = 14 (left: 7 14 13)\n6 - 4 = 2 (left: 2 3 6)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24",
                "13 - 7 = 6 (left: 2 6 12)",
                "2 * 5 = 10 (left: 10 4 10)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)"
            ]
        },
        "step_6": {
            "steps": [
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24",
                "12 + 2 = 14 (left: 7 14 13)\n6 - 4 = 2 (left: 2 3 6)\nInput: 5 5 10",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 * 14 = 140 (left: 140)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 * 8 = 80 (left: 80)\n80 / 10 = 24 (left: 24)\nAnswer: ((7 - 3) + 6) * 8 / 10 = 24",
                "13 - 7 = 6 (left: 2 6 12)\nInput: 6 18 3 12 6",
                "2 * 5 = 10 (left: 10 4 10)\n10 / 4 = 2.5 (left: 2.5 10)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((2 * 5) + 4) + 14 = 24"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                0.003,
                20.002,
                0.002,
                60.0,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 1.8",
                "1 <- 4.5",
                "2 <- 6.4",
                "3 <- 3.7",
                "4 <- 6.2",
                "5 <- 3.7",
                "6 <- 6.6",
                "7 <- 4.9",
                "8 <- 3.2",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "2 * 5 = 10 (left: 10 4 10)",
                "13 - 7 = 6 (left: 2 6 12)\n7 / 3 = 2.33 (not an integer, left: 3 10 7)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 * 8 = 80 (left: 80)\n80 / 10 = 24 (left: 24)\nAnswer: ((7 - 3) + 6) * 8 / 10 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "13 - 7 = 6 (left: 2 6 12)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)"
            ]
        },
        "step_7": {
            "steps": [
                "2 * 5 = 10 (left: 10 4 10)\n4 * 10 = 40 (left: 40 10)",
                "13 - 7 = 6 (left: 2 6 12)\n7 / 3 = 2.33 (not an integer, left: 3 10 7)\n3 * 10 = 30 (left: 30 7)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 21 (left: 21)\n21 - 21 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: (((3 * 7) - (5 - 3)) * (21 / 2)) + 24 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 / 14 = 0.7142857142857143 (left: 0.7142857142857143)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 - 14 = -4 (left: -4)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 * 8 = 80 (left: 80)\n80 / 10 = 24 (left: 24)\nAnswer: ((7 - 3) + 6) * 8 / 10 = 24\nInput: 1 3 4 10\nSteps:\n4 * 10 = 40 (left: 1 3 40)\n1 + 3 = 4 (left: 4 40)\n4 * 40 = 160 (left: 160)\n160 / 10 = 16 (left: 16)\n16 - 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (((1 + 3) * (4 * 10)) * 2) / 10 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 * (12 - 13)) = 24",
                "13 - 7 = 6 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 7) + (12 - 13) = 24"
            ],
            "values": [
                0.001,
                0.003,
                40.0,
                0.003,
                60.0,
                0.002,
                60.0,
                60.0,
                40.001,
                60.0
            ],
            "resampled": [
                "0 <- 7.9",
                "1 <- 1.0",
                "2 <- 7.7",
                "3 <- 6.0",
                "4 <- 7.4",
                "5 <- 7.7",
                "6 <- 7.4",
                "7 <- 7.4",
                "8 <- 7.8",
                "9 <- 6.0"
            ],
            "resampled_steps": [
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 7) + (12 - 13) = 24",
                "2 * 7 = 14 (left: 14 12 13)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 * (12 - 13)) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 * (12 - 13)) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24",
                "13 - 7 = 6 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24"
            ]
        },
        "step_8": {
            "steps": [
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 7) + (12 - 13) = 24\nInput: 3 3 4 8\nSteps:\n3 + 8 = 11 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: ((3 + 8) * 4) - 11 = 24",
                "2 * 7 = 14 (left: 14 12 13)\n14 + 12 = 26 (left: 26 13)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 * (12 - 13)) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 + 9 = 18 (left: 18)\n18 + 6 = 24 (left: 24)\nAnswer: ((3 * 8) + 9) + 6 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\nAnswer: ((3 * 7) - 5) - 3 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24\nInput: 2 3 4 8\nSteps:\n3 * 8 = 24 (left: 2 4)\n2 + 4 = 6 (left: 6)\n6 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (2 + 4) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 * (12 - 13)) = 24\nInput: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (4 - 3)) * 4 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24\nInput: 2 3 4 6\nSteps:\n3 * 6 = 18 (left: 2 4 18)\n4 - 2 = 2 (left: 2 18)\n2 * 18 = 36 (left: 36)\nAnswer: (3 * 6) - (4 - 2) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24\nInput: 3 5 6 7\nSteps:\n5 * 3 = 15 (left: 6 7 15)\n6 - 7 = -1 (left: -1 15)\n15 * -1 = -15 (left: -15)\n-15 + 6 = -9 (left: -9)\n-9 + 7 = -2 (left: -2)\n-2 * -2 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: (((5 * 3) - (6 - 7)) + 7) * 6 = 24",
                "13 - 7 = 6 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\nAnswer: (3 * 7) - (5 + 3) = 24"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                40.0,
                60.0,
                60.0,
                60.0,
                60.0,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 8.0",
                "1 <- 7.7",
                "2 <- 8.5",
                "3 <- 3.7",
                "4 <- 8.7",
                "5 <- 4.9",
                "6 <- 8.0",
                "7 <- 7.6",
                "8 <- 7.6",
                "9 <- 8.5"
            ],
            "resampled_steps": [
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 7) + (12 - 13) = 24\nInput: 3 3 4 8\nSteps:\n3 + 8 = 11 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: ((3 + 8) * 4) - 11 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 * (12 - 13)) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 * (12 - 13)) = 24\nInput: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (4 - 3)) * 4 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24\nInput: 3 5 6 7\nSteps:\n5 * 3 = 15 (left: 6 7 15)\n6 - 7 = -1 (left: -1 15)\n15 * -1 = -15 (left: -15)\n-15 + 6 = -9 (left: -9)\n-9 + 7 = -2 (left: -2)\n-2 * -2 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: (((5 * 3) - (6 - 7)) + 7) * 6 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 7) + (12 - 13) = 24\nInput: 3 3 4 8\nSteps:\n3 + 8 = 11 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: ((3 + 8) * 4) - 11 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 * 8 = 80 (left: 80)\n80 / 10 = 24 (left: 24)\nAnswer: ((7 - 3) + 6) * 8 / 10 = 24\nInput: 1 3 4 10\nSteps:\n4 * 10 = 40 (left: 1 3 40)\n1 + 3 = 4 (left: 4 40)\n4 * 40 = 160 (left: 160)\n160 / 10 = 16 (left: 16)\n16 - 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (((1 + 3) * (4 * 10)) * 2) / 10 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 * 8 = 80 (left: 80)\n80 / 10 = 24 (left: 24)\nAnswer: ((7 - 3) + 6) * 8 / 10 = 24\nInput: 1 3 4 10\nSteps:\n4 * 10 = 40 (left: 1 3 40)\n1 + 3 = 4 (left: 4 40)\n4 * 40 = 160 (left: 160)\n160 / 10 = 16 (left: 16)\n16 - 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (((1 + 3) * (4 * 10)) * 2) / 10 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 * (12 - 13)) = 24\nInput: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (4 - 3)) * 4 = 24"
            ]
        },
        "step_9": {
            "steps": [
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 7) + (12 - 13) = 24\nInput: 3 3 4 8\nSteps:\n3 + 8 = 11 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: ((3 + 8) * 4) - 11 = 24\nInput: 2 3 6 7\nSteps:\n6 + 7 = 13 (left: 2 3 13)\n2 * 3 = 6 (left: 6 13)\n6 * 13 = 78 (left: 78)\n78 / 3 = 26 (left: 26)\n26 - 2 = 24 (left: 24)\nAnswer: ((2 * 3) * (6 + 7)) / 3 - 2 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 * (12 - 13)) = 24\nInput: 3 6 8 9\nSteps:\n8 - 6 = 2 (left: 3 2 9)\n3 * 2 = 6 (left: 6 9)\n6 * 9 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * (8 - 6)) * 9) - 3 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 * (12 - 13)) = 24\nInput: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (4 - 3)) * 4 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 3 5 7)\n7 - 5 = 2 (left: 3 2)\n3 * 2 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: (6 + 3) * (5 - 7) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n14 / 10 = 1.4 (left: 1.4)",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24\nInput: 3 5 6 7\nSteps:\n5 * 3 = 15 (left: 6 7 15)\n6 - 7 = -1 (left: -1 15)\n15 * -1 = -15 (left: -15)\n-15 + 6 = -9 (left: -9)\n-9 + 7 = -2 (left: -2)\n-2 * -2 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: (((5 * 3) - (6 - 7)) + 7) * 6 = 24\nInput: 2 3 5 7\nSteps:\n2 * 7 = 14 (left: 3 5 14)\n3 + 5 = 8 (left: 8 14)\n8 * 14 = 112 (left: 112)\n112 / 2 = 56 (left: 56)\n56 / 7 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: (((2 * 7) + (3 + 5)) * 14) / 2 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: ((2 * 7) + 12) + 13 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 7) + (12 - 13) = 24\nInput: 3 3 4 8\nSteps:\n3 + 8 = 11 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)\n12 - 11 = 1 (left: 1)\n1 * 24 = 24 (left: 24)\nAnswer: ((3 + 8) * 4) - 11 = 24\nInput: 1 3 6 8\nSteps:\n1 * 8 = 8 (left: 3 6 8)\n3 * 6 = 18 (left: 18 8)\n18 - 8 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((1 * 8) * (3 * 6)) + (10 + 10) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 * 8 = 80 (left: 80)\n80 / 10 = 24 (left: 24)\nAnswer: ((7 - 3) + 6) * 8 / 10 = 24\nInput: 1 3 4 10\nSteps:\n4 * 10 = 40 (left: 1 3 40)\n1 + 3 = 4 (left: 4 40)\n4 * 40 = 160 (left: 160)\n160 / 10 = 16 (left: 16)\n16 - 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (((1 + 3) * (4 * 10)) * 2) / 10 = 24\nInput: 2 3 5 6\nSteps:\n2 * 6 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\n96 / 4 = 24 (left: 24)\nAnswer: ((2 * 6) + (3 + 5)) * 12 / 4 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 * 8 = 80 (left: 80)\n80 / 10 = 24 (left: 24)\nAnswer: ((7 - 3) + 6) * 8 / 10 = 24\nInput: 1 3 4 10\nSteps:\n4 * 10 = 40 (left: 1 3 40)\n1 + 3 = 4 (left: 4 40)\n4 * 40 = 160 (left: 160)\n160 / 10 = 16 (left: 16)\n16 - 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (((1 + 3) * (4 * 10)) * 2) / 10 = 24\nInput: 2 3 5 9\nSteps:\n5 * 9 = 45 (left: 2 3 45)\n3 + 2 = 5 (left: 5 45)\n5 * 45 = 225 (left: 225)\n225 / 9 = 25 (left: 25)\n25 - 5 = 20 (left: 20)\n20 / 4 = 24 (left: 24)\nAnswer: (((5 * 9) * (3 + 2)) / 9 - 5) / 4 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 * (12 - 13)) = 24\nInput: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (4 - 3)) * 4 = 24\nInput: 3 5 6 7\nSteps:\n5 + 7 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 18 12)\n18 - 12 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((5 + 7) * 3) - 12 = 24"
            ],
            "values": [
                60.0,
                60.0,
                60.0,
                0.001,
                40.0,
                60.0,
                60.0,
                60.0,
                40.0,
                60.0
            ],
            "resampled": [
                "0 <- 9.2",
                "1 <- 8.6",
                "2 <- 9.1",
                "3 <- 7.2",
                "4 <- 9.7",
                "5 <- 8.4",
                "6 <- 9.8",
                "7 <- 6.0",
                "8 <- 8.9",
                "9 <- 7.8"
            ],
            "resampled_steps": [
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 * (12 - 13)) = 24\nInput: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (4 - 3)) * 4 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 3 5 7)\n7 - 5 = 2 (left: 3 2)\n3 * 2 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: (6 + 3) * (5 - 7) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24\nInput: 2 3 4 6\nSteps:\n3 * 6 = 18 (left: 2 4 18)\n4 - 2 = 2 (left: 2 18)\n2 * 18 = 36 (left: 36)\nAnswer: (3 * 6) - (4 - 2) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 * (12 - 13)) = 24\nInput: 3 6 8 9\nSteps:\n8 - 6 = 2 (left: 3 2 9)\n3 * 2 = 6 (left: 6 9)\n6 * 9 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * (8 - 6)) * 9) - 3 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 21 (left: 21)\n21 - 21 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: (((3 * 7) - (5 - 3)) * (21 / 2)) + 24 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 * 8 = 80 (left: 80)\n80 / 10 = 24 (left: 24)\nAnswer: ((7 - 3) + 6) * 8 / 10 = 24\nInput: 1 3 4 10\nSteps:\n4 * 10 = 40 (left: 1 3 40)\n1 + 3 = 4 (left: 4 40)\n4 * 40 = 160 (left: 160)\n160 / 10 = 16 (left: 16)\n16 - 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (((1 + 3) * (4 * 10)) * 2) / 10 = 24\nInput: 2 3 5 6\nSteps:\n2 * 6 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\n96 / 4 = 24 (left: 24)\nAnswer: ((2 * 6) + (3 + 5)) * 12 / 4 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24\nInput: 2 3 4 8\nSteps:\n3 * 8 = 24 (left: 2 4)\n2 + 4 = 6 (left: 6)\n6 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (2 + 4) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 * 8 = 80 (left: 80)\n80 / 10 = 24 (left: 24)\nAnswer: ((7 - 3) + 6) * 8 / 10 = 24\nInput: 1 3 4 10\nSteps:\n4 * 10 = 40 (left: 1 3 40)\n1 + 3 = 4 (left: 4 40)\n4 * 40 = 160 (left: 160)\n160 / 10 = 16 (left: 16)\n16 - 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (((1 + 3) * (4 * 10)) * 2) / 10 = 24\nInput: 2 3 5 9\nSteps:\n5 * 9 = 45 (left: 2 3 45)\n3 + 2 = 5 (left: 5 45)\n5 * 45 = 225 (left: 225)\n225 / 9 = 25 (left: 25)\n25 - 5 = 20 (left: 20)\n20 / 4 = 24 (left: 24)\nAnswer: (((5 * 9) * (3 + 2)) / 9 - 5) / 4 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\nAnswer: (3 * 7) - (5 + 3) = 24",
                "13 - 7 = 6 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)"
            ]
        },
        "step_10": {
            "steps": [
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 * (12 - 13)) = 24\nInput: 2 3 4 5\nSteps:\n2 * 5 = 10 (left: 3 4 10)\n4 - 3 = 1 (left: 1 10)\n10 * 1 = 10 (left: 10)\n10 + 10 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 5) + (4 - 3)) * 4 = 24\nInput: 3 5 6 7\nSteps:\n6 - 3 = 3 (left: 3 5 7)\n7 - 5 = 2 (left: 3 2)\n3 * 2 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: (6 + 3) * (5 - 7) = 24\nInput: 1 2 3 6\nSteps:\n2 * 6 = 12 (left: 1 3 12)\n3 + 12 = 15 (left: 1 15)\n15 - 1 = 14 (left: 14)\n14 + 3 = 17 (left: 17)\n17 + 1 = 18 (left: 18)\n18 / 3 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: (((1 * 2) + (3 + 12)) - 1 + 3) * 4 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24\nInput: 2 3 4 6\nSteps:\n3 * 6 = 18 (left: 2 4 18)\n4 - 2 = 2 (left: 2 18)\n2 * 18 = 36 (left: 36)\nAnswer: (3 * 6) - (4 - 2) = 24\nInput: 2 4 6 9\nSteps:\n4 * 6 = 24 (left: 2 9)\n2 + 9 = 11 (left: 11)\n11 + 24 = 35 (left: 35)\nAnswer: (4 * 6) + (2 + 9) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 * (12 - 13)) = 24\nInput: 3 6 8 9\nSteps:\n8 - 6 = 2 (left: 3 2 9)\n3 * 2 = 6 (left: 6 9)\n6 * 9 = 54 (left: 54)\n54 / 2 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: ((3 * (8 - 6)) * 9) - 3 = 24\nInput: 2 3 9 9\nSteps:\n9 - 3 = 6 (left: 2 6 9)\n6 * 2 = 12 (left: 12 9)\n12 + 9 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((2 * (9 - 3)) + 9) + 3 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 21 (left: 21)\n21 - 21 = 0 (left: 0)\n0 + 24 = 24 (left: 24)\nAnswer: (((3 * 7) - (5 - 3)) * (21 / 2)) + 24 = 24\nInput: 1 3 4 8\nSteps:\n3 * 8 = 24 (left: 1 4 24)\n4 / 1 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\n96 / 4 = 24 (left: 24)\nAnswer: ((3 * 8) / (4 / 1)) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 * 8 = 80 (left: 80)\n80 / 10 = 24 (left: 24)\nAnswer: ((7 - 3) + 6) * 8 / 10 = 24\nInput: 1 3 4 10\nSteps:\n4 * 10 = 40 (left: 1 3 40)\n1 + 3 = 4 (left: 4 40)\n4 * 40 = 160 (left: 160)\n160 / 10 = 16 (left: 16)\n16 - 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (((1 + 3) * (4 * 10)) * 2) / 10 = 24\nInput: 2 3 5 6\nSteps:\n2 * 6 = 12 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n8 * 12 = 96 (left: 96)\n96 / 4 = 24 (left: 24)\nAnswer: ((2 * 6) + (3 + 5)) * 12 / 4 = 24\nInput: 1 2 3 8\nSteps:\n3 * 8 = 24 (left: 1 2 24)\n1 + 2 = 3 (left: 3 24)\n3 * 24 = 72 (left: 72)\n72 / 3 = 24 (left: 24)\nAnswer: ((1 + 2) * (3 * 8)) / 3 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 6 8\nSteps:\n3 * 8 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n9 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (3 + 6) = 24\nInput: 1 3 5 7\nSteps:\n5 + 7 = 12 (left: 1 3 12)\n3 * 12 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)\nAnswer: (5 + 7) * (3 * 1) = 24\nInput: 2 3 4 8\nSteps:\n3 * 8 = 24 (left: 2 4)\n2 + 4 = 6 (left: 6)\n6 * 24 = 24 (left: 24)\nAnswer: (3 * 8) * (2 + 4) = 24\nInput: 1 2 3 9\nSteps:\n2 * 9 = 18 (left: 1 3 18)\n3 * 6 = 18 (left: 1 18)\n1 + 18 = 19 (left: 19)\n19 + 5 = 24 (left: 24)\nAnswer: ((2 * 9) + (3 * 6)) + (1 + 5) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 6 7 8\nSteps:\n7 - 3 = 4 (left: 4 6 8)\n4 + 6 = 10 (left: 10 8)\n10 * 8 = 80 (left: 80)\n80 / 10 = 24 (left: 24)\nAnswer: ((7 - 3) + 6) * 8 / 10 = 24\nInput: 1 3 4 10\nSteps:\n4 * 10 = 40 (left: 1 3 40)\n1 + 3 = 4 (left: 4 40)\n4 * 40 = 160 (left: 160)\n160 / 10 = 16 (left: 16)\n16 - 4 = 12 (left: 12)\n12 * 2 = 24 (left: 24)\nAnswer: (((1 + 3) * (4 * 10)) * 2) / 10 = 24\nInput: 2 3 5 9\nSteps:\n5 * 9 = 45 (left: 2 3 45)\n3 + 2 = 5 (left: 5 45)\n5 * 45 = 225 (left: 225)\n225 / 9 = 25 (left: 25)\n25 - 5 = 20 (left: 20)\n20 / 4 = 24 (left: 24)\nAnswer: (((5 * 9) * (3 + 2)) / 9 - 5) / 4 = 24\nInput: 2 4 6 9\nSteps:\n6 - 4 = 2 (left: 2 9)\n2 * 9 = 18 (left: 18)\n18 + 2 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: 2 * 9 + (6 - 4) + 4 = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 6 7 9\nSteps:\n6 * 3 = 18 (left: 7 9 18)\n7 + 9 = 16 (left: 16 18)\n16 + 18 = 24 (left: 24)\nAnswer: (6 * 3) + (7 + 9) = 24",
                "2 * 5 = 10 (left: 10 4 10)\n10 + 4 = 14 (left: 10 14)\n10 + 14 = 24 (left: 24)\nAnswer: (2 * 5) + (7 + 12) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\nAnswer: (3 * 7) - (5 + 3) = 24\nInput: 1 3 4 7\nSteps:\n4 + 7 = 11 (left: 1 3 11)\n3 * 11 = 33 (left: 1 33)\n33 - 1 = 32 (left: 32)\nAnswer: ((4 + 7) * 3) - 1 = 24",
                "13 - 7 = 6 (left: 2 6 12)\n2 * 6 = 12 (left: 12 12)\n12 - 12 = 0 (left: 0)"
            ],
            "values": [
                60.0,
                40.0,
                60.0,
                40.0,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.0471555
    },
    "939": {
        "input": "2 6 8 12",
        "step_1": {
            "steps": [
                "8 - 2 = 6 (left: 6 8 12)",
                "8 / 2 = 4 (left: 4 6 12)",
                "2 * 6 = 12 (left: 8 12 12)",
                "2 * 6 = 12 (left: 8 12 12)",
                "2 + 6 = 8 (left: 8 8 12)",
                "8 - 6 = 2 (left: 2 6 12)",
                "2 + 6 = 8 (left: 8 8 12)",
                "6 + 8 = 14 (left: 2 14 12)",
                "2 + 6 = 8 (left: 8 8 12)",
                "12 - 2 = 10 (left: 10 6 8)"
            ],
            "values": [
                22.0,
                60.0,
                1.002,
                21.001,
                2.001,
                0.003,
                1.002,
                1.002,
                1.002,
                22.0
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 1.0",
                "2 <- INIT",
                "3 <- 1.2",
                "4 <- 1.1",
                "5 <- 1.0",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- 1.3"
            ],
            "resampled_steps": [
                "12 - 2 = 10 (left: 10 6 8)",
                "8 - 2 = 6 (left: 6 8 12)",
                "",
                "2 * 6 = 12 (left: 8 12 12)",
                "8 / 2 = 4 (left: 4 6 12)",
                "8 - 2 = 6 (left: 6 8 12)",
                "",
                "",
                "",
                "2 * 6 = 12 (left: 8 12 12)"
            ]
        },
        "step_2": {
            "steps": [
                "12 - 2 = 10 (left: 10 6 8)\n6 / 8 = 0.75 (left: 0.75 8)",
                "8 - 2 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 6)",
                "12 - 6 = 6 (left: 2 6 8)",
                "2 * 6 = 12 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)",
                "8 / 2 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)",
                "8 - 2 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 12)",
                "12 - 2 = 10 (left: 2 6 10)",
                "12 / 2 = 6 (left: 6 6 12)",
                "2 + 6 = 8 (left: 8 8 12)",
                "2 * 6 = 12 (left: 8 12 12)\n4 + 4 = 8 (left: 8 12)"
            ],
            "values": [
                2.001,
                20.001,
                1.002,
                20.002,
                40.001,
                0.003,
                1.002,
                60.0,
                1.002,
                1.001
            ],
            "resampled": [
                "0 <- 2.3",
                "1 <- 1.1",
                "2 <- 2.7",
                "3 <- 2.4",
                "4 <- 1.9",
                "5 <- 1.1",
                "6 <- 1.0",
                "7 <- 2.4",
                "8 <- 1.1",
                "9 <- 1.1"
            ],
            "resampled_steps": [
                "2 * 6 = 12 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)",
                "8 / 2 = 4 (left: 4 6 12)",
                "12 / 2 = 6 (left: 6 6 12)",
                "8 / 2 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)",
                "12 - 2 = 10 (left: 10 6 8)",
                "8 / 2 = 4 (left: 4 6 12)",
                "8 - 2 = 6 (left: 6 8 12)",
                "8 / 2 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)",
                "8 / 2 = 4 (left: 4 6 12)",
                "8 / 2 = 4 (left: 4 6 12)"
            ]
        },
        "step_3": {
            "steps": [
                "2 * 6 = 12 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n12 - 4 = 8 (left: 8 12)",
                "8 / 2 = 4 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)",
                "12 / 2 = 6 (left: 6 6 12)\n1 / 12 = 0.0833 (left: 0.0833 12)",
                "8 / 2 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)\n24 * 12 = 288 (left: 288)",
                "12 - 2 = 10 (left: 10 6 8)\n8 - 6 = 2 (left: 10 2)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)",
                "8 - 2 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 14 12)",
                "8 / 2 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)",
                "8 / 2 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 24 12)",
                "8 / 2 = 4 (left: 4 6 12)\n12 / 6 = 2 (left: 4 2)"
            ],
            "values": [
                0.003,
                0.003,
                0.001,
                0.003,
                0.003,
                60.0,
                0.003,
                20.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.7",
                "1 <- 3.5",
                "2 <- 2.7",
                "3 <- 2.7",
                "4 <- 3.5",
                "5 <- 1.3",
                "6 <- 3.7",
                "7 <- 2.7",
                "8 <- 3.5",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "12 / 2 = 6 (left: 6 6 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)",
                "12 / 2 = 6 (left: 6 6 12)",
                "12 / 2 = 6 (left: 6 6 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)",
                "2 * 6 = 12 (left: 8 12 12)",
                "8 / 2 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)",
                "12 / 2 = 6 (left: 6 6 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)",
                "8 / 2 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)"
            ]
        },
        "step_4": {
            "steps": [
                "12 / 2 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "12 / 2 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "2 * 6 = 12 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)",
                "8 / 2 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)\n36 + 2 = 38",
                "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n6 - 14 = -8 (left: -8)",
                "8 / 2 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)\nThere is only one possible next step: 36 / 2 = 18"
            ],
            "values": [
                0.003,
                0.003,
                41.0,
                0.003,
                0.002,
                0.002,
                0.003,
                20.002,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 4.2",
                "1 <- 3.5",
                "2 <- 3.5",
                "3 <- 1.1",
                "4 <- 4.2",
                "5 <- 4.2",
                "6 <- 4.2",
                "7 <- 1.1",
                "8 <- 2.7",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)",
                "8 / 2 = 4 (left: 4 6 12)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "8 / 2 = 4 (left: 4 6 12)",
                "12 / 2 = 6 (left: 6 6 12)",
                "8 - 2 = 6 (left: 6 8 12)"
            ]
        },
        "step_5": {
            "steps": [
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 * 12 = 432 (left: 432)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "8 / 2 = 4 (left: 4 6 12)\n4 + 6 = 10 (left: 10 12)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 * 12 = 432 (left: 432)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 * 12 = 432 (left: 432)",
                "8 / 2 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "8 - 2 = 6 (left: 6 8 12)\nInput: 1.33 12 14"
            ],
            "values": [
                0.002,
                0.001,
                60.0,
                0.003,
                0.002,
                0.002,
                0.003,
                0.003,
                21.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 5.8",
                "2 <- 2.4",
                "3 <- 4.2",
                "4 <- 4.2",
                "5 <- 1.3",
                "6 <- 5.8",
                "7 <- 2.4",
                "8 <- 5.2",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "8 - 2 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 6)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "8 / 2 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "2 * 6 = 12 (left: 8 12 12)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "8 / 2 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "8 / 2 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)"
            ]
        },
        "step_6": {
            "steps": [
                "8 - 2 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 6)\n2 + 6 = 8 (left: 8)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)",
                "8 / 2 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)\n24 / 2 = 12 (left: 12)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 * 12 = 432 (left: 432)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)",
                "2 * 6 = 12 (left: 8 12 12)\n12 / 12 = 1 (left: 1)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 * 12 = 432 (left: 432)",
                "8 / 2 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)\n24 - 12 = 12 (left: 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24",
                "8 / 2 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 24 12)\n24 + 12 = 36 (left: 36)\n36 / 2 = 18"
            ],
            "values": [
                0.003,
                0.002,
                0.002,
                0.003,
                0.0,
                0.003,
                0.003,
                0.003,
                40.001,
                0.003
            ],
            "resampled": [
                "0 <- 4.7",
                "1 <- 4.2",
                "2 <- 6.8",
                "3 <- 4.2",
                "4 <- 5.2",
                "5 <- 1.3",
                "6 <- 6.8",
                "7 <- 5.8",
                "8 <- 5.2",
                "9 <- 4.2"
            ],
            "resampled_steps": [
                "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "2 * 6 = 12 (left: 8 12 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)"
            ]
        },
        "step_7": {
            "steps": [
                "12 / 2 = 6 (left: 6 6 12)\n12 + 6 = 18 (left: 6 18)\n18 / 6 = 3 (left: 3)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 + 12 = 48 (left: 48)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) / 2 = 24",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 * 12 = 432 (left: 432)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24",
                "2 * 6 = 12 (left: 8 12 12)\n12 - 4 = 8 (left: 8 8)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 + 6) * (8 - 3) = 24",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 + 12 = 48 (left: 48)"
            ],
            "values": [
                0.0,
                20.001,
                60.0,
                0.003,
                40.001,
                0.003,
                60.0,
                60.0,
                40.001,
                0.003
            ],
            "resampled": [
                "0 <- 7.2",
                "1 <- 4.2",
                "2 <- 3.5",
                "3 <- 2.3",
                "4 <- 3.5",
                "5 <- 7.1",
                "6 <- 7.6",
                "7 <- 5.8",
                "8 <- 3.5",
                "9 <- 7.7"
            ],
            "resampled_steps": [
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) / 2 = 24",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)",
                "2 * 6 = 12 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 + 12 = 48 (left: 48)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 + 6) * (8 - 3) = 24",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)"
            ]
        },
        "step_8": {
            "steps": [
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) / 2 = 24\nInput: 1 3 4 8\nSteps:\n3 + 4 = 7 (left: 1 7 8)\n7 + 8 = 15 (left: 1 15)\n15 - 1 = 14 (left: 14)\n14 - 8 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((1 + 3) + 4 + 8) * 4 = 24",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 * 12 = 432 (left: 432)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "2 * 6 = 12 (left: 8 12 12)\n12 - 8 = 4 (left: 4 12)\n4 + 12 = 16 (left: 16)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 + 12 = 48 (left: 48)\nThere are no possible next steps for the number 48 as it is already a single number.",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 + 6) * (8 - 3) = 24\nInput: 2 3 7 8\nSteps:\n7 + 8 = 15 (left: 2 3 15)\n3 * 15 = 45 (left: 2 45)\n45 - 2 = 43 (left: 43)\nAnswer: (7 + 8) * (3 * 15) = 24",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((12 / 2) * 6) - 12 = 24"
            ],
            "values": [
                60.0,
                0.002,
                0.002,
                0.001,
                0.003,
                0.003,
                60.0,
                0.003,
                60.0,
                60.0
            ],
            "resampled": [
                "0 <- 7.7",
                "1 <- 1.1",
                "2 <- 8.8",
                "3 <- 7.4",
                "4 <- 8.6",
                "5 <- 7.6",
                "6 <- 8.6",
                "7 <- 8.0",
                "8 <- 3.5",
                "9 <- 7.1"
            ],
            "resampled_steps": [
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)",
                "8 / 2 = 4 (left: 4 6 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 + 6) * (8 - 3) = 24\nInput: 2 3 7 8\nSteps:\n7 + 8 = 15 (left: 2 3 15)\n3 * 15 = 45 (left: 2 45)\n45 - 2 = 43 (left: 43)\nAnswer: (7 + 8) * (3 * 15) = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 + 6) * (8 - 3) = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 + 6) * (8 - 3) = 24\nInput: 2 3 7 8\nSteps:\n7 + 8 = 15 (left: 2 3 15)\n3 * 15 = 45 (left: 2 45)\n45 - 2 = 43 (left: 43)\nAnswer: (7 + 8) * (3 * 15) = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) / 2 = 24\nInput: 1 3 4 8\nSteps:\n3 + 4 = 7 (left: 1 7 8)\n7 + 8 = 15 (left: 1 15)\n15 - 1 = 14 (left: 14)\n14 - 8 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((1 + 3) + 4 + 8) * 4 = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 + 12 = 48 (left: 48)"
            ]
        },
        "step_9": {
            "steps": [
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((12 / 2) * 6) - 12 = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 48",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 + 6) * (8 - 3) = 24\nInput: 2 3 7 8\nSteps:\n7 + 8 = 15 (left: 2 3 15)\n3 * 15 = 45 (left: 2 45)\n45 - 2 = 43 (left: 43)\nAnswer: (7 + 8) * (3 * 15) = 24\nThere is no solution using the numbers 2, 3, 7, and 8 to get 24.",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 + 6) * (8 - 3) = 24\nInput: 3 3 4 9\nSteps:\n3 + 3 = 6 (left: 4 6 9)\n6 * 4 = 24 (left: 24 9)\nAnswer: (3 + 3) * 4 = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 + 6) * (8 - 3) = 24\nInput: 2 3 7 8\nSteps:\n7 + 8 = 15 (left: 2 3 15)\n3 * 15 = 45 (left: 2 45)\n45 - 2 = 43 (left: 43)\nAnswer: (7 + 8) * (3 * 15) = 24\nThere is no solution to obtain 24 using the numbers 2, 3, 7, and 8.",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) / 2 = 24\nInput: 1 3 4 8\nSteps:\n3 + 4 = 7 (left: 1 7 8)\n7 + 8 = 15 (left: 1 15)\n15 - 1 = 14 (left: 14)\n14 - 8 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((1 + 3) + 4 + 8) * 4 = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 + 6 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\n192 / 8 = 24 (left: 24)\nAnswer: ((2 * 8) * 3) / 6 = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 + 12 = 48 (left: 48)\n48 * 2 = 96 (left: 96)"
            ],
            "values": [
                60.0,
                60.0,
                0.003,
                60.0,
                0.003,
                60.0,
                0.003,
                40.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 7.6",
                "2 <- 9.3",
                "3 <- 8.0",
                "4 <- 8.6",
                "5 <- 9.7",
                "6 <- 6.8",
                "7 <- 9.1",
                "8 <- 7.2",
                "9 <- 9.0"
            ],
            "resampled_steps": [
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 + 6) * (8 - 3) = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 48",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) / 2 = 24\nInput: 1 3 4 8\nSteps:\n3 + 4 = 7 (left: 1 7 8)\n7 + 8 = 15 (left: 1 15)\n15 - 1 = 14 (left: 14)\n14 - 8 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((1 + 3) + 4 + 8) * 4 = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 + 6) * (8 - 3) = 24\nInput: 2 3 7 8\nSteps:\n7 + 8 = 15 (left: 2 3 15)\n3 * 15 = 45 (left: 2 45)\n45 - 2 = 43 (left: 43)\nAnswer: (7 + 8) * (3 * 15) = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) / 2 = 24\nInput: 1 3 4 8\nSteps:\n3 + 4 = 7 (left: 1 7 8)\n7 + 8 = 15 (left: 1 15)\n15 - 1 = 14 (left: 14)\n14 - 8 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((1 + 3) + 4 + 8) * 4 = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 + 6 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\n192 / 8 = 24 (left: 24)\nAnswer: ((2 * 8) * 3) / 6 = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) / 2 = 24",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((12 / 2) * 6) - 12 = 24"
            ]
        },
        "step_10": {
            "steps": [
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 + 6) * (8 - 3) = 24\nInput: 2 3 4 9\nSteps:\n3 * 9 = 27 (left: 2 4 27)\n4 + 2 = 6 (left: 6 27)\n6 - 27 = -21 (left: -21)\n-21 + 24 = 24 (left: 24)\nAnswer: ((3 * 9) + 2) - 27 = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 4 7\nSteps:\n3 * 4 = 12 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n4 * 12 = 48 (left: 48)\nAnswer: (3 * 4) * (7 - 3) = 48\nThere is no solution to obtain 24 using the numbers 3, 3, 4, and 7.",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) / 2 = 24\nInput: 1 3 4 8\nSteps:\n3 + 4 = 7 (left: 1 7 8)\n7 + 8 = 15 (left: 1 15)\n15 - 1 = 14 (left: 14)\n14 - 8 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((1 + 3) + 4 + 8) * 4 = 24\nInput: 2 3 5 7\nSteps:\n3 + 7 = 10 (left: 2 5 10)\n2 * 10 = 20 (left: 5 20)\n5 - 20 = -15 (left: -15)\n-15 * 3 = -45 (left: -45)\n-45 + 5 = -40 (left: -40)\n-40 + 20 = -20 (left: -20)\n-20 * -2 = 40 (left: 40)\nAnswer: (((2 * (3 + 7)) - 5) * 20 + 5) * -2 = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 6 8\nSteps:\n3 + 6 = 9 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n6 * 8 = 48 (left: 48)\nAnswer: (3 + 6) * (8 - 3) = 24\nInput: 2 3 7 8\nSteps:\n7 + 8 = 15 (left: 2 3 15)\n3 * 15 = 45 (left: 2 45)\n45 - 2 = 43 (left: 43)\nAnswer: (7 + 8) * (3 * 15) = 24\nInvalid input: Unable to obtain 24 using the given numbers and basic arithmetic operations.",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) / 2 = 24\nInput: 1 3 4 8\nSteps:\n3 + 4 = 7 (left: 1 7 8)\n7 + 8 = 15 (left: 1 15)\n15 - 1 = 14 (left: 14)\n14 - 8 = 6 (left: 6)\n6 * 4 = 24 (left: 24)\nAnswer: ((1 + 3) + 4 + 8) * 4 = 24\nInput: 2 3 6 8\nSteps:\n3 * 8 = 24 (left: 2 6 24)\n2 + 6 = 8 (left: 8 24)\n8 * 24 = 192 (left: 192)\n192 / 8 = 24 (left: 24)\nAnswer: ((2 * 8) * 3) / 6 = 24\nInput: 1 2 3 4\nSteps:\n2 * 4 = 8 (left: 1 3 8)\n3 + 8 = 11 (left: 1 11)\n11 - 1 = 10 (left: 10)\n10 * 3 = 30 (left: 30)\n30 / 4 = 7.5 (left: 7.5)\n7.5 * 2 = 15 (left: 15)\n15 + 4 = 19 (left: 19)\n19 - 1 = 18 (left: 18)\n18 + 3 = 21 (left: 21)\n21 - 2 = 19 (left: 19)\n19 + 15 = 34 (left: 34)\n34 - 30 = 4 (left: 4)\n4 * 19 = 76 (left: 76)\n76 / 18 = 4.222222222222222 (left: 4.222222222222222)\n4.222222222222222 + 21 = 25.22222222222222 (left: 25.22222222222222)\n25.22222222222222 - 19 = 6.22222222222222 (left: 6.22222222222222)\n6.22222222222222 * 15 = 93.3333333333333 (left: 93.3333333333333)\n93.3333333333333 + 4 = 97.3333333333333 (left: 97.3333333333333)\n97.3333333333333 / 2 = 48.66666666666665 (left: 48.66666666666665)\n48.66666666666665 + 76 = 124.666666666667 (left: 124.666666666667)\n124.666666666667 / 18 = 6.92592592592595 (left: 6.92592592592595)\n6.92592592592595 + 21 = 27.925925925926 (left: 27.925925925926)\n27.925925925926 - 19 = 8.925925925926 (left: 8.925925925926)\n8.925925925926 + 15 = 23.925925925926 (left: 23.925925925926)\n23.925925925926 - 4 = 19.925925925926 (left: 19.925925925926)\n19.925925925926 * 19 = 378.592592592593 (left: 378.592592",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 5 7\nSteps:\n3 + 7 = 10 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n15 - 10 = 5 (left: 5 15)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 + 7) * 3) - 10 = 24",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 / 2) * (6 - 4) = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n5 - 3 = 2 (left: 2 21)\n2 * 21 = 42 (left: 42)\n42 / 2 = 24 (left: 24)\nAnswer: ((3 * 7) - 5) / 2 = 24\nInput: 1 3 5 7\nSteps:\n7 - 5 = 2 (left: 1 3 2)\n3 + 2 = 5 (left: 1 5)\n5 * 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: ((7 - 5) + (3 + 2)) - 1 = 24",
                "12 / 2 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 36 12)\n36 - 12 = 24 (left: 24)\nAnswer: ((12 / 2) * 6) - 12 = 24\nInput: 3 4 5 6\nSteps:\n3 * 5 = 15 (left: 4 6 15)\n4 + 6 = 10 (left: 10 15)\n15 - 10 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\n25 - 1 = 24 (left: 24)\nAnswer: (((3 * 5) - (4 + 6)) * 5) - 1 = 24"
            ],
            "values": [
                20.002,
                40.0,
                0.003,
                60.0,
                0.003,
                60.0,
                60.0,
                60.0,
                60.0,
                60.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.0979915
    },
    "940": {
        "input": "3 4 9 13",
        "step_1": {
            "steps": [
                "3 + 4 = 7 (left: 7 9 13)",
                "3 + 4 = 7 (left: 7 9 13)",
                "10 * 2 = 20 (left: 5 10 20)",
                "13 - 4 = 9 (left: 3 9 13)",
                "9 + 4 = 13 (left: 3 13 13)",
                "3 * 4 = 12 (left: 12 9 13)",
                "13 - 9 = 4 (left: 3 4 4)",
                "3 + 4 = 7 (left: 7 9 13)",
                "13 - 3 = 10 (left: 4 9 10)",
                "13 - 3 = 10 (left: 4 9 10)"
            ],
            "values": [
                2.0,
                0.003,
                1.002,
                0.003,
                1.002,
                1.002,
                1.001,
                0.003,
                2.001,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.0",
                "2 <- INIT",
                "3 <- 1.8",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "3 + 4 = 7 (left: 7 9 13)",
                "",
                "13 - 3 = 10 (left: 4 9 10)",
                "",
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "13 - 9 = 4 (left: 3 4 13)",
                "3 + 4 = 7 (left: 7 9 13)\n9 + 13 = 22 (left: 7 22)",
                "9 - 3 = 6 (left: 6 9 13)",
                "13 - 3 = 10 (left: 4 9 10)\n4 * 9 = 36 (left: 10 36)",
                "13 - 4 = 9 (left: 3 9 13)",
                "3 * 4 = 12 (left: 12 9 13)",
                "13 - 4 = 9 (left: 3 9 13)",
                "13 - 9 = 4 (left: 3 4 13)",
                "Input: 1 2 3 4",
                "10 - 1 = 9 (left: 5 9 10)"
            ],
            "values": [
                21.001,
                0.003,
                3.0,
                0.003,
                0.003,
                1.002,
                0.003,
                0.002,
                0.003,
                22.0
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 2.9",
                "2 <- 2.0",
                "3 <- 1.2",
                "4 <- 2.2",
                "5 <- 2.0",
                "6 <- 2.9",
                "7 <- INIT",
                "8 <- 2.9",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "13 - 9 = 4 (left: 3 4 13)",
                "10 - 1 = 9 (left: 5 9 10)",
                "13 - 9 = 4 (left: 3 4 13)",
                "10 * 2 = 20 (left: 5 10 20)",
                "9 - 3 = 6 (left: 6 9 13)",
                "13 - 9 = 4 (left: 3 4 13)",
                "10 - 1 = 9 (left: 5 9 10)",
                "",
                "10 - 1 = 9 (left: 5 9 10)",
                "13 - 9 = 4 (left: 3 4 13)"
            ]
        },
        "step_3": {
            "steps": [
                "13 - 9 = 4 (left: 3 4 13)\n3 + 4 = 7 (left: 7 13)",
                "10 - 1 = 9 (left: 5 9 10)\n7 / 2 = 3 (left: 3 14)",
                "13 - 9 = 4 (left: 3 4 13)\n3 + 4 = 7 (left: 7 13)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)",
                "9 - 3 = 6 (left: 6 9 13)\n9 - 6 = 3 (left: 3 13)",
                "13 - 9 = 4 (left: 3 4 13)\n4 + 3 = 7 (left: 7 13)",
                "10 - 1 = 9 (left: 5 9 10)\n7 - 3 = 4 (left: 4 12)",
                "13 - 4 = 9 (left: 3 9 13)",
                "10 - 1 = 9 (left: 5 9 10)\n7 * 3 = 21 (left: 12 21)",
                "13 - 9 = 4 (left: 3 4 13)\n13 - 4 = 9 (left: 3 9)"
            ],
            "values": [
                0.0,
                0.003,
                0.001,
                41.0,
                0.003,
                0.001,
                0.003,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 3.3",
                "2 <- 2.9",
                "3 <- INIT",
                "4 <- 2.0",
                "5 <- INIT",
                "6 <- 3.3",
                "7 <- 3.3",
                "8 <- 2.9",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)",
                "10 - 1 = 9 (left: 5 9 10)",
                "",
                "13 - 9 = 4 (left: 3 4 13)",
                "",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)",
                "10 - 1 = 9 (left: 5 9 10)",
                "13 - 3 = 10 (left: 4 9 10)"
            ]
        },
        "step_4": {
            "steps": [
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n20 - 2 = 18 (left: 5 18)",
                "10 - 1 = 9 (left: 5 9 10)\n10 / 5 = 2 (left: 2 10)",
                "13 - 9 = 4 (left: 3 4 13)",
                "13 - 9 = 4 (left: 3 4 13)\n13 - 4 = 9 (left: 3 9)",
                "13 - 9 = 4 (left: 3 4 13)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n20 - 5 = 15 (left: 2 15)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "13 - 3 = 10 (left: 4 9 10)\n4 + 9 = 13 (left: 10)"
            ],
            "values": [
                60.0,
                0.0,
                1.0,
                1.002,
                0.003,
                0.003,
                60.0,
                0.003,
                40.0,
                0.001
            ],
            "resampled": [
                "0 <- 4.6",
                "1 <- 4.8",
                "2 <- 4.0",
                "3 <- 3.3",
                "4 <- INIT",
                "5 <- 4.8",
                "6 <- 3.3",
                "7 <- 2.9",
                "8 <- 4.6",
                "9 <- 4.8"
            ],
            "resampled_steps": [
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)",
                "",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)",
                "10 - 1 = 9 (left: 5 9 10)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)"
            ]
        },
        "step_5": {
            "steps": [
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n2.5 + 20 = 22.5 (left: 22.5)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n1.8 + 10 = 11.8 (left: 11.8)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n2.5 + 20 = 22.5 (left: 22.5)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n6 + 9 = 15 (left: 3 15)",
                "13 - 9 = 4 (left: 3 4 4)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n10 / 1.8 = 5.555555555555556 (left: 5.555555555555556)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n2 * 20 = 40 (left: 5 40)",
                "10 - 1 = 9 (left: 5 9 10)\n6 / 3 = 2 (left: 2 6 12)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n10 / 1.8 = 5.56 (left: 5.56)"
            ],
            "values": [
                0.003,
                0.001,
                0.003,
                0.003,
                0.003,
                0.0,
                0.002,
                0.003,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 5.8",
                "2 <- 5.8",
                "3 <- 5.8",
                "4 <- 4.0",
                "5 <- 5.8",
                "6 <- 4.6",
                "7 <- 5.8",
                "8 <- 2.9",
                "9 <- 5.8"
            ],
            "resampled_steps": [
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)",
                "10 - 1 = 9 (left: 5 9 10)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)"
            ]
        },
        "step_6": {
            "steps": [
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 * 2 = 10 (left: 10 20)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n64 - 16 = 48 (left: 48)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n64 / 16 = 4 (left: 4)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n48 + 4 = 52 (left: 80 1024 52)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n20 + 2.5 = 22.5 (left: 2.5 22.5)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n16 + 64 = 80 (left: 80)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n2.5 * 20 = 50 (left: 50)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n16 + 64 = 80 (left: 80)",
                "10 - 1 = 9 (left: 5 9 10)\n12 / 6 = 2 (left: 2 12)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n64 / 4 = 16 (left: 16)"
            ],
            "values": [
                0.003,
                0.003,
                0.001,
                2.001,
                0.002,
                0.003,
                0.003,
                0.002,
                60.0,
                0.001
            ],
            "resampled": [
                "0 <- 1.0",
                "1 <- 4.8",
                "2 <- 4.8",
                "3 <- 2.9",
                "4 <- 6.3",
                "5 <- 6.8",
                "6 <- 5.8",
                "7 <- 6.8",
                "8 <- 4.8",
                "9 <- 6.8"
            ],
            "resampled_steps": [
                "3 + 4 = 7 (left: 7 9 13)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "10 - 1 = 9 (left: 5 9 10)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n48 + 4 = 52 (left: 80 1024 52)",
                "10 - 1 = 9 (left: 5 9 10)\n12 / 6 = 2 (left: 2 12)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)",
                "10 - 1 = 9 (left: 5 9 10)\n12 / 6 = 2 (left: 2 12)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "10 - 1 = 9 (left: 5 9 10)\n12 / 6 = 2 (left: 2 12)"
            ]
        },
        "step_7": {
            "steps": [
                "3 + 4 = 7 (left: 7 9 13)\n13 + 7 = 20 (left: 9 20)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n1.8 * 10 = 18 (left: 18)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n10 / 1.8 = 5.555555555555555 (left: 5.555555555555555)",
                "10 - 1 = 9 (left: 5 9 10)\n7 - 3 = 4 (left: 4 9 12)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n48 + 4 = 52 (left: 80 1024 52)\n80 * 52 = 4160 (left: 1024 4160)",
                "10 - 1 = 9 (left: 5 9 10)\n12 / 6 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n16 / 64 = 0.25 (left: 0.25)",
                "10 - 1 = 9 (left: 5 9 10)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n10 - 1.8 = 8.2 (left: 8.2)",
                "10 - 1 = 9 (left: 5 9 10)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)"
            ],
            "values": [
                0.003,
                20.0,
                20.001,
                41.0,
                20.001,
                0.002,
                0.002,
                0.002,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 3.3",
                "1 <- 7.4",
                "2 <- 7.3",
                "3 <- 5.8",
                "4 <- 4.0",
                "5 <- 4.6",
                "6 <- 7.4",
                "7 <- 7.2",
                "8 <- 5.8",
                "9 <- 6.8"
            ],
            "resampled_steps": [
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n48 + 4 = 52 (left: 80 1024 52)\n80 * 52 = 4160 (left: 1024 4160)",
                "10 - 1 = 9 (left: 5 9 10)\n7 - 3 = 4 (left: 4 9 12)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n48 + 4 = 52 (left: 80 1024 52)\n80 * 52 = 4160 (left: 1024 4160)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n10 / 1.8 = 5.555555555555555 (left: 5.555555555555555)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)",
                "10 - 1 = 9 (left: 5 9 10)\n12 / 6 = 2 (left: 2 12)"
            ]
        },
        "step_8": {
            "steps": [
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n20 / 5 = 4 (left: 4 20)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n48 + 4 = 52 (left: 80 1024 52)\n80 * 52 = 4160 (left: 1024 4160)\n1024 / 4160 = 0.25 (left: 0.25 4160)",
                "10 - 1 = 9 (left: 5 9 10)\n7 - 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n80 - 20 = 60 (left: 60 5)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n20 - 2.5 = 17.5 (left: 17.5)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n3 * 9 = 27 (left: 27)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n48 + 4 = 52 (left: 80 1024 52)\n80 * 52 = 4160 (left: 1024 4160)\n25 * 2 = 50 (left: 50 50 75)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n10 / 1.8 = 5.555555555555555 (left: 5.555555555555555)\n5.555555555555555 + 5.555555555555555 = 11.11111111111111",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n16 * 64 = 1024 (left: 1024)",
                "10 - 1 = 9 (left: 5 9 10)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)"
            ],
            "values": [
                0.0,
                60.0,
                60.0,
                60.0,
                0.003,
                0.003,
                20.001,
                0.003,
                0.002,
                0.001
            ],
            "resampled": [
                "0 <- 7.3",
                "1 <- 8.3",
                "2 <- 8.2",
                "3 <- 6.8",
                "4 <- 8.3",
                "5 <- 8.6",
                "6 <- 4.0",
                "7 <- 8.3",
                "8 <- 8.6",
                "9 <- 7.1"
            ],
            "resampled_steps": [
                "10 - 1 = 9 (left: 5 9 10)\n7 - 3 = 4 (left: 4 9 12)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n80 - 20 = 60 (left: 60 5)",
                "10 - 1 = 9 (left: 5 9 10)\n7 - 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)",
                "10 - 1 = 9 (left: 5 9 10)\n12 / 6 = 2 (left: 2 12)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n80 - 20 = 60 (left: 60 5)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n48 + 4 = 52 (left: 80 1024 52)\n80 * 52 = 4160 (left: 1024 4160)\n25 * 2 = 50 (left: 50 50 75)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n80 - 20 = 60 (left: 60 5)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n48 + 4 = 52 (left: 80 1024 52)\n80 * 52 = 4160 (left: 1024 4160)\n25 * 2 = 50 (left: 50 50 75)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n1.8 * 10 = 18 (left: 18)"
            ]
        },
        "step_9": {
            "steps": [
                "10 - 1 = 9 (left: 5 9 10)\n7 - 3 = 4 (left: 4 9 12)\n7 / 5 = 1.4 (left: 1.4 10 12)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n80 - 20 = 60 (left: 60 5)\n60 - 5 = 55 (left: 55)",
                "10 - 1 = 9 (left: 5 9 10)\n7 - 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)",
                "10 - 1 = 9 (left: 5 9 10)\n12 / 6 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n80 - 20 = 60 (left: 60 5)\n60 / 5 = 12 (left: 12)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n48 + 4 = 52 (left: 80 1024 52)\n80 * 52 = 4160 (left: 1024 4160)\n25 * 2 = 50 (left: 50 50 75)\n75 + 50 = 125 (left: 50 125)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n2.5 + 20 = 22.5 (left: 22.5)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n80 - 20 = 60 (left: 60 5)\n60 - 5 = 55 (left: 55)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n48 + 4 = 52 (left: 80 1024 52)\n80 * 52 = 4160 (left: 1024 4160)\n25 * 2 = 50 (left: 50 50 75)\n75 + 50 = 125 (left: 50 125)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n1.8 * 10 = 18 (left: 18)\nThere are no possible next steps with the input 18."
            ],
            "values": [
                2.001,
                0.002,
                0.002,
                0.003,
                0.002,
                21.001,
                0.003,
                0.003,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 6.8",
                "1 <- 8.2",
                "2 <- 8.1",
                "3 <- 8.3",
                "4 <- 5.8",
                "5 <- 8.1",
                "6 <- 6.8",
                "7 <- 7.2",
                "8 <- 8.2",
                "9 <- 8.1"
            ],
            "resampled_steps": [
                "10 - 1 = 9 (left: 5 9 10)\n12 / 6 = 2 (left: 2 12)",
                "10 - 1 = 9 (left: 5 9 10)\n7 - 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n48 + 4 = 52 (left: 80 1024 52)\n80 * 52 = 4160 (left: 1024 4160)\n1024 / 4160 = 0.25 (left: 0.25 4160)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n80 - 20 = 60 (left: 60 5)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n48 + 4 = 52 (left: 80 1024 52)\n80 * 52 = 4160 (left: 1024 4160)\n1024 / 4160 = 0.25 (left: 0.25 4160)",
                "10 - 1 = 9 (left: 5 9 10)\n12 / 6 = 2 (left: 2 12)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n10 / 1.8 = 5.555555555555555 (left: 5.555555555555555)",
                "10 - 1 = 9 (left: 5 9 10)\n7 - 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n48 + 4 = 52 (left: 80 1024 52)\n80 * 52 = 4160 (left: 1024 4160)\n1024 / 4160 = 0.25 (left: 0.25 4160)"
            ]
        },
        "step_10": {
            "steps": [
                "10 - 1 = 9 (left: 5 9 10)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "10 - 1 = 9 (left: 5 9 10)\n7 - 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n36 / 12 = 3 (left: 3)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n48 + 4 = 52 (left: 80 1024 52)\n80 * 52 = 4160 (left: 1024 4160)\n1024 / 4160 = 0.25 (left: 0.25 4160)\n4160 - 0.25 = 4159.75 (left: 4159.75)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n80 - 20 = 60 (left: 60 5)\n60 * 5 = 300 (left: 300)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n16 + 64 = 80 (left: 80)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n48 + 4 = 52 (left: 80 1024 52)\n80 * 52 = 4160 (left: 1024 4160)\n1024 / 4160 = 0.25 (left: 0.25 4160)\n4160 / 0.25 = 16640 (left: 16640)",
                "10 - 1 = 9 (left: 5 9 10)\n12 / 6 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "10 - 1 = 9 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n10 / 1.8 = 5.555555555555555 (left: 5.555555555555555)\n5.555555555555555 / 5.555555555555555 = 1",
                "10 - 1 = 9 (left: 5 9 10)\n7 - 3 = 4 (left: 4 9 12)\n4 * 9 = 36 (left: 36 12)\n36 * 12 = 432 (left: 432)",
                "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 5 2 20)\n5 / 2 = 2.5 (left: 2.5 20)\n64 / 4 = 16 (left: 16 64)\n48 + 4 = 52 (left: 80 1024 52)\n80 * 52 = 4160 (left: 1024 4160)\n1024 / 4160 = 0.25 (left: 0.25 4160)\n4160 - 0.25 = 4159.75 (left: 4159.75)"
            ],
            "values": [
                0.002,
                0.002,
                0.003,
                0.001,
                0.003,
                0.003,
                0.002,
                0.003,
                0.002,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.1535915
    },
    "941": {
        "input": "4 5 10 12",
        "step_1": {
            "steps": [
                "5 * 10 = 50 (left: 4 50 12)",
                "4 * 5 = 20 (left: 20 10 12)",
                "4 * 5 = 20 (left: 20 10 12)",
                "10 - 4 = 6 (left: 6 10 12)",
                "4 + 5 = 9 (left: 9 10 12)",
                "5 * 4 = 20 (left: 10 20 12)",
                "5 * 10 = 50 (left: 4 50 12)",
                "5 * 4 = 20 (left: 10 20 12)",
                "12 - 4 = 8 (left: 5 8 10)",
                "10 - 4 = 6 (left: 6 5 12)"
            ],
            "values": [
                2.0,
                2.001,
                1.002,
                2.001,
                3.0,
                1.002,
                2.0,
                2.001,
                41.0,
                3.0
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- INIT",
                "2 <- 1.4",
                "3 <- 1.8",
                "4 <- 1.1",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- 1.8",
                "8 <- 1.8",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "4 * 5 = 20 (left: 20 10 12)",
                "",
                "4 + 5 = 9 (left: 9 10 12)",
                "12 - 4 = 8 (left: 5 8 10)",
                "4 * 5 = 20 (left: 20 10 12)",
                "",
                "",
                "12 - 4 = 8 (left: 5 8 10)",
                "12 - 4 = 8 (left: 5 8 10)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)",
                "9 - 6 = 3 (left: 3 9 12)",
                "4 + 5 = 9 (left: 9 10 12)\n9 * 10 = 90 (left: 12)",
                "12 - 4 = 8 (left: 5 8 10)\n8 / 5 = 1.6 (left: 1.6 10)",
                "4 * 5 = 20 (left: 20 10 12)\n20 / 10 = 2 (left: 2 12)",
                "6 + 12 = 18 (left: 3 18 15)",
                "4 + 10 = 14 (left: 5 10 12)",
                "12 - 4 = 8 (left: 5 8 10)\n8 / 5 = 1.6 (left: 1.6 10)",
                "12 - 4 = 8 (left: 5 8 10)\n6 + 4 = 10 (left: 10 12)",
                "10 - 4 = 6 (left: 6 10 12)"
            ],
            "values": [
                60.0,
                1.002,
                0.003,
                20.0,
                60.0,
                2.001,
                0.003,
                1.0,
                0.002,
                3.0
            ],
            "resampled": [
                "0 <- 1.4",
                "1 <- 2.3",
                "2 <- 2.0",
                "3 <- 2.4",
                "4 <- 2.0",
                "5 <- 2.0",
                "6 <- 2.4",
                "7 <- 2.0",
                "8 <- 2.0",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "4 + 5 = 9 (left: 9 10 12)",
                "12 - 4 = 8 (left: 5 8 10)\n8 / 5 = 1.6 (left: 1.6 10)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)",
                "4 * 5 = 20 (left: 20 10 12)\n20 / 10 = 2 (left: 2 12)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)",
                "4 * 5 = 20 (left: 20 10 12)\n20 / 10 = 2 (left: 2 12)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)"
            ]
        },
        "step_3": {
            "steps": [
                "4 + 5 = 9 (left: 9 10 12)\n12 - 9 = 3 (left: 3 12)",
                "12 - 4 = 8 (left: 5 8 10)\n8 / 5 = 1.6 (left: 1.6 10)\nPossible next steps:",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)\n20 + 0.8333333333333334 = 20.833333333333332 (left: 20.833333333333332)",
                "4 * 5 = 20 (left: 20 10 12)\n20 / 10 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)\n20 * 0.8333333333333334 = 16.666666666666668",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)\n20 * 0.8333333333333334 = 16.66666666666667 (left: 16.66666666666667)",
                "4 * 5 = 20 (left: 20 10 12)\n20 / 10 = 2 (left: 2 12)\n2 + 12 = 14 (left: 14)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)\n20 * 0.8333333333333334 = 16.666666666666668 (left: 16.666666666666668)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)\n20 / 0.8333333333333334 = 24 (left: 24)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)\n20 - 0.8333333333333334 = 19.16666666666667"
            ],
            "values": [
                0.003,
                0.003,
                0.002,
                0.002,
                0.003,
                0.002,
                0.003,
                0.001,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 3.8",
                "2 <- 2.4",
                "3 <- 2.4",
                "4 <- 2.0",
                "5 <- 2.3",
                "6 <- 2.0",
                "7 <- 2.4",
                "8 <- 3.8",
                "9 <- 3.8"
            ],
            "resampled_steps": [
                "4 * 5 = 20 (left: 20 10 12)\n20 / 10 = 2 (left: 2 12)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)\n20 / 0.8333333333333334 = 24 (left: 24)",
                "4 * 5 = 20 (left: 20 10 12)\n20 / 10 = 2 (left: 2 12)",
                "4 * 5 = 20 (left: 20 10 12)\n20 / 10 = 2 (left: 2 12)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)",
                "12 - 4 = 8 (left: 5 8 10)\n8 / 5 = 1.6 (left: 1.6 10)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)",
                "4 * 5 = 20 (left: 20 10 12)\n20 / 10 = 2 (left: 2 12)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)\n20 / 0.8333333333333334 = 24 (left: 24)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)\n20 / 0.8333333333333334 = 24 (left: 24)"
            ]
        },
        "step_4": {
            "steps": [
                "4 * 5 = 20 (left: 20 10 12)\n20 / 10 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)\n20 / 0.8333333333333334 = 24 (left: 24)\nAnswer: 4 * 5 = 20, 10 / 12 = 0.8333333333333334, 20 / 0.8333333333333334 = 24",
                "4 * 5 = 20 (left: 20 10 12)\n20 / 10 = 2 (left: 2 12)\n12 - 2 = 10 (left: 10 12)",
                "4 * 5 = 20 (left: 20 10 12)\n20 / 10 = 2 (left: 2 12)\n12 / 2 = 6 (left: 6)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)\n20 / 0.8333333333333334 = 24 (left: 24)",
                "12 - 4 = 8 (left: 5 8 10)\n8 / 5 = 1.6 (left: 1.6 10)\n10 / 1.6 = 6.25 (left: 6.25)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)\n20 - 0.8333333333333334 = 19.166666666666668 (left: 19.166666666666668)",
                "4 * 5 = 20 (left: 20 10 12)\n20 / 10 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)\n20 / 0.8333333333333334 = 24 (left: 24)\nAnswer: (4 * 5) / (10 / 12) = 24",
                "4 * 5 = 20 (left: 20 10 12)\n10 / 12 = 0.8333333333333334 (left: 20 0.8333333333333334)\n20 / 0.8333333333333334 = 24 (left: 24)\nAnswer: (4 * 5) / (10 / 12) = 24"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "cost": 2.1757735
    },
    "942": {
        "input": "1 2 7 11",
        "step_1": {
            "steps": [
                "11 - 1 = 10 (left: 2 7 10)",
                "1 * 7 = 7 (left: 7 7 11)",
                "11 - 1 = 10 (left: 2 7 10)",
                "9 * 3 = 27 (left: 27 12 15)",
                "7 + 2 = 9 (left: 1 9 11)",
                "1 + 2 = 3 (left: 3 7 11)",
                "11 - 1 = 10 (left: 2 7 10)",
                "7 + 11 = 18 (left: 1 2 18)",
                "11 / 7 = 1.57 (left: 1 2 1.57)",
                "7 + 11 = 18 (left: 1 2 18)"
            ],
            "values": [
                40.001,
                2.001,
                60.0,
                1.002,
                1.002,
                2.001,
                60.0,
                40.001,
                2.001,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.7",
                "2 <- 1.6",
                "3 <- 1.7",
                "4 <- 1.6",
                "5 <- 1.7",
                "6 <- INIT",
                "7 <- 1.2",
                "8 <- 1.2",
                "9 <- 1.0"
            ],
            "resampled_steps": [
                "",
                "7 + 11 = 18 (left: 1 2 18)",
                "11 - 1 = 10 (left: 2 7 10)",
                "7 + 11 = 18 (left: 1 2 18)",
                "11 - 1 = 10 (left: 2 7 10)",
                "7 + 11 = 18 (left: 1 2 18)",
                "",
                "11 - 1 = 10 (left: 2 7 10)",
                "11 - 1 = 10 (left: 2 7 10)",
                "11 - 1 = 10 (left: 2 7 10)"
            ]
        },
        "step_2": {
            "steps": [
                "11 - 7 = 4 (left: 1 2 4)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "7 + 11 = 18 (left: 1 2 18)\n12 - 5 = 7 (left: 3 7 12)",
                "11 - 1 = 10 (left: 2 7 10)\n7 / 2 = 3.5 (left: 3.5 10)",
                "7 + 11 = 18 (left: 1 2 18)\n18 - 2 = 16 (left: 1 16)",
                "7 + 11 = 18 (left: 1 2 18)",
                "11 - 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)",
                "11 - 1 = 10 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)",
                "11 - 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)"
            ],
            "values": [
                1.002,
                60.0,
                60.0,
                0.003,
                0.003,
                0.002,
                1.002,
                20.001,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 1.2",
                "1 <- 1.6",
                "2 <- 2.7",
                "3 <- 2.1",
                "4 <- 2.2",
                "5 <- 1.6",
                "6 <- INIT",
                "7 <- 2.2",
                "8 <- 1.2",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 2 7 10)",
                "11 - 1 = 10 (left: 2 7 10)",
                "11 - 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "11 - 1 = 10 (left: 2 7 10)",
                "",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "11 - 1 = 10 (left: 2 7 10)",
                "11 - 1 = 10 (left: 2 7 10)"
            ]
        },
        "step_3": {
            "steps": [
                "11 - 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "11 - 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n10 / 5 = 2 (left: 2)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 + 36 = 37 (left: 37)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)",
                "11 - 1 = 10 (left: 2 7 10)\n10 / 7 = 1 (left: 2 1)",
                "7 - 2 = 5 (left: 1 5 11)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 / 10 = 1.4 (left: 1.4)",
                "11 - 1 = 10 (left: 2 7 10)\nPossible next steps:",
                "11 - 1 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)"
            ],
            "values": [
                0.002,
                60.0,
                0.002,
                0.003,
                0.001,
                0.001,
                1.002,
                0.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 3.1",
                "2 <- 2.1",
                "3 <- 1.0",
                "4 <- 2.1",
                "5 <- 1.7",
                "6 <- 2.2",
                "7 <- 2.2",
                "8 <- 3.1",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)",
                "11 - 1 = 10 (left: 2 7 10)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)",
                "7 + 11 = 18 (left: 1 2 18)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "11 - 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "7 + 11 = 18 (left: 1 2 18)\n18 - 2 = 16 (left: 1 16)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)",
                "15 - 3 = 12 (left: 5 9 12)"
            ],
            "values": [
                40.001,
                0.0,
                20.0,
                0.003,
                20.0,
                1.002,
                60.0,
                60.0,
                0.002,
                2.001
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 1.7",
                "2 <- 2.1",
                "3 <- 1.2",
                "4 <- 3.1",
                "5 <- 1.6",
                "6 <- 4.6",
                "7 <- 1.2",
                "8 <- 1.7",
                "9 <- 2.1"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 2 7 10)",
                "7 + 11 = 18 (left: 1 2 18)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)",
                "11 - 1 = 10 (left: 2 7 10)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "11 - 1 = 10 (left: 2 7 10)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "11 - 1 = 10 (left: 2 7 10)",
                "7 + 11 = 18 (left: 1 2 18)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)"
            ]
        },
        "step_5": {
            "steps": [
                "11 - 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 2 8)",
                "7 + 11 = 18 (left: 1 2 18)\n5 - 3 = 2 (left: 2 7)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "11 - 1 = 10 (left: 2 7 10)\n10 / 2 = 5 (left: 5 10)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (11 - 1) * (2 * 7) = 24",
                "11 - 1 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3 10)",
                "7 + 11 = 18 (left: 1 2 18)\nInput: 3 5 7 9",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n36 - 1 = 35 (left: 35)"
            ],
            "values": [
                1.002,
                0.002,
                40.0,
                1.002,
                0.001,
                40.001,
                60.0,
                60.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.7",
                "1 <- 3.1",
                "2 <- 5.7",
                "3 <- 3.1",
                "4 <- 4.7",
                "5 <- 1.9",
                "6 <- 4.2",
                "7 <- 4.7",
                "8 <- 2.7",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "11 - 1 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3 10)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "7 + 11 = 18 (left: 1 2 18)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "11 - 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)"
            ]
        },
        "step_6": {
            "steps": [
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (11 - 1) + (2 * 7) = 24",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140)",
                "11 - 1 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3 10)\n3 + 2 = 5 (left: 5 10)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (2 * 7) + (11 - 1) = 24",
                "7 + 11 = 18 (left: 1 2 18)\n1 + 2 = 3 (left: 3 18)",
                "7 + 11 = 18 (left: 1 2 18)\n2 * 18 = 36 (left: 1 36)\n1 * 36 = 36 (left: 36)\nNone - the input is already a single number.",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (11 - 1) + (2 * 7) = 24",
                "11 - 1 = 10 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)\n27 - 9 = 18 (left: 3 18 27)",
                "11 - 1 = 10 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 / 10 = 1.4 (left: 1.4)"
            ]
        },
        "results": [
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.2054595
    },
    "943": {
        "input": "4 5 6 8",
        "step_1": {
            "steps": [
                "Input: 3 9 1 7",
                "4 / 5 = 0.8 (left: 6 8 0.8)",
                "8 - 4 = 4 (left: 4 5 6)",
                "4 + 5 = 9 (left: 6 8 9)",
                "Input: 1 3 5 7",
                "4 * 5 = 20 (left: 6 8 20)",
                "6 - 8 = -2 (left: 4 5 -2)",
                "6 * 8 = 48 (left: 4 5 48)",
                "5 + 6 = 11 (left: 4 8 11)",
                "8 - 5 = 3 (left: 4 6 3)"
            ],
            "values": [
                0.003,
                3.0,
                2.001,
                2.001,
                0.003,
                2.001,
                3.0,
                2.001,
                3.0,
                60.0
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 1.9",
                "4 <- INIT",
                "5 <- 1.9",
                "6 <- 1.6",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "6 - 8 = -2 (left: 4 5 -2)",
                "",
                "",
                "8 - 5 = 3 (left: 4 6 3)",
                "",
                "8 - 5 = 3 (left: 4 6 3)",
                "6 - 8 = -2 (left: 4 5 -2)",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "6 - 8 = -2 (left: 4 5 -2)\nInput: 10 3 5",
                "6 + 8 = 14 (left: 4 5 14)",
                "7 * 9 = 63 (left: 3 12 63)",
                "8 - 5 = 3 (left: 4 6 3)\n5 / 3 = 1.67 (left: 9 1.67)",
                "4 * 5 = 20 (left: 6 8 20)",
                "8 - 5 = 3 (left: 4 6 3)\n2 + 5 = 7 (left: 9 7)",
                "6 - 8 = -2 (left: 4 5 -2)\n10 / 5 = 2 (left: 2 2 7)",
                "4 * 5 = 20 (left: 6 8 20)",
                "6 - 8 = -2 (left: 4 5 -2)",
                "5 * 6 = 30 (left: 4 8 30)"
            ],
            "values": [
                0.003,
                2.001,
                2.001,
                3.0,
                3.0,
                0.003,
                3.0,
                0.003,
                21.0,
                2.001
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- 2.8",
                "4 <- 1.9",
                "5 <- 1.9",
                "6 <- 1.8",
                "7 <- 1.9",
                "8 <- INIT",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "6 - 8 = -2 (left: 4 5 -2)",
                "",
                "",
                "6 - 8 = -2 (left: 4 5 -2)",
                "8 - 5 = 3 (left: 4 6 3)",
                "8 - 5 = 3 (left: 4 6 3)",
                "5 + 6 = 11 (left: 4 8 11)",
                "8 - 5 = 3 (left: 4 6 3)",
                "",
                "8 - 5 = 3 (left: 4 6 3)"
            ]
        },
        "step_3": {
            "steps": [
                "6 - 8 = -2 (left: 4 5 -2)\n4 * 5 = 20 (left: -2 20)",
                "4 * 5 = 20 (left: 6 8 20)",
                "4 + 5 = 9 (left: 6 8 9)",
                "6 - 8 = -2 (left: 4 5 -2)\n2 * 5 = 10 (left: 10 10 3)",
                "8 - 5 = 3 (left: 4 6 3)\n4 + 6 = 10 (left: 3 10)",
                "8 - 5 = 3 (left: 4 6 3)\n9 / 3 = 3 (left: 3 5)",
                "5 + 6 = 11 (left: 4 8 11)\n8 / 4 = 2 (left: 2 11)",
                "8 - 5 = 3 (left: 4 6 3)\nPossible next steps:",
                "4 - 5 = -1 (left: -1 6 8)",
                "8 - 5 = 3 (left: 4 6 3)\nInput: 5 10 2"
            ],
            "values": [
                0.003,
                0.003,
                2.001,
                3.0,
                0.003,
                0.003,
                1.001,
                0.003,
                1.001,
                0.003
            ],
            "resampled": [
                "0 <- 2.8",
                "1 <- 2.8",
                "2 <- 2.1",
                "3 <- 1.9",
                "4 <- 2.8",
                "5 <- 1.9",
                "6 <- 3.3",
                "7 <- 1.9",
                "8 <- 1.9",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "6 - 8 = -2 (left: 4 5 -2)",
                "6 - 8 = -2 (left: 4 5 -2)",
                "6 + 8 = 14 (left: 4 5 14)",
                "8 - 5 = 3 (left: 4 6 3)",
                "6 - 8 = -2 (left: 4 5 -2)",
                "8 - 5 = 3 (left: 4 6 3)",
                "6 - 8 = -2 (left: 4 5 -2)\n2 * 5 = 10 (left: 10 10 3)",
                "8 - 5 = 3 (left: 4 6 3)",
                "8 - 5 = 3 (left: 4 6 3)",
                "8 - 5 = 3 (left: 4 6 3)"
            ]
        },
        "step_4": {
            "steps": [
                "6 - 8 = -2 (left: 4 5 -2)\n10 - 3 = 7 (left: 7 5)",
                "6 - 8 = -2 (left: 4 5 -2)\n5 + 10 = 15 (left: 3 15)",
                "6 + 8 = 14 (left: 4 5 14)\n5 * 4 = 20 (left: 20 14)",
                "8 - 5 = 3 (left: 4 6 3)\n4 + 6 = 10 (left: 3 10)",
                "6 - 8 = -2 (left: 4 5 -2)\n5 - 4 = 1 (left: 1 -2)",
                "8 - 5 = 3 (left: 4 6 3)\n5 * 2 = 10 (left: 10 10 20)",
                "6 - 8 = -2 (left: 4 5 -2)\n2 * 5 = 10 (left: 10 10 3)\nPossible next steps:",
                "8 - 5 = 3 (left: 4 6 3)\n6 - 4 = 2 (left: 2 3)",
                "8 - 5 = 3 (left: 4 6 3)\n2 + 4 = 6 (left: 6)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                1.001,
                0.003,
                0.003,
                0.003,
                0.001,
                20.002
            ],
            "resampled": [
                "0 <- 4.9",
                "1 <- INIT",
                "2 <- 4.9",
                "3 <- 2.3",
                "4 <- INIT",
                "5 <- 2.6",
                "6 <- 4.9",
                "7 <- 4.9",
                "8 <- 2.8",
                "9 <- 4.9"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)",
                "",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)",
                "8 - 5 = 3 (left: 4 6 3)\n5 / 3 = 1.67 (left: 9 1.67)",
                "",
                "6 - 8 = -2 (left: 4 5 -2)\n10 / 5 = 2 (left: 2 2 7)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)",
                "6 - 8 = -2 (left: 4 5 -2)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)"
            ]
        },
        "step_5": {
            "steps": [
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 + 9 = 13 (left: 9 13)",
                "3 * 6 = 18 (left: 9 12 18)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)",
                "8 - 5 = 3 (left: 4 6 3)\n5 / 3 = 1.67 (left: 9 1.67)\n9 * 1.67 = 15.03 (left: 15.03)",
                "4 + 5 = 9 (left: 6 8 9)",
                "6 - 8 = -2 (left: 4 5 -2)\n10 / 5 = 2 (left: 2 2 7)\n7 / 2 = 3.5 (left: 2 3.5)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 - 9 = -5 (left: -5 9)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n3 * 6 = 18 (left: 18 9)",
                "6 - 8 = -2 (left: 4 5 -2)\n4 / 5 = 0.8 (left: 0.8 -2)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n14 / 7 = 2 (left: 2)"
            ],
            "values": [
                0.003,
                1.002,
                20.001,
                0.001,
                22.0,
                0.003,
                0.002,
                1.002,
                0.002,
                0.001
            ],
            "resampled": [
                "0 <- 5.7",
                "1 <- 5.2",
                "2 <- 5.2",
                "3 <- 5.4",
                "4 <- 4.9",
                "5 <- 5.4",
                "6 <- 1.9",
                "7 <- 5.4",
                "8 <- 5.2",
                "9 <- 1.9"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n3 * 6 = 18 (left: 18 9)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)",
                "4 + 5 = 9 (left: 6 8 9)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)",
                "4 + 5 = 9 (left: 6 8 9)",
                "8 - 5 = 3 (left: 4 6 3)",
                "4 + 5 = 9 (left: 6 8 9)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)",
                "8 - 5 = 3 (left: 4 6 3)"
            ]
        },
        "step_6": {
            "steps": [
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n3 * 6 = 18 (left: 18 9)\n18 * 9 = 162 (left: 162)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n36 - 9 = 27 (left: 27)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n36 / 9 = 4 (left: 4)",
                "4 + 5 = 9 (left: 6 8 9)\n6 * 8 = 48 (left: 9 48)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)",
                "4 + 5 = 9 (left: 6 8 9)\nInput: 3 5 7 2",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)",
                "4 + 5 = 9 (left: 6 8 9)\n6 + 8 = 14 (left: 9 14)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n36 / 9 = 4 (left: 4)",
                "8 - 5 = 3 (left: 4 6 3)\n5 + 7 = 12 (left: 10 12)"
            ],
            "values": [
                0.003,
                20.002,
                0.002,
                20.0,
                0.003,
                0.003,
                60.0,
                1.002,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 1.9",
                "1 <- 2.4",
                "2 <- 6.6",
                "3 <- 1.3",
                "4 <- 6.6",
                "5 <- 5.4",
                "6 <- 5.2",
                "7 <- 6.6",
                "8 <- 1.1",
                "9 <- 6.1"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 4 6 3)",
                "4 * 5 = 20 (left: 6 8 20)",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)",
                "4 + 5 = 9 (left: 6 8 9)",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)",
                "4 + 5 = 9 (left: 6 8 9)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)",
                "4 / 5 = 0.8 (left: 6 8 0.8)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n36 - 9 = 27 (left: 27)"
            ]
        },
        "step_7": {
            "steps": [
                "8 - 5 = 3 (left: 4 6 3)\n10 - 2 = 8 (left: 8 4)",
                "4 * 5 = 20 (left: 6 8 20)\n8 / 6 = 1.33 (left: 1.33 20)",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)\nThere are no possible next steps for the number 18.",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 7 = 2 (left: 2 5 9)",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)\n18 / 2 = 9 (left: 9)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n9 * 4 = 36 (left: 36)",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)\nThere are no possible next steps for the input 18.",
                "4 / 5 = 0.8 (left: 6 8 0.8)\n8 * 0.8 = 6.4 (left: 6.4)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n36 - 9 = 27 (left: 27)\n27 / 3 = 9"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                2.001,
                0.002,
                60.0,
                40.0,
                0.003,
                0.0,
                0.003
            ],
            "resampled": [
                "0 <- 6.6",
                "1 <- 6.6",
                "2 <- 7.5",
                "3 <- 1.9",
                "4 <- 5.2",
                "5 <- 6.6",
                "6 <- 6.6",
                "7 <- INIT",
                "8 <- 7.5",
                "9 <- 7.5"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 4 6 3)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)",
                "",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)"
            ]
        },
        "step_8": {
            "steps": [
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)\n18 - 2 = 16 (left: 16)",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)\nNo possible next steps with the input 18.",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 - 5 = 3 (left: 4 6 3)\n3 - 4 = -1 (left: -1)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n9 + 36 = 45 (left: 45)",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)\nNo possible next steps as there are no more numbers left to operate on.",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)\n18 / 2 = 9",
                "6 * 8 = 48 (left: 4 5 48)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)"
            ],
            "values": [
                20.001,
                0.003,
                40.0,
                0.0,
                0.003,
                0.003,
                0.003,
                3.0,
                60.0,
                40.0
            ],
            "resampled": [
                "0 <- 7.5",
                "1 <- 7.5",
                "2 <- 8.9",
                "3 <- 8.8",
                "4 <- 7.6",
                "5 <- 6.6",
                "6 <- 7.5",
                "7 <- 8.8",
                "8 <- 7.6",
                "9 <- 7.6"
            ],
            "resampled_steps": [
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n9 * 4 = 36 (left: 36)",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n9 * 4 = 36 (left: 36)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n9 * 4 = 36 (left: 36)"
            ]
        },
        "step_9": {
            "steps": [
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (4 + 5) * (6 - 8) = 24",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (4 + 5) * (6 - 8) = 24",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n9 * 4 = 36 (left: 36)\n36 * 2 = 72 (left: 72)",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)\n18 - 8 = 10 (left: 8 10)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n10 / 5 = 2 (left: 2 10)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (4 + 5) * (6 - 8) = 24",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n9 * 4 = 36 (left: 36)\n36 / 2 = 18",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n9 * 4 = 36 (left: 36)\nThere are no possible next steps for the number 36 as it is a single number and cannot be combined with any other numbers."
            ],
            "values": [
                0.003,
                60.0,
                0.003,
                0.003,
                0.001,
                20.001,
                1.0,
                0.003,
                0.003,
                20.002
            ],
            "resampled": [
                "0 <- 8.0",
                "1 <- 8.9",
                "2 <- 9.1",
                "3 <- 7.5",
                "4 <- 1.2",
                "5 <- 8.8",
                "6 <- 6.6",
                "7 <- 7.6",
                "8 <- 7.5",
                "9 <- 8.0"
            ],
            "resampled_steps": [
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)\n18 - 2 = 16 (left: 16)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)",
                "8 - 4 = 4 (left: 4 5 6)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n9 * 4 = 36 (left: 36)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)\n18 - 2 = 16 (left: 16)"
            ]
        },
        "step_10": {
            "steps": [
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)\n18 - 2 = 16 (left: 16)\n16 / 2 = 8",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (4 + 5) * (6 - 8) = 24",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (4 + 5) * (6 - 8) = 24",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\nInput: 5 7",
                "8 - 4 = 4 (left: 4 5 6)\n4 + 5 = 9 (left: 6 9)",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (4 + 5) * (6 - 8) = 24",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)\nNo possible next steps as there is only one number left.",
                "8 - 5 = 3 (left: 4 6 3)\n6 + 3 = 9 (left: 4 9)\n4 * 9 = 36 (left: 9 36)\n9 * 4 = 36 (left: 36)\n36 + 2 = 38",
                "4 + 5 = 9 (left: 6 8 9)\n9 - 6 = 3 (left: 3 8)\n3 + 8 = 11 (left: 11)",
                "8 - 5 = 3 (left: 4 6 3)\n3 * 6 = 18 (left: 18)\n18 - 2 = 16 (left: 16)\n16 / 2 = 8"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                40.001,
                0.003,
                0.003,
                0.002,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.2608070000000002
    },
    "944": {
        "input": "6 10 12 13",
        "step_1": {
            "steps": [
                "10 * 12 = 120 (left: 6 120 13)",
                "Possible next steps:",
                "9 - 3 = 6 (left: 6 5 7)",
                "13 - 6 = 7 (left: 6 10 7)",
                "6 + 10 = 16 (left: 16 12 13)",
                "10 * 6 = 60 (left: 12 13 60)",
                "Possible next steps:",
                "12 + 6 = 18 (left: 10 13 18)",
                "13 - 10 = 3 (left: 6 12 3)",
                "10 / 12 = 0.8333333333333334 (left: 6 0.8333333333333334 13)"
            ],
            "values": [
                2.001,
                0.002,
                3.0,
                3.0,
                2.001,
                2.001,
                0.003,
                2.001,
                2.001,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.7",
                "5 <- 1.7",
                "6 <- INIT",
                "7 <- 1.3",
                "8 <- INIT",
                "9 <- 1.4"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                "12 + 6 = 18 (left: 10 13 18)",
                "12 + 6 = 18 (left: 10 13 18)",
                "",
                "13 - 6 = 7 (left: 6 10 7)",
                "",
                "6 + 10 = 16 (left: 16 12 13)"
            ]
        },
        "step_2": {
            "steps": [
                "12 - 6 = 6 (left: 6 10 13)",
                "12 * 13 = 156 (left: 6 10 156)",
                "5 - 3 = 2 (left: 2 7 10)",
                "12 - 6 = 6 (left: 6 10 13)",
                "12 + 6 = 18 (left: 10 13 18)\n18 - 10 = 8 (left: 8 13)",
                "12 + 6 = 18 (left: 10 13 18)\n18 - 10 = 8 (left: 8 18)",
                "9 - 7 = 2 (left: 3 5 2)",
                "13 - 6 = 7 (left: 6 10 7)\n6 * 10 = 60 (left: 7 60)",
                "6 * 10 = 60 (left: 12 13 60)",
                "6 + 10 = 16 (left: 16 12 13)\n12 - 13 = -1 (left: -1 13)"
            ],
            "values": [
                2.001,
                21.001,
                40.001,
                2.001,
                0.003,
                0.003,
                2.0,
                0.003,
                1.002,
                0.002
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 2.1",
                "2 <- 2.1",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 2.3",
                "6 <- 1.3",
                "7 <- 1.7",
                "8 <- 2.2",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "5 - 3 = 2 (left: 2 7 10)",
                "12 * 13 = 156 (left: 6 10 156)",
                "12 * 13 = 156 (left: 6 10 156)",
                "",
                "",
                "12 - 6 = 6 (left: 6 10 13)",
                "13 - 6 = 7 (left: 6 10 7)",
                "12 + 6 = 18 (left: 10 13 18)",
                "5 - 3 = 2 (left: 2 7 10)",
                "5 - 3 = 2 (left: 2 7 10)"
            ]
        },
        "step_3": {
            "steps": [
                "5 - 3 = 2 (left: 2 7 10)\n10 / 2 = 5 (left: 7 5)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 6 = 150 (left: 10 150)",
                "12 * 13 = 156 (left: 6 10 156)",
                "6 + 10 = 16 (left: 12 16 13)",
                "12 - 6 = 6 (left: 6 10 13)\n4 + 9 = 13 (left: 13 15)",
                "13 - 6 = 7 (left: 6 10 7)\n6 + 10 = 16 (left: 7 16)",
                "12 + 6 = 18 (left: 10 13 18)\n23 + 5 = 28 (left: 10  7)",
                "5 - 3 = 2 (left: 2 7 10)\n2 + 7 = 9 (left: 9 10)",
                "5 - 3 = 2 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)"
            ],
            "values": [
                21.0,
                20.001,
                20.001,
                1.002,
                1.002,
                0.003,
                0.001,
                1.001,
                0.002,
                20.001
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 2.2",
                "2 <- 2.6",
                "3 <- 3.9",
                "4 <- 1.5",
                "5 <- 1.9",
                "6 <- 3.1",
                "7 <- 3.0",
                "8 <- 2.1",
                "9 <- 2.1"
            ],
            "resampled_steps": [
                "5 - 3 = 2 (left: 2 7 10)",
                "5 - 3 = 2 (left: 2 7 10)",
                "9 - 7 = 2 (left: 3 5 2)",
                "5 - 3 = 2 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)",
                "10 * 6 = 60 (left: 12 13 60)",
                "10 / 12 = 0.8333333333333334 (left: 6 0.8333333333333334 13)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)",
                "5 - 3 = 2 (left: 2 7 10)\n10 / 2 = 5 (left: 7 5)",
                "12 * 13 = 156 (left: 6 10 156)",
                "12 * 13 = 156 (left: 6 10 156)"
            ]
        },
        "step_4": {
            "steps": [
                "5 - 3 = 2 (left: 2 7 10)\n7 - 2 = 5 (left: 5 10)",
                "5 - 3 = 2 (left: 2 7 10)\n10 - 2 = 8 (left: 2 7 8)",
                "9 - 7 = 2 (left: 3 5 2)\n5 * 3 = 15 (left: 15 2)",
                "5 - 3 = 2 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)",
                "10 / 12 = 0.8333333333333334 (left: 6 0.8333333333333334 13)\n13 - 6 = 7 (left: 6 7 13)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)\n146 - 6 = 140 (left: 140)",
                "5 - 3 = 2 (left: 2 7 10)\n10 / 2 = 5 (left: 7 5)\n5 - 7 = -2 (left: -2)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)",
                "12 * 13 = 156 (left: 6 10 156)\nInput: 18 9 3"
            ],
            "values": [
                1.002,
                3.0,
                0.003,
                0.003,
                40.001,
                1.002,
                0.003,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 3.1",
                "1 <- 1.3",
                "2 <- 3.9",
                "3 <- 3.1",
                "4 <- INIT",
                "5 <- 3.0",
                "6 <- 3.9",
                "7 <- 4.4",
                "8 <- 3.0",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)",
                "13 - 6 = 7 (left: 6 10 7)",
                "5 - 3 = 2 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)",
                "",
                "5 - 3 = 2 (left: 2 7 10)\n10 / 2 = 5 (left: 7 5)",
                "5 - 3 = 2 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)",
                "5 - 3 = 2 (left: 2 7 10)\n10 / 2 = 5 (left: 7 5)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)"
            ]
        },
        "step_5": {
            "steps": [
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)\n146 - 6 = 140 (left: 6 140)",
                "13 - 6 = 7 (left: 6 10 7)\nPossible next steps:",
                "5 - 3 = 2 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)\n9 * 10 = 90 (left: 90)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)\n6 * 146 = 876 (left: 146 876)",
                "12 + 13 = 25 (left: 6 10 25)",
                "5 - 3 = 2 (left: 2 7 10)\n10 / 2 = 5 (left: 7 5)\n7 - 5 = 2 (left: 2)",
                "5 - 3 = 2 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)\n10 - 9 = 1 (left: 1)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)\n5 + 2 = 7 (left: 10 7)",
                "5 - 3 = 2 (left: 2 7 10)\n10 / 2 = 5 (left: 7 5)\n7 * 5 = 35 (left: 35)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)\n25 + 60 = 85 (left: 85)"
            ],
            "values": [
                1.0,
                0.003,
                0.003,
                0.003,
                1.002,
                0.001,
                0.002,
                0.003,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 3.9",
                "2 <- 3.9",
                "3 <- 4.4",
                "4 <- 4.4",
                "5 <- 2.1",
                "6 <- 3.0",
                "7 <- 4.4",
                "8 <- INIT",
                "9 <- 3.9"
            ],
            "resampled_steps": [
                "12 * 13 = 156 (left: 6 10 156)\n156 - 6 = 150 (left: 10 150)",
                "5 - 3 = 2 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)",
                "5 - 3 = 2 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)",
                "12 * 13 = 156 (left: 6 10 156)",
                "5 - 3 = 2 (left: 2 7 10)\n10 / 2 = 5 (left: 7 5)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)",
                "",
                "5 - 3 = 2 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)"
            ]
        },
        "step_6": {
            "steps": [
                "12 * 13 = 156 (left: 6 10 156)\n156 - 6 = 150 (left: 10 150)\n10 * 150 = 1500 (left: 150)",
                "5 - 3 = 2 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)\n9 / 10 = 0.9 (left: 0.9)",
                "5 - 3 = 2 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)\n9 / 10 = 0.9 (left: 0.9)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)\n25 + 60 = 85 (left: 85)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)\n25 + 60 = 85 (left: 85)",
                "12 * 13 = 156 (left: 6 10 156)\n21 / 4 = 5.25 (left: 5.25 9 21)",
                "5 - 3 = 2 (left: 2 7 10)\n10 / 2 = 5 (left: 7 5)\n7 * 5 = 35 (left: 35)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)\n25 / 60 = 0.4166666666666667 (left: 0.4166666666666667)",
                "13 - 6 = 7 (left: 6 10 7)",
                "5 - 3 = 2 (left: 2 7 10)\n7 + 2 = 9 (left: 9 10)\n9 + 10 = 19 (left: 19)"
            ],
            "values": [
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                3.0,
                0.002,
                0.002,
                3.0,
                0.003
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- INIT",
                "2 <- 4.4",
                "3 <- 2.2",
                "4 <- 4.4",
                "5 <- 2.2",
                "6 <- 2.1",
                "7 <- 2.2",
                "8 <- 4.4",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "12 * 13 = 156 (left: 6 10 156)\n156 - 6 = 150 (left: 10 150)",
                "",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)",
                "5 - 3 = 2 (left: 2 7 10)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)",
                "5 - 3 = 2 (left: 2 7 10)",
                "12 * 13 = 156 (left: 6 10 156)",
                "5 - 3 = 2 (left: 2 7 10)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)",
                "5 - 3 = 2 (left: 2 7 10)"
            ]
        },
        "step_7": {
            "steps": [
                "12 * 13 = 156 (left: 6 10 156)\n156 - 6 = 150 (left: 10 150)\n10 + 150 = 160 (left: 150)",
                "12 + 6 = 18 (left: 10 18 13)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)\n25 - 60 = -35 (left: -35)",
                "5 - 3 = 2 (left: 2 7 10)\n3.5 + 5 = 8.5 (left: 8.5 10)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)\n25 - 60 = -35 (left: -35)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)",
                "5 - 3 = 2 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)\n25 - 60 = -35 (left: -35)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)"
            ],
            "values": [
                0.003,
                1.002,
                0.002,
                2.0,
                0.001,
                41.0,
                40.001,
                60.0,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 7.5",
                "1 <- 7.6",
                "2 <- 7.5",
                "3 <- 4.4",
                "4 <- 7.6",
                "5 <- 3.2",
                "6 <- 7.9",
                "7 <- 7.9",
                "8 <- 7.7",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 6 = 150 (left: 10 150)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "5 - 3 = 2 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)"
            ]
        },
        "step_8": {
            "steps": [
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\nInput: 4 1.4 24 140",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)\n146 / 6 = 24 (left: 6 24)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)\n60 / 25 = 2.4 (left: 2.4)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)\n6 * 2 = 12 (left: 12 146)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 6 = 150 (left: 10 150)\n10 - 150 = -140 (left: -140)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)",
                "5 - 3 = 2 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)\n25 * 60 = 1500 (left: 1500)"
            ],
            "values": [
                0.003,
                1.002,
                20.0,
                0.001,
                0.003,
                0.003,
                0.002,
                0.001,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 1.8",
                "2 <- 7.6",
                "3 <- 7.7",
                "4 <- 7.9",
                "5 <- 7.5",
                "6 <- 8.2",
                "7 <- 3.2",
                "8 <- 7.9",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)",
                "13 - 10 = 3 (left: 6 12 3)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)",
                "5 - 3 = 2 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 6 = 150 (left: 10 150)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)"
            ]
        },
        "step_9": {
            "steps": [
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)\n25 / 60 = 0.4166666666666667 (left: 0.4166666666666667)",
                "13 - 10 = 3 (left: 6 12 3)\n3 * 6 = 18 (left: 12 18)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)\n27 - 3 = 24 (left: 9 24)",
                "5 - 3 = 2 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 / 10 = 1.4 (left: 1.4)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 - 10 = 4 (left: 4)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (5 - 3) * (2 * 7 + 10) = 24",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 6 = 150 (left: 10 150)\n10 * 150 = 1500 (left: 1500)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)\n25 - 60 = -35 (left: -35)"
            ],
            "values": [
                0.0,
                0.003,
                0.003,
                0.0,
                0.0,
                0.002,
                0.003,
                0.003,
                60.0,
                0.002
            ],
            "resampled": [
                "0 <- 9.8",
                "1 <- 7.7",
                "2 <- 8.2",
                "3 <- 7.6",
                "4 <- 7.7",
                "5 <- 7.7",
                "6 <- 7.6",
                "7 <- 2.0",
                "8 <- 9.8",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "5 - 3 = 2 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)",
                "5 - 3 = 2 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "5 - 3 = 2 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)",
                "12 - 6 = 6 (left: 6 10 13)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)"
            ]
        },
        "step_10": {
            "steps": [
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((6 - 2) * 7) + 10 = 24",
                "5 - 3 = 2 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 / 10 = 1.4 (left: 1.4)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: (5 - 3) * (2 * 7) = 24",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)\n146 / 2 = 73 (left: 6 73)",
                "5 - 3 = 2 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140)",
                "5 - 3 = 2 (left: 2 7 10)\n7 * 2 = 14 (left: 14 10)\n14 * 10 = 140 (left: 140)",
                "12 * 13 = 156 (left: 6 10 156)\n156 - 10 = 146 (left: 6 146)\n3 + 9 = 12 (left: 12 27)",
                "12 - 6 = 6 (left: 6 10 13)\n10 / 6 = 1.66666666667 (left: 1.66666666667 13)",
                "5 - 3 = 2 (left: 2 7 10)\n2 * 7 = 14 (left: 14 10)\n14 + 10 = 24 (left: 24)\nAnswer: ((5 - 3) * 7) + 10 = 24",
                "10 * 6 = 60 (left: 12 13 60)\n12 + 13 = 25 (left: 25 60)\n25 * 60 = 1500 (left: 1500)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                1.001,
                0.002,
                0.003,
                0.003,
                2.0,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.3155295000000002
    },
    "945": {
        "input": "1 3 9 9",
        "step_1": {
            "steps": [
                "1 + 3 = 4 (left: 4 9 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "1 + 3 = 4 (left: 4 9 9)",
                "1 + 3 = 4 (left: 4 9 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "9 / 3 = 3 (left: 1 3 9)",
                "1 + 3 = 4 (left: 4 9 9)",
                "9 / 3 = 3 (left: 1 3 9)",
                "9 - 3 = 6 (left: 1 6 9)"
            ],
            "values": [
                2.001,
                3.0,
                2.001,
                2.001,
                2.001,
                41.0,
                0.003,
                1.002,
                0.003,
                2.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.5",
                "2 <- INIT",
                "3 <- 1.3",
                "4 <- 1.5",
                "5 <- INIT",
                "6 <- 1.0",
                "7 <- 1.5",
                "8 <- 1.5",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "3 * 9 = 27 (left: 1 27 9)",
                "",
                "1 + 3 = 4 (left: 4 9 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "",
                "1 + 3 = 4 (left: 4 9 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "3 * 9 = 27 (left: 1 27 9)",
                "3 * 9 = 27 (left: 1 27 9)\n3 + 6 = 9 (left: 9 12)",
                "1 + 3 = 4 (left: 4 9 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 5 9)",
                "3 * 9 = 27 (left: 1 27 9)\nPossible next steps:",
                "9 - 1 = 8 (left: 8 9 9)",
                "1 + 3 = 4 (left: 4 9 9)\n3 + 6 = 9 (left: 1 7 9)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 27 9)",
                "3 * 9 = 27 (left: 1 27 9)\n27 - 1 = 26 (left: 26 9)",
                "9 / 3 = 3 (left: 1 3 9)"
            ],
            "values": [
                40.001,
                1.002,
                1.002,
                1.002,
                0.003,
                3.0,
                0.002,
                2.0,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- 1.1",
                "1 <- 1.5",
                "2 <- INIT",
                "3 <- 1.5",
                "4 <- INIT",
                "5 <- 2.0",
                "6 <- 1.5",
                "7 <- 1.1",
                "8 <- 2.0",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "3 * 9 = 27 (left: 1 27 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "",
                "3 * 9 = 27 (left: 1 27 9)",
                "",
                "3 * 9 = 27 (left: 1 27 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "3 * 9 = 27 (left: 1 27 9)"
            ]
        },
        "step_3": {
            "steps": [
                "3 * 9 = 27 (left: 1 27 9)\n9 * 1 = 9 (left: 9 9)",
                "3 * 9 = 27 (left: 1 27 9)\n1 + 27 = 28 (left: 9 28)",
                "9 / 1 = 9 (left: 9 9 9)",
                "3 * 9 = 27 (left: 1 27 9)\n27 - 9 = 18 (left: 1 18)",
                "1 * 3 = 3 (left: 3 9 9)",
                "3 * 9 = 27 (left: 1 27 9)\n27 / 1 = 27 (left: 27)",
                "3 * 9 = 27 (left: 1 27 9)\n2 * 5 = 10 (left: 10)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)",
                "3 * 9 = 27 (left: 1 27 9)\n27 - 1 = 26 (left: 26 9)",
                "3 * 9 = 27 (left: 1 27 9)\n27 / 9 = 3 (left: 1 3 9)"
            ],
            "values": [
                0.003,
                1.001,
                2.001,
                0.002,
                0.003,
                0.003,
                0.001,
                40.001,
                0.003,
                1.002
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.0",
                "2 <- 2.0",
                "3 <- 1.5",
                "4 <- 1.5",
                "5 <- 1.5",
                "6 <- 1.3",
                "7 <- 3.7",
                "8 <- 1.5",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "3 * 9 = 27 (left: 1 27 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "1 + 3 = 4 (left: 4 9 9)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)",
                "3 * 9 = 27 (left: 1 27 9)",
                ""
            ]
        },
        "step_4": {
            "steps": [
                "9 - 1 = 8 (left: 3 8 9)",
                "3 * 9 = 27 (left: 1 27 9)\n1 + 27 = 28 (left: 9 28)",
                "3 * 9 = 27 (left: 1 27 9)\n9 * 1 = 9 (left: 9)",
                "3 * 9 = 27 (left: 1 27 9)\n5 - 3 = 2 (left: 2 20)",
                "3 * 9 = 27 (left: 1 27 9)\n1 + 27 = 28 (left: 9 28)",
                "3 * 9 = 27 (left: 1 27 9)\n27 - 9 = 18 (left: 1 18)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)\n10 + 15 = 25 (left: 5 25)",
                "3 * 9 = 27 (left: 1 27 9)\n7 - 5 = 2 (left: 3 2)",
                "9 / 1 = 9 (left: 3 9 9)"
            ],
            "values": [
                60.0,
                0.003,
                0.002,
                0.003,
                0.003,
                0.001,
                22.0,
                0.002,
                1.001,
                0.003
            ],
            "resampled": [
                "0 <- 4.0",
                "1 <- INIT",
                "2 <- 2.0",
                "3 <- 1.9",
                "4 <- 4.6",
                "5 <- 4.0",
                "6 <- 3.7",
                "7 <- 3.9",
                "8 <- 2.0",
                "9 <- 4.6"
            ],
            "resampled_steps": [
                "9 - 1 = 8 (left: 3 8 9)",
                "",
                "3 * 9 = 27 (left: 1 27 9)",
                "9 - 3 = 6 (left: 1 6 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)",
                "9 - 1 = 8 (left: 3 8 9)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)",
                "3 * 9 = 27 (left: 1 27 9)\n27 / 9 = 3 (left: 1 3 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)"
            ]
        },
        "step_5": {
            "steps": [
                "9 - 1 = 8 (left: 3 8 9)\n20 - 6 = 14 (left: 4 10 14)",
                "9 / 3 = 3 (left: 1 9 9)",
                "3 * 9 = 27 (left: 1 27 9)\n27 - 1 = 26 (left: 26 9)",
                "9 - 3 = 6 (left: 1 6 9)\n1 * 4 = 4 (left: 3 7 4)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n9 / 5 = 1.8 (left: 1.8 9)",
                "9 - 1 = 8 (left: 3 8 9)\n8 - 3 = 5 (left: 5 8 9)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)\n9 * 27 = 243 (left: 243)",
                "3 * 9 = 27 (left: 1 27 9)\n27 / 9 = 3 (left: 1 3 9)\n1 + 3 = 4 (left: 4 9)",
                "3 * 9 = 27 (left: 1 27 9)\n9 + 1 = 10 (left: 10)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n9 - 5 = 4 (left: 4 9)"
            ],
            "values": [
                1.002,
                0.003,
                0.003,
                3.0,
                0.003,
                2.0,
                0.003,
                0.001,
                0.002,
                2.001
            ],
            "resampled": [
                "0 <- 4.0",
                "1 <- 4.0",
                "2 <- 1.5",
                "3 <- 2.0",
                "4 <- 4.0",
                "5 <- 4.0",
                "6 <- 4.0",
                "7 <- 3.7",
                "8 <- 2.0",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "9 - 1 = 8 (left: 3 8 9)",
                "9 - 1 = 8 (left: 3 8 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "9 - 1 = 8 (left: 3 8 9)",
                "9 - 1 = 8 (left: 3 8 9)",
                "9 - 1 = 8 (left: 3 8 9)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)",
                "3 * 9 = 27 (left: 1 27 9)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)"
            ]
        },
        "step_6": {
            "steps": [
                "9 - 1 = 8 (left: 3 8 9)\n10 + 15 = 25 (left: 5 25)",
                "9 - 1 = 8 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8 9)",
                "3 * 9 = 27 (left: 1 27 9)\nPossible next steps:",
                "3 * 9 = 27 (left: 1 27 9)\n15 / 3 = 5 (left: 5 10)",
                "9 - 1 = 8 (left: 3 8 9)\n3 + 8 = 11 (left: 8 9 11)",
                "9 - 1 = 8 (left: 3 8 9)\n9 - 8 = 1 (left: 1 8 9)",
                "9 - 1 = 8 (left: 3 8 9)\n5 * 6 = 30 (left: 7 30)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)\n27 - 9 = 18 (left: 18)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 27 9)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)\n64 - 16 = 48 (left: 4 48)"
            ],
            "values": [
                0.003,
                3.0,
                0.003,
                0.001,
                3.0,
                1.002,
                0.003,
                0.003,
                0.001,
                0.003
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 4.0",
                "2 <- 4.0",
                "3 <- 2.3",
                "4 <- 6.1",
                "5 <- 4.0",
                "6 <- 4.6",
                "7 <- 4.0",
                "8 <- 5.3",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "3 * 9 = 27 (left: 1 27 9)",
                "9 - 1 = 8 (left: 3 8 9)",
                "9 - 1 = 8 (left: 3 8 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 5 9)",
                "9 - 1 = 8 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8 9)",
                "9 - 1 = 8 (left: 3 8 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)",
                "9 - 1 = 8 (left: 3 8 9)",
                "9 - 3 = 6 (left: 1 6 9)\n1 * 4 = 4 (left: 3 7 4)",
                ""
            ]
        },
        "step_7": {
            "steps": [
                "3 * 9 = 27 (left: 1 27 9)\n9 - 1 = 8 (left: 8 9)",
                "9 - 1 = 8 (left: 3 8 9)\n3 * 8 = 24 (left: 8 9 24)",
                "9 - 1 = 8 (left: 3 8 9)\n20 / 4 = 5 (left: 5 10 20)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 5 9)\n7 - 1 = 6 (left: 6 3.5 7)",
                "9 - 1 = 8 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8 9)\n6 + 8 = 14 (left: 14 9)",
                "9 - 1 = 8 (left: 3 8 9)\n5 + 7 = 12 (left: 3 12 2)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n9 + 9 = 18 (left: 9 9 18)",
                "9 - 1 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)",
                "9 - 3 = 6 (left: 1 6 9)\n1 * 4 = 4 (left: 3 7 4)\n7 - 3 = 4 (left: 4 4)",
                "9 - 3 = 6 (left: 1 6 9)"
            ],
            "values": [
                0.003,
                2.001,
                2.001,
                22.0,
                0.002,
                2.001,
                20.002,
                60.0,
                1.001,
                2.0
            ],
            "resampled": [
                "0 <- 7.7",
                "1 <- 4.6",
                "2 <- 2.0",
                "3 <- 4.6",
                "4 <- 3.7",
                "5 <- 2.0",
                "6 <- 6.1",
                "7 <- 7.6",
                "8 <- 7.7",
                "9 <- 7.7"
            ],
            "resampled_steps": [
                "9 - 1 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)",
                "3 * 9 = 27 (left: 1 27 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)",
                "3 * 9 = 27 (left: 1 27 9)",
                "9 - 1 = 8 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n9 + 9 = 18 (left: 9 9 18)",
                "9 - 1 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)",
                "9 - 1 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)"
            ]
        },
        "step_8": {
            "steps": [
                "9 - 1 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n8 - 3 = 5 (left: 5)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n12 - 6 = 6 (left: 3 6 6)",
                "3 * 9 = 27 (left: 1 27 9)\nInput: 4 10 5",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n3 + 6 = 9 (left: 9 12)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)\n4 + 2 = 6 (left: 6 6)",
                "3 * 9 = 27 (left: 1 27 9)\n1 + 27 = 28 (left: 9 28)",
                "9 - 1 = 8 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8 9)\n8 + 6 = 14 (left: 9 14)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n9 + 9 = 18 (left: 9 9 18)\nPossible next steps:",
                "9 - 1 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "9 - 1 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665)"
            ],
            "values": [
                0.003,
                3.0,
                0.003,
                0.002,
                21.001,
                0.003,
                0.002,
                0.003,
                3.0,
                20.0
            ],
            "resampled": [
                "0 <- 4.0",
                "1 <- 4.6",
                "2 <- 7.6",
                "3 <- 8.8",
                "4 <- 8.4",
                "5 <- 3.7",
                "6 <- 7.3",
                "7 <- 7.3",
                "8 <- 8.8",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "9 - 1 = 8 (left: 3 8 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n9 + 9 = 18 (left: 9 9 18)",
                "9 - 1 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)\n4 + 2 = 6 (left: 6 6)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 5 9)\n7 - 1 = 6 (left: 6 3.5 7)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 5 9)\n7 - 1 = 6 (left: 6 3.5 7)",
                "9 - 1 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)"
            ]
        },
        "step_9": {
            "steps": [
                "9 - 1 = 8 (left: 3 8 9)\n7 - 4 = 3 (left: 3 5 10)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n9 - 5 = 4 (left: 4 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n9 + 9 = 18 (left: 9 9 18)\n9 * 9 = 81 (left: 18 81)",
                "9 - 1 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\nPossible next steps:",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)\n4 + 2 = 6 (left: 6 6)\n6 / 6 = 1 (left: 1)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)\n9 + 27 = 36 (left: 36)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 5 9)\n7 - 1 = 6 (left: 6 3.5 7)\n7 / 6 = 1.16666666667 (left: 1.16666666667)",
                "1 + 3 = 4 (left: 4 9 9)\n9 / 4 = 2.25 (left: 2.25 5 9)\n7 - 1 = 6 (left: 6 3.5 7)\n7 - 6 = 1 (left: 1 7)",
                "9 - 1 = 8 (left: 3 8 9)\n9 / 3 = 3 (left: 3 8)\n8 / 3 = 2.67 (left: 2.67 8)\nInput: 5 10",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)\n27 / 3 = 9 (left: 9 27)"
            ],
            "values": [
                1.002,
                20.001,
                40.001,
                0.003,
                0.002,
                20.001,
                0.002,
                0.0,
                0.003,
                60.0
            ],
            "resampled": [
                "0 <- 9.1",
                "1 <- 4.6",
                "2 <- 9.9",
                "3 <- 9.2",
                "4 <- 2.0",
                "5 <- 9.1",
                "6 <- 9.1",
                "7 <- 8.1",
                "8 <- 8.4",
                "9 <- 9.5"
            ],
            "resampled_steps": [
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n9 - 5 = 4 (left: 4 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)\n27 / 3 = 9 (left: 9 27)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n9 + 9 = 18 (left: 9 9 18)\n9 * 9 = 81 (left: 18 81)",
                "3 * 9 = 27 (left: 1 27 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n9 - 5 = 4 (left: 4 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n9 - 5 = 4 (left: 4 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n12 - 6 = 6 (left: 3 6 6)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)\n4 + 2 = 6 (left: 6 6)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)\n9 + 27 = 36 (left: 36)"
            ]
        },
        "step_10": {
            "steps": [
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n9 - 5 = 4 (left: 4 9)\n4 * 9 = 36 (left: 36)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n3 + 6 = 9 (left: 9 10)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)\n27 / 3 = 9 (left: 9 27)\n9 * 27 = 243 (left: 243)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n9 + 9 = 18 (left: 9 9 18)\n9 * 9 = 81 (left: 18 81)\n81 - 18 = 63 (left: 63)",
                "3 * 9 = 27 (left: 1 27 9)\n27 - 1 = 26 (left: 26 9)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n9 - 5 = 4 (left: 4 9)\n7 - 3 = 4 (left: 4 7 10)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n9 - 5 = 4 (left: 4 9)\n9 / 4 = 2.25 (left: 2.25)",
                "1 + 3 = 4 (left: 4 9 9)\n9 - 4 = 5 (left: 5 9 9)\n12 - 6 = 6 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)\n4 + 2 = 6 (left: 6 6)\n6 + 6 = 12 (left: 12)",
                "3 * 9 = 27 (left: 1 27 9)\n1 * 27 = 27 (left: 9 27)\n9 + 27 = 36 (left: 36)\n36 / 2 = 18"
            ],
            "values": [
                40.0,
                1.002,
                0.003,
                0.003,
                0.002,
                1.002,
                0.003,
                21.0,
                0.003,
                0.003
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.37871
    },
    "946": {
        "input": "1 4 4 11",
        "step_1": {
            "steps": [
                "Input: 3 3 6 9",
                "11 - 4 = 7 (left: 1 4 7)",
                "4 - 1 = 3 (left: 3 4 11)",
                "11 - 1 = 10 (left: 4 4 10)",
                "11 / 1 = 11 (left: 4 4 11)",
                "4 - 1 = 3 (left: 3 4 11)",
                "4 + 1 = 5 (left: 5 4 11)",
                "11 / 4 = 2.75 (left: 1 4 2.75)",
                "4 / 1 = 4 (left: 4 4 11)",
                "11 + 1 = 12 (left: 4 4 12)"
            ],
            "values": [
                0.003,
                3.0,
                3.0,
                40.0,
                3.0,
                3.0,
                2.001,
                3.0,
                3.0,
                20.001
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 1.8",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 1.2",
                "5 <- 1.8",
                "6 <- 1.3",
                "7 <- INIT",
                "8 <- 1.9",
                "9 <- 1.3"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 4 4 10)",
                "4 / 1 = 4 (left: 4 4 11)",
                "",
                "",
                "4 - 1 = 3 (left: 3 4 11)",
                "4 / 1 = 4 (left: 4 4 11)",
                "11 - 1 = 10 (left: 4 4 10)",
                "",
                "11 + 1 = 12 (left: 4 4 12)",
                "11 - 1 = 10 (left: 4 4 10)"
            ]
        },
        "step_2": {
            "steps": [
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)",
                "4 / 1 = 4 (left: 4 4 11)\n4 / 4 = 1 (left: 1 11)",
                "11 - 1 = 10 (left: 4 4 10)",
                "11 - 4 = 7 (left: 4 4 7)",
                "4 - 1 = 3 (left: 3 4 11)\n5 + 5 = 10 (left: 10 25)",
                "4 / 1 = 4 (left: 4 4 11)\nInput: 2 3 5 7",
                "11 - 1 = 10 (left: 4 4 10)\n20 + 5 = 25 (left: 5 25)",
                "4 / 1 = 4 (left: 4 4 11)",
                "11 + 1 = 12 (left: 4 4 12)\n12 / 4 = 3 (left: 3 4)",
                "11 - 1 = 10 (left: 4 4 10)\n10 + 4 = 14 (left: 4 14)"
            ],
            "values": [
                20.0,
                20.001,
                40.0,
                3.0,
                0.003,
                0.003,
                20.002,
                0.003,
                21.001,
                0.003
            ],
            "resampled": [
                "0 <- 2.2",
                "1 <- 1.4",
                "2 <- INIT",
                "3 <- 2.8",
                "4 <- 2.1",
                "5 <- 2.2",
                "6 <- 2.2",
                "7 <- 1.9",
                "8 <- 2.1",
                "9 <- 1.3"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 4 4 10)",
                "11 / 1 = 11 (left: 4 4 11)",
                "",
                "11 + 1 = 12 (left: 4 4 12)\n12 / 4 = 3 (left: 3 4)",
                "4 / 1 = 4 (left: 4 4 11)\n4 / 4 = 1 (left: 1 11)",
                "11 - 1 = 10 (left: 4 4 10)",
                "11 - 1 = 10 (left: 4 4 10)",
                "11 + 1 = 12 (left: 4 4 12)",
                "4 / 1 = 4 (left: 4 4 11)\n4 / 4 = 1 (left: 1 11)",
                "11 - 1 = 10 (left: 4 4 10)"
            ]
        },
        "step_3": {
            "steps": [
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)",
                "11 / 1 = 11 (left: 4 4 11)\nPossible next steps:",
                "4 - 1 = 3 (left: 3 4 11)",
                "11 + 1 = 12 (left: 4 4 12)\n12 / 4 = 3 (left: 3 4)\n3 + 4 = 7 (left: 7)",
                "4 / 1 = 4 (left: 4 4 11)\n4 / 4 = 1 (left: 1 11)\n11 * 1 = 11 (left: 11)",
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)",
                "11 - 1 = 10 (left: 4 4 10)\n10 * 4 = 40 (left: 40)",
                "11 + 1 = 12 (left: 4 4 12)\n12 / 4 = 3 (left: 3 4)",
                "4 / 1 = 4 (left: 4 4 11)\n4 / 4 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)",
                "11 - 1 = 10 (left: 4 4 10)\n9 + 3 = 12 (left: 12 18)"
            ],
            "values": [
                0.001,
                0.003,
                22.0,
                0.0,
                0.001,
                1.001,
                0.003,
                21.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.2",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- 2.6",
                "5 <- 2.1",
                "6 <- INIT",
                "7 <- 1.3",
                "8 <- 2.6",
                "9 <- 3.7"
            ],
            "resampled_steps": [
                "",
                "11 - 1 = 10 (left: 4 4 10)",
                "",
                "",
                "11 - 1 = 10 (left: 4 4 10)\n20 + 5 = 25 (left: 5 25)",
                "4 / 1 = 4 (left: 4 4 11)\n4 / 4 = 1 (left: 1 11)",
                "",
                "11 - 1 = 10 (left: 4 4 10)",
                "11 - 1 = 10 (left: 4 4 10)\n20 + 5 = 25 (left: 5 25)",
                "11 + 1 = 12 (left: 4 4 12)\n12 / 4 = 3 (left: 3 4)"
            ]
        },
        "step_4": {
            "steps": [
                "11 - 4 = 7 (left: 4 7 11)",
                "11 - 1 = 10 (left: 4 4 10)\n9 - 3 = 6 (left: 6 5 7)",
                "1 + 4 = 5 (left: 4 5 11)",
                "4 * 1 = 4 (left: 4 11 4)",
                "11 - 1 = 10 (left: 4 4 10)\n20 + 5 = 25 (left: 5 25)\n27 + 3 = 30 (left: 9 30)",
                "4 / 1 = 4 (left: 4 4 11)\n4 / 4 = 1 (left: 1 11)\n1 + 11 = 12 (left: 12)",
                "4 - 1 = 3 (left: 3 4 11)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "11 - 1 = 10 (left: 4 4 10)\n20 + 5 = 25 (left: 5 25)\n5 + 25 = 30 (left: 30)",
                "11 + 1 = 12 (left: 4 4 12)\n12 / 4 = 3 (left: 3 4)\n3 + 4 = 7 (left: 7)"
            ],
            "values": [
                2.001,
                3.0,
                0.003,
                2.001,
                0.002,
                0.003,
                3.0,
                40.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 4.7",
                "1 <- 4.7",
                "2 <- 2.2",
                "3 <- 4.7",
                "4 <- 1.2",
                "5 <- 2.8",
                "6 <- 2.0",
                "7 <- 2.1",
                "8 <- 2.2",
                "9 <- 2.0"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "11 - 1 = 10 (left: 4 4 10)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "4 - 1 = 3 (left: 3 4 11)",
                "11 + 1 = 12 (left: 4 4 12)\n12 / 4 = 3 (left: 3 4)",
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)",
                "4 / 1 = 4 (left: 4 4 11)\n4 / 4 = 1 (left: 1 11)",
                "11 - 1 = 10 (left: 4 4 10)",
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)"
            ]
        },
        "step_5": {
            "steps": [
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "11 - 1 = 10 (left: 4 4 10)\nPossible next steps:",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n5 + 10 = 15 (left: 15)",
                "4 - 1 = 3 (left: 3 4 11)\n3 * 4 = 12 (left: 12 11)",
                "11 + 1 = 12 (left: 4 4 12)\n12 / 4 = 3 (left: 3 4)\n5 + 9 = 14 (left: 14)",
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)\nInput: 18 2 80 1.25",
                "4 / 1 = 4 (left: 4 4 11)\n4 / 4 = 1 (left: 1 11)\n11 / 1 = 11 (left: 11)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)\n8 / 10 = 0.8 (left: 0.8)"
            ],
            "values": [
                0.002,
                0.001,
                0.003,
                0.0,
                0.003,
                0.001,
                0.003,
                0.001,
                60.0,
                0.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 3.2",
                "2 <- 2.6",
                "3 <- 3.7",
                "4 <- 1.3",
                "5 <- 3.2",
                "6 <- 2.0",
                "7 <- 2.2",
                "8 <- 1.7",
                "9 <- 4.0"
            ],
            "resampled_steps": [
                "",
                "4 - 1 = 3 (left: 3 4 11)",
                "11 - 1 = 10 (left: 4 4 10)\n20 + 5 = 25 (left: 5 25)",
                "11 + 1 = 12 (left: 4 4 12)\n12 / 4 = 3 (left: 3 4)",
                "11 - 1 = 10 (left: 4 4 10)",
                "4 - 1 = 3 (left: 3 4 11)",
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)",
                "11 - 1 = 10 (left: 4 4 10)",
                "11 / 4 = 2.75 (left: 1 4 2.75)",
                "11 - 4 = 7 (left: 4 7 11)"
            ]
        },
        "step_6": {
            "steps": [
                "11 / 1 = 11 (left: 4 4 11)",
                "4 - 1 = 3 (left: 3 4 11)\n11 + 3 = 14 (left: 4 14)",
                "11 - 1 = 10 (left: 4 4 10)\n20 + 5 = 25 (left: 5 25)\n12 * 6 = 72 (left: 4 72)",
                "11 + 1 = 12 (left: 4 4 12)\n12 / 4 = 3 (left: 3 4)\n3 + 4 = 7 (left: 7)",
                "11 - 1 = 10 (left: 4 4 10)\n9 / 3 = 3 (left: 3 3 12)",
                "4 - 1 = 3 (left: 3 4 11)\n5 * 6 = 30 (left: 30 7)",
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)\n8 - 10 = -2 (left: -2)",
                "11 - 1 = 10 (left: 4 4 10)\nInput: 3 9 27",
                "11 / 4 = 2.75 (left: 1 4 2.75)\n7 / 5 = 1.4 (left: 3 1.4)",
                "11 - 4 = 7 (left: 4 7 11)\n9 - 3 = 6 (left: 6 9 15)"
            ],
            "values": [
                2.001,
                0.002,
                0.003,
                0.001,
                2.001,
                2.001,
                0.002,
                0.003,
                1.001,
                0.003
            ],
            "resampled": [
                "0 <- 1.3",
                "1 <- 3.2",
                "2 <- 5.8",
                "3 <- 5.8",
                "4 <- 2.2",
                "5 <- 2.0",
                "6 <- 2.0",
                "7 <- 3.2",
                "8 <- 6.0",
                "9 <- 2.2"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 4 4 10)",
                "4 - 1 = 3 (left: 3 4 11)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "11 - 1 = 10 (left: 4 4 10)",
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)",
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)",
                "4 - 1 = 3 (left: 3 4 11)",
                "11 / 1 = 11 (left: 4 4 11)",
                "11 - 1 = 10 (left: 4 4 10)"
            ]
        },
        "step_7": {
            "steps": [
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "4 - 1 = 3 (left: 3 4 11)\n4 * 3 = 12 (left: 12 11)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "11 - 1 = 10 (left: 4 4 10)\n4 * 4 = 16 (left: 16 10)",
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)\n10 - 8 = 2 (left: 2)",
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)\n10 / 8 = 1.25 (left: 1.25)",
                "4 - 1 = 3 (left: 3 4 11)\n6 * 7 = 42 (left: 5 42 8)",
                "11 / 1 = 11 (left: 4 4 11)\n11 / 4 = 2.75 (left: 2.75 4)",
                "11 - 1 = 10 (left: 4 4 10)\nPossible next steps:"
            ],
            "values": [
                60.0,
                0.003,
                40.0,
                60.0,
                0.003,
                0.002,
                0.003,
                3.0,
                2.0,
                0.003
            ],
            "resampled": [
                "0 <- 7.0",
                "1 <- 3.2",
                "2 <- 7.2",
                "3 <- 7.0",
                "4 <- 7.2",
                "5 <- 7.3",
                "6 <- 7.2",
                "7 <- 2.0",
                "8 <- 7.3",
                "9 <- 4.7"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "4 - 1 = 3 (left: 3 4 11)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)"
            ]
        },
        "step_8": {
            "steps": [
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "4 - 1 = 3 (left: 3 4 11)\n9 - 6 = 3 (left: 5 3)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (11 - 1) * 4 = 24",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - 1) * (4 - 4) = 24",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - 1) * (4 - 4) = 24",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (11 - 1) + 4 = 24",
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)\n10 - 8 = 2 (left: 2)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - 1) - (4 - 4) = 24",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)"
            ],
            "values": [
                40.0,
                2.001,
                60.0,
                0.002,
                0.003,
                0.003,
                60.0,
                0.001,
                40.001,
                0.0
            ],
            "resampled": [
                "0 <- 8.2",
                "1 <- 1.1",
                "2 <- 7.3",
                "3 <- 3.2",
                "4 <- 1.3",
                "5 <- 8.6",
                "6 <- 7.3",
                "7 <- 8.8",
                "8 <- 2.2",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (11 - 1) * 4 = 24",
                "11 - 4 = 7 (left: 1 4 7)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "4 - 1 = 3 (left: 3 4 11)",
                "11 - 1 = 10 (left: 4 4 10)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (11 - 1) + 4 = 24",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - 1) - (4 - 4) = 24",
                "11 - 1 = 10 (left: 4 4 10)",
                "11 + 1 = 12 (left: 4 4 12)\n12 / 4 = 3 (left: 3 4)"
            ]
        },
        "step_9": {
            "steps": [
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (11 - 1) * 4 = 24\nInput: 3 3 4 5\nSteps:\n3 + 5 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 12 8)\n12 - 8 = 4 (left: 4)\nAnswer: (3 + 5) * (3 * 4) = 24",
                "11 - 4 = 7 (left: 1 4 7)\nPossible next steps:",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (11 - 1) * 4 = 24",
                "4 - 1 = 3 (left: 3 4 11)\n11 / 4 = 2.75 (left: 3 2.75 11)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (11 - 1) + 4 = 24\nInput: 3 4 5 6\nSteps:\n5 * 4 = 20 (left: 3 6 20)\n6 - 3 = 3 (left: 3 20)\n3 * 20 = 60 (left: 60)\n60 / 3 = 20 (left: 20)\nAnswer: ((3 * 5) + 6) * 4 = 24",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - 1) * (4 * 4) = 24",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - 1) - (4 - 4) = 24\nInput: 3 3 8 9\nSteps:\n3 + 8 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n27 - 11 = 16 (left: 16)\n16 / 16 = 1 (left: 1)\n1 * 24 = 24\nAnswer: ((3 + 8) * 9) - 11 = 24",
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)",
                "11 + 1 = 12 (left: 4 4 12)\n12 / 4 = 3 (left: 3 4)\n3 + 4 = 7 (left: 7)"
            ],
            "values": [
                60.0,
                0.003,
                60.0,
                3.0,
                60.0,
                60.0,
                60.0,
                60.0,
                1.001,
                0.002
            ],
            "resampled": [
                "0 <- 2.1",
                "1 <- 8.0",
                "2 <- 9.8",
                "3 <- 9.2",
                "4 <- 8.6",
                "5 <- 9.7",
                "6 <- 8.0",
                "7 <- 7.0",
                "8 <- 9.4",
                "9 <- 9.4"
            ],
            "resampled_steps": [
                "4 / 1 = 4 (left: 4 4 11)\n4 / 4 = 1 (left: 1 11)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (11 - 1) * 4 = 24",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (11 - 1) + 4 = 24",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - 1) - (4 - 4) = 24\nInput: 3 3 8 9\nSteps:\n3 + 8 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n27 - 11 = 16 (left: 16)\n16 / 16 = 1 (left: 1)\n1 * 24 = 24\nAnswer: ((3 + 8) * 9) - 11 = 24",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)"
            ]
        },
        "step_10": {
            "steps": [
                "4 / 1 = 4 (left: 4 4 11)\n4 / 4 = 1 (left: 1 11)\n11 - 1 = 10 (left: 10) ",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (10 - (11 - 1)) = 24",
                "11 - 1 = 10 (left: 4 4 10)\n4 + 4 = 8 (left: 8 10)\n16 - 8 = 8 (left: 4 8)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (11 - 1) * 4 = 24\nInput: 3 3 5 7\nSteps:\n3 * 7 = 21 (left: 3 5 21)\n21 - 5 = 16 (left: 3 16)\n16 - 3 = 13 (left: 13)\nAnswer: ((3 * 7) - 5) - 3 = 24",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (11 - 1) + 4 = 24\n(11 - 1) * 4 + 4 = 24",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - 1) - (4 - 4) = 24\nInput: 3 3 8 9\nSteps:\n3 + 8 = 11 (left: 3 9 11)\n3 * 9 = 27 (left: 11 27)\n27 - 11 = 16 (left: 16)\n16 / 16 = 1 (left: 1)\n1 * 24 = 24\nAnswer: ((3 + 8) * 9) - 11 = 24\nInput: 2 3 5 9\n\n5 - 3 = 2 (left: 2 9 2)\n2 * 9 = 18 (left: 18 2)\n18 - 2 = 16 (left: 16)\n16 + 8 = 24\nAnswer: ((5 - 3) * 9) + 8 = 24",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - 1) * (4 - 4) = 24",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "11 - 1 = 10 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)"
            ],
            "values": [
                0.002,
                60.0,
                0.003,
                60.0,
                60.0,
                60.0,
                0.003,
                0.002,
                40.0,
                0.002
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.4367324999999997
    },
    "947": {
        "input": "2 3 9 10",
        "step_1": {
            "steps": [
                "2 * 3 = 6 (left: 6 9 10)",
                "2 + 3 = 5 (left: 5 9 10)",
                "10 - 2 = 8 (left: 3 8 10)",
                "10 - 9 = 1 (left: 2 3 1)",
                "2 * 3 = 6 (left: 6 9 10)",
                "2 + 3 = 5 (left: 5 9 10)",
                "2 + 3 = 5 (left: 5 9 10)",
                "9 / 3 = 3 (left: 2 3 10)",
                "9 - 2 = 7 (left: 7 3 10)",
                "2 + 3 = 5 (left: 5 9 10)"
            ],
            "values": [
                3.0,
                2.001,
                60.0,
                3.0,
                3.0,
                41.0,
                41.0,
                41.0,
                0.003,
                41.0
            ],
            "resampled": [
                "0 <- 1.6",
                "1 <- 1.7",
                "2 <- 1.2",
                "3 <- 1.7",
                "4 <- INIT",
                "5 <- 1.9",
                "6 <- 1.5",
                "7 <- INIT",
                "8 <- 1.2",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "2 + 3 = 5 (left: 5 9 10)",
                "9 / 3 = 3 (left: 2 3 10)",
                "10 - 2 = 8 (left: 3 8 10)",
                "9 / 3 = 3 (left: 2 3 10)",
                "",
                "2 + 3 = 5 (left: 5 9 10)",
                "2 + 3 = 5 (left: 5 9 10)",
                "",
                "10 - 2 = 8 (left: 3 8 10)",
                "2 + 3 = 5 (left: 5 9 10)"
            ]
        },
        "step_2": {
            "steps": [
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "9 / 3 = 3 (left: 2 3 10)\n2 + 3 = 5 (left: 5 10)",
                "10 - 2 = 8 (left: 3 8 10)\n8 / 3 = 2.67 (left: 2.67 10)",
                "9 / 3 = 3 (left: 2 3 10)\n3 + 2 = 5 (left: 5 10)",
                "9 / 3 = 3 (left: 2 3 10)",
                "2 + 3 = 5 (left: 5 9 10)\n10 / 4 = 2.5 (left: 2.5 8 10)",
                "2 + 3 = 5 (left: 5 9 10)\n10 / 5 = 2 (left: 2 9)",
                "2 + 3 = 5 (left: 5 9 10)",
                "10 - 2 = 8 (left: 3 8 10)\n9 - 5 = 4 (left: 4 12 15)",
                "2 + 3 = 5 (left: 5 9 10)\n10 - 5 = 5 (left: 5 5)"
            ],
            "values": [
                40.0,
                0.002,
                0.003,
                0.002,
                41.0,
                3.0,
                1.0,
                60.0,
                41.0,
                0.003
            ],
            "resampled": [
                "0 <- 2.4",
                "1 <- 2.7",
                "2 <- 2.0",
                "3 <- 1.6",
                "4 <- 1.7",
                "5 <- 1.2",
                "6 <- 1.6",
                "7 <- 1.4",
                "8 <- 1.9",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 2 3 10)",
                "2 + 3 = 5 (left: 5 9 10)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "2 + 3 = 5 (left: 5 9 10)",
                "9 / 3 = 3 (left: 2 3 10)",
                "10 - 2 = 8 (left: 3 8 10)",
                "2 + 3 = 5 (left: 5 9 10)",
                "2 * 3 = 6 (left: 6 9 10)",
                "2 + 3 = 5 (left: 5 9 10)",
                "10 - 2 = 8 (left: 3 8 10)\n9 - 5 = 4 (left: 4 12 15)"
            ]
        },
        "step_3": {
            "steps": [
                "9 / 3 = 3 (left: 2 3 10)\n2 * 3 = 6 (left: 6 10)",
                "2 + 3 = 5 (left: 5 9 10)\n5 * 10 = 50 (left: 9 50)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n10 - 1.8 = 8.2 (left: 8.2)",
                "2 + 3 = 5 (left: 5 9 10)\n10 / 5 = 2 (left: 9 2)",
                "9 / 3 = 3 (left: 2 3 10)\n2 * 3 = 6 (left: 6 10)",
                "10 - 2 = 8 (left: 3 8 10)\n10 / 3 = 3.33 (left: 3.33 8)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "2 * 3 = 6 (left: 6 9 10)\n9 / 6 = 1.5 (left: 1.5 10)",
                "2 + 3 = 5 (left: 5 9 10)\n10 / 9 = 1.11111 (left: 5 1.11111)",
                "10 - 2 = 8 (left: 3 8 10)\n9 - 5 = 4 (left: 4 12 15)\n12 - 4 = 8 (left: 8 15)"
            ],
            "values": [
                0.003,
                0.001,
                0.0,
                1.001,
                1.002,
                0.003,
                60.0,
                1.002,
                2.0,
                1.001
            ],
            "resampled": [
                "0 <- 2.5",
                "1 <- 2.4",
                "2 <- 1.2",
                "3 <- 2.4",
                "4 <- 2.0",
                "5 <- 2.8",
                "6 <- 1.9",
                "7 <- 2.7",
                "8 <- 2.7",
                "9 <- 2.8"
            ],
            "resampled_steps": [
                "2 + 3 = 5 (left: 5 9 10)\n10 / 4 = 2.5 (left: 2.5 8 10)",
                "9 / 3 = 3 (left: 2 3 10)",
                "10 - 2 = 8 (left: 3 8 10)",
                "9 / 3 = 3 (left: 2 3 10)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "10 - 2 = 8 (left: 3 8 10)\n9 - 5 = 4 (left: 4 12 15)",
                "2 + 3 = 5 (left: 5 9 10)",
                "2 + 3 = 5 (left: 5 9 10)",
                "2 + 3 = 5 (left: 5 9 10)",
                "10 - 2 = 8 (left: 3 8 10)\n9 - 5 = 4 (left: 4 12 15)"
            ]
        },
        "step_4": {
            "steps": [
                "2 + 3 = 5 (left: 5 9 10)\n10 / 4 = 2.5 (left: 2.5 8 10)\n8 / 2.5 = 3.2 (left: 3.2 10)",
                "9 / 3 = 3 (left: 2 3 10)\n3 * 2 = 6 (left: 6 10)",
                "10 - 2 = 8 (left: 3 8 10)\n5 + 4 = 9 (left: 9 9 12)",
                "9 / 3 = 3 (left: 2 3 10)\n3 + 2 = 5 (left: 5 10)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\nPossible next steps:",
                "10 - 2 = 8 (left: 3 8 10)\n9 - 5 = 4 (left: 4 12 15)\n7 + 3 = 10 (left: 9 10 9)",
                "2 + 3 = 5 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "2 + 3 = 5 (left: 5 9 10)\n12 - 7 = 5 (left: 3 8 5)",
                "10 - 2 = 8 (left: 3 8 10)\n9 - 5 = 4 (left: 4 12 15)\n15 - 4 = 11 (left: 4 11)"
            ],
            "values": [
                60.0,
                0.003,
                1.002,
                1.002,
                0.003,
                0.003,
                60.0,
                40.0,
                60.0,
                0.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 4.6",
                "2 <- 3.6",
                "3 <- 1.2",
                "4 <- 4.8",
                "5 <- 1.5",
                "6 <- 4.7",
                "7 <- 2.8",
                "8 <- 4.6",
                "9 <- 4.0"
            ],
            "resampled_steps": [
                "",
                "2 + 3 = 5 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "10 - 2 = 8 (left: 3 8 10)",
                "2 + 3 = 5 (left: 5 9 10)\n12 - 7 = 5 (left: 3 8 5)",
                "2 + 3 = 5 (left: 5 9 10)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "10 - 2 = 8 (left: 3 8 10)\n9 - 5 = 4 (left: 4 12 15)",
                "2 + 3 = 5 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)",
                "2 + 3 = 5 (left: 5 9 10)\n10 / 4 = 2.5 (left: 2.5 8 10)\n8 / 2.5 = 3.2 (left: 3.2 10)"
            ]
        },
        "step_5": {
            "steps": [
                "2 * 3 = 6 (left: 6 9 10)",
                "2 + 3 = 5 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n5 * 19 = 95 (left: 95)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n1.8 * 10 = 18 (left: 18)",
                "10 - 2 = 8 (left: 3 8 10)\nInput: 5 10 7 2",
                "2 + 3 = 5 (left: 5 9 10)\n12 - 7 = 5 (left: 3 8 5)\n8 / 3 = 2.67 (left: 2.67 5)",
                "2 + 3 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n10 * 1.8 = 18 (left: 18)",
                "10 - 2 = 8 (left: 3 8 10)\n9 - 5 = 4 (left: 4 12 15)\n3 * 7 = 21 (left: 21 11 18)",
                "2 + 3 = 5 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n5 * 19 = 95 (left: 95)",
                "2 + 3 = 5 (left: 5 9 10)\n10 / 4 = 2.5 (left: 2.5 8 10)\n8 / 2.5 = 3.2 (left: 3.2 10)\n3.2 * 10 = 32 (left: 32)"
            ],
            "values": [
                3.0,
                0.002,
                0.003,
                0.003,
                1.002,
                0.003,
                40.0,
                1.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 2.0",
                "1 <- 4.7",
                "2 <- 4.6",
                "3 <- 4.7",
                "4 <- 1.6",
                "5 <- 4.0",
                "6 <- 1.6",
                "7 <- 4.0",
                "8 <- 5.0",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "2 + 3 = 5 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "2 + 3 = 5 (left: 5 9 10)",
                "2 + 3 = 5 (left: 5 9 10)\n10 / 4 = 2.5 (left: 2.5 8 10)\n8 / 2.5 = 3.2 (left: 3.2 10)",
                "2 + 3 = 5 (left: 5 9 10)",
                "2 + 3 = 5 (left: 5 9 10)\n10 / 4 = 2.5 (left: 2.5 8 10)\n8 / 2.5 = 3.2 (left: 3.2 10)",
                "2 * 3 = 6 (left: 6 9 10)",
                "2 + 3 = 5 (left: 5 9 10)"
            ]
        },
        "step_6": {
            "steps": [
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n1.8 - 10 = -8.2 (left: -8.2)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n10 * 1.8 = 18 (left: 18)",
                "2 + 3 = 5 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n10 - 1.8 = 8.2 (left: 8.2)",
                "2 + 3 = 5 (left: 5 9 10)\n5 + 9 = 14 (left: 10)",
                "2 + 3 = 5 (left: 5 9 10)\n10 / 4 = 2.5 (left: 2.5 8 10)\n8 / 2.5 = 3.2 (left: 3.2 10)\n3.2 * 10 = 32 (left: 32)",
                "2 + 3 = 5 (left: 5 9 10)\nPossible next steps:",
                "2 + 3 = 5 (left: 5 9 10)\n10 / 4 = 2.5 (left: 2.5 8 10)\n8 / 2.5 = 3.2 (left: 3.2 10)\n5 - 5 = 0 (left: 0 5)",
                "2 * 3 = 6 (left: 6 9 10)\n6 * 9 = 54 (left: 10 54)",
                "2 + 3 = 5 (left: 5 9 10)\nInput: 3 7 21"
            ],
            "values": [
                0.0,
                0.0,
                60.0,
                0.003,
                0.003,
                0.003,
                0.003,
                20.0,
                1.001,
                0.003
            ],
            "resampled": [
                "0 <- 4.0",
                "1 <- 4.8",
                "2 <- 2.8",
                "3 <- 6.2",
                "4 <- 1.3",
                "5 <- 4.3",
                "6 <- 2.0",
                "7 <- 1.9",
                "8 <- 5.6",
                "9 <- 1.6"
            ],
            "resampled_steps": [
                "2 + 3 = 5 (left: 5 9 10)\n10 / 4 = 2.5 (left: 2.5 8 10)\n8 / 2.5 = 3.2 (left: 3.2 10)",
                "2 + 3 = 5 (left: 5 9 10)\n12 - 7 = 5 (left: 3 8 5)",
                "10 - 2 = 8 (left: 3 8 10)\n9 - 5 = 4 (left: 4 12 15)",
                "2 + 3 = 5 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)",
                "10 - 9 = 1 (left: 2 3 1)",
                "9 / 3 = 3 (left: 2 3 10)\n3 + 2 = 5 (left: 5 10)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)",
                "2 + 3 = 5 (left: 5 9 10)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n10 * 1.8 = 18 (left: 18)",
                "2 + 3 = 5 (left: 5 9 10)"
            ]
        },
        "step_7": {
            "steps": [
                "2 + 3 = 5 (left: 5 9 10)\n10 / 4 = 2.5 (left: 2.5 8 10)\n8 / 2.5 = 3.2 (left: 3.2 10)\n2 * 1 = 2 (left: 4 2)",
                "2 + 3 = 5 (left: 5 9 10)\n12 - 7 = 5 (left: 3 8 5)\n8 - 3 = 5 (left: 5 5)",
                "10 - 2 = 8 (left: 3 8 10)\n9 - 5 = 4 (left: 4 12 15)\n15 - 4 = 11 (left: 11 12)",
                "2 + 3 = 5 (left: 5 9 10)\n9 + 10 = 19 (left: 5 19)\n5 + 19 = 24 (left: 24)\nAnswer: ((2 + 3) + 9) + 10 = 24",
                "10 - 9 = 1 (left: 2 3 1)\n4 - 10 = -6 (left: -6 3)",
                "9 / 3 = 3 (left: 2 3 10)\n3 + 2 = 5 (left: 5 10)\n5 * 10 = 50 (left: 50)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n10 / 1.8 = 5.5555555555556 (left: 5.5555555555556)",
                "2 + 3 = 5 (left: 5 9 10)\n1 * 7 = 7 (left: 7 1)",
                "2 + 3 = 5 (left: 5 9 10)\n9 / 5 = 1.8 (left: 1.8 10)\n10 * 1.8 = 18 (left: 18)\nThere are no possible next steps as there are no other numbers to operate with.",
                "2 + 3 = 5 (left: 5 9 10)\n9 - 5 = 4 (left: 4 10)"
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.4779805
    },
    "948": {
        "input": "1 2 3 13",
        "step_1": {
            "steps": [
                "2 * 3 = 6 (left: 1 6 13)",
                "3 + 13 = 16 (left: 1 2 16)",
                "1 + 2 = 3 (left: 3 3 13)",
                "3 + 2 = 5 (left: 1 5 13)",
                "13 - 1 = 12 (left: 2 3 12)",
                "3 + 2 = 5 (left: 1 5 13)",
                "1 + 2 = 3 (left: 3 3 13)",
                "3 * 13 = 39 (left: 1 2 39)",
                "2 + 3 = 5 (left: 1 5 13)",
                "3 * 13 = 39 (left: 1 2 39)"
            ],
            "values": [
                3.0,
                0.003,
                0.003,
                2.001,
                2.001,
                1.002,
                2.001,
                0.003,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- INIT",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- INIT",
                "6 <- INIT",
                "7 <- INIT",
                "8 <- INIT",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
            ]
        },
        "step_2": {
            "steps": [
                "13 - 1 = 12 (left: 2 3 12)",
                "13 + 1 = 14 (left: 2 3 14)",
                "12 - 6 = 6 (left: 5 6 6)",
                "3 * 2 = 6 (left: 1 6 13)",
                "2 + 3 = 5 (left: 1 5 13)",
                "3 * 2 = 6 (left: 1 6 13)",
                "2 * 13 = 26 (left: 1 3 26)",
                "13 - 2 = 11 (left: 1 3 11)",
                "3 * 13 = 39 (left: 1 2 39)",
                "13 - 2 = 11 (left: 1 3 11)"
            ],
            "values": [
                0.003,
                2.001,
                3.0,
                1.002,
                2.001,
                1.002,
                22.0,
                2.001,
                0.003,
                1.001
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 2.6",
                "2 <- 1.4",
                "3 <- INIT",
                "4 <- 2.6",
                "5 <- 2.6",
                "6 <- 1.4",
                "7 <- 2.6",
                "8 <- 2.2",
                "9 <- 2.3"
            ],
            "resampled_steps": [
                "",
                "2 * 13 = 26 (left: 1 3 26)",
                "13 - 1 = 12 (left: 2 3 12)",
                "",
                "2 * 13 = 26 (left: 1 3 26)",
                "2 * 13 = 26 (left: 1 3 26)",
                "13 - 1 = 12 (left: 2 3 12)",
                "2 * 13 = 26 (left: 1 3 26)",
                "12 - 6 = 6 (left: 5 6 6)",
                "3 * 2 = 6 (left: 1 6 13)"
            ]
        },
        "step_3": {
            "steps": [
                "2 * 3 = 6 (left: 1 6 13)",
                "2 * 13 = 26 (left: 1 3 26)\n5 / 4 = 1.25 (left: 1.25 11)",
                "13 - 1 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 2 10)",
                "13 - 3 = 10 (left: 1 2 10)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)",
                "2 * 13 = 26 (left: 1 3 26)\n26 - 3 = 23 (left: 1 23)",
                "13 - 1 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 4 12)",
                "2 * 13 = 26 (left: 1 3 26)\n3 * 26 = 78 (left: 1 78)",
                "12 - 6 = 6 (left: 5 6 6)\n6 / 5 = 1.2 (left: 1.2 6)",
                "3 * 2 = 6 (left: 1 6 13)\n13 - 1 = 12 (left: 6 12)"
            ],
            "values": [
                1.002,
                0.003,
                22.0,
                2.001,
                20.0,
                21.001,
                0.003,
                0.003,
                1.002,
                1.002
            ],
            "resampled": [
                "0 <- 2.6",
                "1 <- 2.6",
                "2 <- 3.4",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 3.4",
                "6 <- 3.4",
                "7 <- 2.6",
                "8 <- INIT",
                "9 <- 3.9"
            ],
            "resampled_steps": [
                "2 * 13 = 26 (left: 1 3 26)",
                "2 * 13 = 26 (left: 1 3 26)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)",
                "",
                "",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)",
                "2 * 13 = 26 (left: 1 3 26)",
                "",
                "3 * 2 = 6 (left: 1 6 13)\n13 - 1 = 12 (left: 6 12)"
            ]
        },
        "step_4": {
            "steps": [
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)",
                "2 * 13 = 26 (left: 1 3 26)\nPossible next steps:",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 / 4 = 6.5 (left: 6.5)",
                "1 + 2 = 3 (left: 3 3 13)",
                "3 + 2 = 5 (left: 1 5 13)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 - 4 = 22 (left: 22)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n4 * 26 = 104 (left: 104)",
                "2 * 13 = 26 (left: 1 3 26)\n3 * 26 = 78 (left: 1 78)",
                "2 + 3 = 5 (left: 1 5 13)",
                "3 * 2 = 6 (left: 1 6 13)\n13 - 1 = 12 (left: 6 12)\n6 * 12 = 72 (left: 72)"
            ],
            "values": [
                21.001,
                0.003,
                0.0,
                1.002,
                2.001,
                0.003,
                0.002,
                1.002,
                1.002,
                0.003
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 3.2",
                "2 <- 4.0",
                "3 <- 2.6",
                "4 <- 2.4",
                "5 <- 3.2",
                "6 <- 1.0",
                "7 <- 4.0",
                "8 <- INIT",
                "9 <- 3.5"
            ],
            "resampled_steps": [
                "3 + 2 = 5 (left: 1 5 13)",
                "13 - 1 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 2 10)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)",
                "2 * 13 = 26 (left: 1 3 26)",
                "2 + 3 = 5 (left: 1 5 13)",
                "13 - 1 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 2 10)",
                "2 * 3 = 6 (left: 1 6 13)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)",
                "",
                "2 * 13 = 26 (left: 1 3 26)\n26 - 3 = 23 (left: 1 23)"
            ]
        },
        "step_5": {
            "steps": [
                "3 + 2 = 5 (left: 1 5 13)\nPossible next steps:",
                "13 - 1 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 2 10)\n10 - 2 = 8 (left: 8)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n4 + 26 = 30 (left: 30)",
                "2 * 13 = 26 (left: 1 3 26)\n1 * 3 = 3 (left: 3 26)",
                "2 + 3 = 5 (left: 1 5 13)\nInput: 3 9 27",
                "13 - 1 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 2 10)\n10 / 2 = 5 (left: 5)",
                "2 * 3 = 6 (left: 1 6 13)\n1 * 6 = 6 (left: 6 13)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 - 4 = 22 (left: 22)",
                "3 * 3 = 9 (left: 1 9 13)",
                "2 * 13 = 26 (left: 1 3 26)\n26 - 3 = 23 (left: 1 23)\n23 / 1 = 23 (left: 23)"
            ],
            "values": [
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.001,
                0.003,
                60.0,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 4.8",
                "1 <- 5.7",
                "2 <- 3.4",
                "3 <- 3.5",
                "4 <- 5.7",
                "5 <- 3.5",
                "6 <- 3.0",
                "7 <- 4.0",
                "8 <- 4.0",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "2 + 3 = 5 (left: 1 5 13)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 - 4 = 22 (left: 22)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)",
                "2 * 13 = 26 (left: 1 3 26)\n26 - 3 = 23 (left: 1 23)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 - 4 = 22 (left: 22)",
                "2 * 13 = 26 (left: 1 3 26)\n26 - 3 = 23 (left: 1 23)",
                "2 * 3 = 6 (left: 1 6 13)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)",
                ""
            ]
        },
        "step_6": {
            "steps": [
                "2 + 3 = 5 (left: 1 5 13)\n5 * 13 = 65 (left: 1 65)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 - 4 = 22 (left: 22)\nNone - there is only one number and no operations to perform.",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)",
                "2 * 13 = 26 (left: 1 3 26)\n26 - 3 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 - 4 = 22 (left: 22)\n22 / 2 = 11",
                "2 * 13 = 26 (left: 1 3 26)\n26 - 3 = 23 (left: 1 23)\n23 / 1 = 23 (left: 23)",
                "2 * 3 = 6 (left: 1 6 13)\n6 * 13 = 78 (left: 1 78)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 * 5 = 50 (left: 50)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n5 + 5 = 10 (left: 10 10)",
                "2 * 3 = 6 (left: 1 6 13)"
            ],
            "values": [
                1.001,
                0.003,
                60.0,
                40.0,
                0.003,
                0.003,
                3.0,
                0.002,
                0.002,
                0.003
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 5.7",
                "2 <- 5.7",
                "3 <- 5.7",
                "4 <- 6.2",
                "5 <- 3.2",
                "6 <- 3.4",
                "7 <- 6.6",
                "8 <- 2.6",
                "9 <- 6.2"
            ],
            "resampled_steps": [
                "13 - 1 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 2 10)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 - 4 = 22 (left: 22)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 - 4 = 22 (left: 22)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 - 4 = 22 (left: 22)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)",
                "13 - 1 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 2 10)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)",
                "2 * 3 = 6 (left: 1 6 13)\n6 * 13 = 78 (left: 1 78)",
                "2 * 13 = 26 (left: 1 3 26)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)"
            ]
        },
        "step_7": {
            "steps": [
                "13 - 1 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 2 10)\n10 / 2 = 5 (left: 5)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 - 4 = 22 (left: 22)\n22 / 2 = 11",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 - 4 = 22 (left: 22)\n22 / 2 = 11",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 - 4 = 22 (left: 22)\nNone, as there is only one number given.",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)\n5 + 2 = 7 (left: 7)",
                "13 - 1 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 2 10)\n10 / 2 = 5 (left: 5)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 / 4 = 6.5 (left: 6.5)",
                "2 * 3 = 6 (left: 1 6 13)\n6 * 13 = 78 (left: 1 78)\n78 * 1 = 78 (left: 78)",
                "2 * 13 = 26 (left: 1 3 26)\n26 / 1 = 26 (left: 3 26)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)\n5 * 2 = 10 (left: 10)"
            ],
            "values": [
                0.001,
                0.003,
                0.003,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.003,
                0.001
            ],
            "resampled": [
                "0 <- 3.2",
                "1 <- 4.0",
                "2 <- 6.6",
                "3 <- 6.2",
                "4 <- 5.7",
                "5 <- 6.2",
                "6 <- 6.2",
                "7 <- 6.2",
                "8 <- 2.6",
                "9 <- 6.6"
            ],
            "resampled_steps": [
                "13 - 1 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 2 10)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)",
                "2 * 3 = 6 (left: 1 6 13)\n6 * 13 = 78 (left: 1 78)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 - 4 = 22 (left: 22)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)",
                "2 * 13 = 26 (left: 1 3 26)",
                "2 * 3 = 6 (left: 1 6 13)\n6 * 13 = 78 (left: 1 78)"
            ]
        },
        "step_8": {
            "steps": [
                "13 - 1 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 2 10)\n10 * 2 = 20 (left: 20)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n4 + 26 = 30 (left: 30)",
                "2 * 3 = 6 (left: 1 6 13)\n6 * 13 = 78 (left: 1 78)\n1 * 78 = 78 (left: 78)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)\n5 * 2 = 10 (left: 10)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 - 4 = 22 (left: 22)\n22 + 2 = 24",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)\n5 * 2 = 10 (left: 10)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)\n5 * 2 = 10 (left: 10)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)\n5 - 2 = 3 (left: 3)",
                "2 * 13 = 26 (left: 1 3 26)\nInput: 5 10 2 3",
                "2 * 3 = 6 (left: 1 6 13)\n6 * 13 = 78 (left: 1 78)\n9 - 5 = 4 (left: 4)"
            ],
            "values": [
                0.001,
                0.003,
                0.003,
                0.002,
                0.003,
                0.003,
                0.001,
                0.002,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 6.2",
                "1 <- 3.4",
                "2 <- 5.7",
                "3 <- 6.3",
                "4 <- 6.3",
                "5 <- 6.2",
                "6 <- 6.3",
                "7 <- 3.3",
                "8 <- 3.5",
                "9 <- 6.2"
            ],
            "resampled_steps": [
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 - 4 = 22 (left: 22)",
                "2 * 13 = 26 (left: 1 3 26)\n26 - 3 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)",
                "2 * 13 = 26 (left: 1 3 26)\n26 - 3 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)",
                "2 * 13 = 26 (left: 1 3 26)\n26 - 3 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)",
                "13 - 3 = 10 (left: 1 2 10)",
                "2 * 13 = 26 (left: 1 3 26)\n26 - 3 = 23 (left: 1 23)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)"
            ]
        },
        "step_9": {
            "steps": [
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)\n5 / 2 = 2.5 (left: 2.5)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n4 * 26 = 104 (left: 104)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n26 - 4 = 22 (left: 22)\n22 / 2 = 11",
                "2 * 13 = 26 (left: 1 3 26)\n26 - 3 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)\nAnswer: (2 * 13) - (3 - 1) = 24",
                "2 * 13 = 26 (left: 1 3 26)\n26 - 3 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)\nAnswer: (2 * 13) - (3 + 1) = 24",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)\n5 - 2 = 3 (left: 3)",
                "2 * 13 = 26 (left: 1 3 26)\n26 - 3 = 23 (left: 1 23)\n1 + 23 = 24 (left: 24)\nAnswer: (2 * 13) - (3 - 1) = 24",
                "13 - 3 = 10 (left: 1 2 10)\n10 - 2 = 8 (left: 1 8)",
                "2 * 13 = 26 (left: 1 3 26)\n26 - 3 = 23 (left: 1 23)\n23 - 1 = 22 (left: 22)",
                "2 * 13 = 26 (left: 1 3 26)\n1 + 3 = 4 (left: 4 26)\n10 - 5 = 5 (left: 5 2)\n5 * 2 = 10 (left: 10) "
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.5233584999999996
    },
    "949": {
        "input": "1 6 6 6",
        "step_1": {
            "steps": [
                "1 + 6 = 7 (left: 6 6 7)",
                "6 - 1 = 5 (left: 5 6 6)",
                "6 / 1 = 6 (left: 6 6 6)",
                "6 - 1 = 5 (left: 5 6 6)",
                "6 - 1 = 5 (left: 5 6 6)",
                "6 - 1 = 5 (left: 6 6 5)",
                "6 + 1 = 7 (left: 6 6 7)",
                "9 / 3 = 3 (left: 3 5 9)",
                "1 + 6 = 7 (left: 6 6 7)",
                "6 - 1 = 5 (left: 5 6 6)"
            ],
            "values": [
                3.0,
                3.0,
                1.002,
                3.0,
                3.0,
                3.0,
                2.001,
                20.001,
                2.001,
                3.0
            ],
            "resampled": [
                "0 <- INIT",
                "1 <- 1.7",
                "2 <- INIT",
                "3 <- INIT",
                "4 <- INIT",
                "5 <- 1.7",
                "6 <- 1.7",
                "7 <- 1.7",
                "8 <- 1.8",
                "9 <- 1.3"
            ],
            "resampled_steps": [
                "",
                "9 / 3 = 3 (left: 3 5 9)",
                "",
                "",
                "",
                "9 / 3 = 3 (left: 3 5 9)",
                "9 / 3 = 3 (left: 3 5 9)",
                "9 / 3 = 3 (left: 3 5 9)",
                "1 + 6 = 7 (left: 6 6 7)",
                "6 - 1 = 5 (left: 5 6 6)"
            ]
        },
        "step_2": {
            "steps": [
                "6 / 1 = 6 (left: 6 6 6)",
                "9 / 3 = 3 (left: 3 5 9)\nInput: 4 6 10",
                "6 / 1 = 6 (left: 6 6 6)",
                "6 - 1 = 5 (left: 5 6 6)",
                "6 / 1 = 6 (left: 6 6 6)",
                "9 / 3 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 4 9)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)",
                "9 / 3 = 3 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)",
                "1 + 6 = 7 (left: 6 6 7)\n7 - 6 = 1 (left: 6 1)",
                "6 - 1 = 5 (left: 5 6 6)\n6 / 5 = 1.2 (left: 1.2 6)"
            ],
            "values": [
                2.001,
                0.003,
                2.001,
                3.0,
                2.001,
                1.002,
                40.0,
                1.002,
                21.0,
                0.0
            ],
            "resampled": [
                "0 <- 1.7",
                "1 <- 1.7",
                "2 <- 1.7",
                "3 <- 1.6",
                "4 <- 2.6",
                "5 <- 2.8",
                "6 <- INIT",
                "7 <- 2.8",
                "8 <- 1.3",
                "9 <- INIT"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 3 5 9)",
                "9 / 3 = 3 (left: 3 5 9)",
                "9 / 3 = 3 (left: 3 5 9)",
                "6 + 1 = 7 (left: 6 6 7)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)",
                "1 + 6 = 7 (left: 6 6 7)\n7 - 6 = 1 (left: 6 1)",
                "",
                "1 + 6 = 7 (left: 6 6 7)\n7 - 6 = 1 (left: 6 1)",
                "6 - 1 = 5 (left: 5 6 6)",
                ""
            ]
        },
        "step_3": {
            "steps": [
                "9 / 3 = 3 (left: 3 5 9)\n3 + 5 = 8 (left: 8 9)",
                "9 / 3 = 3 (left: 3 5 9)\n5 + 9 = 14 (left: 3 14)",
                "9 / 3 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 4 9)",
                "6 + 1 = 7 (left: 6 6 7)\n7 + 6 = 13 (left: 6 13)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "1 + 6 = 7 (left: 6 6 7)\n7 - 6 = 1 (left: 6 1)\n6 / 1 = 6 (left: 6)",
                "6 * 1 = 6 (left: 6 6 6)",
                "1 + 6 = 7 (left: 6 6 7)\n7 - 6 = 1 (left: 6 1)\n6 - 1 = 5 (left: 5)",
                "6 - 1 = 5 (left: 5 6 6)\nInput: 3 9 3",
                "6 * 6 = 36 (left: 6 6 36)"
            ],
            "values": [
                0.003,
                0.003,
                1.002,
                0.003,
                60.0,
                0.003,
                2.001,
                0.003,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 3.9",
                "1 <- 2.8",
                "2 <- 3.9",
                "3 <- 3.4",
                "4 <- 1.4",
                "5 <- 3.4",
                "6 <- 3.4",
                "7 <- 1.6",
                "8 <- INIT",
                "9 <- 3.9"
            ],
            "resampled_steps": [
                "6 * 6 = 36 (left: 6 6 36)",
                "1 + 6 = 7 (left: 6 6 7)\n7 - 6 = 1 (left: 6 1)",
                "6 * 6 = 36 (left: 6 6 36)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "6 - 1 = 5 (left: 5 6 6)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "6 + 1 = 7 (left: 6 6 7)",
                "",
                "6 * 6 = 36 (left: 6 6 36)"
            ]
        },
        "step_4": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "1 + 6 = 7 (left: 6 6 7)\n7 - 6 = 1 (left: 6 1)\n6 + 1 = 7 (left: 7)",
                "6 * 6 = 36 (left: 6 6 36)\n36 - 6 = 30 (left: 6 30)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "6 + 1 = 7 (left: 6 6 7)\n7 - 6 = 1 (left: 1 7)",
                "6 - 1 = 5 (left: 5 6 6)",
                "6 * 6 = 36 (left: 6 6 36)\n6 + 6 = 12 (left: 12 36)"
            ],
            "values": [
                60.0,
                0.001,
                0.002,
                60.0,
                60.0,
                60.0,
                0.001,
                60.0,
                22.0,
                0.003
            ],
            "resampled": [
                "0 <- 4.4",
                "1 <- 4.8",
                "2 <- 3.9",
                "3 <- 1.7",
                "4 <- 4.4",
                "5 <- 4.3",
                "6 <- 3.4",
                "7 <- 3.4",
                "8 <- 4.3",
                "9 <- 4.4"
            ],
            "resampled_steps": [
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "6 - 1 = 5 (left: 5 6 6)",
                "6 * 6 = 36 (left: 6 6 36)",
                "9 / 3 = 3 (left: 3 5 9)",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)"
            ]
        },
        "step_5": {
            "steps": [
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "9 / 3 = 3 (left: 3 5 9)\n9 / 3 = 3 (left: 3 5)",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 + 6 = 10 (left: 10)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n6 - 4 = 2 (left: 2)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 4) = 24",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)"
            ],
            "values": [
                0.002,
                60.0,
                60.0,
                1.001,
                0.002,
                20.002,
                0.002,
                0.002,
                0.003,
                0.002
            ],
            "resampled": [
                "0 <- 4.7",
                "1 <- 5.2",
                "2 <- 2.6",
                "3 <- 5.2",
                "4 <- 4.3",
                "5 <- 2.6",
                "6 <- 4.7",
                "7 <- 4.4",
                "8 <- 3.4",
                "9 <- 4.5"
            ],
            "resampled_steps": [
                "6 + 1 = 7 (left: 6 6 7)\n7 - 6 = 1 (left: 1 7)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)",
                "6 + 1 = 7 (left: 6 6 7)\n7 - 6 = 1 (left: 1 7)",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ]
        },
        "step_6": {
            "steps": [
                "6 + 1 = 7 (left: 6 6 7)\n7 - 6 = 1 (left: 1 7)\n7 / 1 = 7 (left: 7)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n6 + 6 = 12 (left: 12 12 15)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "6 + 1 = 7 (left: 6 6 7)\n7 - 6 = 1 (left: 1 7)\n1 * 7 = 7 (left: 7)",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n6 - 1 = 5 (left: 5)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((6 * 4) + (6 - 6)) = 24"
            ],
            "values": [
                0.001,
                60.0,
                20.002,
                60.0,
                20.002,
                20.0,
                0.001,
                0.003,
                0.002,
                60.0
            ],
            "resampled": [
                "0 <- 6.3",
                "1 <- 6.2",
                "2 <- 4.0",
                "3 <- 5.2",
                "4 <- 4.7",
                "5 <- 4.5",
                "6 <- 3.4",
                "7 <- 6.4",
                "8 <- 3.4",
                "9 <- 4.3"
            ],
            "resampled_steps": [
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n6 + 6 = 12 (left: 12 12 15)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "6 + 1 = 7 (left: 6 6 7)\n7 - 6 = 1 (left: 1 7)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ]
        },
        "step_7": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)\n36 + 2 = 38",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n6 + 6 = 12 (left: 12 12 15)\n15 - 12 = 3 (left: 3 15)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 + 36 = 37 (left: 37)",
                "6 + 1 = 7 (left: 6 6 7)\n7 - 6 = 1 (left: 1 7)\n7 / 1 = 7 (left: 7)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3 8)\n3 + 1 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\nAnswer: (3 + 5) * (7 - (3 + 1)) = 24",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n6 / 4 = 1.5 (left: 1.5)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24"
            ],
            "values": [
                0.003,
                0.003,
                40.001,
                0.002,
                0.001,
                40.001,
                0.002,
                60.0,
                0.001,
                20.002
            ],
            "resampled": [
                "0 <- 6.1",
                "1 <- 6.9",
                "2 <- 7.5",
                "3 <- 3.9",
                "4 <- 6.1",
                "5 <- 6.3",
                "6 <- 7.2",
                "7 <- 7.2",
                "8 <- 7.7",
                "9 <- 5.1"
            ],
            "resampled_steps": [
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((6 * 4) + (6 - 6)) = 24",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24",
                "6 * 6 = 36 (left: 6 6 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3 8)\n3 + 1 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\nAnswer: (3 + 5) * (7 - (3 + 1)) = 24",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)"
            ]
        },
        "step_8": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)\nThere are no possible next steps with the input 36.",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((6 * 4) + (6 - 6)) = 24\nInput: 3 5 6 7\nSteps:\n6 + 7 = 13 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 + (7 - 5)) = 24",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 4 = 24",
                "6 * 6 = 36 (left: 6 6 36)\n6 * 6 = 36 (left: 36 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)\n36 / 2 = 18",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)\n36 / 2 = 18",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\n36 + 8 = 44",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\n36 / 2 = 18",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3 8)\n3 + 1 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\nAnswer: (3 + 5) * (7 - (3 + 1)) = 24\nInput: 2 3 6 6\nSteps:\n6 / 3 = 2 (left: 2 6 6)\n2 * 6 = 12 (left: 12 6)\n12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nAnswer: (2 * (6 / 3)) * (6 - 6) = 24",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 + 6 = 7"
            ],
            "values": [
                0.003,
                60.0,
                60.0,
                0.003,
                0.003,
                0.003,
                0.003,
                0.003,
                60.0,
                0.003
            ],
            "resampled": [
                "0 <- 5.2",
                "1 <- 8.8",
                "2 <- 7.2",
                "3 <- 8.2",
                "4 <- 8.2",
                "5 <- 6.3",
                "6 <- 8.8",
                "7 <- 4.0",
                "8 <- 3.9",
                "9 <- 4.3"
            ],
            "resampled_steps": [
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3 8)\n3 + 1 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\nAnswer: (3 + 5) * (7 - (3 + 1)) = 24\nInput: 2 3 6 6\nSteps:\n6 / 3 = 2 (left: 2 6 6)\n2 * 6 = 12 (left: 12 6)\n12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nAnswer: (2 * (6 / 3)) * (6 - 6) = 24",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 4 = 24",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 4 = 24",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3 8)\n3 + 1 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\nAnswer: (3 + 5) * (7 - (3 + 1)) = 24\nInput: 2 3 6 6\nSteps:\n6 / 3 = 2 (left: 2 6 6)\n2 * 6 = 12 (left: 12 6)\n12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nAnswer: (2 * (6 / 3)) * (6 - 6) = 24",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)",
                "6 * 6 = 36 (left: 6 6 36)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)"
            ]
        },
        "step_9": {
            "steps": [
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3 8)\n3 + 1 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\nAnswer: (3 + 5) * (7 - (3 + 1)) = 24\nInput: 2 3 6 6\nSteps:\n6 / 3 = 2 (left: 2 6 6)\n2 * 6 = 12 (left: 12 6)\n12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nAnswer: (2 * (6 / 3)) * (6 - 6) = 24\nInput: 2 2 6 8\nSteps:\n2 * 8 = 16 (left: 2 6 16)\n6 - 2 = 4 (left: 4 16)\n4 * 16 = 64 (left: 64)\nAnswer: (2 * 8) * (6 - 2) = 24",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\nThere are no possible next steps with the given input of 36.",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 4 = 24\nInput: 3 3 4 5\nSteps:\n3 + 4 = 7 (left: 3 5 7)\n7 + 3 = 10 (left: 5 10)\n10 - 5 = 5 (left: 5)\n5 * 5 = 25 (left: 25)\nAnswer: ((3 + 4) + 3) * 5 = 25",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 4 = 24\nInput: 3 4 5 6\nSteps:\n5 + 6 = 11 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n7 * 3 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((5 + 6) - 4) * 3 + 3 = 24",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n36 / 1 = 36 (left: 36)\n36 / 2 = 18",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3 8)\n3 + 1 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\nAnswer: (3 + 5) * (7 - (3 + 1)) = 24\nInput: 2 3 6 6\nSteps:\n6 / 3 = 2 (left: 2 6 6)\n2 * 6 = 12 (left: 12 6)\n12 - 6 = 6 (left: 6 6)\n6 * 6 = 36 (left: 36)\nAnswer: (2 * (6 / 3)) * (6 - 6) = 24\nInput: 2 2 6 8\nSteps:\n2 + 8 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n2 * 4 = 8 (left: 8)\n8 * 3 = 24 (left: 24)\nAnswer: ((2 + 8) - 6) * 3 = 24",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "6 * 6 = 36 (left: 6 6 36)\n6 * 6 = 36 (left: 6 36)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 4) = 24"
            ],
            "values": [
                20.0,
                40.0,
                0.003,
                60.0,
                40.0,
                0.003,
                40.0,
                20.0,
                0.003,
                0.003
            ],
            "resampled": [
                "0 <- 7.7",
                "1 <- 6.5",
                "2 <- 8.2",
                "3 <- 7.2",
                "4 <- 5.1",
                "5 <- 5.1",
                "6 <- 7.2",
                "7 <- 8.1",
                "8 <- 8.2",
                "9 <- 5.2"
            ],
            "resampled_steps": [
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3 8)\n3 + 1 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\nAnswer: (3 + 5) * (7 - (3 + 1)) = 24",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 4 = 24",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((6 * 4) + (6 - 6)) = 24\nInput: 3 5 6 7\nSteps:\n6 + 7 = 13 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 + (7 - 5)) = 24",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 4 = 24",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)"
            ]
        },
        "step_10": {
            "steps": [
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 3 3 5 7\nSteps:\n3 + 5 = 8 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3 8)\n3 + 1 = 4 (left: 4 8)\n4 * 8 = 32 (left: 32)\nAnswer: (3 + 5) * (7 - (3 + 1)) = 24\nInput: 2 3 7 8\nSteps:\n7 - 3 = 4 (left: 2 4 8)\n4 + 8 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (7 - 3) + (2 * 8) = 24",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 4 = 24\nInput: 3 3 8 9\nSteps:\n3 * 3 = 9 (left: 9 8 9)\n9 - 8 = 1 (left: 1 9)\n1 * 9 = 9 (left: 9)\n9 * 3 = 27 (left: 27)\n27 - 3 = 24 (left: 24)\nAnswer: (((3 * 3) - 8) * 9) - 3 = 24",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\nThere are no possible next steps with just the number 36.",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n6 / 1 = 6 (left: 6)",
                "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n1 + 6 = 7 (left: 7)",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)\nThere are no possible next steps for the input 36 as it is already a single number.",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: ((6 * 4) + (6 - 6)) = 24\nInput: 3 5 6 7\nSteps:\n6 + 7 = 13 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: 3 * (6 + (7 - 5)) = 24\nInput: 2 3 5 9\nSteps:\n2 * 9 = 18 (left: 3 5 18)\n18 - 5 = 13 (left: 3 13)\n13 + 3 = 16 (left: 16)\n16 + 9 = 24 (left: 24)\nAnswer: ((2 * 9) - 5) + 3 + 9 = 24",
                "9 / 3 = 3 (left: 3 5 9)\n10 - 6 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (10 - 6) * (6 + 6) = 24\nInput: 2 3 6 8\nSteps:\n2 * 3 = 6 (left: 6 8)\n6 + 8 = 14 (left: 14)\n14 + 6 = 20 (left: 20)\n20 + 4 = 24 (left: 24)\nAnswer: ((2 * 3) + 8) + 4 = 24\nInput: 1 2 3 4\nSteps:\n2 * 3 = 6 (left: 1 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (2 * 3) = 24",
                "6 * 6 = 36 (left: 6 6 36)\n6 / 6 = 1 (left: 1 36)\n1 * 36 = 36 (left: 36)"
            ],
            "values": [
                60.0,
                40.0,
                40.0,
                0.003,
                0.002,
                0.0,
                0.003,
                60.0,
                60.0,
                20.0
            ]
        },
        "results": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ],
        "cost": 2.571378
    }
}