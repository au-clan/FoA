{
    "900": {
        "puzzle": "4 5 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> 6 - 4 = 2 (left: 2) -> No possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 4 30 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 4 30 10) -> 4 * 30 = 120 (left: 10 120)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 10 - 6 = 4 (left: 4 9) -> 7 - 3 = 4 (left: 4",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 10 - 6 = 4 (left: 4 9) -> 7 - 3 = 4 (left: 4 -> There are no possible next steps as there are not enough numbers provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 10 - 6 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 10 - 6 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 5 = 9 (left: 6 9 10) -> 10 - 6 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 + 13 = 22 (left: 22)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 "
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 4 6  -> Possible next steps: -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 10"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 4 5 10) -> 10 / 5 = 2 (left: 4 2) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 11"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 11 / 6 = 1.83333 (left: 1.83333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 5 6 6) -> 5 + 6 = 11 (left: 6 11) -> 11 / 6 = 1.83333 (left: 1.83333) -> 1.83333 + 2 = 3.83333",
                "Pruning": null
            }
        },
        "Input": "4 5 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "901": {
        "puzzle": "1 2 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 4 = 3 (left: 1 2 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 4 = 3 (left: 1 2 3) -> 3 - 2 = 1 (left: 1 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2.33 (left: 4 2.33)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 * 5 = 125 (left: 125)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "None, as there is only one number provided."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 2 = 2 (left: 1 2 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 7 / 3 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 5"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> None, as there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 * 5 = 25 (left: 25) -> 25 + 8 = 33 (left: 8)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "None, as there is only one number provided."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 4 = 8 (left: 1 8 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 4 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 4 7"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 4 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 4 7) -> 4 / 3 = 1.33 (left: 1.33 7)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 5"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 1 4 5) -> 5 / 1 = 5 (left: 5 5) -> 5 / 5 = 1 (left: 1) -> 1 + 1 = 2",
                "Pruning": null
            }
        },
        "Input": "1 2 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "902": {
        "puzzle": "2 5 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 6 5 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 6 5 11) -> 6 + 5 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 / 3 = 3. -> 11 + 3 = 14 (left: 14 / 3 = 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.25 8 11"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 / 8 = 1.25 (left: 1.25 8 11) -> 11 - 1.25 = 9.75 (left: 8 9.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 / 8 = 1.25 (left: 1.25 8 11) -> 11 - 1.25 = 9.75 (left: 8 9.75) -> 8 + 9.75 = 17.75 (left: 17.75)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 2 = 9 (left: 2 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 8 = 3 (left: 2 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 8 = 3 (left: 2 3 8) -> 2 + 3 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 8 11"
                }
            },
            "Step 3": {
                "Step": "2 * 5 = 10 (left: 10 8 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 / 8 = 1.25 (left: 1.25 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.25 8 11"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 / 8 = 1.25 (left: 1.25 8 11) -> 8 * 1.25 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 / 8 = 1.25 (left: 1.25 8 11) -> 8 * 1.25 = 10 (left: 10 11) -> 10 / 11 = 0.9090909090909091 (left: 0.9090909090909091)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 - 2 = 3 (left: 3 8 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 1": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 3 = 8 (left: 8 11) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 11"
                }
            },
            "Step 3": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 - 2 = 3 (left: 3 8 11) -> 11 - 8 = 3 (left: 3 11) -> 3 * 11 = 33 (left: 33)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.25 8 11"
                }
            },
            "Step 5": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 / 8 = 1.25 (left: 1.25 8 11) -> 1.25 + 8 = 9.25 (left: 9.25 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 5 = 10 (left: 10 8 11) -> 10 / 8 = 1.25 (left: 1.25 8 11) -> 1.25 + 8 = 9.25 (left: 9.25 11) -> 9.25 * 11 = 101.75 (left: 101.75)",
                "Pruning": "NA"
            }
        },
        "Input": "2 5 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "903": {
        "puzzle": "3 4 4 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 * 12 = 48 (left: 13 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 3": {
                "Step": "13 - 4 = 9 (left: 3 9 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 4 = 9 (left: 3 9 4) -> 9 / 3 = 3 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 16"
                }
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16) -> 16 / 1 = 16 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16) -> 16 / 1 = 16 (left: 16) -> There are no possible next steps with the number 16 as it is the final result.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "4 - 3 = 1 (left: 1 4 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 3 = 1 (left: 1 4 13) -> 13 / 1 = 13 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 12 13"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 + 12 = 16 (left: 16 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 4 + 12 = 16 (left: 16 13) -> 16 / 13 = 1.23 (left: 1.23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 16"
                }
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16) -> 1 + 16 = 17 (left: 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16) -> 1 + 16 = 17 (left: 16) -> 16 / 2 = 8",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 4 = 9 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 1": {
                "Step": "13 + 3 = 16 (left: 4 4 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 4 13"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 4 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 4 12 13) -> 12 + 1 = 13 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1 16"
                }
            },
            "Step 5": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16) -> 1 + 16 = 17 (left: 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 + 3 = 16 (left: 4 4 16) -> 4 / 4 = 1 (left: 1 16) -> 1 + 16 = 17 (left: 17) -> 17 * 2 = 34 (left: 34)",
                "Pruning": "NA"
            }
        },
        "Input": "3 4 4 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "904": {
        "puzzle": "6 7 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 9 13"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 + 9 = 17 (left: 13 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 9 13) -> 8 + 9 = 17 (left: 13 17) -> 13 / 17 = 0.7647058823529411 (left: 0.7647058823529411)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 - 1 = 6 (left: 6) -> 6 - 8 = -2 (left: -2)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1.143 8"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "7 / 6 = 1.1666666666666667 (",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 6 = 1.1666666666666667 ( -> 6 - 7 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) -> 8 / 7 = 1.143 (left: 1.143 8)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 / 7 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1.143 8"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 8 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 9"
                }
            },
            "Step 1": {
                "Step": "8 * 9 = 72 (left: 6 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 * 9 = 72 (left: 6 7  -> Input: 13 1 42 1.17",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 3": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 1 * 7 = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 7"
                }
            },
            "Step 5": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 9 = 72 (left: 6 7  -> 7 - 6 = 1 (left: 1 7) -> 7 / 1 = 7 (left: 7)  -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Input": "6 7 8 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "905": {
        "puzzle": "1 11 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 11 13 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 1": {
                "Step": "13 - 11 = 2 (left: 1 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11  -> 11 * 1 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 3": {
                "Step": "13 - 11 = 2 (left: 1 11 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 - 2 = 8 (left: 8 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 1": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 + 12 = 23 (left: 13 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 3": {
                "Step": "1 + 11 = 12 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 11 = 12 (left: 11 12 13) -> 11 / 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (1 + 11) * (11 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 11 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 1": {
                "Step": "13 - 11 = 2 (left: 1 11 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 11 = 2 (left: 1 11  -> 1 + 11 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 11 11 13"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 10 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 10 11 13) -> 13 - 10 = 3 (left: 3 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12) -> 2 * 12 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 11 = 2 (left: 1 11 2) -> 1 + 11 = 12 (left: 2 12) -> 2 * 12 = 24 -> 12 * 2 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Input": "1 11 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "906": {
        "puzzle": "1 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "",
                "Pruning": null
            },
            "Step 2": {
                "Step": " -> It seems you haven't provided any input for the next step calculation. Please enter a set of numbers to continue.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 3": {
                "Step": "1 * 8 = 8 (left: 8 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 8 * 10 = 80 (left: 80 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.375 11 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11) -> 11 - 1.375 = 9.625 (left: 9.625 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11) -> 11 - 1.375 = 9.625 (left: 9.625 11) -> 9.625 + 11 = 20.625 (left: 20.625)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 / 1 = 11 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 3": {
                "Step": "1 * 8 = 8 (left: 8 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 11 - 8 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.375 11 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11) -> 1.375 + 11 = 12.375 (left: 11 12.375)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11) -> 1.375 + 11 = 12.375 (left: 11 12.375) -> 11 + 12.375 = 23.375 (left: 23.375)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 1 = 8 (left: 8 10 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 8 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 8 11 11) -> 11 / 8 = 1.375 (left: 1.375 11 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 8 10 11"
                }
            },
            "Step 3": {
                "Step": "1 + 8 = 9 (left: 9 10 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 8 = 9 (left: 9 10 11) -> 10 + 11 = 21 (left: 9 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "3 10"
                }
            },
            "Step 5": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 11 - 8 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 8 = 8 (left: 8 10 11) -> 11 - 8 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875)",
                "Pruning": "NA"
            }
        },
        "Input": "1 8 10 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "907": {
        "puzzle": "2 3 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 6 9 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 2 3 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 9"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 5 - 6 = -1 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 9) -> 5 - 6 = -1 (left: -> 5 - 6 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 2 6 9) -> 2 + 3 = 5 (left: 5 -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 2 6 9) -> 2 + 3 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 2 6  -> 2 + 6 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 2 3 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 2 3 9) -> 2 + 3 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "5 9"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 2 3 9) -> 2 + 3 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 2 3 9) -> 2 + 3 = 5 (left: 5 9) -> 5 + 9 = 14 (left: 14) -> 14 + 2 = 16",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 2 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 2 6 9) -> 2 + 3 = 5 (left: 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 9"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 2 3 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 2 3 3) -> 3 / 2 = 1.5 (left: 1.5 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 2 6 9) -> 2 + 3 = 5 (left: 5 -> There are no possible next steps with just the number 5.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 2 6 9) -> 2 + 3 = 5 (left: 5 -> There are no possible next steps with just the number 5. -> There are no possible next steps with just the number 5.",
                "Pruning": null
            }
        },
        "Input": "2 3 6 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "908": {
        "puzzle": "1 3 5 9",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 5 = 15 (left: 1 15 9)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 3  -> 1 + 3 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 1 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 1 8 9) -> 9 - 1 = 8 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "15 9"
                }
            },
            "Step 5": {
                "Step": "1 * 5 = 5 (left: 3 5 9) -> 5 * 3 = 15 (left: 15 9) -> 15 * 9 = 135 (left: 135)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 3 5 9) -> 5 * 3 = 15 (left: 15 9) -> 15 * 9 = 135 (left: 135) -> 5 * 3 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 9 = 14 (left: 1 3 14)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 15 9"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 1 15 9) -> 1 * 15 = 15 (left: 15 9) -> 15 - 9 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 3": {
                "Step": "3 + 5 = 8 (left: 1 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 5 = 8 (left: 1 8 9) -> 8 / 1 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "3 + 5 = 8 (left: 1 8 9) -> 9 - 1 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 5 = 8 (left: 1 8 9) -> 9 - 1 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 8 / 9 = 0.8888888888888888 (left: 9)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 1 3 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 1": {
                "Step": "9 - 1 = 8 (left: 3 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 1 = 8 (left: 3 5 8) -> 8 / 3 = 2.67 (left: 5 2.67)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 5 9"
                }
            },
            "Step 3": {
                "Step": "1 * 5 = 5 (left: 3 5 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 5 = 5 (left: 3 5 9) -> 5 * 3 = 15 (left: 15 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "15 9"
                }
            },
            "Step 5": {
                "Step": "1 * 5 = 5 (left: 3 5 9) -> 5 * 3 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 5 = 5 (left: 3 5 9) -> 5 * 3 = 15 (left: 15 9) -> 15 + 9 = 24 (left: 24) -> Answer: (1 * 5) * (5 + 9) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "1 3 5 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "909": {
        "puzzle": "3 3 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 7 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 1": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 3": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 3 = 21 (left: 21 3  -> 21 / 3 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 7 12) -> 9 - 7 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 7 12) -> 9 - 7 = 2 (left: 2 12) -> 12 - 2 = 10 (left: 10) -> 10 + 10 = 20"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 3 7 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 1": {
                "Step": "3 + 7 = 10 (left: 3 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 7 = 10 (left: 3 10 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "21 3 "
                }
            },
            "Step 3": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 7 = 21 (left: 21 3  -> 21 - 3 = 18 (left: 18 3) -> 18 - 3 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 7 12) -> 9 - 7 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 7 12) -> 9 - 7 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48)"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 3 = 21 (left: 21 3 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 3 4  -> 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 7 12"
                }
            },
            "Step 3": {
                "Step": "3 * 3 = 9 (left: 9 7 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 3 = 9 (left: 9 7 12) -> 9 - 7 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "3 * 3 = 9 (left: 9 7 12) -> 9 - 7 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 3 = 9 (left: 9 7 12) -> 9 - 7 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (3 * 3 - 7) * 12 = 24"
            }
        },
        "Input": "3 3 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 1
            }
        ]
    },
    "910": {
        "puzzle": "4 5 7 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 5 = 20 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "7 * 9 = 63 (left: 4 5 63)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 9 35"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 35 / 4 = 8.75 (left: 8.75 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9 35) -> 35 / 4 = 8.75 (left: 8.75 9) -> 8.75 + 9 = 17.75 (left: 17.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12.6"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 / 12.6 = 0.31746031746 (left: 0.31746031746)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 / 12.6 = 0.31746031746 (left: 0.31746031746) -> 0.31746031746 - 2 = -1.68253968254",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 9"
                }
            },
            "Step 1": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 + 9 = 13 (left: 9) -> There are no possible next steps with the input 9.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12.6"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 + 12.6 = 16.6 (left: 16.6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 + 12.6 = 16.6 (left: 16.6) -> There are no possible next steps for the input 16.6 as it is already a single number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4 12.6"
                }
            },
            "Step 5": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 - 12.6 = -8.6 (left: -8.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 * 9 = 63 (left: 4 5 63) -> 63 / 5 = 12.6 (left: 4 12.6) -> 4 - 12.6 = -8.6 (left: -8.6) -> -8.6 - 2 = -10.6",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 4 9 35)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 1": {
                "Step": "5 + 7 = 12 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 7 9"
                }
            },
            "Step 3": {
                "Step": "5 * 7 = 35 (left: 4 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 7 = 35 (left: 4 9) -> 4 - 9 = -5 (left: -5 9) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "5 9"
                }
            },
            "Step 5": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 7 = 12 (left: 4 9) -> 9 - 4 = 5 (left: 5 9) -> 9 / 5 = 1.8 (left: 1.8) -> 1.8 + 2 = 3.8 (left: 2 3.8)",
                "Pruning": null
            }
        },
        "Input": "4 5 7 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "911": {
        "puzzle": "1 2 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "8 - 2 = 6 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 2 = 6 (left: 1 6 13) -> 1 + 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 1 6 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 1 6 13) -> 13 - 1 = 12 (left: 6 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 12"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 1 6 13) -> 13 - 1 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 1 6 13) -> 13 - 1 = 12 (left: 6 12) -> 12 - 6 = 6 (left: 6 12) -> 12 / 6 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 8 13"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 1 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 2 = 10 (left: 1 10 13) -> 13 - 1 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "6 12"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 1 6 13) -> 13 - 1 = 12 (left: 6 12) -> 6 + 12 = 18 (left: 18) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 1 6 13) -> 13 - 1 = 12 (left: 6 12) -> 6 + 12 = 18 (left: 18)  -> There are no possible next steps as there are no other numbers provided in the input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 2 = 11 (left: 1 8  -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7 13"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 1 6 13) -> 1 + 6 = 7 (left: 7 13) -> 20 + 5 = 25 (left: 25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 1 6 13) -> 1 + 6 = 7 (left: 7 13) -> 20 + 5 = 25 (left: 25) -> 25 * 2 = 50 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Input": "1 2 8 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "912": {
        "puzzle": "4 6 6 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 6 + 9 = 15 (left: 24 15) -> 24 + 15 = 39 (left: 39)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 6 6 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 4 = 13 (left: 6 6 13) -> 6 + 6 = 12 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1.5 + 6 = 7.5"
                }
            },
            "Step 5": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 1.5 + 6 = 7.5 -> 1.5 + 6 = 7.5 (left: 7.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 1.5 + 6 = 7.5 -> 1.5 + 6 = 7.5 (left: 7.5) -> 7.5 * 8 = 60 (left: 60)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 24 6 9)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 1": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 4 = 1.5 (left: 1.5 6 9) -> 1.5 + 6 = 7.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 6 6 9"
                }
            },
            "Step 3": {
                "Step": "9 + 4 = 13 (left: 6 6 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 4 = 13 (left: 6 6 13) -> 13 - 6 = 7 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 7"
                }
            },
            "Step 5": {
                "Step": "9 + 4 = 13 (left: 6 6 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 + 4 = 13 (left: 6 6 13) -> 13 - 6 = 7 (left: 6 7) -> 6 + 7 = 13 (left: 13) -> 13 + 2 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 6 6 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 24 - 6 = 18 (left: 9 18) -> 9 + 18 = 27 (left: 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "24 6 9"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 3 - 24 = -21 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 3 - 24 = -21 (left: 3) -> There are no possible next steps with just the number 3.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 24 6 9) -> 9 - 6 = 3 (left: 24 3) -> 3 - 24 = -21 (left: 3) -> There are no possible next steps with just the number 3. -> There are no possible next steps with just the number 3.",
                "Pruning": null
            }
        },
        "Input": "4 6 6 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "913": {
        "puzzle": "1 4 4 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left: 0 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left: 0 8) -> 8 - 0 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left: 0 8) -> 8 - 0 = 8 (left: 8) -> There are no possible next steps with only one number.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left: 0 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left: 0 8) -> 8 - 8 = 0 (left: 0) -> No possible next steps, as there are no numbers provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 1": {
                "Step": "4 / 1 = 4 (left: 4 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 5 + 9 = 14 (left: 14 3",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 8"
                }
            },
            "Step 3": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left: 0 8) -> 0 + 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left: 0 8) -> 0 + 8 = 8 (left: 8) -> 8 / 2 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0 8"
                },
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left: 0 8) -> 0 * 8 = 0 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left: 0 8) -> 0 * 8 = 0 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with only one number."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 - 1 = 3 (left: 3 4 ",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 4 "
                }
            },
            "Step 1": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 - 1 = 3 (left: 3 4  -> 4 / 3 = 1.33333 (left: 1.33333) -> 1.33333 / 2 = 0.666665 (left: 0.666665)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 8"
                }
            },
            "Step 3": {
                "Step": "8 - 4 = 4 (left: 1 4 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 4 = 4 (left: 1 4 4) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 8"
                }
            },
            "Step 5": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left: 0 8) -> 0 + 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 / 1 = 4 (left: 4 4 8) -> 4 - 4 = 0 (left: 0 8) -> 0 + 8 = 8 (left: 8) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Input": "1 4 4 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "914": {
        "puzzle": "1 5 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 5 = 6 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 / 5 = 2.2 (left: 2.2 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 5 11 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 + 11 = 22 (left: 5 22 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 39"
                }
            },
            "Step 5": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 - 11 = 39 (left: 1 39) -> 1 * 39 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 - 11 = 39 (left: 1 39) -> 1 * 39 = 39 (left: 39) -> 39 + 2 = 41 (left: 2)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "39 + 2 = 41"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "5 * 10 = 50 (left: 1 50 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 - 11 = 39 (left: 1 39)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 6 "
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 1 6  -> 6 - 1 = 5 (left: 5) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 22 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 + 11 = 22 (left: 5 22 11) -> 5 * 22 = 110 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 + 11 = 22 (left: 5 22 11) -> 5 * 22 = 110 (left: 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "39 + 2 = 41"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 1 = 10 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 1 = 11 (left: 11 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 1 = 11 (left: 11 11) -> 11 * 11 = 121 (left: 121)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 39"
                }
            },
            "Step 3": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 - 11 = 39 (left: 1 39) -> 1 * 39 = 39 (left: 39)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 10 = 50 (left: 1 50 11) -> 50 - 11 = 39 (left: 1 39) -> 1 * 39 = 39 (left: 39) -> 39 + 2 = 41",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 22 11"
                }
            },
            "Step 5": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 + 11 = 22 (left: 5 22 11) -> 22 - 5 = 17 (left: 17 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 1 = 11 (left: 5 11 11) -> 11 + 11 = 22 (left: 5 22 11) -> 22 - 5 = 17 (left: 17 11) -> 17 * 11 = 187 (left: 187)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "39 + 2 = 41"
                }
            }
        },
        "Input": "1 5 10 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "915": {
        "puzzle": "3 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 * 7 = 42 (left: 11 42)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 6 * 7 = 42 (left: 11 42)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 / 14 = 0.71428571429 (left: 0.71428571429)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 10 / 14 = 0.71428571429 (left: 0.71428571429) -> There are no possible next steps for the input 0.71428571429.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 3 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 3 6 7) -> 6 + 7 = 13 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 6 7 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 6 7 11) -> 7 + 11 = 18 (left: 6 18)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 - 6 = 5 (left: 3 4 5)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 11"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 3 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4) -> 1 + 4 = 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "10 14"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 3 10 11) -> 11 + 3 = 14 (left: 10 14) -> 14 - 10 = 4 (left: 4) -> 4 * 4 = 16",
                "Pruning": null
            }
        },
        "Input": "3 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "916": {
        "puzzle": "2 4 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 8 9) -> 6 + 8 = 14 (left: 9 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 8 8 9) -> 9 + 8 = 17 (left: 8 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 4 1) -> 4 + 2 = 6 (left: 6 1) -> 6 + 1 = 7 (left: 1 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 4 1) -> 4 + 2 = 6 (left: 6 1) -> 6 + 1 = 7 (left: 1 7) -> 7 - 1 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 4 = 8 (left: 8 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 4 = 8 (left: 8 8  -> 8 * 8 = 64 (left: 64)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 3": {
                "Step": "8 + 2 = 10 (left: 4 8 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 2 = 10 (left: 4 8 10) -> 4 * 8 = 32 (left: 10 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 4 1) -> 4 + 2 = 6 (left: 6 1) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 4 1) -> 4 + 2 = 6 (left: 6 1) -> 6 - 1 = 5 (left: 5) -> No possible next steps with just one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 4 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5 8) -> 2 + 5 = 7 (left: 7 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 8 9"
                }
            },
            "Step 3": {
                "Step": "9 - 8 = 1 (left: 2 4 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 8 = 1 (left: 2 4 1) -> 4 + 2 = 6 (left: 6 1)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6 1"
                }
            },
            "Step 5": {
                "Step": "9 - 8 = 1 (left: 2 4 1) -> 4 + 2 = 6 (left: 6 1) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 8 = 1 (left: 2 4 1) -> 4 + 2 = 6 (left: 6 1) -> 6 / 1 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 8 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "917": {
        "puzzle": "1 4 5 13",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 5 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 5 5 13) -> 3 + 9 = 12 (left: 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 3": {
                "Step": "13 / 1 = 13 (left: 4 5 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 10 + 6 = 16 (left: 6 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 12"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 8 13) -> 13 - 1 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 8 13) -> 13 - 1 = 12 (left: 8 12) -> 12 - 8 = 4 (left: 4) -> 4 * 4 = 16 (left: 16) ",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 4 5 12) -> 4 * 5 = 20 (left: 20 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 1 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 12"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 8 13) -> 13 - 1 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 8 13) -> 13 - 1 = 12 (left: 8 12) -> 8 * 12 = 96 (left: 96) -> 9 / 6 = 1.5 (left: 96 1.5)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 1": {
                "Step": "13 / 1 = 13 (left: 4 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 / 1 = 13 (left: 4 5  -> 5 / 4 = 1.25 (left: 1.25)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 5 13"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 1 8 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 1 8 13) -> 13 - 1 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "8 12"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 1 8 13) -> 13 - 1 = 12 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 1 8 13) -> 13 - 1 = 12 (left: 8 12) -> 8 / 12 = 0.6666666666666666 (left: 0.6666666666666666) -> 0.6666666666666666 * 2 = 1.3333333333333332",
                "Pruning": null
            }
        },
        "Input": "1 4 5 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "918": {
        "puzzle": "2 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "7 + 2 = 9 (left: 2 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 7  -> 5 + 7 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 7 12) -> 7 / 4 = 1.75 (left: 1.75 12)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14) -> 2 * 14 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14) -> 2 * 14 = 28 (left: 28) -> No possible next steps with the input 28.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 2 7 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 2 7  -> 2 + 7 = 9 (left: 9) ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 2 5 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14) -> 2 * 14 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14) -> 2 * 14 = 28 (left: 28) -> There are no possible next steps with the input 28.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 7 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 7 12) -> 7 - 4 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 7 12"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 2 12 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 14"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14) -> 2 * 14 = 28 (left: 28)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 2 12 14) -> 14 - 12 = 2 (left: 2 14) -> 2 * 14 = 28 (left: 28) -> There are no possible next steps with the number 28.",
                "Pruning": null
            }
        },
        "Input": "2 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "919": {
        "puzzle": "3 3 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "7 / 3 = 2 (left: 3 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 3 = 2 (left: 3 2  -> 3 - 2 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 / 3 = 2.33 (left: 2.33)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 / 3 = 2.33 (left: 2.33) -> 2.33 + 2 = 4.33",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (3 * (6 - 3)) * 7 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "6 + 3 = 9 (left: 6 7 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 3 = 9 (left: 6 7 9) -> 7 * 9 = 63 (left: 6 63)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 7) -> 18 * 7 = 126 (left: 126)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 3 = 3 (left: 3 6 7)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 6 7"
                }
            },
            "Step 1": {
                "Step": "3 + 6 = 9 (left: 9 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 6 = 9 (left: 9 6 7) -> 9 * 6 = 54 (left: 54 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 3 6 7) -> 7 - 3 = 4 (left: 4 6) -> 4 * 6 = 24 (left: 24) -> Answer: (6 - 3) * (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "3 3 6 7",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "920": {
        "puzzle": "1 5 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 3": {
                "Step": "9 + 13 = 22 (left: 1 5 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 13 = 22 (left: 1 5  -> 1 * 5 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "630"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 30 * 6 = 180 (left: 180)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "None, the calculation is complete."
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 / 1 = 13 (left: -> None, the calculation is complete. -> None, the calculation is complete.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 9 = 45 (left: 1 45 13)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 45 / 1 = 45 (left: 45 13) -> 45 - 13 = 32 (left: 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 9 13"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 1 14 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 1 14 13) -> 14 - 1 = 13 (left: 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "630"
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 60 / 3 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "630"
                }
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630) -> 6 * 30 = 180 (left: 180)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 * 5 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 1": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 + 1 = 14 (left: 14 45) -> 14 * 45 = 630 (left: 630)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 45 13"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 / 1 = 13 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 / 1 = 13 (left: -> None, the calculation is complete.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "None, the calculation is complete."
                }
            },
            "Step 5": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 / 1 = 13 (left: -> None, the calculation is complete. -> Calculation is complete.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 9 = 45 (left: 1 45 13) -> 13 / 1 = 13 (left: -> None, the calculation is complete. -> Calculation is complete. -> Calculation is complete.",
                "Pruning": null
            }
        },
        "Input": "1 5 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "921": {
        "puzzle": "5 6 7 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 6 6"
                }
            },
            "Step 1": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 8 + 4 = 12 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 8 + 4 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "5 13 13"
                }
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 5 13 13) -> 13 / 5 = 2.6 (left: 2.6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 8 + 4 = 12 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 8 + 4 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10 12)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 5 13 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 5 13 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 5 13  -> 5 * 13 = 65 (left: 65)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 8 + 4 = 12 (left: 2 12) -> 2 + 12 = 14",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 8 + 4 = 12 (left: 2 12) -> 2 + 12 = 14 -> 12 - 2 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2 12"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 8 + 4 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 8 + 4 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 7 = 6 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 7 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 7 11 13) -> 13 - 7 = 6 (left: 6 11)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 7 13"
                }
            },
            "Step 3": {
                "Step": "7 - 5 = 2 (left: 2 6 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 5 = 2 (left: 2 6 13) -> 13 - 6 = 7 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 8 + 4 = 12 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "2 12"
                }
            },
            "Step 6": {
                "Step": "13 - 7 = 6 (left: 5 6 6) -> 5 * 6 = 30 (left: 6 30) -> 8 + 4 = 12 (left: 2 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Input": "5 6 7 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "922": {
        "puzzle": "5 5 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 8 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> 80 + 2 = 82",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 * 16 = 128 (left: 4 128) -> 128 / 4 = 32 (left: 32)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "80 + 2 = 82"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 1": {
                "Step": "8 + 2 = 10 (left: 5 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 + 2 = 10 (left: 5 10 10) -> 10 / 5 = 2 (left: 2 10 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 3": {
                "Step": "5 + 5 = 10 (left: 8 10 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 5 = 10 (left: 8 10 10) -> 10 - 8 = 2 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 * 10 = 80 (left: 80) -> 80 - 2 = 78 (left: 2)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "80 + 2 = 82"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 5 = 5 (left: 5 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 5 8 10) -> 5 * 8 = 40 (left: 10 40) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 10"
                }
            },
            "Step 3": {
                "Step": "8 + 5 = 13 (left: 5 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 5 = 13 (left: 5 10 13) -> 13 - 10 = 3 (left: 3 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 5 = 3 (left: 3 5 10) -> 3 + 5 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps for the number 18. It is a prime number and cannot be created by combining the numbers 2, 8, 8, and 14 using basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Input": "5 5 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "923": {
        "puzzle": "2 4 6 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 6 = 6 (left: 2 6 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 12 - 2 = 10 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 12 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 + 12 = 16 (left: 12 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 4 12 12) -> 4 + 12 = 16 (left: 12 16) -> 12 + 16 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 12 - 2 = 10 (left: 2 10) -> 10 / 2 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 12 - 2 = 10 (left: 2 10) -> 10 / 2 = 5 (left: 5) -> There are no possible next steps with the input 5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 ^ 2 = 16 (left: 2 16 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 4 6 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 4 6  -> 6 - 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 2 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 6 - 4 = 2 (left:",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 - 4 = 2 (left:"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 6 - 4 = 2 (left: -> 6 - 4 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 6 12) -> 6 - 4 = 2 (left: -> 6 - 4 = 2 (left: 2) -> 2 + 2 = 4 (left: 2 4)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 2 = 12 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 4 6 10) -> ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 4 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 4 6 6) -> 6 / 4 = 1.5 (left: 1.5 6)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 10"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 12 - 2 = 10 (left: 2 10) -> 2 * 10 = 20 (left: 20)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 2 6 12) -> 12 - 2 = 10 (left: 2 10) -> 2 * 10 = 20 (left: 20) -> There are no possible next steps with the input 20.",
                "Pruning": null
            }
        },
        "Input": "2 4 6 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "924": {
        "puzzle": "6 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 7 = 4 (left: 6 8 4)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 5 7 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 5 7 8) -> Input: 10 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 3": {
                "Step": "8 + 6 = 14 (left: 7 11 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 + 6 = 14 (left: 7 11 14) -> 11 - 7 = 4 (left: 4 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 14"
                }
            },
            "Step 5": {
                "Step": "8 + 6 = 14 (left: 7 11 14) -> 11 - 7 = 4 (left: 4 14) -> 14 - 4 = 10 (left: 10 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 + 6 = 14 (left: 7 11 14) -> 11 - 7 = 4 (left: 4 14) -> 14 - 4 = 10 (left: 10 14) -> 14 / 10 = 1.4 (left: 1.4)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 4 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 3": {
                "Step": "7 * 8 = 56 (left: 6 11 56)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 11 * 6 = 66 (left: 66 56)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "5 11"
                }
            },
            "Step 5": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 13 - 8 = 5 (left: 5 11) -> 5 / 11 = 0.45454545454545453 (left: 0.45454545454545453)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 13 - 8 = 5 (left: 5 11) -> 5 / 11 = 0.45454545454545453 (left: 0.45454545454545453) -> 0.45454545454545453 + 2 = 2.4545454545454546",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 8 = 15 (left: 6 11 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 * 8 = 56 (left: 6 11 56)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 * 8 = 56 (left: 6 11 56) -> 56 / 11 = 5.09 (left: 6 5.09)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 8 11"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 8 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 8 11 13) -> 13 - 8 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "4 15"
                }
            },
            "Step 5": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 4 15) -> 4 - 15 = -11 (left: -11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 + 8 = 15 (left: 6 11 15) -> 15 - 11 = 4 (left: 4 15) -> 4 - 15 = -11 (left: -11) -> There are no possible next steps with the input of -11.",
                "Pruning": null
            }
        },
        "Input": "6 7 8 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "925": {
        "puzzle": "7 9 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 7 = 2 (left: 2 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 7 = 2 (left: 2 9 13) -> 2 * 9 = 18 (left: 18 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 7 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 7 9 13) -> 13 - 7 = 6 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 22"
                }
            },
            "Step 5": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 9 + 13 = 22 (left: 1 22) -> 1 * 22 = 22 (left: 22 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 9 + 13 = 22 (left: 1 22) -> 1 * 22 = 22 (left: 22 22) -> 22 + 22 = 44",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 7 9 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 7 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 7 4 9) -> 3 + 5 = 8 (left: 8 2 2)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "7 * 9 = 63 (left: 9 13 63)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 * 9 = 63 (left: 9 13 63) -> 9 * 13 = 117 (left: 117 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 22"
                }
            },
            "Step 5": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 9 + 13 = 22 (left: 1 22) -> 1 * 22 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 9 + 13 = 22 (left: 1 22) -> 1 * 22 = 22 (left: 22) -> None, as there is only one number provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 9 = -2 (left: -2 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 9 13"
                }
            },
            "Step 1": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 1 + 9 = 10 (left: 10 13) -> 10 - 13 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 9 9 13"
                }
            },
            "Step 3": {
                "Step": "9 / 7 = 1 (left: 1 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 9 + 13 = 22 (left: 1 22)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1 22"
                }
            },
            "Step 5": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 9 + 13 = 22 (left: 1 22) -> 1 * 22 = 22 (left: 22)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 7 = 1 (left: 1 9 13) -> 9 + 13 = 22 (left: 1 22) -> 1 * 22 = 22 (left: 22) -> 22 / 2 = 11",
                "Pruning": null
            }
        },
        "Input": "7 9 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "926": {
        "puzzle": "3 6 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 3 = 9 (left: 9 6 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 1": {
                "Step": "12 / 3 = 4 (left: 4 9 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 3 = 4 (left: 4 9  -> Input: 3 5 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 3 6 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 3 6  -> 6 - 3 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "54 12"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 12) -> 9 * 6 = 54 (left: 54 12) -> 54 / 12 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 12) -> 9 * 6 = 54 (left: 54 12) -> 54 / 12 = 4.5 (left: 4.5) -> There are no possible next steps with the input \"4.5\" as it is not a valid mathematical expression.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 3 = 18 (left: 9 18 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 + 12 = 21 (left: 18 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 + 12 = 21 (left: 18 21) -> 18 * 21 = 378 (left: 378)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 6 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 12) -> 9 * 6 = 54 (left: 54 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with the input of 3.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 3 6  -> 6 - 3 = 3 (left: 3) -> There are no possible next steps with the input of 3. -> 3 + 3 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 18 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "9 6 12"
                }
            },
            "Step 1": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 3 = 9 (left: 9 6 12) -> 12 / 6 = 2 (left: 9 2) -> 9 - 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "18 9 12"
                }
            },
            "Step 3": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 2 = 18 (left: 18 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 6 = 18 (left: 18 9 12) -> 9 * 2 = 18 (left: 18 12) -> 18 + 12 = 30 (left: 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "54 12"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 6 9 12) -> 9 * 6 = 54 (left: 54 12) -> 54 / 12 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 6 9 12) -> 9 * 6 = 54 (left: 54 12) -> 54 / 12 = 4.5 (left: 4.5) -> There are no possible next steps with the input of 4.5.",
                "Pruning": null
            }
        },
        "Input": "3 6 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "927": {
        "puzzle": "6 9 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 9 = 54 (left: 12 13 54)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 12 + 13 = 25 (left: 15 25)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 273"
                }
            },
            "Step 3": {
                "Step": "12 + 9 = 21 (left: 6 13 21) -> 13 * 21 = 273 (left: 6 273) -> 273 / 6 = 45.5 (left: 45.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 9 = 21 (left: 6 13 21) -> 13 * 21 = 273 (left: 6 273) -> 273 / 6 = 45.5 (left: 45.5) -> There are no possible next steps with the input 45.5 as it is a single number and not a mathematical expression.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 273"
                }
            },
            "Step 5": {
                "Step": "12 + 9 = 21 (left: 6 13 21) -> 13 * 21 = 273 (left: 6 273) -> 9 * 3 = 27 (left: 27 27",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 9 = 21 (left: 6 13 21) -> 13 * 21 = 273 (left: 6 273) -> 9 * 3 = 27 (left: 27 27 -> 27 / 27 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There are no possible next steps with the input 45.5 as it is a single number and not a mathematical expression."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 3 = 15 (left: 6 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 3 = 15 (left: 6 13 15) -> 6 * 13 = 78 (left: 78 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 273"
                }
            },
            "Step 3": {
                "Step": "12 + 9 = 21 (left: 6 13 21) -> 13 * 21 = 273 (left: 6 273) -> 6 * 273 = 1638 (left: 1638)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 9 = 21 (left: 6 13 21) -> 13 * 21 = 273 (left: 6 273) -> 6 * 273 = 1638 (left: 1638) -> 1 + 63 + ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 273"
                }
            },
            "Step 5": {
                "Step": "12 + 9 = 21 (left: 6 13 21) -> 13 * 21 = 273 (left: 6 273) -> 6 + 273 = 279 (left: 279)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 9 = 21 (left: 6 13 21) -> 13 * 21 = 273 (left: 6 273) -> 6 + 273 = 279 (left: 279) -> 7 + 9 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 + 63 + "
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 12 13 15)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 9 = 21 (left: 6 13 21)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 9 = 21 (left: 6 13 21) -> 13 * 21 = 273 (left: 6 273)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 15"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 13 - 12 = 1 (left: 1 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 12 13 15) -> 13 - 12 = 1 (left: 1 15) -> 15 - 1 = 14 (left: 1 14)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 273"
                }
            },
            "Step 5": {
                "Step": "12 + 9 = 21 (left: 6 13 21) -> 13 * 21 = 273 (left: 6 273) -> 273 / 6 = 45.5 (left: 45.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 9 = 21 (left: 6 13 21) -> 13 * 21 = 273 (left: 6 273) -> 273 / 6 = 45.5 (left: 45.5) -> There are no possible next steps for the input 45.5.",
                "Pruning": null
            }
        },
        "Input": "6 9 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "928": {
        "puzzle": "4 7 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 7 13 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 7 13 13) -> 13 - 7 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 9 13) -> 13 - 3 = 10 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1.75 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 13 - 1.75 = 11.25 (left: 11.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 13 - 1.75 = 11.25 (left: 11.25) -> There is only one possible next step:",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 5 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 * 13 = 22.75 (left: 22.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 3": {
                "Step": "7 - 4 = 3 (left: 3 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 4 = 3 (left: 3 9 13) -> 3 + 9 = 12 (left: 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1.75 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 + 13 = 14.75 (left: 14.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 1.75 + 13 = 14.75 (left: 14.75) -> There are no possible next steps for the input 14.75 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 * 7 = 28 (left: 9 13 28)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 1": {
                "Step": "4 + 7 = 11 (left: 9 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 7 = 11 (left: 9 11 13) -> 11 + 13 = 24 (left: 9 24)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 7 9 13"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 4 7 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1.75 13"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 13 - 1.75 = 11.25 (left: 11.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 4 7 13) -> 7 / 4 = 1.75 (left: 1.75 13) -> 13 - 1.75 = 11.25 (left: 11.25) -> There is only one number provided (11.25), so there are no possible next steps to calculate.",
                "Pruning": null
            }
        },
        "Input": "4 7 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "929": {
        "puzzle": "5 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 6 = 6 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 11 12) -> 12 - 8 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1. -> There are no possible next steps with just the input of 1.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9.6 12"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 12) -> 1.2 * 8 = 9.6 (left: 9.6 12) -> 12 / 9.6 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 12) -> 1.2 * 8 = 9.6 (left: 9.6 12) -> 12 / 9.6 = 1.25 (left: 1.25) -> 1.25 - 2 = -0.75",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 1": {
                "Step": "12 / 6 = 2 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 6 = 2 (left:  -> It seems like you forgot to provide an input. Please enter a set of numbers to continue the calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 8 12) -> Input: 3 7 7",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9.6 12"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 12) -> 1.2 * 8 = 9.6 (left: 9.6 12) -> 9.6 + 12 = 21.6 (left: 21.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 12) -> 1.2 * 8 = 9.6 (left: 9.6 12) -> 9.6 + 12 = 21.6 (left: 21.6) -> There are no possible next steps for the input 21.6 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 8 12 30)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 12 30"
                }
            },
            "Step 1": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 / 30 = 0.4 (left: 8 0.4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 6 = 30 (left: 8 12 30) -> 12 / 30 = 0.4 (left: 8 0.4) -> 8 - 0.4 = 7.6 (left: 7.6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 12"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 12) -> 1.2 * 8 = 9.6 (left: 9.6 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9.6 12"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 12) -> 1.2 * 8 = 9.6 (left: 9.6 12) -> 12 / 9.6 = 1.25 (left: 1.25 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1.2 8 12) -> 1.2 * 8 = 9.6 (left: 9.6 12) -> 12 / 9.6 = 1.25 (left: 1.25 12) -> 12 - 1.25 = 10.75 (left: 10.75)",
                "Pruning": "NA"
            }
        },
        "Input": "5 6 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "930": {
        "puzzle": "2 4 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 2 4 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 2 4 13) -> 13 - 4 = 9 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> 8 - 4 = 4 (left: 4)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "4.8"
                }
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There is only one number provided in the input (4.8), so there are no possible next steps as no operations can be performed with just one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 / 6 = 0.6666666666666666 (left: 0.6666666666666666 5) -> 0.6666666666666666 + 5 = 5.666666666666667 (left: 5.666666666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 2 10 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 2 10 7) -> 2 + 10 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8 as it is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8 as it is already a single number. -> There are no possible next steps for the input 4.8 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 4 6 5)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 5"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 6 - 4 = 2 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 7"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 2 24 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 2 24  -> 24 - 2 = 22 (left: 22)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "4.8"
                }
            },
            "Step 5": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8 as it is already a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 2 = 5 (left: 4 6 5) -> 4 * 6 = 24 (left: 5 24) -> 24 / 5 = 4.8 (left: 4.8) -> There are no possible next steps for the input 4.8 as it is already a single number. -> There are no possible next steps for the input 4.8 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "2 4 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "931": {
        "puzzle": "2 5 10 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "10 - 5 = 5 (left: 2 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 5 10 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 2 = 12 (left: 5 10  -> 5 * 10 = 50 (left: 50)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> ",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the input of -3."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 / 2 = 5 (left: 5 10 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 10 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 10 10) -> 10 + 10 = 20 (left: 10 20)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 2 - 5 = -3 (left: -3) -> There are no possible next steps with the input of -3.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)  -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 8 10 10)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 1": {
                "Step": "2 + 5 = 7 (left: 7 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 5 = 7 (left: 7 10 10) -> 7 + 10 = 17 (left: 10 10 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 10 10"
                }
            },
            "Step 3": {
                "Step": "10 / 5 = 2 (left: 2 2 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 5 = 2 (left: 2 2  -> 2 * 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 5 = 5 (left: 2 5 10) -> 10 - 5 = 5 (left: 2 5) -> 5 / 2 = 2.5 (left: 2.5) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null
            }
        },
        "Input": "2 5 10 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "932": {
        "puzzle": "6 6 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 / 6 = 1 (left: 7 1)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 * 1 = 7 (left: 7) -> 7 - 8 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: 48 / 2 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There is only one possible next step: 48 / 2 = 24"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: 48 / 2 = 24 -> 48 / 2 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: 48 / 2 = 24 -> 48 / 2 = 24 -> 48 * 2 = 96 (left: 96)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 6 = 36 (left: 7 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 1": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 - 1 = 6 (left: 6) -> 8 - 6 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "7 1"
                }
            },
            "Step 3": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 6 = 1 (left: 7 1) -> 7 / 1 = 7 (left: 7) -> 7 / 8 = 0.875 (left: 0.875 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There is only one possible next step: 48 / 2 = 24"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: 48 / 2 = 24 -> 48 / 2 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "There is only one possible next step: 48 / 2 = 24"
                }
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: 48 / 2 = 24 -> 48 / 2 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 42 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 1": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 * 6 = 252 (left: 252) -> 2 - 5 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "42 6"
                }
            },
            "Step 3": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> None, since there is only one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "There is only one possible next step: 48 / 2 = 24"
                }
            },
            "Step 5": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: 48 / 2 = 24 -> 48 / 2 = 24",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 7 = 42 (left: 42 6) -> 42 + 6 = 48 (left: 48) -> There is only one possible next step: 48 / 2 = 24 -> 48 / 2 = 24 -> 48 / 24 = 2 (left: 2 24)",
                "Pruning": null
            }
        },
        "Input": "6 6 7 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "933": {
        "puzzle": "6 9 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "11 - 9 = 2 (left: 6 9 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "9 9 11"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 / 9 = 1.22 (left: 1.22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 11 / 9 = 1.22 (left: 1.22) -> 1.22 + 2 = 3.22",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "11 - 3 = 8 (left:"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 - 3 = 8 (left: -> Input",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 - 3 = 8 (left: -> Input -> There seems to be an error in the input. Please provide a valid set of numbers.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 * 9 = 27 (left: 27 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 3": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 - 3 = 8 (left:",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1.5 2"
                }
            },
            "Step 5": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2) -> 2 / 1.5 = 1.33 (left: 1.33)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 9 = 2 (left: 6 9 2) -> 9 / 6 = 1.5 (left: 1.5 2) -> 2 / 1.5 = 1.33 (left: 1.33) -> 1.33 + 1 = 2.33",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 1": {
                "Step": "9 - 6 = 3 (left: 3 9 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 3 + 9 = 12 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 9 9 11"
                }
            },
            "Step 3": {
                "Step": "6 + 9 = 15 (left: 9 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 9 = 15 (left: 9 9 11) -> 9 + 9 = 18 (left: 11 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "11 - 3 = 8 (left:"
                }
            },
            "Step 5": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 - 3 = 8 (left: -> 11 / 3 = 3.6666666666666665 (left: 3.6666666666666665)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 6 = 3 (left: 3 9 11) -> 11 - 3 = 8 (left: -> 11 / 3 = 3.6666666666666665 (left: 3.6666666666666665) -> 3.6666666666666665 + 2 = 5.6666666666666665",
                "Pruning": null
            }
        },
        "Input": "6 9 9 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "934": {
        "puzzle": "5 8 11 12",
        "Agent 0": {
            "Step 0": {
                "Step": "11 + 5 = 16 (left: 8 12 16)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 11 = 1 (left: 5 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 11 = 1 (left: 5 1 12) -> 12 - 5 = 7 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 3": {
                "Step": "11 - 5 = 6 (left: 6 8 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 5 = 6 (left: 6 8  -> 6 * 8 = 48 (left: 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "5 7"
                }
            },
            "Step 5": {
                "Step": "12 - 11 = 1 (left: 5 1 12) -> 12 - 5 = 7 (left: 5 7) -> 5 + 7 = 12 (left: 12) ",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 11 = 1 (left: 5 1 12) -> 12 - 5 = 7 (left: 5 7) -> 5 + 7 = 12 (left: 12)  -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 11 12 13)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 + 12 = 23 (left: 13) -> 13 + 2 = 15 (left: 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 13 / 11 = 1.18 (left: 1.18 12) -> 1.18 - 12 = -10.82 (left: -10.82)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "145"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 14 - 5 = 9 (left: 9 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145) -> 14 - 5 = 9 (left: 9 5) -> 9 + 5 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "11 12 13"
                }
            },
            "Step 1": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 8 = 13 (left: 11 12 13) -> 11 * 12 = 132 (left: 13 132) -> 13 + 132 = 145 (left: 145)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 11 12"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 11 12 40)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 11 12 40) -> 40 - 12 = 28 (left: 11 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "11 28"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 11 12 40) -> 40 - 12 = 28 (left: 11 28) -> 28 / 11 = 2.54545 (left: 2.54545)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 11 12 40) -> 40 - 12 = 28 (left: 11 28) -> 28 / 11 = 2.54545 (left: 2.54545) -> There are no possible next steps for the input 2.54545 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "5 8 11 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "935": {
        "puzzle": "5 6 8 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "10 - 6 = 4 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 6 = 4 (left:  -> It looks like you didn't provide an input. Could you please enter a set of numbers for me to find possible next steps for you?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 2 10"
                }
            },
            "Step 3": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5) -> 5 + 5 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 30"
                }
            },
            "Step 5": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 10 - 8 = 2 (left: 2 30) -> 30 / 2 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 10 - 8 = 2 (left: 2 30) -> 30 / 2 = 15 (left: 15) -> 15 - 8 = 7 (left: 7 15)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 2 6 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 8 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 8 10 11) -> 10 / 8 = 1.25 (left: 1.25 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 8 10 30)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 10 30) -> 10 - 8 = 2 (left: 2 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "10"
                }
            },
            "Step 5": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5) -> 5 + 5 = 10 (left: 10) -> 10 + 10 = 20",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 8 = 2 (left: 5 2 10) -> 10 / 2 = 5 (left: 5 5) -> 5 + 5 = 10 (left: 10) -> 10 + 10 = 20 -> 10 - 10 = 0 (left: 0 20)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 8 = 2 (left: 5 2 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 5 10 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 5 10 14) -> 5 + 10 = 15 (left: 14 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 8 10"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 8 30 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 8 30 10) -> 30 - 8 = 22 (left: 22 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "14 15"
                }
            },
            "Step 5": {
                "Step": "6 + 8 = 14 (left: 5 10 14) -> 5 + 10 = 15 (left: 14 15) -> 14 + 15 = 29 (left: 29)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 8 = 14 (left: 5 10 14) -> 5 + 10 = 15 (left: 14 15) -> 14 + 15 = 29 (left: 29) -> 29 + 2 = 31",
                "Pruning": null
            }
        },
        "Input": "5 6 8 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "936": {
        "puzzle": "6 11 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 12 13 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 3": {
                "Step": "13 - 6 = 7 (left: 7 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 6 = 7 (left: 7 11 12) -> 7 * 11 = 77 (left: 12 77)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "25 66"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 / 66 \u2248 0.3788 (left: 0.3788)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 / 66 \u2248 0.3788 (left: 0.3788) -> There are no possible next steps with the input of 0.3788 as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 13 = 25 (left: 6 11 25)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 13 = 25 (left: 6 11 25) -> 25 - 6 = 19 (left: 11 19)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "25 66"
                }
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 - 66 = -41 (left: -41)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 - 66 = -41 (left: -41) -> -41 + 2 = -39",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "25 66"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 + 66 = 91 (left: 91)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 + 66 = 91 (left: 91) -> None. The input number is too small to perform any arithmetic operations with the given numbers.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "11 + 12 = 23 (left: 6 13 23)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 11 = 66 (left: 12 13 66)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 11 12 13"
                }
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 12 13 66)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 66 / 12 = 5.5 (left: 5.5 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "25 66"
                }
            },
            "Step 5": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 + 66 = 91 (left: 91)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 11 = 66 (left: 12 13 66) -> 12 + 13 = 25 (left: 25 66) -> 25 + 66 = 91 (left: 91) -> 9 + 1 = 10 (left: 10)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "-41 + 2 = -39"
                }
            }
        },
        "Input": "6 11 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "937": {
        "puzzle": "2 2 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "8 / 2 = 4 (left: 2 4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 / 2 = 4 (left: 2 4 8) -> 2 * 4 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 8) -> 8 - 6 = 2 (left: 2 8 8) -> Input: 2 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 8) -> 8 - 6 = 2 (left: 2 8 8) -> Input: 2 8 -> 8 / 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 2 = 6 (left: 2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> Input: 7 9 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 8 8"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 8 8) -> 8 - 6 = 2 (left: 2 8 8) -> Input: 2 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 8 8) -> 8 - 6 = 2 (left: 2 8 8) -> Input: 2 8 -> 8 / 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 8 8"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 8) -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 8"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 8 8) -> 8 - 6 = 2 (left: 2 8 8)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 12"
                }
            },
            "Step 5": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 2 = 4 (left: 4 8 8) -> 4 + 8 = 12 (left: 8 12) -> 8 - 12 = -4 (left: -4) -> There are no possible next steps with the input \"-4\" as it does not match any of the previous calculations.",
                "Pruning": null
            }
        },
        "Input": "2 2 8 8",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "938": {
        "puzzle": "2 7 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "12 + 2 = 14 (left: 7 12 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "13 + 2 = 15 (left: 7 12 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 + 2 = 15 (left: 7 12 15) -> 15 - 12 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "7 14"
                }
            },
            "Step 5": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14) -> 7 + 14 = 21 (left: 21)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 2 = 14 (left: 7 12 14) -> 14 - 7 = 7 (left: 7 14) -> 7 + 14 = 21 (left: 21) -> None - the input is only one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 13 - 9 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "12 + 13 = 25 (left: 2 7 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 13 = 25 (left: 2 7 25) -> 25 / 2 = 12.5 (left: 12.5 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1.3333 13"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 / 9 = 1.3333 (left: 1.3333 13) -> 13 + 1.3333 = 14.3333 (left: 14.3333)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 / 9 = 1.3333 (left: 1.3333 13) -> 13 + 1.3333 = 14.3333 (left: 14.3333) -> There are no possible next steps for the number 14.3333 as it is already a decimal number and cannot be further manipulated using basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 12 = 14 (left: 7 14 ",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 2 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 2 5 12) -> 2 + 5 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 7 12 13"
                }
            },
            "Step 3": {
                "Step": "2 + 7 = 9 (left: 9 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 / 9 = 1.3333 (left: 1.3333 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "1.3333 13"
                }
            },
            "Step 5": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 / 9 = 1.3333 (left: 1.3333 13) -> 13 / 1.3333 = 9.75 (left: 9.75)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 7 = 9 (left: 9 12 13) -> 12 / 9 = 1.3333 (left: 1.3333 13) -> 13 / 1.3333 = 9.75 (left: 9.75) -> There are no possible next steps for the input 9.75.",
                "Pruning": null
            }
        },
        "Input": "2 7 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "939": {
        "puzzle": "2 6 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 1": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 6 = 8 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12) -> 12 - 1 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 3": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 2 = 12 (left: 12 8 12) -> 12 - 8 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "8 - 2 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 - 0 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 - 2 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 - 0 = 6 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 2 = 10 (left: 6 8 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 1": {
                "Step": "6 + 8 = 14 (left: 2 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 8 = 14 (left: 2 14 12) -> 2 + 14 = 16 (left: 12 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 6 6 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 / 12 = 1 (left: 1) -> There are no possible next steps with the input of 1.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 12 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 12 8 12) -> 8 / 12 = 0.67 (left: 0.67 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 12"
                }
            },
            "Step 3": {
                "Step": "8 - 2 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 2 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "12 12"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 6 6 12) -> 6 + 6 = 12 (left: 12 12) -> 12 * 12 = 144 (left: 144) -> No next steps possible for the number 144 as it is already a single number.",
                "Pruning": null
            }
        },
        "Input": "2 6 8 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "940": {
        "puzzle": "3 4 9 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 4 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 4 12 13) -> 13 - 4 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 4 4"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 + 4 = 7 (left: 4 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 3 + 4 = 7 (left: 4 7) -> 4 * 7 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "13 21"
                }
            },
            "Step 5": {
                "Step": "3 * 4 = 12 (left: 12 9 13) -> 12 + 9 = 21 (left: 13 21) -> 13 - 21 = -8 (left: -8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 4 = 12 (left: 12 9 13) -> 12 + 9 = 21 (left: 13 21) -> 13 - 21 = -8 (left: -8) -> There are no possible next steps with the input of -8.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4 4) -> 4 / 3 = 1.33 (left: 1.33 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "7 9 13"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 + 9 = 16 (left: 13 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 + 9 = 16 (left: 13 16) -> 13 / 16 = 0.8125 (left: 0.8125)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "24 13"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13) -> 24 * 13 = 312 (left: 312) -> 3 / 1",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 4 6 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 4 6 13) -> 4 * 6 = 24 (left: 24 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 9 13"
                }
            },
            "Step 3": {
                "Step": "3 * 4 = 12 (left: 12 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 4 = 12 (left: 12 9 13) -> 12 + 9 = 21 (left: 13 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "0.8125"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 + 9 = 16 (left: 13 16) -> 13 / 16 = 0.8125 (left: 0.8125) -> 0.8125 + 2 = 2.8125",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 9 13) -> 7 + 9 = 16 (left: 13 16) -> 13 / 16 = 0.8125 (left: 0.8125) -> 0.8125 + 2 = 2.8125 -> 2 - 0.8125 = 1.1875 (left: 1.1875 2)",
                "Pruning": null
            }
        },
        "Input": "3 4 9 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "941": {
        "puzzle": "4 5 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 5 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 9 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 9 10 12) -> 12 / 9 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 3": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 * 10 = 200 (left: 12 200)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "12 200"
                }
            },
            "Step 5": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 * 10 = 200 (left: 12 200) -> 12 * 200 = 2400 (left: 200)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 4 = 20 (left: 20 10 12) -> 20 * 10 = 200 (left: 12 200) -> 12 * 200 = 2400 (left: 200) -> 200 * 2 = 400 (left: 2)"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 4 = 20 (left: 20 10 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 20 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> No possible next steps, as there is only one number left.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 * 5) / (10 / 12) = 24"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 10 = 2 (left: 4 5 2)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 10 12"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 9 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 9 10 12) -> 12 / 10 = 1.2 (left: 9 1.2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 2 + 12 = 14 (left: 14) -> 14 + 14 = 28",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 5 = 20 (left: 20 10 12) -> 20 / 10 = 2 (left: 2 12) -> 12 / 2 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)"
            }
        },
        "Input": "4 5 10 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 1
            },
            {
                "r": -1
            }
        ]
    },
    "942": {
        "puzzle": "1 2 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 7 = 9 (left: 1 9 ",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 3 7 11) -> Possible",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 3": {
                "Step": "1 * 2 = 2 (left: 2 7 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 2 = 2 (left: 2 7 11) -> 11 - 7 = 4 (left: 2 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> This input is already a final result.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> This input is already a final result. -> This input is already a final result.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left:",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 * 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 * 1 = 11 (left: 11) -> There are no possible next steps with the number 11.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> Possible next steps: -> There are no possible next steps with the current input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 1": {
                "Step": "7 / 1 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 / 1 = 7 (left: 7 11) -> 7 / 11 = 0.6363636363636364 (left: 0.6363636363636364)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 11"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 1 5 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 1 5 11) -> 5 / 1 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 1 = 11 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 - 1 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 11) -> 11 / 1 = 11 (left: -> 11 - 1 = 10 (left: 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null
            }
        },
        "Input": "1 2 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "943": {
        "puzzle": "4 5 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 4 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 4 8 11) -> 4 + 8 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "5 / 6 = 0.83333333 (left: 4 0.83333333 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 / 6 = 0.83333333 (left: 4 0.83333333 8) -> 0.83333333 * 8 = 6.66666664 (left: 4 6.66666664)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 6.66666664"
                }
            },
            "Step 5": {
                "Step": "5 / 6 = 0.83333333 (left: 4 0.83333333 8) -> 0.83333333 * 8 = 6.66666664 (left: 4 6.66666664) -> 4 - 6.66666664 = -2.66666664 (left: -2.66666664)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 / 6 = 0.83333333 (left: 4 0.83333333 8) -> 0.83333333 * 8 = 6.66666664 (left: 4 6.66666664) -> 4 - 6.66666664 = -2.66666664 (left: -2.66666664) -> There are no possible next steps with the input -2.66666664 as it is already a single value.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 4 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 4 5  -> 4 - 5 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 8 * 4 = 32 (left: 32 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 6.66666664"
                }
            },
            "Step 5": {
                "Step": "5 / 6 = 0.83333333 (left: 4 0.83333333 8) -> 0.83333333 * 8 = 6.66666664 (left: 4 6.66666664) -> 4 * 6.66666664 = 26.66666656 (left: 26.66666656)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 / 6 = 0.83333333 (left: 4 0.83333333 8) -> 0.83333333 * 8 = 6.66666664 (left: 4 6.66666664) -> 4 * 6.66666664 = 26.66666656 (left: 26.66666656) -> 26.66666656 * 2 = 53.33333312",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 1": {
                "Step": "4 + 5 = 9 (left: 6 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 5 = 9 (left: 6 8 9) -> 8 - 6 = 2 (left: 2 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 5 6 8"
                }
            },
            "Step 3": {
                "Step": "5 * 6 = 30 (left: 4 8 30)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 6 = 30 (left: 4 8 30) -> 4 + 8 = 12 (left: 12 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 6.66666664"
                }
            },
            "Step 5": {
                "Step": "5 / 6 = 0.83333333 (left: 4 0.83333333 8) -> 0.83333333 * 8 = 6.66666664 (left: 4 6.66666664) -> 6.66666664 * 4 = 26.66666656 (left: 4 26.66666656)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 / 6 = 0.83333333 (left: 4 0.83333333 8) -> 0.83333333 * 8 = 6.66666664 (left: 4 6.66666664) -> 6.66666664 * 4 = 26.66666656 (left: 4 26.66666656) -> 4 - 26.66666656 = -22.66666656 (left: -22.666666",
                "Pruning": "NA"
            }
        },
        "Input": "4 5 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "944": {
        "puzzle": "6 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 6 = 7 (left: 6 10 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 * 16 = 2496 (left: 2496)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16 25)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 + 13 = 25 (left: 16 25) -> 25 - 16 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.08"
                }
            },
            "Step 5": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 / 12 = 1.08 (left: 1.08) -> 1 + 0.08 = 1.08",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 / 12 = 1.08 (left: 1.08) -> 1 + 0.08 = 1.08 -> 1.08 - 0.08 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 + 10 = 22 (left: 6 13 22)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 1": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 12 * 13 = 156 (left: 156 16) -> 156 / 16 = 9.75 (left: 9.75)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "12 13 16"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12 29)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12 29) -> 29 - 12 = 17 (left: 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "17"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12 29) -> 29 - 12 = 17 (left: 17) -> There are no possible next steps with the input \"17\" as it is a single number.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 12 13 16) -> 13 + 16 = 29 (left: 12 29) -> 29 - 12 = 17 (left: 17) -> There are no possible next steps with the input \"17\" as it is a single number. -> There are no possible next steps with the input \"17\" as it is a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 10 = 16 (left: 12 13 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 1": {
                "Step": "6 * 10 = 60 (left: 12 60 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 / 12 = 1.08 (left: 1.08)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 10 12 13"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 10 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 10  -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "1.08"
                }
            },
            "Step 5": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 / 12 = 1.08 (left: 1.08) -> 1 + 0.08 = 1.08",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 10 = 60 (left: 12 60 13) -> 13 / 12 = 1.08 (left: 1.08) -> 1 + 0.08 = 1.08 -> 1.08 * 2 = 2.16 (left: 1.08 2.16)",
                "Pruning": null
            }
        },
        "Input": "6 10 12 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "945": {
        "puzzle": "1 3 9 9",
        "Agent 0": {
            "Step 0": {
                "Step": "9 + 1 = 10 (left: 10 9 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 1 6 9) -> 9 / 1 = 9 (left: 6 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 3": {
                "Step": "3 * 9 = 27 (left: 1 27 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 9 = 27 (left: 1 27 9) -> 9 + 1 = 10 (left: 10 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 - 6 = 3 (left:"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 1 6 9) -> 9 - 6 = 3 (left: -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 1 6 9) -> 9 - 6 = 3 (left: -> 9 / 6 = 1.5 (left: 1.5) -> 8 / 1.5 = 5.33333 (left: 5.33333)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 9 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 1 6 9) -> 9 / 1 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 3": {
                "Step": "9 + 1 = 10 (left: 3 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 1 = 10 (left: 3 9 10) -> 9 / 3 = 3 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 - 6 = 3 (left:"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 1 6 9) -> 9 - 6 = 3 (left: -> 9 - 6 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 1 6 9) -> 9 - 6 = 3 (left: -> 9 - 6 = 3 (left: 3) -> There are no possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 1 = 8 (left: 8 3 9)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 1": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 3 = 6 (left: 1 6 9) -> 9 - 1 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 9 9"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 1 6 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 1 6 9) -> 9 - 6 = 3 (left:",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "9 - 6 = 3 (left:"
                }
            },
            "Step 5": {
                "Step": "9 - 3 = 6 (left: 1 6 9) -> 9 - 6 = 3 (left: -> 9 / 6 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 - 3 = 6 (left: 1 6 9) -> 9 - 6 = 3 (left: -> 9 / 6 = 1.5 (left: 1.5) -> 1.5 / 8 = 0.1875 (left: 0.1875)",
                "Pruning": "NA"
            }
        },
        "Input": "1 3 9 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "946": {
        "puzzle": "1 4 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 5 11"
                }
            },
            "Step 1": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 4 = 5 (left: 4 5 11) -> 11 - 4 = 7 (left: 7 5) -> 7 / 5 = 1.4 (left: 1.4)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 3": {
                "Step": "1 * 4 = 4 (left: 4 4 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 4 = 4 (left: 4 4 11) -> 4 + 4 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "1 * 4 = 4 (left: 4 4 11) -> 4 + 4 = 8 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 4 = 4 (left: 4 4 11) -> 4 + 4 = 8 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273) -> 0.7272727272727273 + 2 = 2.7272727272727275",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 1 4 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 1 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 4 4 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 4 4 10) -> 4 * 4 = 16 (left: 16 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "1 * 4 = 4 (left: 4 4 11) -> 4 + 4 = 8 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 4 = 4 (left: 4 4 11) -> 4 + 4 = 8 (left: 8 11) -> 8 / 11 \u2248 0.7273 (left: 0.7273) -> 0.7273 * 2 = 1.4546",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 4 = 5 (left: 4 5 11)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 1": {
                "Step": "4 * 1 = 4 (left: 4 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 1 = 4 (left: 4 4  -> 4 * 4 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 4 4 11"
                }
            },
            "Step 3": {
                "Step": "4 - 1 = 3 (left: 3 4 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 - 1 = 3 (left: 3 4 11) -> 4 * 3 = 12 (left: 12 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "8 11"
                }
            },
            "Step 5": {
                "Step": "1 * 4 = 4 (left: 4 4 11) -> 4 + 4 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 4 = 4 (left: 4 4 11) -> 4 + 4 = 8 (left: 8 11) -> 8 - 11 = -3 (left: -3) -> There are no possible next steps for the input: -3",
                "Pruning": null
            }
        },
        "Input": "1 4 4 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "947": {
        "puzzle": "2 3 9 10",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> There are no possible next steps with just one number given.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * 3 = 24",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * 3 = 24 -> Overall, there are multiple ways to obtain the number 24 using the given numbers and following the rules of the game.",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * 3 = 24 -> Input: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 24 = 96 (left: 96)\nAnswer: 3 * (7 - 3) * 8 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 2 = 8 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 - 8 = -5 (left: -5) -> There are no possible next steps with the input of -5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 3": {
                "Step": "10 + 2 = 12 (left: 3 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 2 = 12 (left: 3 9 12) -> 3 + 9 = 12 (left: 12 12)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * 3 = 24 -> Input: 3 3 7 8\nSteps:\n7 - 3 = 4 (left: 3 4 8)\n4 + 3 = 7 (left: 7 8)\n7 * 8 = 56 (left: 56)\n56 / 2 = 28 (left: 28)\n28 / 7 = 4 (left: 4)\n4 * 6 = 24 (left: 24)\nAnswer: (((",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * 3 = 24 -> Input: 3 3 4 5\nSteps:\n3 * 4 = 12 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n3 * 7 = 21 (left: 21)\n21 + 3 = 24 (left: 24)\nAnswer: ((3 * 4) - 5) + 3 = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 - 3 = 6 (left: 2 6 ",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 5 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 5 9 10) -> 10 - 5 = 5 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 9 10"
                }
            },
            "Step 3": {
                "Step": "2 * 3 = 6 (left: 6 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 3 = 6 (left: 6 9 10) -> 9 / 6 = 1.5 (left: 1.5 10",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "24"
                }
            },
            "Step 5": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * 3 = 24 -> Input: 3 5 7 8\nSteps:\n7 + 8 = 15 (left: 3 5 15)\n15 - 5 = 10 (left: 3 10)\n10 * 3 = 30 (left: 30)\n30 - 6 = 24 (left: 24)\nAnswer: ((7 + 8) - 5) * 3 = 24",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "24"
                }
            },
            "Step 6": {
                "Step": "10 - 2 = 8 (left: 3 8  -> 3 * 8 = 24 (left: 24) -> Answer: (10 - 2) * 3 = 24 -> Input: 3 3 7 8\nSteps:\n3 * 8 = 24 (left: 3 7 24)\n7 - 3 = 4 (left: 4 24)\n4 * 6 = 24 (left: 24)\nAnswer: (3 * 8) + (7 - 3) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "2 3 9 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "948": {
        "puzzle": "1 2 3 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 3 = 10 (left: 1 2 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 1 5 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 + 8 = 9 (left: 9) -> 9 - 9 =",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 13 = 16 (left: 1 2 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "1 * 2 = 2 (left: 2 3 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 2 = 2 (left: 2 3 13) -> 13 - 3 = 10 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 - 1 = 7 (left: 7) -> 7 * 8 = 56 (left: 56)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "1 8"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "No possible next steps."
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 3 13)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 3 13"
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 1 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 1 2  -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 1 * 8 = 8 (left: 8) -> No possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 - 8 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 1 5 13) -> 13 - 5 = 8 (left: 1 8) -> 8 - 8 = 0 (left: 0) -> There are no possible next steps as there is no input provided.",
                "Pruning": null
            }
        },
        "Input": "1 2 3 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "949": {
        "puzzle": "1 6 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 1 = 5 (left: 5 6 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 * 1 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0 6"
                }
            },
            "Step 3": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 6) -> 6 + 8 = 14 (left: 14)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 - 0 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 6 - 0 = 6 (left: 6) -> 6 + 8 = 14 (left: 8 14)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 1 = 6 (left: 6 6 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "1 * 6 = 6 (left: 6 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with the input of 5.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0 6"
                }
            },
            "Step 5": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 * 1 = 6 (left: 6 6 6) -> 6 - 6 = 0 (left: 0 6) -> 0 * 6 = 0 (left: 0) -> No possible next steps.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 6 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 1 = 5 (left: 1 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 1 = 5 (left: 1 5  -> 1 + 5 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 / 2 = 3 (left: 3)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "0 6"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 6 = 6 (left: 6 6 6) -> 6 / 6 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 + 14 = 20 (left: 20)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "There are no possible next steps with the input of 5."
                }
            }
        },
        "Input": "1 6 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "950": {
        "puzzle": "1 2 2 9",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 9 - 4 = 5 (left: 1 5) -> 5 - 1 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 3": {
                "Step": "9 - 2 = 7 (left: 1 7 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 2 = 7 (left: 1 7 9) -> 9 - 7 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 9 / 4 = 2.25 (left: 2.25) -> ",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 2 = 3 (left: 2 3 9) -> 3 * 9 = 27 (left: 2 27)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 3": {
                "Step": "Input: 3 5 5 11",
                "Pruning": null
            },
            "Step 4": {
                "Step": "Input: 3 5 5 11 -> 5 / 3 = 1.67 (left: 1.67 5 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 - 13 = -4 (left: -4)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 2 3 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 1": {
                "Step": "2 + 2 = 4 (left: 1 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 2 = 4 (left: 1 4 9) -> 4 / 1 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 2 9"
                }
            },
            "Step 3": {
                "Step": "2 * 2 = 4 (left: 1 4 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 2 = 4 (left: 1 4 9) -> 9 / 1 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 / 9 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Input": "1 2 2 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "951": {
        "puzzle": "1 3 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 * 3 = 3 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 11"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 6 11) -> 6 * 3 = 18 (left: 18 11) -> 18 + 11 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> There are no possible next steps with the input 110.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 * 6 = 6 (left: 3 6 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 1 3 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 3 = 8 (left: 1 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 3 = 8 (left: 1 6 8) -> 1 * 6 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 11"
                }
            },
            "Step 5": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 + 3 = 4 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110) -> 110 / 2 = 55 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 6 = 18 (left: 1 18 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 1": {
                "Step": "11 - 6 = 5 (left: 1 3 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 6 = 5 (left: 1 3 5) -> 5 - 3 = 2 (left: 1 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 3 6 10) -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 10"
                }
            },
            "Step 5": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 - 3 = 3 (left: 1 3 11) -> 11 - 1 = 10 (left: 3 10) -> 10 - 3 = 7 (left: 7) -> 7 * 8 = 56 (left: 8 56)",
                "Pruning": null
            }
        },
        "Input": "1 3 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "952": {
        "puzzle": "5 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 + 5 = 18 (left: 10 12 18)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 12 = 1 (left: 5 1 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 12 = 1 (left: 5 1  -> 1 - 5 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 3": {
                "Step": "5 * 10 = 50 (left: 12 13 50)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 10 = 50 (left: 12 13 50) -> 12 * 13 = 156 (left: 156 50)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 22"
                }
            },
            "Step 5": {
                "Step": "12 + 10 = 22 (left: 5 13 22) -> 13 - 5 = 8 (left: 8 22) -> 22 - 8 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 10 = 22 (left: 5 13 22) -> 13 - 5 = 8 (left: 8 22) -> 22 - 8 = 14 (left: 14) -> None, as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 * 10 = 50 (left: 12 13 50)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "10 13 17"
                }
            },
            "Step 1": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 + 5 = 17 (left: 10 13 17) -> 17 - 13 = 4 (left: 10 4) -> 10 * 4 = 40 (left: 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 3": {
                "Step": "12 + 10 = 22 (left: 5 13 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 10 = 22 (left: 5 13 22) -> 13 - 5 = 8 (left: 8 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 22"
                }
            },
            "Step 5": {
                "Step": "12 + 10 = 22 (left: 5 13 22) -> 13 - 5 = 8 (left: 8 22) -> 8 + 22 = 30 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 10 = 22 (left: 5 13 22) -> 13 - 5 = 8 (left: 8 22) -> 8 + 22 = 30 (left: 30) -> There are no possible next steps with the input of 30.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 + 5 = 17 (left: 10 13 17)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 5 = 2 (left: 2 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 5 = 2 (left: 2 12 13) -> 13 + 2 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 10 12 13"
                }
            },
            "Step 3": {
                "Step": "10 - 5 = 5 (left: 5 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 5 = 5 (left: 5 12 13) -> 13 - 5 = 8 (left: 8 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 22"
                }
            },
            "Step 5": {
                "Step": "12 + 10 = 22 (left: 5 13 22) -> 13 - 5 = 8 (left: 8 22) -> 8 / 22 = 0.36363636363636365 (left: 0.36363636363636365)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 + 10 = 22 (left: 5 13 22) -> 13 - 5 = 8 (left: 8 22) -> 8 / 22 = 0.36363636363636365 (left: 0.36363636363636365) -> 0.36363636363636365 + 2 = 2.3636363636363638",
                "Pruning": null
            }
        },
        "Input": "5 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "953": {
        "puzzle": "2 3 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 6 - 4 = 2 (left: 2 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 3 = 3 (left: 2 3 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> 2 + 3 = 5 (left: 5 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 (left: 7) -> 7 + 8 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 3 = 3 (left: 2 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 3 = 3 (left: 2 3 6) -> Input: 5 5 5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 6"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 * 8 = 48 (left: 8 48)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 3 4 6)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 10 / 6 = 1.6666666666666667 (left: 1.6666666666666667)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 + 6 = 10 (left: 6 10) -> 6 * 10 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 3 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 3 = 5 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 * 6 = 6 (left: 6) -> 6 - 2 = 4 (left: 4)",
                "Pruning": "NA"
            }
        },
        "Input": "2 3 6 6",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "954": {
        "puzzle": "6 7 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 10 12 42)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 * 13 = 156 (left: 10 156)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 7 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 10 / 6 = 1.67 (left: 1.67 7)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.67 7"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 10 / 6 = 1.67 (left: 1.67 7) -> 1.67 + 7 = 8.67 (left: 8.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 10 / 6 = 1.67 (left: 1.67 7) -> 1.67 + 7 = 8.67 (left: 8.67) -> 8.67 * 2 = 17.34",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 12 - 10 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 12 17"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 6 12 17) -> 17 - 6 = 11 (left: 6 11) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.67 7"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 10 / 6 = 1.67 (left: 1.67 7) -> 1.67 + 7 = 8.67 (left: 8.67)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 10 / 6 = 1.67 (left: 1.67 7) -> 1.67 + 7 = 8.67 (left: 8.67) -> There is only one number provided (8.67), so there are no possible next steps to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 + 10 = 17 (left: 6 12 17)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 10 * 12 = 120 (left: 13 120)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 7 10 12"
                }
            },
            "Step 3": {
                "Step": "6 + 7 = 13 (left: 10 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 7 = 13 (left: 10 12 13) -> 13 - 10 = 3 (left: 3 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1.67 7"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 10 / 6 = 1.67 (left: 1.67 7) -> 1.67 * 7 = 11.69 (left: 11.69)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 7 10) -> 10 / 6 = 1.67 (left: 1.67 7) -> 1.67 * 7 = 11.69 (left: 11.69) -> It seems like there might have been an error in the input format. Could you please provide the numbers or operations you would like to perform in order to generate possible next steps?",
                "Pruning": null
            }
        },
        "Input": "6 7 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "955": {
        "puzzle": "7 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "8 - 7 = 1 (left: 1 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 7 = 1 (left: 1 8 12) -> 8 / 1 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 8 = 4 (left: 4 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 8 = 4 (left: 4 8 12) -> 12 / 8 = 1.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0 0"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 8 = 0 (left: 5 0) -> 5 * 0 = 0 (left: 0 0) -> There are no possible next steps with the input 0 0.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 8 = 0 (left: 5 0) -> 5 * 0 = 0 (left: 0 0) -> There are no possible next steps with the input 0 0. -> There are no possible next steps with the input 0 0.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 / 7 = 1.14285714286 (left: 1.14285714286 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 8 = 0 (left: 5 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 8 = 0 (left: 5 0) -> 5 * 0 = 0 (left: 0 0)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 15 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 15 12) -> 15 - 8 = 7 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0 0"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 8 = 0 (left: 5 0) -> 5 * 0 = 0 (left: 0 0) -> There are no possible next steps as there are no numbers provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 8 = 0 (left: 5 0) -> 5 * 0 = 0 (left: 0 0) -> There are no possible next steps as there are no numbers provided. -> There are no numbers provided to perform any operations.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 * 8 = 56 (left: 56 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 1": {
                "Step": "7 + 8 = 15 (left: 8 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 8 = 15 (left: 8 8 12) -> 8 / 8 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 8 8 12"
                }
            },
            "Step 3": {
                "Step": "7 + 8 = 15 (left: 8 8 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 8 = 15 (left: 8 8 15) -> 15 - 8 = 7 (left: 8 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "0 0"
                }
            },
            "Step 5": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 8 = 0 (left: 5 0) -> 5 * 0 = 0 (left: 0 0) -> There are no possible next steps as there are no numbers provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 7 = 5 (left: 5 8 8) -> 8 - 8 = 0 (left: 5 0) -> 5 * 0 = 0 (left: 0 0) -> There are no possible next steps as there are no numbers provided. -> No possible next steps as there are no numbers provided.",
                "Pruning": null
            }
        },
        "Input": "7 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "956": {
        "puzzle": "3 4 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 8"
                }
            },
            "Step 1": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 / 3 = 1.3333 (left: 1.3333 6 8) -> 8 / 6 = 1.3333 (left: 1.3333 1.3333)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: 8 21) -> 8 + 21 = 29 (left: 29)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3 8) -> 4 * 9 =",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 6 = 24 (left: 3 8 24)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 3 = 21 (left: -> 21 / 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left: ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 - 8 = 16 (left:  -> It appears that the input is missing. Please provide the numbers to continue finding possible next steps.",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 / 24 = 0.3333333333333333 (left: 0.3333333333333333)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 3 = 1.33 (left: 1.33 6 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 1": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 24"
                }
            },
            "Step 3": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 24 / 8 = 3 (left: 3 24) -> 24 * 3 = 72 (left: 72)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "8 24"
                }
            },
            "Step 5": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 8 * 3 = 24 (left: 24)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "8 24"
                }
            },
            "Step 6": {
                "Step": "4 * 6 = 24 (left: 3 8 24) -> 8 * 3 = 24 (left: 3 24) -> 24 / 3 = 8 (left: 8 24) -> 24 / 8 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Input": "3 4 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "957": {
        "puzzle": "1 7 9 11",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 7 = 8 (left: 8 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 11 15) -> 11 - 15 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 7 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 7 9  -> 7 * 9 = 63 (left: 63)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.2857 9"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 7 9  -> 9 / 7 = 1.2857 (left: 1.2857 9) -> 9 / 1.2857 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 7 9  -> 9 / 7 = 1.2857 (left: 1.2857 9) -> 9 / 1.2857 = 7 (left: 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 1": {
                "Step": "9 + 1 = 10 (left: 7 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 1 = 10 (left: 7 10 11) -> 7 + 10 = 17 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "11 - 1 = 10 (left: 7 9 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 1 = 10 (left: 7 9  -> 9 / 7 = 1.2857 (left: 1.2857 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.2857 9"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 7 9  -> 9 / 7 = 1.2857 (left: 1.2857 9) -> 1.2857 + 9 = 10.2857 (left: 10.2857)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 7 9  -> 9 / 7 = 1.2857 (left: 1.2857 9) -> 1.2857 + 9 = 10.2857 (left: 10.2857) -> 10 / 2 = 5.142857",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "6 9 11"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 15 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 6 + 9 = 15 (left: 15 11) -> 11 - 15 = -4 (left: -4)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 9 11"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 6 9 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 6 9 11) -> 9 / 6 = 1.5 (left: 1.5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1.2857 9"
                }
            },
            "Step 5": {
                "Step": "11 - 1 = 10 (left: 7 9  -> 9 / 7 = 1.2857 (left: 1.2857 9) -> 1.2857 * 9 = 11.5713 (left: 11.5713)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 1 = 10 (left: 7 9  -> 9 / 7 = 1.2857 (left: 1.2857 9) -> 1.2857 * 9 = 11.5713 (left: 11.5713) -> None - there are no more numbers to operate on.",
                "Pruning": null
            }
        },
        "Input": "1 7 9 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "958": {
        "puzzle": "2 3 6 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 11 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 * 2 = 12 (left: 3 12 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 2 = 12 (left: 3 12  -> 20",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 * 13 = 143 (left: 143) -> 143 - 4 = 139 (left: 1 3 9) ",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.8461538461538461 (left: 0.8461538461538461) -> 0.8461538461538461 * 2 = 1.6923076923076922",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 2 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 3 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 13 / 3 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 13 - 11 = 2 (left: 2) -> 2 - 2 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "11 13"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 - 13 = -2 (left: -2) -> There are no possible next steps with the input -2.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 3 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 6 13"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 3 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "11 13"
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 \u2248 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "11 13"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 5 + 9 = 14 (left: 14 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 5 + 9 = 14 (left: 14 3) -> 14 / 3 = 4.67 (left: 4.67)",
                "Pruning": {
                    "Idx": "0.4",
                    "Pruned state": "1 3 9"
                }
            }
        },
        "Input": "2 3 6 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "959": {
        "puzzle": "2 2 5 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 5 = 10 (left: 2 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 3": {
                "Step": "2 + 5 = 7 (left: 2 7 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 5 = 7 (left: 2 7 12) -> 7 - 2 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There are no possible next steps with the input of 0.8.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "12 - 2 = 10 (left: 2 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 / 2 = 5 (left: 5 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> 0.8 * 2 = 1.6 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 / 10 = 0.8 (left: 0.8) -> There are no valid operations that can be performed with the input 0.8.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 5 12"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 5 12) -> 12 - 5 = 7 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 3": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 - 10 = -2 (left: -2) -> -2 + 8 = 6 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 10"
                }
            },
            "Step 5": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 2 = 10 (left: 2 5 10) -> 10 - 2 = 8 (left: 8 10) -> 8 + 10 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Input": "2 2 5 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "960": {
        "puzzle": "2 6 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 2 = 11 (left: 6 8 11)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 + 3 = 16 (left: 8 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 + 3 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "0.846"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number and cannot be combined with other numbers using basic arithmetic operations.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846) -> There are no possible next steps for the input 0.846 as it is already a single number and cannot be combined with other numbers using basic arithmetic operations. -> There are no possible next steps for the input 0.846 as it is already a single number and cannot be combined with other numbers using basic arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 8 13)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 6 = 7 (left: 2 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 6 = 7 (left: 2 8  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 8 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8  -> Input: 5 9",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "Possible next steps:"
                }
            },
            "Step 5": {
                "Step": "13 - 6 = 7 (left: 2 8  -> Possible next steps: -> - 8 - 2 = 6 (left: 6 8 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 6 = 7 (left: 2 8  -> Possible next steps: -> - 8 - 2 = 6 (left: 6 8 14) -> 6 + 8 = 14 (left: 14 14)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 6 = 8 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 + 8 = 11 (left: 11 13) -> 11 / 13 = 0.846 (left: 0.846)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 13"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 3 * 8 = 24 (left: 24 13) -> 24 - 13 = 11 (left: 11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "2"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 + 3 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 8 13) -> 13 + 3 = 16 (left: 8 16) -> 16 / 8 = 2 (left: 2) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform operations.",
                "Pruning": null
            }
        },
        "Input": "2 6 8 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "961": {
        "puzzle": "8 8 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "10 * 8 = 80 (left: 12 80)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 8 = 0 (left: 10 0 12) -> 12 - 0 = 12 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 3": {
                "Step": "10 + 1 = 11 (left: 8 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 1 = 11 (left: 8 11 12) -> 8 * 11 = 88 (left: 12 88)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "54 12"
                }
            },
            "Step 5": {
                "Step": "8 * 8 = 64 (left: 64 10 12) -> 64 - 10 = 54 (left: 54 12) -> 54 / 12 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 8 = 64 (left: 64 10 12) -> 64 - 10 = 54 (left: 54 12) -> 54 / 12 = 4.5 (left: 4.5) -> 4.5 / 8 = 0.5625 (left: 0.5625)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 + 8 = 18 (left: 8 12 18)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 8 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 8 4  -> 8 / 4 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "12 80"
                }
            },
            "Step 3": {
                "Step": "10 * 8 = 80 (left: 12 80) -> Input: 6.67 80",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 * 8 = 80 (left: 12 80) -> Input: 6.67 80 -> 80 / 6.67 = 12 (left: 6.67 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "54 12"
                }
            },
            "Step 5": {
                "Step": "8 * 8 = 64 (left: 64 10 12) -> 64 - 10 = 54 (left: 54 12) -> 54 / 12 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 8 = 64 (left: 64 10 12) -> 64 - 10 = 54 (left: 54 12) -> 54 / 12 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 8 = 0 (left: 10 0 12)",
                "Pruning": null,
                "Evaluation": 2.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "8 12 18"
                }
            },
            "Step 1": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 / 12 = 1.5 (left: 8 1.5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 8 = 18 (left: 8 12 18) -> 18 / 12 = 1.5 (left: 8 1.5) -> 8 + 1.5 = 9.5",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "8 8 10 12"
                }
            },
            "Step 3": {
                "Step": "8 * 8 = 64 (left: 64 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 * 8 = 64 (left: 64 10 12) -> 64 - 10 = 54 (left: 54 12)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "54 12"
                }
            },
            "Step 5": {
                "Step": "8 * 8 = 64 (left: 64 10 12) -> 64 - 10 = 54 (left: 54 12) -> 54 / 12 = 4.5 (left: 4.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "8 * 8 = 64 (left: 64 10 12) -> 64 - 10 = 54 (left: 54 12) -> 54 / 12 = 4.5 (left: 4.5) -> There are no possible next steps with the input 4.5 as it is a single number.",
                "Pruning": null
            }
        },
        "Input": "8 8 10 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "962": {
        "puzzle": "1 3 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.6667 (left: 2.6667 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 / 3 = 2.6667 (left: 2.6667 12) -> 12 - 2.6667 = 9.3333 (left: 9.3333)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12) -> 11 - 12 = -1 (left: -1)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 14 17"
                }
            },
            "Step 5": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 + 3 = 17 (left: 8 14 17) -> 17 - 14 = 3 (left: 8 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 + 3 = 17 (left: 8 14 17) -> 17 - 14 = 3 (left: 8 3) -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "1 + 3 = 4 (left: 4 8 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 8 13"
                }
            },
            "Step 1": {
                "Step": "13 + 1 = 14 (left: 3 8 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 + 3 = 17 (left: 8 14 17)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 12"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 8 - 3 = 5 (left: 5 12) -> 5 * 12 = 60 (left: 60)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 14 17"
                }
            },
            "Step 5": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 + 3 = 17 (left: 8 14 17) -> 17 - 8 = 9 (left: 9 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 + 3 = 17 (left: 8 14 17) -> 17 - 8 = 9 (left: 9 17) -> 9 - 17 = -8 (left: -8)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 - 3 = 5 (left: 1 5 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 8 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 3 8 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 3 8 12) -> 3 + 8 = 11 (left: 11 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 8 13"
                }
            },
            "Step 3": {
                "Step": "13 - 3 = 10 (left: 1 8 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 3 = 10 (left: 1 8  -> 1 * 8 = 8 (left: 8 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "8 14 17"
                }
            },
            "Step 5": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 + 3 = 17 (left: 8 14 17) -> 14 / 8 = 1.75 (left: 1.75 17)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 + 1 = 14 (left: 3 8 14) -> 14 + 3 = 17 (left: 8 14 17) -> 14 / 8 = 1.75 (left: 1.75 17) -> 17 - 1.75 = 15.25 (left: 15.25)",
                "Pruning": "NA"
            }
        },
        "Input": "1 3 8 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "963": {
        "puzzle": "4 4 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 4 7 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 4 4 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 4 4 3) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 0.6667 10)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.6667 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 0.6667 10) -> 10 / 0.6667 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 0.6667 10) -> 10 / 0.6667 = 15 (left: 15) -> None - there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "7 + 4 = 11 (left: 4 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 4 = 11 (left: 4 10 11) -> Input:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 7 6"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 7 6) -> 4 + 7 = 11 (left: 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 7 6) -> 4 + 7 = 11 (left: 6 11) -> 6 - 11 = -5 (left: -5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.6667 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 0.6667 10) -> 10 / 0.6667 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 0.6667 10) -> 10 / 0.6667 = 15 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 7 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 7 10) -> 16 - 7 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 7 10"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 4 6 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 4 6  -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "0.6667 10"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 0.6667 10) -> 0.6667 * 10 = 6.667 (left: 6.667)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 4 6 10) -> 4 / 6 = 0.6667 (left: 0.6667 10) -> 0.6667 * 10 = 6.667 (left: 6.667) -> There are no possible next steps with the input 6.667.",
                "Pruning": null
            }
        },
        "Input": "4 4 7 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "964": {
        "puzzle": "1 7 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 1 = 6 (left: 6 10 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "1 * 7 = 7 (left: 7 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 7 = 7 (left: 7 10 13) -> 7 + 10 = 17 (left: 17 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "13 - 7 = 6 (left: 1 6 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 7 = 6 (left: 1 6  -> 6 * 1 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 3 + 5 = 8 (left: 2 8 9) -> 9 - 2 = 7 (left: 7 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 3 + 5 = 8 (left: 2 8 9) -> 9 - 2 = 7 (left: 7 8) -> 7 + 8 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "10 - 1 = 9 (left: 7 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 1 = 9 (left: 7 9 13) -> 9 + 13 = 22 (left: 7 22)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "7 / 1 = 7 (left: 7 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 / 1 = 7 (left: 7 10 13) -> 7 * 10 = 70 (left: 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 3 + 5 = 8 (left: 2 8 9) -> 8 - 2 = 6 (left: 6 9)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 3 + 5 = 8 (left: 2 8 9) -> 8 - 2 = 6 (left: 6 9) -> 6 + 9 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 1 = 11 (left: 7 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 1 = 12 (left: 7 10 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 1 = 12 (left: 7 10 12) -> 12 - 7 = 5 (left: 5 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 7 10 13"
                }
            },
            "Step 3": {
                "Step": "13 - 1 = 12 (left: 7 10 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 3 + 5 = 8 (left: 2 8 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 8 9"
                }
            },
            "Step 5": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 3 + 5 = 8 (left: 2 8 9) -> 2 * 8 = 16 (left: 9 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 1 = 12 (left: 7 10  -> 3 + 5 = 8 (left: 2 8 9) -> 2 * 8 = 16 (left: 9 16) -> 9 - 16 = -7 (left: -7)",
                "Pruning": "NA"
            }
        },
        "Input": "1 7 10 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "965": {
        "puzzle": "1 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 1 = 12 (left: 9 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps:",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 + 14 = 22 (left: 16 22)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 + 14 = 22 (left: 16 22) -> 16 / 22 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 14 16"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 - 8 = 6 (left: 6 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 - 8 = 6 (left: 6 16) -> 6 + 16 = 22 (left: 22)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 9 = 4 (left: 1 4 ",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 - 1 = 3 (left: 3) -> 5 + 10 = 15 (left: 15 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 3": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 * 14 = 112 (left: 16 112)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 8 * 14 = 112 (left: 16 112) -> 112 - 96 = 16 (left: 16)",
                "Pruning": {
                    "Idx": "0.2",
                    "Pruned state": "8 14 16"
                },
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 16 / 14 = 1.14285714286 (left: 1.142857142",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "8 14 16"
                }
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 16 - 8 = 8 (left: 8 16)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "9 / 1 = 9 (left: 10 9 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 4 "
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 1 4  -> 4 / 1 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 9 10 13"
                }
            },
            "Step 3": {
                "Step": "1 * 9 = 9 (left: 9 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 9 = 9 (left: 9 10 13) -> 13 - 9 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "8 14 16"
                }
            },
            "Step 5": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 - 8 = 6 (left: 6 16)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 9 = 4 (left: 1 4  -> Possible next steps: -> 2 * 8 = 16 (left: 8 14 16) -> 14 - 8 = 6 (left: 6 16) -> 6 * 16 = 96 (left: 96)",
                "Pruning": "NA"
            }
        },
        "Input": "1 9 10 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "966": {
        "puzzle": "3 3 4 11",
        "Agent 0": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 4)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 4 11"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 3 7 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 6 = 5 (left: 4 5) -> 4 + 5 = 9 (left: 5 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 4 - 3 = 1 (left: 1) -> 1 + 1 = 2 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "11 - 4 = 7 (left: 3 7 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 4 + 6 = 10 (left: 10 11) -> 10 * 11 = 110 (left: 110)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 7 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 11 - 4 = 7 (left: 7 11) -> 11 - 7 = 4 (left: 4 11)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 3 + 4 = 7 (left: 7) -> 7 + 8 = 15 (left: 7 15)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 + 3 = 6 (left: 4 6 11)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 1": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 + 11 = 17 (left: 4 17) -> 4 * 17 = 68 (left: 68)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 6 11"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 4 6 11) -> 6 - 4 = 2 (left: 2 11) -> 11 / 2 = 5.5 (left: 5.5)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "3 4"
                }
            },
            "Step 5": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 3 = 7 (left: 3 7 11) -> 11 - 7 = 4 (left: 3 4) -> 3 * 4 = 12 (left: 12) -> 12 + 2 = 14 (left: 8 14)",
                "Pruning": null
            }
        },
        "Input": "3 3 4 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "967": {
        "puzzle": "2 5 7 7",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 7 = 12 (left: 2 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 / 5 = 1.4 (left: 1.4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 3": {
                "Step": "7 / 7 = 1 (left: 2 5 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 / 7 = 1 (left: 2 5 1) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.5 0"
                }
            },
            "Step 5": {
                "Step": "7 - 7 = 0 (left: 2 5 0) -> 5 / 2 = 2.5 (left: 2.5 0) -> 2.5 - 0 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 7 = 0 (left: 2 5 0) -> 5 / 2 = 2.5 (left: 2.5 0) -> 2.5 - 0 = 2.5 (left: 2.5) -> There are no possible next steps for the input 2.5 as it is a single number and not an equation.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 5 = 2 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "7 - 7 = 0 (left: 2 5 0)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 7 = 0 (left: 2 5 0) -> 5 / 2 = 2.5 (left: 2.5 0)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 7 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 5 * 7 = 35 (left: 7 35)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 5 * 7 = 35 (left: 7 35) -> 7 * 5 = 35 (left: 35)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.5 0"
                }
            },
            "Step 5": {
                "Step": "7 - 7 = 0 (left: 2 5 0) -> 5 / 2 = 2.5 (left: 2.5 0) -> 2.5 + 0 = 2.5 (left: 2.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 7 = 0 (left: 2 5 0) -> 5 / 2 = 2.5 (left: 2.5 0) -> 2.5 + 0 = 2.5 (left: 2.5) -> There are no possible next steps with the input 2.5.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 1": {
                "Step": "5 * 2 = 10 (left: 10 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 2 = 10 (left: 10 7 7) -> 10 + 7 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 7 7"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 7 7) -> 7 +",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "2.5 0"
                }
            },
            "Step 5": {
                "Step": "7 - 7 = 0 (left: 2 5 0) -> 5 / 2 = 2.5 (left: 2.5 0) -> 2.5 + 0 = 2.5 (left: 0)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 7 = 0 (left: 2 5 0) -> 5 / 2 = 2.5 (left: 2.5 0) -> 2.5 + 0 = 2.5 (left: 0) -> There are no possible next steps as there are no numbers provided in the input.",
                "Pruning": null
            }
        },
        "Input": "2 5 7 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "968": {
        "puzzle": "3 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 9 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 9 = 4 (left: 3 4  -> 4 - 3 = 1 (left: 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 3": {
                "Step": "9 - 3 = 6 (left: 6 9 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 3 = 6 (left: 6 9 13) -> 13 - 6 = 7 (left: 7 13)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 13"
                }
            },
            "Step 5": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 4 * 13 = 52 (left: 52)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13) -> 4 * 13 = 52 (left: 52) -> 5 - 2 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 3 9 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 3 9 13) -> 13 - 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 10 13) -> 3 + 10 = 13 (left: 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 0 10"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 + 0 = 9 (left: 9 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> 9 + 0 = 9 (left: 9 10) -> 9 + 10 = 19 (left: 19)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 1": {
                "Step": "13 - 3 = 10 (left: 9 10 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 9 10 13"
                }
            },
            "Step 3": {
                "Step": "10 + 3 = 13 (left: 9 13 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 3 = 13 (left: 9 13 13) -> 13 - 9 = 4 (left: 4 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "9 0 10"
                }
            },
            "Step 5": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> Input: 5 3 6 1",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 3 = 10 (left: 9 10 10) -> 10 - 10 = 0 (left: 9 0 10) -> Input: 5 3 6 1 -> 5 * 3 = 15 (left: 15 6 1)",
                "Pruning": null
            }
        },
        "Input": "3 9 10 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "969": {
        "puzzle": "2 3 4 7",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "4 + 3 = 7 (left: 2 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 3 = 7 (left: 2 7 7) -> 7 - 2 = 5 (left: 5 7)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 + 7 = 10.5 (left: 7 10.5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 + 7 = 10.5 (left: 7 10.5) -> 7 / 10.5 = 0.6666666666666666 (left: 0.6666666666666666)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3.5 7 7"
                },
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 * 7 = 24.5 (left: 7 24.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 3.5 * 7 = 24.5 (left: 7 24.5) -> 7 + 24.5 = 31.5 (left: 24.5 31.5)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 - 3 = 1 (left: 1 3 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "3 + 4 = 7 (left: 2 7 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 4 + 5 = 9 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7) -> ",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 - 4 = 3 (left: 2 3 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 7"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 4 5 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 4 5 7) -> 7 - 5 = 2 (left: 2 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 / 3.5 = 2 (left: 2 7) -> 7 / 2 = 3.5 (left: 3.5)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3.5 7 7"
                },
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3.5 7 7"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 2 7 7) -> 7 / 2 = 3.5 (left: 3.5 7 7) -> 7 - 3.5 = 3.5 (left: 3.5 7 -> 7 + 3.5 = 10",
                "Pruning": null
            }
        },
        "Input": "2 3 4 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "970": {
        "puzzle": "4 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "4 / 4 = 1 (left: 1 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 8 - 12 = -4 (left: -4 8) -> -4 * 8 = -32 (left: -32)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 8 16 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 8 16 12) -> 16 - 8 = 8 (left: 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 / 2 = 18",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 / 2 = 18 -> 36 / 2 = 18 (left: 18)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 8 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 4 = 8 (left: 4 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 4 = 8 (left: 4 8 8) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 3": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36)",
                "Pruning": null,
                "Evaluation": 20.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> 36 is a single number, so there are no possible next steps. -> There are no possible next steps as 36 is a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 4 = 8 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "16 8 12"
                }
            },
            "Step 1": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 24 - 12 = 12 (left: 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 8 12"
                }
            },
            "Step 3": {
                "Step": "8 * 4 = 32 (left: 4 12 32)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 * 4 = 32 (left: 4 12 32) -> 4 * 3 = 12 (left: 12 32)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "36"
                }
            },
            "Step 5": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> None, as there is only one number given.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 4 = 16 (left: 16 8 12) -> 16 + 8 = 24 (left: 12 24) -> 12 + 24 = 36 (left: 36) -> None, as there is only one number given. -> There are no possible next steps as there is only one number given.",
                "Pruning": null
            }
        },
        "Input": "4 4 8 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "971": {
        "puzzle": "1 2 6 10",
        "Agent 0": {
            "Step 0": {
                "Step": "6 + 2 = 8 (left: 1 8 ",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 - 1 = 7 (left: 7) -> 7 *",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 1 * 8 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 3": {
                "Step": "6 + 10 = 16 (left: 1 2 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 - 8 = 0 (left: 0) ",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 6 = 4 (left: 1 2 4)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 6 10"
                }
            },
            "Step 1": {
                "Step": "2 * 6 = 12 (left: 1 12 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 6 = 12 (left: 1 12 10) -> 10 + 1 = 11 (left: 11 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 8 "
                }
            },
            "Step 3": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 2 = 8 (left: 1 8  -> 8 / 1 = 8 (left: 8 8) -> 8 + 8 = 16 (left: 16)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 8"
                }
            },
            "Step 5": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 10 = 16 (left: 1 2 16) -> 16 / 2 = 8 (left: 1 8) -> 8 / 1 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Input": "1 2 6 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "972": {
        "puzzle": "1 5 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 - 5 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 1 = 12 (left: 5 12 12) -> 12 - 5 = 7 (left: 7 12) -> 7 + 12 = 19 (left: 19)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 3": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12) -> Input: 3 9 15",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12) -> Input: 3 9 15 -> 3 * 9 = 27 (left: 15 27)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 1 7 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 11 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 5 + 11 = 16 (left: 12 16)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 5 + 11 = 16 (left: 12 16) -> 12 / 16 = 0.75 (left: 0.75)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 1 = 12 (left: 12 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 * 12 = 144 (left: 12 144)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12) -> 12 - 2.2 = 9.8 (left: 9.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12) -> 12 - 2.2 = 9.8 (left: 9.8) -> There are no possible next steps with the input 9.8.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 1 = 12 (left: 5 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 1": {
                "Step": "12 - 1 = 11 (left: 5 11 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 12 12"
                }
            },
            "Step 3": {
                "Step": "12 / 1 = 12 (left: 12 12 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 1 = 12 (left: 12 12 12) -> 12 / 12 = 1 (left: 1 12)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "2.2 12"
                }
            },
            "Step 5": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12) -> 3 + 9 = 12",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 1 = 11 (left: 5 11 12) -> 11 / 5 = 2.2 (left: 2.2 12) -> 3 + 9 = 12 -> 9 + 3 = 12 (left: 12)",
                "Pruning": "NA"
            }
        },
        "Input": "1 5 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "973": {
        "puzzle": "5 6 6 8",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 5 6 2)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 6 2"
                }
            },
            "Step 1": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 - 5 = 1 (left: 1 2)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 6 = 2 (left: 5 6 2) -> 6 - 5 = 1 (left: 1 2) -> 1 + 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 8) -> 6 - 1 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6.8 8"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 - 8 = -1.2 (left: -1.2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 - 8 = -1.2 (left: -1.2) -> -1.2 - 2 = -3.2",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 6 8) -> 8 / 3 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 3": {
                "Step": "6 + 6 = 12 (left: 5 12 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 6 = 12 (left: 5 12 8) -> 12 + 8 = 20 (left: 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6.8 8"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 14.8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 + 8 = 14.8 (left: 14.8) -> There are no possible next steps for the input 14.8 as it is already a single number.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 1": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 6 + 1.2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 6 6 8"
                }
            },
            "Step 3": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "6.8 8"
                }
            },
            "Step 5": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 / 8 = 0.85 (left: 0.85)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 5 = 1.2 (left: 1.2 6 8) -> 8 - 1.2 = 6.8 (left: 6.8 8) -> 6.8 / 8 = 0.85 (left: 0.85) -> 0.85 * 2 = 1.7",
                "Pruning": null
            }
        },
        "Input": "5 6 6 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "974": {
        "puzzle": "7 7 8 11",
        "Agent 0": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 + 8 = 22 (left: 8 22)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 3": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 8 * 11 = 88 (left: 88 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4) -> There are no possible next steps with just the number 4.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 * 7 = 49 (left: 8 11 49)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 / 11 = 1.272727272",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 7 8 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4) -> 4 + 4 = 8",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "7 / 7 = 1 (left: 1 8 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 1": {
                "Step": "7 + 7 = 14 (left: 8 11 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 + 7 = 14 (left: 8 11 14) -> 14 - 8 = 6 (left: 6 14)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "7 7 8 11"
                }
            },
            "Step 3": {
                "Step": "",
                "Pruning": null
            },
            "Step 4": {
                "Step": " -> There are no possible next steps with the given input.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "1 4"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 7 8 4) -> 8 - 7 = 1 (left: 1 4) -> 1 * 4 = 4 (left: 4) -> 4 / 4 = 1 (left: 1)",
                "Pruning": "NA"
            }
        },
        "Input": "7 7 8 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "975": {
        "puzzle": "1 3 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 1 4 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "1 3 10"
                }
            },
            "Step 1": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 7 = 3 (left: 1 3 10) -> 1 * 3 = 3 (left: 3 10) -> 10 - 3 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 7 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10) -> 6 + 10 = 16 (left: 16)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "1 4 10"
                }
            },
            "Step 1": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 3 = 4 (left: 1 4 10) -> 10 - 1 = 9 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 3": {
                "Step": "1 * 3 = 3 (left: 3 7 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 / 3 = 2.33 (left: 2.33 10)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> 4 + 10 = 14 (left: 14) -> There are no possible next steps as there is only one number left.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 7 = 3 (left: 1 3 10)",
                "Pruning": null,
                "Evaluation": 21.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 1": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 4 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 3 7 10"
                }
            },
            "Step 3": {
                "Step": "1 + 3 = 4 (left: 4 7 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "1 + 3 = 4 (left: 4 7 10) -> 10 - 7 = 3 (left: 4 3)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 10"
                }
            },
            "Step 5": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "1 * 3 = 3 (left: 3 7 10) -> 7 - 3 = 4 (left: 4 10) -> 10 - 4 = 6 (left: 6 10) -> 10 / 6 = 1.66666666667 (left: 1.66666666667)",
                "Pruning": "NA"
            }
        },
        "Input": "1 3 7 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "976": {
        "puzzle": "3 3 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 1": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 3": {
                "Step": "9 / 3 = 3 (left: 3 3 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 / 3 = 3 (left: 3 3 12) -> 12 - 3 = 9 (left: 3 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8"
                }
            },
            "Step 5": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 / 3 = 4 (left: 4 12) -> 12 - 4 = 8 (left: 8) -> 8 / 8 = 1 (left: 1)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "9"
                }
            },
            "Step 6": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: -> 12 - 3 = 9 (left: 9) -> 9 / 8 = 1.125 (left: 1.125)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 + 3 = 12 (left: 3 12 12)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 9 = 27 (left: 3 12 27)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 9 = 27 (left: 3 12 27) -> 27 - 12 = 15 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 3 9 12"
                }
            },
            "Step 3": {
                "Step": "3 + 3 = 6 (left: 6 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 3 = 6 (left: 6 9 12) -> 9 + 6 = 15 (left: 15 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "15 12"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 12) -> 9 + 6 = 15 (left: 15 12) -> 15 / 12 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 12) -> 9 + 6 = 15 (left: 15 12) -> 15 / 12 = 1.25 (left: 1.25) -> 1.25 / 2 = 0.625",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 9 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "9 9 12"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 9 9 12) -> 9 + 9 = 18 (left: 12 18) -> 18 + 12 = 30 (left: 12 30)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 12 12"
                }
            },
            "Step 3": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left:",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 + 3 = 12 (left: 3 12 12) -> 12 - 3 = 9 (left: -> 12 - 3 = 9 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "15 12"
                }
            },
            "Step 5": {
                "Step": "3 + 3 = 6 (left: 6 9 12) -> 9 + 6 = 15 (left: 15 12) -> 15 / 12 = 1.25 (left: 1.25)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 3 = 6 (left: 6 9 12) -> 9 + 6 = 15 (left: 15 12) -> 15 / 12 = 1.25 (left: 1.25) -> There are no possible next steps for the input 1.25.",
                "Pruning": null
            }
        },
        "Input": "3 3 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "977": {
        "puzzle": "3 5 7 10",
        "Agent 0": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15)",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 3": {
                "Step": "7 + 10 = 17 (left: 3 5 17)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 10 = 17 (left: 3 5 17) -> 17 / 5 = 3 (left: 3 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 10 15"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 - 7 = 3 (left: 3 10 15) -> 15 + 3 = 18 (left: 10 18)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 - 7 = 3 (left: 3 10 15) -> 15 + 3 = 18 (left: 10 18) -> 10 + 18 = 28 (left: 28)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 - 3 = 4 (left: 4 5 10)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 - 7 = 3 (left: 3 10 15)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 3": {
                "Step": "7 + 5 = 12 (left: 3 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 + 5 = 12 (left: 3 10 12) -> 12 + 3 = 15 (left: 10 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "70 15"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 - 15 = 55 (left: 55)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 * 10 = 70 (left: 70 15) -> 70 - 15 = 55 (left: 55) -> There is only one number provided, so there is only one possible next step which is 55 + 55 = 110.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 7 = 35 (left: 3 10 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 1": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 - 7 = 3 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 5 7 10"
                }
            },
            "Step 3": {
                "Step": "3 * 5 = 15 (left: 7 10 15)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 7 + 10 = 17 (left: 17 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3 10 15"
                }
            },
            "Step 5": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 - 7 = 3 (left: 3 10 15) -> 3 * 10 = 30 (left: 30 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 * 5 = 15 (left: 7 10 15) -> 10 - 7 = 3 (left: 3 10 15) -> 3 * 10 = 30 (left: 30 15) -> 30 + 15 = 45 (left: 45)",
                "Pruning": "NA"
            }
        },
        "Input": "3 5 7 10",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "978": {
        "puzzle": "4 10 12 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 12 = 1 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "13 - 4 = 9 (left: 9 12 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 4 = 9 (left: 9 12  -> 9 - 12 = -3 (left: -3)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "12 + 4 = 16 (left: 10 13 16)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 + 4 = 16 (left: 10 13 16) -> 13 / 10 = 1.3 (left: 1.3 16)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "43"
                }
            },
            "Step 5": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 * 12 = 30 (left: 13 30) -> 13 + 30 = 43 (left: 43) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 * 12 = 30 (left: 13 30) -> 13 + 30 = 43 (left: 43) -> There are no possible next steps with only one number provided. -> Provide at least two numbers to perform arithmetic operations.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 10 = 40 (left: 12 13 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2.5 12 13"
                }
            },
            "Step 1": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 * 12 = 30 (left: 13 30)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 * 12 = 30 (left: 13 30) -> 13 + 30 = 43 (left: 43)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 13 - 2.5 = 10.5 (left: 10.5 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "6 13"
                }
            },
            "Step 5": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13) -> 13 / 6 = 2.1666666666666665 (left: 2.1666666666666665) -> 2.",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 1": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 - 6 = 6 (left: 6 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 10 12 13"
                }
            },
            "Step 3": {
                "Step": "10 - 4 = 6 (left: 6 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 - 4 = 6 (left: 6 12 13) -> 12 / 6 = 2 (left: 2 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "43"
                }
            },
            "Step 5": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 * 12 = 30 (left: 13 30) -> 13 + 30 = 43 (left: 43) -> 43 + 2 = 45",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 4 = 2.5 (left: 2.5 12 13) -> 2.5 * 12 = 30 (left: 13 30) -> 13 + 30 = 43 (left: 43) -> 43 + 2 = 45 -> 2 + 43 = 45 (left: 43 - 2 = 41)",
                "Pruning": null
            }
        },
        "Input": "4 10 12 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "979": {
        "puzzle": "2 3 10 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "2 + 10 = 12 (left: 3 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 10 = 12 (left: 3 12 12) -> 3 * 12 = 36 (left: 12 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 3": {
                "Step": "12 / 2 = 6 (left: 2 3 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 2 = 6 (left: 2 3  -> 2 + 3 = 5 (left: 3 5)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 5"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 2 3  -> 2 + 3 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 3  -> 2 + 3 = 5 (left: 3 5) -> 5 - 3 = 2 (left: 2) -> No possible next steps with only one number.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 5 10 12)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 - 3 = 7 (left: 2 7 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 3 = 7 (left: 2 7 12) -> 12 / 2 = 6 (left: 6 7)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 10 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 10 12) -> 10 - 6 = 4 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 5"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 2 3  -> 2 + 3 = 5 (left: 3 5) -> 3 / 5 = 0.6 (left: 0.6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 3  -> 2 + 3 = 5 (left: 3 5) -> 3 / 5 = 0.6 (left: 0.6) -> 0.6 + 2 = 2.6 (left: 2.6)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 3 = 4 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 10 12"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 2 5 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 2 5  -> 5 / 2 = 2.5 (left: 2.5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "5 10 12"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 7 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 5 10 12) -> 12 - 5 = 7 (left: 7 12) -> 12 - 7 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 5"
                }
            },
            "Step 5": {
                "Step": "12 / 2 = 6 (left: 2 3  -> 2 + 3 = 5 (left: 3 5) -> 3 * 5 = 15 (left: 15)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 / 2 = 6 (left: 2 3  -> 2 + 3 = 5 (left: 3 5) -> 3 * 5 = 15 (left: 15) -> There are no possible next steps with the input of 15.",
                "Pruning": null
            }
        },
        "Input": "2 3 10 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "980": {
        "puzzle": "3 4 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 3 6 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 6"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 6 7 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 6 7 10) -> 6 + 7 = 13 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 9 6"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 4 9 6) -> 6 + 4 = 10 (left: 9 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 4 9 6) -> 6 + 4 = 10 (left: 9 10) -> 9 / 10 = 0.9 (left: 0.9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 13"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 7 10) -> 6 + 7 = 13 (left: 10 13) -> 23 * 5 = 115 (left: 115 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 7 10) -> 6 + 7 = 13 (left: 10 13) -> 23 * 5 = 115 (left: 115 6) -> 115 / 6 = 19.1666666667 (left: 19.1666666667)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 4 = 2 (left: 2 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 4 = 2 (left: 2 6 6) -> 2 + 6 = 8 (left: 6 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 + 3 = 9 (left: 4 6 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 3 = 9 (left: 4 6 9) -> Input: 3 5 6 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 13"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 7 10) -> 6 + 7 = 13 (left: 10 13) -> 10 / 13 \u2248 0.769 (left: 0.769)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 7 10) -> 6 + 7 = 13 (left: 10 13) -> 10 / 13 \u2248 0.769 (left: 0.769) -> 0.769 * 0.769 = 0.591361 (left: 0.591361)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 3 = 9 (left: 4 9 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 6 6"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 3 6 10) -> 3 + 6 = 9 (left: 9 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 6 10"
                }
            },
            "Step 3": {
                "Step": "4 + 6 = 10 (left: 3 6 10) -> 3 * 6 = 18 (left: 10 18)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 6 = 10 (left: 3 6 10) -> 3 * 6 = 18 (left: 10 18) -> 10 + 18 = 28 (left: 28)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "10 13"
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 6 7 10) -> 6 + 7 = 13 (left: 10 13) -> Input: 23 7 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 6 7 10) -> 6 + 7 = 13 (left: 10 13) -> Input: 23 7 5 -> 23 + 7 = 30 (left: 5 30)",
                "Pruning": null
            }
        },
        "Input": "3 4 6 6",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "981": {
        "puzzle": "5 8 8 8",
        "Agent 0": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 - 2.66667 = 5.33333 (left: 5.33333 8)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 8 8 40)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 / 8 = 1 (left: 1 40)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 40"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 / 8 = 1 (left: 1 40) -> 1 + 40 = 41 (left: 41)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 / 8 = 1 (left: 1 40) -> 1 + 40 = 41 (left: 41) -> 41 + 2 = 43",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left:  -> No input provided. Please provide a list of numbers to find possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 3": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 / 5 = 1.6 (left: 1.6 8 8) -> 8 * 1.6 = 12.8 (left: 8 12.8)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 40"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 / 8 = 1 (left: 1 40) -> 1 * 40 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 / 8 = 1 (left: 1 40) -> 1 * 40 = 40 (left: 40) -> 40 / 4 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 1": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 8 / 11 = 0.7272727272727273 (left: 0.7272727272727273)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 8 8"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 8 8 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 8 8 13) -> 13 + 8 = 21 (left: 8 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "1 40"
                }
            },
            "Step 5": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 / 8 = 1 (left: 1 40) -> 40 - 1 = 39 (left: 1 39)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 * 8 = 40 (left: 8 8 40) -> 8 / 8 = 1 (left: 1 40) -> 40 - 1 = 39 (left: 1 39) -> 39 - 1 = 38 (left: 38)",
                "Pruning": "NA"
            }
        },
        "Input": "5 8 8 8",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "982": {
        "puzzle": "6 8 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "8 / 6 = 1.3333 (left: 1.3333 8 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 - 8 = 4 (left: 4 48)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 3": {
                "Step": "8 - 6 = 2",
                "Pruning": null
            },
            "Step 4": {
                "Step": "8 - 6 = 2 -> 6 + 2 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 12 - 8 = 4 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 12 - 8 = 4 (left: 6 4) -> 6 / 4 = 1.5 (left: 1.5) -> There are no possible next steps with the input of 1.5.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "8 - 6 = 2 (left: 2 8 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 8 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 8 48) -> Input: 8 48 8",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 3": {
                "Step": "12 - 6 = 6 (left: 6 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 12 - 8 = 4 (left: 6 4)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 12 - 8 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 12 - 8 = 4 (left: 6 4) -> 6 * 4 = 24 (left: 24) -> Answer: 6 * (12 - 8) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 8 = 14 (left: 8 8 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "6 8 8 12"
                }
            },
            "Step 1": {
                "Step": "6 * 8 = 48 (left: 8 12 48)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 * 8 = 48 (left: 8 12 48) -> 12 + 8 = 20 (left: 20 48)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "8 8 12"
                }
            },
            "Step 3": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 - 8 = 4 (left: 4 4)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 8 = 14 (left: 8 8 12) -> 12 - 8 = 4 (left: 4 4) -> 4 + 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "6 4"
                }
            },
            "Step 5": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 12 - 8 = 4 (left: 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "12 - 6 = 6 (left: 6 8 12) -> 12 - 8 = 4 (left: 6 4) -> 6 + 4 = 10 (left: 10) -> 10 / 2 = 5 (left: 2)",
                "Pruning": "NA"
            }
        },
        "Input": "6 8 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "983": {
        "puzzle": "2 3 4 9",
        "Agent 0": {
            "Step 0": {
                "Step": "4 * 2 = 8 (left: 3 8 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 1": {
                "Step": "9 / 3 = 3 (left: 2 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 2 3 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 2 3 13) -> 13 - 3 = 10 (left: 2 10)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 / 2.6666666666666665 = 3.375"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 9) -> 9 / 2.6666666666666665 = 3.375 -> 9 - 2.6666666666666665 = 6.333333333333334 (left: 2.6666666666666665 6.333333333333334 3.375)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 9) -> 9 / 2.6666666666666665 = 3.375 -> 9 - 2.6666666666666665 = 6.333333333333334 (left: 2.6666666666666665 6.333333333333334 3.375) -> 3.375 + 2.6666666666666665 = 6.041666666666667 (left",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 * 3 = 6 (left: 4 6 9)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "3 8 9"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 9) -> 9 / 2.6666666666666665 = 3.375",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 2 7 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 9) -> 7 / 2 = 3.5 (left: 3.5 9)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "9 / 2.6666666666666665 = 3.375"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 9) -> 9 / 2.6666666666666665 = 3.375 -> 9 * 2.666666666666666",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 3 8 9) -> 8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 9) -> 9 / 2.6666666666666665 = 3.375 -> 9 * 2.666666666666666 -> 9 * 2.666666666666666 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 + 3 = 5 (left: 4 5 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "4 6 9"
                }
            },
            "Step 1": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 3 = 6 (left: 4 6 9) -> 6 - 4 = 2 (left: 2 9) -> 9 / 2 = 4.5 (left: 2 4.5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 4 9"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 2 7 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 2 7 9) -> 9 - 2 = 7 (left: 7 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "8"
                }
            },
            "Step 5": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 / 3 = 3 (left: 2 4  -> 2 * 4 = 8 (left: 8) -> 8 + 8 = 16 -> 8 - 8 = 0 (left: 0)",
                "Pruning": "NA"
            }
        },
        "Input": "2 3 4 9",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "984": {
        "puzzle": "2 6 7 11",
        "Agent 0": {
            "Step 0": {
                "Step": "2 * 6 = 12 (left: 7 11 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 2 + 8 = 10 (left: 10 13)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 3": {
                "Step": "11 - 7 = 4 (left: 2 4 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 7 = 4 (left: 2 4 6) -> 6 / 2 = 3 (left: 3 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 2 4 6) -> 6 / 2 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 2 4 6) -> 6 / 2 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 4 / 2 = 2 (left",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 * 7 = 42 (left: 2 42 11)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 7 = 13 (left: 2 8 13) -> 13 / 2 = 6.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 6 14 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 6 14 11) -> 14 - 6 = 8 (left: 8 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 2 4 6) -> 6 / 2 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 2 4 6) -> 6 / 2 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 + 3 = 11 (left: 11)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 + 7 = 13 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 1": {
                "Step": "11 - 7 = 4 (left: 2 6 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 7 = 4 (left: 2 6 4) -> 6 + 4 = 10 (left: 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 6 7 11"
                }
            },
            "Step 3": {
                "Step": "7 - 2 = 5 (left: 5 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 2 = 5 (left: 5 6 11) -> 11 - 6 = 5 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "3 6"
                }
            },
            "Step 5": {
                "Step": "11 - 7 = 4 (left: 2 4 6) -> 6 / 2 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "11 - 7 = 4 (left: 2 4 6) -> 6 / 2 = 3 (left: 3 6) -> 6 - 3 = 3 (left: 3) -> 8 + 3 = 11 (left: 3 11)",
                "Pruning": null
            }
        },
        "Input": "2 6 7 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "985": {
        "puzzle": "5 9 12 12",
        "Agent 0": {
            "Step 0": {
                "Step": "12 - 5 = 7 (left: 7 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "9 / 5 = 1 (left: 1 12 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 / 5 = 1 (left: 1 12 12) -> 1 - 12 = -11 (left: -11)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 3": {
                "Step": "5 * 9 = 45 (left: 12 12 45)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 9 = 45 (left: 12 12 45) -> 3 + 5 = 8 (left:",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 - 12 = 156 (left: 156)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 - 12 = 156 (left: 156) -> 1 + 56 = 57 (left: 57)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 6"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 5 = 4 (left: 4 12 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "5 + 9 = 14 (left: 12 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 * 12 = 2016 (left: 2016)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 * 12 = 2016 (left: 2016) -> 0 + 1 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 / 12 = 14 (left: 14) -> There are no possible next steps with just the number 14.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 9 12 12"
                }
            },
            "Step 1": {
                "Step": "9 - 5 = 4 (left: ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 5 = 4 (left:  -> Please provide a set of numbers to continue the calculation.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 3": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 - 12 = 156 (left: 156)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 - 12 = 156 (left: 156) -> 156 is a single number and no further operations can be performed.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "168 12"
                }
            },
            "Step 5": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 - 12 = 156 (left: 156)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 9 = 14 (left: 12 14 12) -> 12 * 14 = 168 (left: 168 12) -> 168 - 12 = 156 (left: 156) -> 15 + 6 = 21 (left: 21)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "1 6"
                }
            }
        },
        "Input": "5 9 12 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "986": {
        "puzzle": "1 2 7 12",
        "Agent 0": {
            "Step 0": {
                "Step": "1 + 2 = 3 (left: 3 7 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "7 - 2 = 5 (left: 1 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 2 = 5 (left: 1 5 12) -> 12 - 1 = 11 (left: 5 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 - 1 = 11 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 12 - 1 = 11 (left: -> 12 + 1 = 13 (left: 1 11 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 12 - 1 = 11 (left: -> 12 + 1 = 13 (left: 1 11 13) -> 11 - 1 = 10 (left: 10 13)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "12 - 7 = 5 (left: 1 2 5)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 1 + 14 = 15 (left: 12 15)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 3": {
                "Step": "12 - 1 = 11 (left: 2 7 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 1 = 11 (left: 2 7 11) -> 11 / 2 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 - 1 = 11 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 12 - 1 = 11 (left: -> 12 - 1 = 11 (left: 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 12 - 1 = 11 (left: -> 12 - 1 = 11 (left: 11) -> 11 * 2 = 22 (left: 22)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 1": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 12 - 1 = 11 (left:",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 2 7 12"
                }
            },
            "Step 3": {
                "Step": "2 * 7 = 14 (left: 1 14 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 14 - 12 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "12 - 1 = 11 (left:"
                }
            },
            "Step 5": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 12 - 1 = 11 (left: -> 1 / 12 = 0.08333333333 (left: 0.08333333333",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 * 7 = 14 (left: 1 14 12) -> 12 - 1 = 11 (left: -> 1 / 12 = 0.08333333333 (left: 0.08333333333 -> 0 + 0.08333333333 = 0.08333333333 (left: 0.08333333333)",
                "Pruning": "NA"
            }
        },
        "Input": "1 2 7 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "987": {
        "puzzle": "2 4 5 6",
        "Agent 0": {
            "Step 0": {
                "Step": "4 + 5 = 9 (left: 2 6 9)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 3": {
                "Step": "5 + 6 = 11 (left: 2 4 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 6 = 11 (left: 2 4 11) -> 11 - 2 = 9 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "5 + 6 = 11 (left: 2 4 11) -> 11 - 2 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9 36)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 6 = 11 (left: 2 4 11) -> 11 - 2 = 9 (left: 4 9) -> 4 * 9 = 36 (left: 9 36) -> 36 - 9 = 27 (left: 27)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "14 0"
                }
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 2 6 20)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 2 6 20) -> 20 / 2 = 10 (left:",
                "Pruning": null,
                "Evaluation": 1.0,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "120 6"
                }
            },
            "Step 3": {
                "Step": "4 * 5 = 20 (left: 6 20 6) -> 6 * 20 = 120 (left: 120 6) -> 120 * 6 = 720 (left: 720)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 5 = 20 (left: 6 20 6) -> 6 * 20 = 120 (left: 120 6) -> 120 * 6 = 720 (left: 720) -> 7 * 2 = 14 (left: 14 0)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 1 + 6 = 7 -> 6 / 1 = 6 (left: 6)",
                "Pruning": {
                    "Idx": "1.4",
                    "Pruned state": "14 0"
                }
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 5 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 5 6"
                }
            },
            "Step 1": {
                "Step": "4 * 5 = 20 (left: 6 20 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 5 = 20 (left: 6 20 6) -> 6 * 20 = 120 (left: 120 6)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 3": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 - 1 = 5 (left: 5) -> There are no possible next steps with just one number provided.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "1 6"
                }
            },
            "Step 5": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 4 = 6 (left: 5 6 6) -> 6 - 5 = 1 (left: 1 6) -> 6 / 1 = 6 (left: 6) -> 6 - 8 = -2 (left: 8) ",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "There are no possible next steps with just one number provided."
                }
            }
        },
        "Input": "2 4 5 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "988": {
        "puzzle": "5 5 8 13",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 5 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "13 + 5 = 18 (left: 5 8 18)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 + 5 = 18 (left: 5 8 18) -> 5 * 8 = 40 (left: 40 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 3": {
                "Step": "",
                "Pruning": null
            },
            "Step 4": {
                "Step": " -> There are many possible next steps depending on what operation you want to perform on the numbers given. Can you provide more context or specify which operation you would like to see next?",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 3 + 8 = 11 (left: 8 11) -> 11 / 8 = 1.375 (left: 1.375)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 5 = 10 (left: 8 10 13)",
                "Pruning": null,
                "Evaluation": 20.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 1": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 / 5 = 1.6 (left: 1.6 8) -> 8 / 1.6 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "5 8 8"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 5 * 8 = 40 (left: 8 40) -> 8 * 40 = 320 (left: 320)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 - 3 = 5 (left: 5 8) -> 5 + 8 = 13 (left: 8 13)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "13 - 5 = 8 (left: 5 8 8)",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 1": {
                "Step": "5 / 5 = 1 (left: 1 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 / 5 = 1 (left: 1 8 13) -> 1 + 8 = 9 (left: 9 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 5 8 13"
                }
            },
            "Step 3": {
                "Step": "13 - 5 = 8 (left: 5 8 8)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "3 8 8"
                }
            },
            "Step 5": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "13 - 5 = 8 (left: 5 8 8) -> 8 - 5 = 3 (left: 3 8 8) -> 8 / 3 = 2.66667 (left: 2.66667 8) -> 8 / 2.66667 = 3 (left: 3 8)",
                "Pruning": null
            }
        },
        "Input": "5 5 8 13",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "989": {
        "puzzle": "2 3 3 10",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "10 / 2 = 5 (left: 3 3 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 3 6 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 3 6 10) -> 10 / 3 = 3.3333333333333335 (left: 3.333333333",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided to perform operations on. -> No numbers provided.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "10 - 3 = 7 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "3 * 3 = 9 (left: 2 9 10) -> 2 * 9 = 18 (left: 10 18)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 3": {
                "Step": "3 * 2 = 6 (left: 6 3 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 * 2 = 6 (left: 6 3 10) -> 10 - 3 = 7 (left: 7 10)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps since there is no input provided.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps since there is no input provided. -> No input provided.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "3 * 3 = 9 (left: 2 9 10)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 1": {
                "Step": "2 + 3 = 5 (left: 3 5 10)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 3 = 5 (left: 3 5 10) -> 10 / 5 = 2 (left: 3 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 3 3 10"
                }
            },
            "Step 3": {
                "Step": "2 + 3 = 5 (left: 3 5 10)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 3 = 5 (left: 3 5 10) -> 3 * 5 = 15 (left: 15 10)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0"
                }
            },
            "Step 5": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided after the input.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "10 / 2 = 5 (left: 3 3  -> 3 - 3 = 0 (left: 0) -> There are no possible next steps as there are no numbers provided after the input. -> There are no possible next steps as there are no numbers provided after the input.",
                "Pruning": null
            }
        },
        "Input": "2 3 3 10",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "990": {
        "puzzle": "3 4 8 12",
        "Agent 0": {
            "Step 0": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 1": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 - 3 = 5 (left: 5) -> 5 + 2 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 3": {
                "Step": "3 + 4 = 7 (left: 7 8 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 12 - 7 = 5 (left: 5 8)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 12 - 7 = 5 (left: 5 8) -> Input: 10 3 5",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 12 - 7 = 5 (left: 5 8) -> Input: 10 3 5 -> 10 + 3 = 13 (left: 5 13)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "3 * 4 = 12 (left: 8 12 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 3 4 4)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 3 4 4) -> 3 * 4 = 12 (left: 4 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> Input: 5 5 10",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> Input: 5 5 10 -> 5 * 5 = 25 (left: 25 10)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 12 - 7 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 12 - 7 = 5 (left: 5 8) -> 5 * 8 = 40 (left: 40) -> 40 / 4 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 / 4 = 3 (left: 3 8 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "3 4 8 12"
                }
            },
            "Step 1": {
                "Step": "12 - 8 = 4 (left: 3 4 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 8 = 4 (left: 3 4  -> 3 + 4 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 8 "
                }
            },
            "Step 3": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 / 4 = 3 (left: 3 8  -> 8 / 3 = 2.67 (left: 2.67) -> There is only one number given, so there are no possible next steps.",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "5 8"
                }
            },
            "Step 5": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 12 - 7 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "3 + 4 = 7 (left: 7 8 12) -> 12 - 7 = 5 (left: 5 8) -> 8 - 5 = 3 (left: 3) -> There are no possible next steps with only one number provided.",
                "Pruning": null
            }
        },
        "Input": "3 4 8 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "991": {
        "puzzle": "2 4 6 11",
        "Agent 0": {
            "Step 0": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "6 + 2 = 8 (left: 4 8 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 + 2 = 8 (left: 4 8  -> 8 / 4 = 2 (left: 2 8)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "6 * 11 = 66 (left: 2 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 * 11 = 66 (left: 2 4  -> 4 - 2 = 2 (left: 2)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 4 8  -> 8 / 4 = 2 (left: 2 8) -> Input: 8",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 4 8  -> 8 / 4 = 2 (left: 2 8) -> Input: 8 -> 8 + 8 = 16",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 + 11 = 17 (left: 2 4 17)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 / 2 = 5.5 (",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 11)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 11) -> 11 - 4 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "11 / 2 = 5.5 ("
                }
            },
            "Step 5": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 / 2 = 5.5 ( -> Possible next steps:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 6 = 10 (left: 2 10 11) -> 11 / 2 = 5.5 ( -> Possible next steps: -> There are no possible next steps with the given input.",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 6 = 10 (left: 2 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 1": {
                "Step": "2 + 4 = 6 (left: 6 6 11)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 4 = 6 (left: 6 6 11) -> 6 - 6 = 0 (left: 0 11)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 6 11"
                }
            },
            "Step 3": {
                "Step": "11 - 6 = 5 (left: 2 4 ",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 6 = 5 (left: 2 4  -> 2 * 4 = 8 (left: 8)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "2 8"
                }
            },
            "Step 5": {
                "Step": "6 + 2 = 8 (left: 4 8  -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 + 2 = 8 (left: 4 8  -> 8 / 4 = 2 (left: 2 8) -> 8 - 2 = 6 (left: 6) -> 6 + 14 = 20 (left: 20)",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 6 11",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "992": {
        "puzzle": "2 2 8 9",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 8 = 10 (left: 2 10 9) -> 2 * 10 = 20 (left: 9 20)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 3": {
                "Step": "2 * 8 = 16 (left: 16 8 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 * 8 = 16 (left: 16 8 9) -> 16 - 8 = 8 (left: 8 9)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 8 = 10 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 8 = 10 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> 10 + 8 = 18 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "2 / 2 = 1 (left: 1 8 9)",
                "Pruning": null,
                "Evaluation": 1.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 + 8 = 10 (left: 2 10 9) -> 2 + 10 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 3": {
                "Step": "2 + 8 = 10 (left: 2 4 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 8 = 10 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5)",
                "Pruning": null,
                "Evaluation": 41.0,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 8 = 10 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 8 = 10 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7) -> 7 - 2 = 5 (left: 5)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 1": {
                "Step": "2 * 2 = 4 (left: 4 8 9)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "2 * 2 = 4 (left: 4 8 9) -> 4 + 8 = 12 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 2 8 9"
                }
            },
            "Step 3": {
                "Step": "2 + 8 = 10 (left: 2 10 9)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "2 + 8 = 10 (left: 2 10 9) -> 2 * 10 = 20 (left: 9)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "2 5"
                }
            },
            "Step 5": {
                "Step": "2 + 8 = 10 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "2 + 8 = 10 (left: 2 4 9) -> 9 - 4 = 5 (left: 2 5) -> 2 * 5 = 10 (left: 10) -> 10 / 2 = 5 (left: 8)",
                "Pruning": "NA"
            }
        },
        "Input": "2 2 8 9",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "993": {
        "puzzle": "1 5 6 7",
        "Agent 0": {
            "Step 0": {
                "Step": "7 - 6 = 1 (left: 1 5 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "1 * 5 = 5 (left: 5 6 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "1 * 5 = 5 (left: 5 6 7) -> 5 * 6 = 30 (left: 7 30)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> 6 / 5 = 1.2 (left: 1.2 6)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "-1 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 5 6 7) -> 6 - 7 = -1 (left: -1 6) -> 6 - (-1) = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 5 6 7) -> 6 - 7 = -1 (left: -1 6) -> 6 - (-1) = 7 (left: 7) -> 7 - 8 = -1 (left: -1 8)",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "7 / 1 = 7 (left: 5 6 ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "7 - 1 = 6 (left: 5 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "7 - 1 = 6 (left: 5 6 6) -> Input: 4 9 3",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "6 + 1 = 7 (left: 5 7 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 + 1 = 7 (left: 5 7 7) -> 5 + 7 = 12 (left: 7 12)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "-1 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 5 6 7) -> 6 - 7 = -1 (left: -1 6) -> -1 / 6 = -0.16666666666666666 (left: -0.16666666666666666)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 5 6 7) -> 6 - 7 = -1 (left: -1 6) -> -1 / 6 = -0.16666666666666666 (left: -0.16666666666666666) -> -0.16666666666666666 * 2 = -0.3333333333333333 (left: -0.3333333333333333)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "1 + 5 = 6 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 1": {
                "Step": "5 + 6 = 11 (left: 1 11 7)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 + 6 = 11 (left: 1 11 7) -> 1 * 11 = 11 (left: 7 11)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "1 5 6 7"
                }
            },
            "Step 3": {
                "Step": "7 - 1 = 6 (left: 5 6 7)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "7 - 1 = 6 (left: 5 6 7) -> 6 - 7 = -1 (left: -1 6)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "-1 6"
                }
            },
            "Step 5": {
                "Step": "7 - 1 = 6 (left: 5 6 7) -> 6 - 7 = -1 (left: -1 6) -> 6 - (-1) = 7 (left: 7)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "7 - 1 = 6 (left: 5 6 7) -> 6 - 7 = -1 (left: -1 6) -> 6 - (-1) = 7 (left: 7) -> 7 + 8 = 15 (left: 8 15)",
                "Pruning": null
            }
        },
        "Input": "1 5 6 7",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": 0
            }
        ]
    },
    "994": {
        "puzzle": "5 8 10 11",
        "Agent 0": {
            "Step 0": {
                "Step": "8 - 5 = 3 (left: 3 10 11)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 - 8 = 2 (left: 5 2 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 - 8 = 2 (left: 5 2  -> 5 - 2 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> 10 -",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "10 2"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12) -> 12 - 2 = 10 (left: 10)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "10 + 5 = 15 (left: 8 11 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "10 + 5 = 15 (left: 8 11 15) -> 11 - 8 = 3 (left: 3 15)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "5 + 8 = 13 (left: 10 11 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "10 2"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 2 + 10 = 12 (left: 2 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 2 + 10 = 12 (left: 2 12) -> 12 / 2 = 6 (left: 6)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 1": {
                "Step": "5 * 8 = 40 (left: 10 11 40)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "5 * 8 = 40 (left: 10 11 40) -> Possible next steps:",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "5 8 10 11"
                }
            },
            "Step 3": {
                "Step": "10 + 11 = 21 (left: 5 8 21)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "10 + 11 = 21 (left: 5 8 21) -> 8 * 5 = 40 (left: 40 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.4",
                    "Resampled state": "10 2"
                }
            },
            "Step 5": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "5 + 8 = 13 (left: 10 11 13) -> 13 - 11 = 2 (left: 10 2) -> 10 + 2 = 12 (left: 12) -> 12 * 2 = 24 (left: 24)",
                "Pruning": "NA"
            }
        },
        "Input": "5 8 10 11",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "995": {
        "puzzle": "4 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 4 + 5 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 3": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 12 - 5 = 7 (left: 4 7)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 4 = 16 (left: 16 9 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "4 13 12"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 20.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 3": {
                "Step": "4 / 4 = 1 (left: 1 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 / 4 = 1 (left: 1 9 12) -> 1 + 9 = 10 (left: 10 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There is only one possible next step which is to add 3 to the last number in the sequence:",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There is only one possible next step which is to add 3 to the last number in the sequence: -> 14 + 3 = 17 (left: 8 8 17)",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "4 + 9 = 13 (left: 4 13 12)",
                "Pruning": null,
                "Evaluation": 2.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 4 9 12"
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 4 5 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 4 5 12) -> 5 + 4 = 9 (left: 9 12)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> 3 * 8 = 24 (left: 8 24) -> 8 * 24 = 192 (left: 192)",
                "Pruning": {
                    "Idx": "1.2",
                    "Pruned state": "3"
                },
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "1.2",
                    "Resampled state": "3"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with the input 3.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 4 13 12) -> 13 - 4 = 9 (left: 9 12) -> 12 - 9 = 3 (left: 3) -> There are no possible next steps with the input 3. -> There are no possible next steps with the input 3.",
                "Pruning": null
            }
        },
        "Input": "4 4 9 12",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": 0
            }
        ]
    },
    "996": {
        "puzzle": "2 5 6 6",
        "Agent 0": {
            "Step 0": {
                "Step": "6 - 2 = 4 (left: 4 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 1 6 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "0.0",
                    "Resampled state": "4 6 6"
                }
            },
            "Step 3": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 2 = 4 (left: 4 6 6) -> 4 * 6 = 24 (left: 6 24) -> 24 / 6 = 4 (left: 4)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18.",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> There are no possible next steps with the input 18. -> There are no possible next steps with the input 18.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "6 - 5 = 1 (left: 1 6 ",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 5 6 6"
                }
            },
            "Step 1": {
                "Step": "6 - 5 = 1 (left: 2 1 ",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 - 5 = 1 (left: 2 1  -> 2 / 1 = 2 (left: 2 1)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 3": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> None",
                "Pruning": {
                    "Idx": "1.0",
                    "Pruned state": "1 6 "
                }
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6  -> 1 * 6 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.2",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 / 2 = 9 (left: 8)",
                "Pruning": {
                    "Idx": "2.4",
                    "Pruned state": "18"
                }
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 * 8 = 144 (left: 8) ",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "6 / 2 = 3 (left: 3 6 6)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "3 6 6"
                }
            },
            "Step 1": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18)",
                "Pruning": null,
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "6 6 7"
                }
            },
            "Step 3": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "6 - 5 = 1 (left: 1 6 6) -> 1 + 6 = 7 (left: 6 6 7) -> 7 - 6 = 1 (left: 1 1) -> 1 - 1 = 0 (left: 0)",
                "Pruning": {
                    "Idx": "2.2",
                    "Pruned state": "18"
                },
                "Evaluation": 40.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "18"
                }
            },
            "Step 5": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 * 8 = 144 (left: 18 144)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "6 / 2 = 3 (left: 3 6 6) -> 6 - 3 = 3 (left: 3 6) -> 3 * 6 = 18 (left: 18) -> 18 * 8 = 144 (left: 18 144) -> 18 - 144 = -126 (left: -126)",
                "Pruning": "NA"
            }
        },
        "Input": "2 5 6 6",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "997": {
        "puzzle": "2 4 9 12",
        "Agent 0": {
            "Step 0": {
                "Step": "2 + 4 = 6 (left: 6 9 12)",
                "Pruning": null,
                "Evaluation": 22.0,
                "Resampling": {
                    "Idx": "1.0",
                    "Resampled state": "2 5 "
                }
            },
            "Step 1": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 10 + 4 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 - 4 = 5 (left: 2 5  -> 10 + 4 = 14 (left: 14) -> 14 - 2 = 12",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 2 5)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 3 + 2 = 5 (left: 2 5) -> 2 + 5 = 7 (left: 7)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 7 + 3 = 10 (left: 10 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 7 + 3 = 10 (left: 10 5) -> 10 + 5 = 15 (left: 15)",
                "Pruning": "NA"
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "9 - 4 = 5 (left: 2 5 ",
                "Pruning": null,
                "Evaluation": 40.001,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 1": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 2 * 4 = 8 (left: 3 8) -> 8 - 3 = 5 (left: 5)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.0",
                    "Resampled state": "2 4 3"
                }
            },
            "Step 3": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "12 - 9 = 3 (left: 2 4 3) -> 4 / 2 = 2 (left: 2 3) -> 2 * 3 = 6 (left: 6)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 9 - 4 = 5 (left: 5) -> 8 - 5 = 3 (left: 3)",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "12 - 9 = 3 (left: 2 4 3)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 9 12"
                }
            },
            "Step 1": {
                "Step": "4 * 2 = 8 (left: 8 9 12)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 2 = 8 (left: 8 9 12) -> 12 - 8 = 4 (left: ",
                "Pruning": null,
                "Evaluation": 0.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "2 4 9 12"
                }
            },
            "Step 3": {
                "Step": "4 * 2 = 8 (left: 8 9 12)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 2 = 8 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9)",
                "Pruning": null,
                "Evaluation": 21.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "4 9"
                }
            },
            "Step 5": {
                "Step": "4 * 2 = 8 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 * 2 = 8 (left: 8 9 12) -> 12 - 8 = 4 (left: 4 9) -> 4 + 9 = 13 (left: 9 13) -> 9 * 13 = 117 (left: 117)",
                "Pruning": "NA"
            }
        },
        "Input": "2 4 9 12",
        "Verifications": [
            {
                "r": -1
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "998": {
        "puzzle": "4 8 11 13",
        "Agent 0": {
            "Step 0": {
                "Step": "13 - 8 = 5 (left: 4 11 ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "11 + 4 = 15 (left: 8 13 15)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 + 4 = 15 (left: 8 13 15) -> 8 * 13 = 104 (left: 104 15)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 3": {
                "Step": "11 - 4 = 7 (left: 7 8 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 - 4 = 7 (left: 7 8 13) -> 7 * 8 = 56 (left: 56 13)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 + 2 = 14 (left: 14)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 12 + 2 = 14 (left: 14) -> No possible next steps for the input 14.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "13 - 11 = 2 (left: 2 8 13)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "4 * 8 = 32 (left: 11 13 32)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 * 8 = 32 (left: 11 13 32) -> 32 - 11 = 21 (left: 11 21)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 3": {
                "Step": "11 + 4 = 15 (left: 8 15 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "11 + 4 = 15 (left: 8 15 13) -> 15 - 8 = ",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "8 / 4 = 2 (left: 2 11 13)",
                "Pruning": null,
                "Evaluation": 1.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 1": {
                "Step": "11 - 4 = 7 (left: 7 8 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "11 - 4 = 7 (left: 7 8 13) -> 13 - 7 = 6 (left: 7 6)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 8 11 13"
                }
            },
            "Step 3": {
                "Step": "4 + 8 = 12 (left: 11 12 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12)",
                "Pruning": null,
                "Evaluation": 60.0,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "2 12"
                }
            },
            "Step 5": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 8 = 12 (left: 11 12 13) -> 13 - 11 = 2 (left: 2 12) -> 2 * 12 = 24 (left: 24) -> Answer: (4 + 8) * (11 - 13) = 24",
                "Pruning": "NA"
            }
        },
        "Input": "4 8 11 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": -1
            },
            {
                "r": -1
            }
        ]
    },
    "999": {
        "puzzle": "4 9 10 13",
        "Agent 0": {
            "Step 0": {
                "Step": "10 - 4 = 6 (left: 6 9 13)",
                "Pruning": null,
                "Evaluation": 3.0,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "4 + 9 = 13 (left: 10 13) -> 10 / 13 \u2248 0.769 (left: 0.769)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 3": {
                "Step": "4 + 9 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 + 9 = 13 (left: 10 13) -> 10 * 13 = 130 (left: 130)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.2",
                    "Resampled state": "0.769"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 10 13) -> 10 / 13 \u2248 0.769 (left: 0.769) -> 0.769 / 2 = 0.3845 (left: 0.3845)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 10 13) -> 10 / 13 \u2248 0.769 (left: 0.769) -> 0.769 / 2 = 0.3845 (left: 0.3845) -> There are no possible next steps for the number 0.3845.",
                "Pruning": null
            }
        },
        "Agent 1": {
            "Step 0": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 6",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 3": {
                "Step": "4 * 9 = 36 (left: 10 13 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "4 * 9 = 36 (left: 10 13 36) -> 36 - 13 = 23 (left: 10 23)",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "0.4",
                    "Resampled state": "130"
                }
            },
            "Step 5": {
                "Step": "4 + 9 = 13 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 1 + 30 = 31 (left: 30)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "4 + 9 = 13 (left: 10 13) -> 10 * 13 = 130 (left: 130) -> 1 + 30 = 31 (left: 30) -> 30 / 2 = 15",
                "Pruning": null
            }
        },
        "Agent 2": {
            "Step 0": {
                "Step": "10 - 4",
                "Pruning": null,
                "Evaluation": 0.003,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 1": {
                "Step": "9 + 4 = 13 (left: 10 13)",
                "Pruning": null
            },
            "Step 2": {
                "Step": "9 + 4 = 13 (left: 10 13) -> 13 - 10 = 3 (left: 3)",
                "Pruning": null,
                "Evaluation": 0.002,
                "Resampling": {
                    "Idx": "INIT",
                    "Resampled state": "4 9 10 13"
                }
            },
            "Step 3": {
                "Step": "9 * 4 = 36 (left: 10 13 36)",
                "Pruning": null
            },
            "Step 4": {
                "Step": "9 * 4 = 36 (left: 10 13 36) -> 10 + 13 = 23 (left: 23 36)",
                "Pruning": null,
                "Evaluation": 0.001,
                "Resampling": {
                    "Idx": "2.4",
                    "Resampled state": "23 36"
                }
            },
            "Step 5": {
                "Step": "9 * 4 = 36 (left: 10 13 36) -> 10 + 13 = 23 (left: 23 36) -> 23 * 36 = 828 (left: 828)",
                "Pruning": null
            },
            "Step 6": {
                "Step": "9 * 4 = 36 (left: 10 13 36) -> 10 + 13 = 23 (left: 23 36) -> 23 * 36 = 828 (left: 828) -> 10 + 8 = 18 (left: 18",
                "Pruning": "NA"
            }
        },
        "Input": "4 9 10 13",
        "Verifications": [
            {
                "r": 0
            },
            {
                "r": 0
            },
            {
                "r": -1
            }
        ]
    },
    "Cost": {
        "input_tokens": 542403,
        "output_tokens": 225840.9559523809,
        "total_cost": 0.6099629339285715
    }
}